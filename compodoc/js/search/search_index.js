var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionDisplayConfig.html",[0,0.175,1,2.255]],["body/interfaces/ActionDisplayConfig.html",[0,0.263,1,3.386,2,1.139,3,0.085,4,0.066,5,0.057,6,3.707,7,3.707,8,0.319,9,2.257,10,4.415,11,6.053,12,0.191,13,0.509,14,0.679,15,4.605,16,7.165,17,3.737,18,0.309,19,0.008,20,1.998,21,5.191,22,2.794,23,7.165,24,6.81,25,1.993,26,0.14,27,2.672,28,3.897,29,4.23,30,2.162,31,3.348,32,4.62,33,4.603,34,1.917,35,1.515,36,1.567,37,5.543,38,4.027,39,3.663,40,3.11,41,3.348,42,3.802,43,4.196,44,5.543,45,2.756,46,4.62,47,1.977,48,4.23,49,4.23,50,0.842,51,4.23,52,1.121,53,3.494,54,2.667,55,3.14,56,4.027,57,1.985,58,2.128,59,0.643,60,1.535,61,1.801,62,1.93,63,2.604,64,2.463,65,3.016,66,1.878,67,3.57,68,4.62,69,3.284,70,4.62,71,1.684,72,5.543,73,0.514,74,2.434,75,4.979,76,4.23,77,2.025,78,0.165,79,3.348,80,2.584,81,1.423,82,3.513,83,1.93,84,2.794,85,0.72,86,3.776,87,2.027,88,2.653,89,6.053,90,2.366,91,1.761,92,4.62,93,2.302,94,4.62,95,4.62,96,1.355,97,3.939,98,3.897,99,0.988,100,3.875,101,1.394,102,2.128,103,4.23,104,4.62,105,3.348,106,4.62,107,4.23,108,1.649,109,0.769,110,4.62,111,1.843,112,3.074,113,2.075,114,1.339,115,0.984,116,4.62,117,3.348,118,1.723,119,6.342,120,4.437,121,3.707,122,4.62,123,4.62,124,3.203,125,4.62,126,4.23,127,2.075,128,4.62,129,2.241,130,3.348,131,4.62,132,6.053,133,1.547,134,3.348,135,4.62,136,2.075,137,3.494,138,1.649,139,4.23,140,0.624,141,2.128,142,6.053,143,0.673,144,4.23,145,4.386,146,2.958,147,4.23,148,1.761,149,2.756,150,4.62,151,4.603,152,1.58,153,4.386,154,2.414,155,2.434,156,2.584,157,4.23,158,1.094,159,0.004,160,0.006,161,0.004]],["title/interfaces/ActionItem.html",[0,0.175,69,2.187]],["body/interfaces/ActionItem.html",[0,0.243,1,2.288,2,1.008,3,0.075,4,0.059,5,0.051,6,3.282,7,3.282,8,0.282,9,1.525,10,4.385,11,4.09,12,0.169,13,0.47,14,0.797,15,4.254,16,4.09,18,0.324,19,0.008,20,1.93,21,4.043,22,2.176,23,5.58,24,5.815,25,1.767,26,0.135,27,2.544,28,4.431,29,3.745,30,2.224,31,2.964,32,4.09,33,4.243,34,1.859,35,1.341,36,1.474,37,5.109,38,3.712,39,3.702,40,3.142,41,2.964,42,3.879,43,3.868,44,5.109,45,2.44,46,4.09,47,1.75,48,3.745,49,3.745,50,0.776,51,3.745,52,1.396,53,3.938,54,2.361,55,3.129,56,4.499,57,2.082,58,1.884,59,0.569,60,1.676,61,2.176,62,2.331,63,2.662,64,2.605,65,3.399,66,2.05,67,3.923,68,5.58,69,3.874,70,5.58,71,1.898,72,6.247,73,0.56,74,2.94,75,5.129,76,6.247,77,2.446,78,0.201,79,4.043,80,3.121,81,1.719,82,4.243,83,2.331,84,2.993,85,0.637,86,3.552,87,1.868,88,2.446,89,5.58,90,2.095,91,1.56,92,4.09,93,2.038,94,6.822,95,4.09,96,1.422,97,4.758,98,4.431,99,1.194,100,4.368,101,1.684,102,2.57,103,5.109,104,5.58,105,4.043,106,5.58,107,5.109,108,1.992,109,0.929,110,5.58,111,2.226,112,3.712,113,2.506,114,1.617,115,1.04,116,5.58,117,4.043,118,2.081,119,6.638,120,4.396,121,4.477,122,5.58,123,6.822,124,3.868,125,5.58,126,6.247,127,2.506,128,5.58,129,2.707,130,4.043,131,6.822,132,7.369,133,1.868,134,4.043,135,5.58,136,1.837,137,3.221,138,1.46,139,3.745,140,0.575,141,1.884,142,5.58,143,0.596,144,3.745,145,4.043,146,2.619,147,3.745,148,1.56,149,2.44,150,4.09,151,4.243,152,1.399,153,4.043,154,2.226,155,2.155,156,2.288,157,3.745,158,0.968,159,0.004,160,0.005,161,0.004]],["title/classes/ActionSearchProvider.html",[78,0.11,162,3.691]],["body/classes/ActionSearchProvider.html",[3,0.071,4,0.056,5,0.048,10,4.34,12,0.161,13,0.455,14,0.731,18,0.321,19,0.008,26,0.099,36,1.255,47,2.314,50,0.863,52,0.724,54,3.122,55,2.718,58,3.347,59,1.037,60,1.522,63,2.105,67,3.09,69,4.437,73,0.532,76,4.952,78,0.106,96,1.247,98,3.122,99,0.836,101,2.02,111,2.157,113,2.429,115,0.975,133,1.811,143,1.059,158,1.28,159,0.004,160,0.005,161,0.004,162,4.952,163,1.087,164,6.998,165,3.271,166,7.516,167,3.136,168,1.001,169,5.978,170,1.388,171,3.97,172,1.702,173,3.829,174,6.995,175,6.995,176,6.995,177,6.995,178,6.995,179,2.85,180,4.952,181,0.77,182,6.101,183,6.101,184,6.101,185,7.549,186,8.566,187,7.549,188,4.976,189,8.198,190,2.314,191,2.429,192,0.786,193,4.409,194,3.082,195,0.949,196,4.409,197,1.488,198,0.794,199,5.408,200,0.789,201,4.409,202,2.934,203,2.623,204,0.427,205,8.803,206,5.343,207,7.549,208,2.863,209,4.409,210,3.025,211,4.409,212,6.995,213,4.409,214,4.409,215,4.409,216,1.595,217,3.006,218,4.409,219,4.409,220,4.409,221,6.101,222,4.409,223,3.332,224,0.997,225,4.299,226,6.101,227,4.409,228,6.101,229,4.409,230,6.101,231,4.409,232,4.409,233,1.445,234,2.289,235,7.549,236,4.113,237,4.952,238,6.101,239,4.409,240,5.678,241,4.409,242,6.101,243,2.491,244,3.598,245,2.37,246,3.462,247,1.023,248,4.409,249,6.101,250,3.339,251,5.408,252,4.409,253,2.6,254,4.409,255,4.409,256,4.409,257,4.409,258,3.919,259,0.43,260,1.366,261,3.579,262,2.6,263,1.457,264,3.136,265,4.409,266,0.701,267,3.579,268,3.908,269,2.413,270,2.413,271,7.925,272,1.862,273,4.409,274,4.409,275,1.366,276,4.409,277,6.995,278,6.101,279,6.101,280,0.581,281,0.739,282,3.579,283,4.409,284,4.409,285,2.972,286,2.207,287,4.409,288,4.409,289,4.409,290,4.409,291,4.409,292,3.579,293,4.409,294,4.409,295,4.409,296,4.409,297,6.101,298,4.409,299,6.101,300,4.409,301,4.409,302,4.409,303,4.409,304,4.409,305,4.409,306,4.409,307,4.409,308,4.409,309,4.409,310,4.409,311,4.409,312,4.409]],["title/classes/ActivityPromiseResolver.html",[78,0.11,313,2.794]],["body/classes/ActivityPromiseResolver.html",[0,0.27,3,0.088,4,0.069,5,0.059,8,0.475,12,0.198,14,0.588,18,0.307,19,0.008,26,0.126,34,1.529,50,0.863,57,2.034,58,3.926,60,1.091,66,2.022,73,0.549,78,0.187,82,5.229,85,1.173,136,3.088,159,0.007,160,0.006,161,0.004,163,1.335,181,0.883,195,0.71,197,1.198,198,0.639,224,0.785,233,1.282,234,2.486,258,3.477,280,0.634,286,2.532,313,5.039,314,4.766,315,4.766,316,4.091,317,5.681,318,3.831,319,5.681,320,6.747,321,3.322,322,3.831,323,4.718,324,4.066,325,4.978,326,2.787,327,3.009,328,5.724,329,5.517,330,6.296,331,6.296,332,6.998,333,5.412,334,6.163,335,5.412,336,3.83,337,5.528,338,2.727,339,6.198,340,5.229,341,2.787,342,5.913,343,6.656,344,3.11,345,6.893,346,3.348,347,5.528,348,6.893,349,6.656,350,5.681,351,5.412,352,5.528,353,5.528,354,5.517,355,6.296,356,6.296,357,4.978,358,1.893,359,4.393,360,4.393,361,1.712,362,4.393,363,3.731,364,1.006,365,5.681,366,5.681,367,3.85,368,4.393]],["title/classes/ActivityReporter.html",[78,0.11,369,2.187]],["body/classes/ActivityReporter.html",[3,0.085,4,0.067,5,0.057,8,0.467,12,0.192,14,0.724,18,0.312,19,0.008,26,0.085,34,1.769,39,3.895,50,0.942,57,2.219,58,3.885,59,1.063,62,2.537,64,1.693,65,3.711,73,0.551,78,0.126,85,0.946,108,2.168,111,3.048,129,2.945,136,2.727,159,0.004,160,0.006,161,0.004,163,1.291,181,0.865,188,6.407,190,3.447,192,0.934,195,0.891,197,1.542,198,0.787,224,1.034,234,2.548,247,1.148,258,4.4,259,0.298,266,1.024,275,1.622,280,0.549,285,5.146,313,5.397,314,5.474,315,5.474,320,5.759,321,2.999,324,4.166,334,6.005,338,2.506,339,5.177,340,3.53,341,2.085,342,5.201,352,4.618,353,3.53,358,1.874,369,3.295,370,4.642,371,6.85,372,6.85,373,2.661,374,2.168,375,6.516,376,4.618,377,2.598,378,3.2,379,6.85,380,6.85,381,5.56,382,5.56,383,5.56,384,5.56,385,5.56,386,6.572,387,4.642,388,5.236,389,2.869,390,2.264,391,8.403,392,1.991,393,6.85,394,6.072,395,5.56,396,5.56,397,5.236,398,6.997,399,5.56,400,6.572,401,5.56,402,5.236,403,5.56,404,5.236,405,5.56,406,5.56,407,5.236,408,3.711,409,5.977,410,4.872,411,5.177,412,5.56,413,5.236,414,5.236,415,4.642,416,7.634,417,7.634,418,6.85,419,6.85,420,6.85,421,6.85,422,6.85,423,5.236,424,6.767,425,5.236,426,5.236,427,5.236,428,5.236,429,5.236,430,5.236]],["title/interfaces/ActivityResponse.html",[0,0.175,357,3.234]],["body/interfaces/ActivityResponse.html",[0,0.282,2,1.268,3,0.094,4,0.074,5,0.064,8,0.355,12,0.212,13,0.546,14,0.707,18,0.301,19,0.008,26,0.13,34,1.268,50,0.902,57,2.127,58,3.834,60,1.17,66,1.804,73,0.557,78,0.177,82,4.932,85,1.198,136,2.913,159,0.007,160,0.006,161,0.005,234,2.218,258,3.727,280,0.627,286,2.099,313,4.496,314,3.566,315,3.566,316,4.386,317,4.71,318,3.176,319,4.71,320,6.775,321,3.331,322,3.176,323,3.912,324,3.628,325,4.127,326,2.31,327,2.495,328,5.402,329,5.204,330,5.939,331,4.71,334,5.971,336,3.418,337,4.932,338,2.718,339,5.53,340,4.932,342,5.939,343,5.939,344,2.775,345,6.83,346,2.987,347,4.932,348,6.83,349,5.939,350,4.71,352,5.402,353,5.402,354,5.204,355,5.939,356,5.939,357,5.7,358,2.062,359,5.939,360,4.71,361,1.749,362,4.71,363,3.855,364,1.36,365,5.939,366,5.939,367,4.127,368,4.71,431,5.802]],["title/classes/AngularLocatorDriver.html",[78,0.11,432,3.234]],["body/classes/AngularLocatorDriver.html",[3,0.068,4,0.053,5,0.046,8,0.255,12,0.153,13,0.55,14,0.677,18,0.305,19,0.008,22,2.029,26,0.095,35,2.456,36,0.858,45,2.206,59,0.958,71,1.675,73,0.578,77,3.017,78,0.142,81,1.603,85,1.073,96,0.656,99,0.791,109,0.615,115,0.758,136,1.661,140,0.381,158,0.875,159,0.006,160,0.005,161,0.003,163,1.675,168,0.685,170,1.545,172,1.385,181,0.857,192,0.744,195,0.84,197,1.416,198,0.756,200,0.793,204,0.292,216,1.509,224,0.996,233,0.988,236,3.956,245,2.638,247,0.984,259,0.458,266,0.951,272,1.029,275,1.292,280,0.633,281,1.44,341,1.661,344,1.582,361,1.183,364,1.091,367,5.524,432,6.109,433,3.947,434,6.009,435,2.658,436,2.006,437,3.331,438,2.124,439,4.83,440,5.203,441,1.507,442,3.854,443,5.869,444,4.578,445,4.764,446,4.436,447,4.733,448,4.171,449,6.224,450,6.02,451,4.707,452,4.171,453,5.203,454,4.171,455,4.764,456,3.77,457,6.02,458,3.627,459,2.234,460,5.241,461,1.314,462,4.436,463,1.781,464,3.686,465,3.385,466,3.017,467,3.697,468,2.679,469,4.005,470,3.956,471,4.171,472,3.956,473,4.171,474,4.578,475,3.697,476,4.171,477,5.512,478,0.402,479,3.331,480,2.283,481,2.367,482,2.206,483,2.283,484,2.206,485,2.206,486,2.741,487,5.235,488,5.203,489,6.02,490,3.697,491,5.203,492,4.764,493,5.203,494,6.02,495,6.533,496,3.697,497,3.697,498,3.697,499,3.697,500,3.697,501,5.203,502,3.697,503,3.697,504,3.697,505,3.697,506,3.697,507,2.134,508,2.967,509,2.029,510,2.679,511,3.385,512,3.697,513,1.842,514,3.697,515,3.697,516,5.203,517,3.697,518,2.006,519,3.697,520,3.697,521,3.697,522,0.988,523,3.331,524,2.245,525,3.697,526,3.697,527,4.436,528,3.697,529,2.068,530,2.206,531,3.697,532,3.697,533,4.033,534,3.697,535,3.697,536,6.02,537,3.697,538,3.697,539,2.134,540,3.385,541,3.697,542,3.697,543,5.203,544,3.385,545,1.62,546,2.967,547,1.62,548,1.442,549,3.697,550,3.697,551,4.173,552,2.206,553,3.591,554,2.563,555,3.104,556,3.591,557,2.337,558,2.823,559,2.206,560,1.379,561,2.741,562,1.661,563,2.206,564,2.206,565,1.62,566,2.206,567,2.206,568,2.206,569,1.747,570,1.545,571,2.563,572,3.697,573,2.134,574,2.679,575,2.563,576,2.679,577,2.679,578,2.679,579,3.697,580,2.679,581,3.697,582,2.812,583,1.636,584,2.679,585,3.697,586,3.697,587,4.436,588,3.697,589,3.697,590,3.697,591,3.697,592,3.697,593,5.203,594,3.697,595,3.697,596,3.697,597,3.697,598,1.442,599,1.292,600,3.697,601,3.697,602,3.697,603,3.697,604,6.02,605,0.858,606,1.163,607,3.697]],["title/classes/AngularWidgetObjectFinder.html",[78,0.11,483,2.489]],["body/classes/AngularWidgetObjectFinder.html",[3,0.091,4,0.071,5,0.061,8,0.438,12,0.205,13,0.534,14,0.601,18,0.323,19,0.008,26,0.091,59,0.882,73,0.482,78,0.135,85,1.147,87,2.123,91,1.892,111,1.979,159,0.005,160,0.006,161,0.005,163,1.38,165,2.87,168,0.919,172,1.406,181,0.903,192,1.406,195,0.871,197,1.349,198,0.653,204,0.392,224,0.802,245,2.778,259,0.499,266,0.822,280,0.379,281,1.199,327,3.075,341,2.847,358,1.248,361,1.73,392,2.078,432,3.981,433,4.099,434,6.241,435,2.811,437,4.058,438,3.175,439,5.605,441,1.837,449,5.598,451,4.49,459,2.168,464,3.783,466,3.334,468,3.595,469,4.897,478,0.539,479,5.063,480,3.063,481,3.176,482,2.96,483,3.914,485,2.96,486,3.34,492,4.543,522,2.16,523,4.98,533,3.063,544,5.804,545,2.778,546,5.086,547,3.226,551,4.394,560,1.85,598,3.033,608,4.23,609,4.394,610,5.312,611,7.151,612,7.151,613,7.88,614,5.597,615,2.778,616,4.82,617,4.82,618,4.82,619,2.528,620,4.82,621,3.781,622,4.82,623,2.786,624,5.597,625,5.405,626,4.961,627,5.729,628,5.597,629,6.985,630,6.339,631,5.405,632,3.247,633,3.595,634,3.773,635,3.478,636,3.773,637,5.597,638,5.597,639,3.773,640,3.439,641,3.773,642,2.228,643,3.301,644,4.961,645,5.597,646,2.406,647,5.597,648,4.961,649,5.597]],["title/components/BannerActivityReporterComponent.html",[204,0.319,650,1.439]],["body/components/BannerActivityReporterComponent.html",[3,0.07,4,0.055,5,0.047,8,0.423,12,0.158,13,0.448,14,0.715,18,0.316,19,0.008,21,5.226,26,0.07,30,2.177,34,1.311,39,2.885,57,2.007,58,3.674,59,1.124,60,0.867,63,1.2,65,2.65,72,4.869,73,0.563,78,0.104,85,1.032,96,0.677,99,0.816,101,2.102,108,2.737,109,0.885,111,2.442,113,1.713,133,2.218,136,1.713,140,0.548,143,0.892,159,0.004,160,0.005,161,0.004,168,0.985,172,0.768,181,0.757,188,5.787,190,3.086,192,1.07,194,3.322,195,0.933,197,1.515,198,0.822,200,0.563,204,0.484,208,1.632,217,3.24,224,1.022,234,1.819,247,1.005,258,2.764,259,0.447,260,1.858,263,1.423,272,2.007,313,4.591,314,5.489,321,3.092,324,2.974,334,6.106,338,2.724,340,2.901,341,1.713,342,4.436,352,4.044,353,2.901,358,1.752,364,1.388,369,4.161,374,2.486,375,4.534,381,4.869,382,4.869,383,4.869,384,6.064,385,6.064,386,6.777,390,2.47,395,5.606,396,3.493,398,5.606,399,3.493,400,4.869,401,3.493,403,3.493,405,3.493,406,5.606,408,2.65,409,4.267,410,6.231,411,3.253,412,5.606,441,1.105,461,1.69,463,1.185,478,0.415,599,1.333,650,2.364,651,1.51,652,1.277,653,1.713,654,7.25,655,3.493,656,2.863,657,5.318,658,1.672,659,1.71,660,1.819,661,5.318,662,4.073,663,7.471,664,7.471,665,3.498,666,1.983,667,7.856,668,3.815,669,5.999,670,3.895,671,5.999,672,4.303,673,7.471,674,4.303,675,4.303,676,4.303,677,4.303,678,4.303,679,5.318,680,1.819,681,2.885,682,3.815,683,3.815,684,3.815,685,3.815,686,3.815,687,3.815,688,4.303,689,4.303,690,3.815,691,3.253,692,4.303,693,3.815,694,6.623,695,7.471,696,6.623,697,2.276,698,1.392,699,1.45,700,3.392,701,1.954,702,1.423,703,1.954,704,1.954,705,1.522,706,1.85,707,1.954,708,1.672,709,1.954,710,1.225,711,1.954,712,1.594,713,2.127,714,1.672,715,3.392,716,1.557,717,1.672,718,1.672,719,1.019,720,1.557,721,1.672,722,1.954,723,1.713,724,1.954,725,1.85,726,1.672,727,2.083,728,1.954,729,1.594,730,3.392,731,1.632,732,2.82,733,1.632,734,1.479,735,1.632,736,2.724,737,1.594,738,1.757,739,1.954,740,1.557,741,1.954,742,1.802,743,1.362,744,1.392,745,1.277,746,1.392,747,1.954,748,1.672,749,1.954,750,1.713,751,1.277,752,1.954,753,1.594,754,1.85,755,1.954]],["title/classes/BannerActivityReporterWidgetObject.html",[78,0.11,756,3.691]],["body/classes/BannerActivityReporterWidgetObject.html",[3,0.08,4,0.063,5,0.054,8,0.505,12,0.181,13,0.633,14,0.739,17,3.608,18,0.325,19,0.008,25,1.83,26,0.08,34,1.08,35,1.436,36,1.016,57,1.436,59,0.976,66,1.83,71,1.219,73,0.582,78,0.119,81,2.026,85,1.093,96,0.778,109,0.729,138,2.505,140,0.602,143,1.136,148,2.228,156,2.45,159,0.004,160,0.007,161,0.004,163,1.219,165,2.932,168,1.082,181,0.832,191,2.625,195,0.942,197,1.505,198,0.804,200,0.851,204,0.578,217,3.582,224,1.017,245,1.92,247,1.243,259,0.375,280,0.559,326,3.151,338,2.557,341,2.954,346,2.018,361,0.996,364,0.918,390,2.452,410,5.277,435,2.349,441,1.269,451,4.767,458,2.018,459,2.824,461,1.323,463,1.833,464,3.685,518,2.377,522,1.561,524,1.634,529,2.45,530,4.185,547,2.882,552,2.613,553,3.923,554,2.81,555,3.486,556,3.923,557,2.625,558,2.377,559,2.613,560,1.634,561,2.308,562,1.968,563,2.613,564,2.613,565,1.92,566,2.613,567,2.613,568,2.613,569,2.07,570,1.83,571,3.037,621,2.613,632,3.368,635,3.107,642,2.625,650,1.564,654,6.884,656,2.132,659,1.2,662,4.375,756,5.351,757,6.884,758,4.011,759,4.421,760,2.824,761,4.21,762,4.444,763,4.444,764,4.21,765,4.444,766,3.608,767,4.444,768,7.419,769,7.419,770,4.942,771,2.805,772,3.515,773,2.308,774,1.531,775,2.805,776,1.67,777,2.613,778,2.705,779,2.805,780,3.515,781,2.805,782,1.467,783,2.805,784,2.07,785,4.05,786,3.796,787,2.882,788,2.805,789,4.814,790,3.515,791,2.805,792,3.515,793,3.171,794,2.805,795,3.515,796,3.079,797,2.805,798,3.515,799,2.805,800,3.515,801,1.874,802,2.805,803,2.805,804,3.515,805,2.805,806,3.515,807,1.531,808,1.467,809,3.269,810,3.742,811,2.805,812,3.515,813,1.531,814,2.805,815,4.381,816,4.942,817,4.381,818,4.942,819,4.942,820,4.942,821,4.942,822,4.381,823,2.45,824,4.381,825,4.381,826,4.942,827,4.381,828,4.942]],["title/classes/BaseFormControl.html",[78,0.11,829,2.794]],["body/classes/BaseFormControl.html",[3,0.076,4,0.059,5,0.051,8,0.511,12,0.171,13,0.474,14,0.68,18,0.322,19,0.008,26,0.076,45,3.359,52,1.27,59,1.098,62,2.352,73,0.55,78,0.113,83,2.866,84,2.195,96,1.386,98,4.14,99,1.205,100,3.605,101,2.233,109,1.314,115,0.82,140,0.58,143,1.045,146,4.845,159,0.004,160,0.005,161,0.004,163,1.779,170,1.445,181,0.802,191,2.529,192,0.834,195,0.949,197,1.385,198,0.78,200,0.801,204,0.445,216,3.222,224,0.936,259,0.44,266,0.537,280,0.525,281,1.065,358,1.861,376,4.282,478,0.451,507,3.25,545,2.468,599,2.585,606,1.771,666,2.1,680,1.926,727,2.658,760,2.187,829,3.903,830,7.61,831,3.795,832,4.08,833,6.351,834,6.351,835,3.418,836,6.351,837,3.746,838,2.298,839,5.272,840,6.351,841,7.213,842,5.452,843,5.452,844,4.138,845,5.452,846,6.116,847,5.452,848,4.801,849,4.801,850,4.801,851,4.801,852,3.948,853,4.633,854,5.452,855,3.73,856,5.855,857,7.213,858,5.63,859,6.058,860,6.351,861,4.676,862,4.676,863,5.849,864,4.676,865,3.149,866,4.517,867,3.149,868,4.801,869,2.468,870,4.676,871,5.849,872,4.676,873,4.801,874,4.801,875,4.922,876,4.676,877,4.801,878,4.676,879,4.801,880,4.282,881,4.676,882,4.282,883,4.801,884,4.676,885,2.472,886,5.849,887,4.676,888,5.849,889,3.055,890,4.801,891,3.055,892,4.676,893,3.903,894,3.359,895,3.25,896,4.676,897,4.801,898,4.676,899,1.771,900,4.676,901,4.801,902,4.145,903,4.676,904,6.351,905,4.676,906,4.676,907,4.676,908,4.676,909,6.351,910,1.546,911,3.476,912,3.326,913,2.758,914,3.003,915,4.676,916,3.003,917,4.676,918,4.145,919,4.676,920,4.676,921,3.152,922,4.676,923,6.351,924,4.676,925,4.676,926,4.676,927,4.676,928,3.795,929,4.676,930,4.676,931,4.676,932,4.676,933,3.326]],["title/classes/BaseWidgetObject.html",[78,0.11,485,2.405]],["body/classes/BaseWidgetObject.html",[0,0.286,3,0.08,4,0.063,5,0.054,8,0.303,10,3.081,12,0.181,13,0.492,14,0.748,18,0.312,19,0.008,25,1.22,26,0.128,55,2.562,57,2.589,73,0.565,78,0.212,81,1.351,114,2.179,115,0.852,143,0.958,152,2.728,159,0.004,160,0.005,161,0.004,163,1.627,168,1.354,192,0.882,195,0.837,197,1.129,198,0.452,200,0.796,216,3.283,224,0.971,233,1.562,245,2.883,246,3.743,247,1.452,280,0.615,281,0.829,318,3.61,337,3.333,361,1.596,364,1.717,433,3.962,435,2.693,436,2.378,437,2.806,438,3.223,441,2.118,442,5.216,444,3.333,447,3.176,458,3.536,459,2.25,460,3.517,463,1.676,464,3.902,466,2.562,468,3.176,469,4.377,470,3.333,472,3.333,474,3.333,484,3.488,485,4.361,486,3.081,598,1.709,609,4.865,632,2.994,759,2.378,760,2.77,773,2.31,782,1.468,838,2.386,875,3.89,934,5.449,935,4.053,936,4.053,937,4.236,938,6.024,939,2.994,940,5.353,941,5.353,942,5.353,943,5.353,944,6.426,945,5.353,946,5.353,947,5.353,948,5.353,949,5.278,950,5.278,951,5.278,952,5.353,953,6.595,954,6.024,955,5.838,956,4.691,957,6.034,958,4.383,959,6.034,960,4.691,961,4.945,962,5.003,963,4.691,964,4.383,965,4.014,966,2.184,967,4.014,968,3.738,969,3.517,970,5.609,971,5.353,972,3.738,973,4.014,974,3.738,975,4.014,976,2.452,977,4.014,978,3.333]],["title/components/BoldTextRendererComponent.html",[204,0.319,705,1.608]],["body/components/BoldTextRendererComponent.html",[0,0.213,3,0.09,4,0.07,5,0.061,8,0.338,12,0.202,18,0.272,19,0.008,26,0.127,30,1.479,50,1.019,52,0.907,55,2.148,60,1.114,63,1.541,73,0.48,78,0.133,90,3.557,109,1.047,115,0.916,140,0.648,159,0.005,160,0.006,161,0.005,170,1.614,195,0.561,198,0.781,204,0.623,208,2.097,233,1.958,247,1.564,259,0.446,263,1.828,280,0.481,338,2.062,358,1.233,374,1.75,389,2.316,390,1.828,441,1.42,461,1.719,463,1.402,478,0.533,599,1.712,650,1.75,651,1.786,652,2.454,653,2.201,656,1.788,658,2.148,659,1.745,666,2.345,698,1.788,699,1.715,700,3.753,701,2.51,702,1.828,703,2.51,704,2.51,705,3.186,706,3.825,707,2.51,708,2.148,709,2.51,710,1.574,711,2.51,712,2.048,713,2.353,714,2.148,715,3.753,716,2,717,2.148,718,2.148,719,1.309,720,2,721,2.148,722,2.51,723,2.201,724,2.51,725,2.377,726,2.148,727,2.305,728,2.51,729,2.048,730,3.753,731,2.097,732,3.199,733,2.097,734,1.75,735,2.097,736,3.221,737,2.048,738,2.257,739,2.51,740,2,741,2.51,742,2.316,743,1.75,744,1.788,745,1.641,746,1.788,747,2.51,748,2.148,749,2.51,750,2.201,751,1.641,752,2.51,753,2.048,754,2.377,755,2.51,979,5.363,980,4.487,981,4.374,982,3.46,983,2.452,984,2.59,985,3.518,986,2.567,987,4.23,988,2.756,989,2.509,990,3.518,991,3.317,992,4.557,993,6.289,994,6.945,995,2.375,996,5.309,997,5.528,998,2.582,999,2.377,1000,5.759,1001,3.199,1002,2.924,1003,2.924,1004,4.179,1005,4.901,1006,4.901,1007,4.487,1008,4.901,1009,4.901,1010,4.901]],["title/interfaces/BoldTextRendererConfig.html",[0,0.175,996,2.921]],["body/interfaces/BoldTextRendererConfig.html",[0,0.249,2,1.411,3,0.105,4,0.082,5,0.071,8,0.395,12,0.236,13,0.583,18,0.303,19,0.008,26,0.136,30,2.091,50,1.077,52,1.06,55,2.509,73,0.535,78,0.156,90,3.549,109,1.153,115,0.834,159,0.005,160,0.006,161,0.005,170,1.469,204,0.612,233,1.851,247,1.589,259,0.478,280,0.53,389,2.705,461,1.152,478,0.622,652,2.32,659,1.176,705,3.163,706,3.847,979,4.881,980,5.241,981,4.301,982,3.452,983,2.232,984,2.584,985,3.202,986,2.336,987,4,988,2.509,989,2.283,990,3.202,991,3.188,992,4.148,993,5.724,994,5.724,995,1.958,996,5.611,998,3.016,999,2.776,1000,6.344,1001,3.432,1002,3.415,1003,3.415,1004,5.908,1005,6.929,1006,6.929,1007,5.241,1008,5.724,1009,5.724,1010,5.724]],["title/classes/BoldTextRendererWidgetObject.html",[78,0.11,1011,3.691]],["body/classes/BoldTextRendererWidgetObject.html",[3,0.082,4,0.064,5,0.055,8,0.522,12,0.185,13,0.636,14,0.742,17,3.657,18,0.326,19,0.008,25,1.848,26,0.082,34,1.102,35,1.465,36,1.037,57,1.465,59,0.984,66,1.848,71,1.243,73,0.58,78,0.122,81,2.046,85,1.102,109,0.744,138,2.525,140,0.61,143,1.141,148,2.258,156,2.5,159,0.004,160,0.007,161,0.004,163,1.243,165,2.948,168,1.097,181,0.843,191,2.66,195,0.93,197,1.512,198,0.807,200,0.854,204,0.581,217,3.595,224,1.021,245,1.959,247,1.552,259,0.38,280,0.453,326,3.177,341,2.984,346,2.058,361,1.51,364,0.937,435,2.464,441,1.295,451,4.778,458,2.058,459,2.831,461,1.337,463,1.838,464,3.701,518,2.425,522,1.582,524,1.667,529,2.5,530,4.219,547,2.911,552,2.666,553,3.962,554,2.819,555,3.533,556,3.962,557,2.66,558,2.425,559,2.666,560,1.667,561,2.355,562,2.007,563,2.666,564,2.666,565,1.959,566,2.666,567,2.666,568,2.666,569,2.112,570,1.867,571,3.098,621,2.666,632,3.402,635,3.139,642,2.66,659,1.216,705,1.783,706,3.569,759,4.433,760,2.831,761,4.253,762,4.504,763,4.504,764,4.528,765,4.504,766,3.657,767,4.504,771,2.861,772,3.586,773,2.355,774,1.562,775,2.861,776,1.704,777,2.666,778,2.759,779,2.861,780,3.586,781,2.861,782,1.497,783,2.861,784,2.112,785,4.082,786,3.834,787,2.911,788,2.861,789,4.841,790,3.586,791,2.861,792,3.586,793,3.214,794,2.861,795,3.586,796,3.121,797,2.861,798,3.586,799,2.861,800,3.586,801,1.912,802,2.861,803,2.861,804,3.586,805,2.861,806,3.586,807,1.562,808,1.497,809,3.313,810,3.792,811,2.861,812,3.586,813,1.562,814,2.861,979,5.664,991,3.026,1011,5.423,1012,4.469,1013,5.042,1014,5.042,1015,3.811,1016,4.469,1017,5.042]],["title/interfaces/CanBeReadOnly.html",[0,0.175,842,3.437]],["body/interfaces/CanBeReadOnly.html",[0,0.321,2,1.574,3,0.117,4,0.091,5,0.079,8,0.441,12,0.264,13,0.622,18,0.25,19,0.008,26,0.117,60,1.681,96,1.385,99,1.582,159,0.006,160,0.007,161,0.006,651,1.813,774,2.583,835,3.182,842,6.303,853,5.815,916,4.627,1018,6.386,1019,6.386,1020,3.182,1021,3.686,1022,8.339,1023,5.356,1024,8.339,1025,6.303,1026,8.339,1027,6.303]],["title/interfaces/CliptextConfig.html",[0,0.175,1028,2.921]],["body/interfaces/CliptextConfig.html",[0,0.161,2,0.912,3,0.068,4,0.053,5,0.046,8,0.255,9,1.941,12,0.153,13,0.438,14,0.677,18,0.256,19,0.008,25,1.029,26,0.12,27,1.941,30,2.078,36,0.858,38,2.461,50,0.515,52,1.115,59,1.125,74,2.743,78,0.101,81,1.604,83,1.546,85,0.811,87,1.239,96,1.16,98,4.235,99,0.792,101,1.817,102,2.773,108,1.321,109,0.616,115,0.539,118,1.38,140,0.736,158,1.232,159,0.003,160,0.005,161,0.003,170,0.949,172,1.212,247,1.139,259,0.237,266,0.951,272,2.119,275,1.293,280,0.59,344,1.583,377,1.583,392,1.213,441,1.072,458,1.704,461,0.744,463,1.534,478,0.402,518,2.007,522,0.988,524,1.38,554,1.293,560,1.941,573,4.235,582,3.958,599,2.495,605,1.657,615,1.621,623,2.747,643,2.461,659,0.76,680,1.78,699,1.009,753,2.175,754,1.794,787,2.281,801,2.795,837,2.461,899,1.164,933,5.525,985,2.911,995,2.059,1028,4.363,1029,2.461,1030,2.747,1031,2.813,1032,2.743,1033,5.731,1034,2.593,1035,2.029,1036,5.431,1037,3.296,1038,2.227,1039,3.855,1040,5.514,1041,4.176,1042,3.866,1043,6.245,1044,2.459,1045,1.707,1046,2.227,1047,4.579,1048,5.571,1049,2.685,1050,3.464,1051,5.871,1052,3.851,1053,5.871,1054,4.347,1055,5.871,1056,3.154,1057,3.387,1058,3.154,1059,3.387,1060,2.68,1061,3.387,1062,3.387,1063,3.154,1064,3.154,1065,3.387,1066,3.387,1067,1.662,1068,3.387,1069,3.387,1070,1.748,1071,4.766,1072,3.387,1073,3,1074,5.514,1075,3.387,1076,3.958,1077,3.387,1078,3.387,1079,3.387,1080,2.813,1081,3.387,1082,3.154,1083,2.007,1084,6.305,1085,3.387,1086,4.766,1087,3.387,1088,3.387,1089,1.51,1090,5.514,1091,4.766,1092,3.387,1093,4.766,1094,3.387,1095,4.766,1096,2.68,1097,3.387,1098,2.135,1099,5.514,1100,3.387,1101,3.387,1102,3.387,1103,4.766,1104,4.766,1105,3.387,1106,3.387,1107,4.176,1108,3.387,1109,3.387,1110,3.387,1111,3.387,1112,3.387,1113,5.514,1114,3.387,1115,5.983,1116,3.387,1117,3.387,1118,5.983,1119,2.968,1120,4.766,1121,4.766,1122,3.387,1123,3.387,1124,3.387,1125,3.387,1126,3.387,1127,3.387,1128,2.824,1129,1.704,1130,3.387,1131,3.387,1132,4.766,1133,3.387,1134,4.766,1135,5.983,1136,4.766,1137,3.173,1138,4.766,1139,2.069,1140,4.766,1141,3.387,1142,2.68,1143,3.387,1144,2.68,1145,4.766,1146,3.387,1147,3.387,1148,3.387,1149,3.387,1150,2.284,1151,3.387,1152,2.968,1153,3.154,1154,3.387,1155,3.387,1156,3.387,1157,4.766,1158,5.514,1159,3.154,1160,3.387,1161,3.387,1162,2.355,1163,3.387,1164,2.824,1165,3.387,1166,4.766,1167,5.983,1168,2.968,1169,2.968,1170,2.968,1171,2.968,1172,6.305,1173,4.438,1174,4.176,1175,3.699,1176,6.534,1177,3.699,1178,3.699,1179,3.699,1180,3.699,1181,3.699,1182,3.699,1183,2.813,1184,3.699,1185,3.387,1186,2.68,1187,3.699,1188,1.546,1189,3.699,1190,3.699,1191,3.699,1192,5.205,1193,3.699,1194,5.205,1195,6.021,1196,3.699,1197,5.205,1198,5.205,1199,3.699,1200,3.699,1201,3.699,1202,3.699,1203,3.699,1204,1.621,1205,3.699,1206,6.021,1207,3.699,1208,3.699,1209,5.205,1210,5.205,1211,2.368,1212,2.68,1213,5.205,1214,3.699,1215,3.699,1216,3.699,1217,3.699,1218,3.699,1219,3.699,1220,1.293,1221,3.154,1222,3.699,1223,3.699,1224,3.699,1225,3.699,1226,3.699,1227,5.205,1228,3.699,1229,3.699,1230,3.699,1231,3.387,1232,1.748,1233,3.699,1234,3.699,1235,3.387,1236,2.069,1237,1.794,1238,3.387,1239,3.387]],["title/interfaces/ColumnConfigInternal.html",[0,0.175,1240,2.405]],["body/interfaces/ColumnConfigInternal.html",[0,0.277,1,2.166,2,0.451,3,0.033,4,0.026,5,0.023,8,0.126,9,1.679,10,3.252,12,0.285,13,0.379,14,0.539,15,3.435,18,0.255,19,0.008,20,1.179,22,0.713,25,1.078,26,0.126,27,1.679,28,1.056,30,1.796,34,1.674,36,1.682,39,0.993,40,2.475,42,0.911,47,0.783,50,0.974,52,0.561,53,1.748,54,1.056,55,3.176,56,1.806,59,0.908,60,1.222,61,2.218,62,0.764,63,1.69,64,2.076,66,0.842,67,0.911,69,2.916,71,0.842,73,0.49,74,1.595,77,1.327,78,0.105,80,1.023,81,0.933,83,1.265,84,1.945,85,0.604,86,2.79,87,1.508,88,0.802,90,3.778,91,0.697,93,3.489,96,1.096,99,0.963,101,2.012,102,0.843,108,1.781,109,1.275,111,1.989,114,0.53,115,0.95,118,1.86,120,1.091,127,1.74,129,1.879,133,1.014,136,0.822,137,2.236,138,1.081,140,0.818,141,1.394,143,0.829,148,1.902,149,1.091,152,1.946,154,1.989,155,0.964,158,1.506,159,0.003,160,0.003,161,0.002,168,0.561,170,0.469,172,1.541,173,1.129,181,0.551,192,0.368,194,1.784,195,0.209,198,0.399,200,0.41,202,0.993,203,0.887,204,0.516,210,2.166,224,0.49,233,0.809,234,1.035,243,0.843,247,0.346,250,1.129,259,0.436,260,0.639,266,0.997,269,1.129,270,1.869,272,0.842,280,0.607,281,1.076,286,2.858,321,0.764,327,0.887,336,0.964,338,1.27,344,2.546,358,0.46,361,1.024,364,1.368,369,1.643,374,0.653,377,2.134,378,2.372,390,1.129,392,1.27,438,1.236,459,1.035,461,0.368,463,0.675,478,0.199,509,1.51,513,0.911,522,1.035,524,1.86,539,1.748,545,0.802,547,1.327,548,0.713,554,1.353,562,0.822,570,0.764,583,0.952,598,1.18,605,1.247,606,0.575,619,1.545,642,2.414,650,0.653,651,0.86,652,1.508,656,0.667,659,0.796,660,0.626,666,1.129,670,1.693,680,1.706,681,2.443,697,1.091,699,1.227,702,1.129,710,0.587,713,0.587,719,0.489,743,0.653,744,0.667,745,1.014,751,0.613,774,0.639,776,1.154,782,1.905,784,1.83,787,0.802,808,1.297,813,1.058,823,1.023,838,0.747,865,1.023,869,0.802,891,0.993,899,0.575,982,1.93,983,1.755,984,2.433,986,0.747,987,3.102,988,2.922,989,2.537,995,1.325,998,0.964,999,0.887,1001,2.297,1002,1.091,1003,1.091,1020,2.243,1030,0.73,1032,3.136,1034,0.911,1035,2.898,1037,2.857,1038,1.295,1042,2.041,1044,1.431,1045,0.993,1046,1.295,1049,2.218,1067,1.36,1070,0.864,1073,0.911,1083,0.993,1089,1.581,1128,0.993,1129,1.394,1137,0.964,1139,3.452,1188,0.764,1204,0.802,1220,0.639,1232,0.864,1237,1.469,1240,2.975,1241,1.056,1242,2.48,1243,1.93,1244,2.48,1245,2.688,1246,2.236,1247,2.485,1248,2.882,1249,2.686,1250,2.882,1251,2.628,1252,1.748,1253,2.236,1254,2.555,1255,1.171,1256,2.269,1257,1.938,1258,1.938,1259,0.822,1260,1.171,1261,1.938,1262,2.48,1263,1.938,1264,0.6,1265,1.938,1266,1.171,1267,1.431,1268,0.887,1269,1.056,1270,1.129,1271,1.056,1272,1.056,1273,0.73,1274,0.887,1275,0.937,1276,0.964,1277,1.236,1278,1.023,1279,0.639,1280,1.83,1281,2.297,1282,2.166,1283,2.391,1284,3.469,1285,3.304,1286,2.975,1287,1.129,1288,2.31,1289,1.091,1290,1.056,1291,0.864,1292,1.023,1293,0.964,1294,2.812,1295,1.869,1296,2.236,1297,1.091,1298,1.129,1299,1.129,1300,2.686,1301,1.056,1302,1.394,1303,4.429,1304,2.022,1305,1.806,1306,1.129,1307,3.456,1308,2.391,1309,1.806,1310,3.102,1311,1.508,1312,1.171,1313,1.693,1314,1.171,1315,1.748,1316,1.171,1317,2.443,1318,2.599,1319,2.443,1320,1.806,1321,1.171,1322,1.171,1323,1.938,1324,1.129,1325,2.78,1326,1.171,1327,2.102,1328,1.806,1329,1.938,1330,1.171,1331,1.938,1332,1.938,1333,2.686,1334,2.48,1335,1.023,1336,0.993,1337,1.129,1338,1.171,1339,1.171,1340,0.911,1341,1.83,1342,3.193,1343,1.643,1344,3.892,1345,2.48,1346,0.822,1347,1.171,1348,1.171,1349,4.324,1350,1.091,1351,2.297,1352,3.441,1353,3.811,1354,1.091,1355,1.171,1356,2.31,1357,1.056,1358,0.73,1359,1.171,1360,1.171,1361,1.056,1362,2.79,1363,0.964,1364,1.171,1365,0.993,1366,2.31,1367,0.864,1368,0.911,1369,1.171,1370,2.041,1371,1.171,1372,1.091,1373,1.938,1374,1.748,1375,1.171,1376,1.171,1377,1.643,1378,1.056,1379,1.171,1380,1.171,1381,0.802,1382,1.171,1383,1.869,1384,2.48,1385,1.171,1386,1.171,1387,1.129,1388,1.806,1389,1.091,1390,1.806,1391,1.091,1392,2.48,1393,1.171,1394,1.023,1395,1.091,1396,1.171,1397,1.938,1398,1.171,1399,1.171,1400,1.171,1401,1.171,1402,1.171,1403,1.171,1404,1.869,1405,1.171,1406,2.48,1407,1.171,1408,1.171,1409,1.129,1410,2.882,1411,2.236,1412,1.171,1413,1.129,1414,1.091,1415,1.129,1416,1.171,1417,1.171,1418,1.129,1419,1.938,1420,1.171,1421,1.171,1422,1.938,1423,1.171,1424,1.171,1425,0.964,1426,1.171,1427,1.171,1428,1.171,1429,1.171,1430,3.81,1431,1.938,1432,1.171,1433,1.171,1434,1.171,1435,1.938,1436,1.171,1437,1.938,1438,1.938,1439,1.171,1440,1.171,1441,1.171,1442,1.938,1443,1.171,1444,2.882,1445,1.938,1446,1.938,1447,1.171,1448,1.171,1449,1.023,1450,1.171,1451,1.171,1452,1.171,1453,1.171,1454,1.171,1455,1.171,1456,1.938,1457,1.938,1458,1.938,1459,1.938,1460,2.48,1461,1.171,1462,1.171,1463,1.171,1464,1.171,1465,1.938,1466,1.938,1467,2.882,1468,1.171,1469,1.171,1470,1.171,1471,1.171,1472,1.171,1473,2.555,1474,3.441,1475,3.193,1476,1.938,1477,1.171,1478,1.938,1479,2.48,1480,1.171,1481,2.48,1482,1.171,1483,2.882,1484,1.938,1485,1.171,1486,1.171,1487,1.171,1488,1.938,1489,1.129,1490,1.171,1491,1.023,1492,1.171,1493,1.171,1494,1.171,1495,1.171,1496,1.938,1497,2.372,1498,1.171,1499,1.171,1500,1.171,1501,1.171,1502,1.171,1503,1.508,1504,1.171,1505,1.171,1506,1.171,1507,2.48,1508,1.171,1509,1.171,1510,1.129,1511,1.748,1512,1.171,1513,1.171,1514,1.171,1515,1.171,1516,1.171,1517,1.171,1518,1.171,1519,1.469,1520,1.171,1521,1.171,1522,1.171,1523,1.171,1524,1.091,1525,1.171,1526,1.171,1527,1.938,1528,1.171,1529,1.171,1530,1.171,1531,1.171,1532,1.171,1533,0.993,1534,1.171,1535,1.023,1536,1.171,1537,1.171,1538,0.993,1539,1.171,1540,1.171,1541,1.171,1542,1.171,1543,1.171,1544,1.171,1545,1.171,1546,1.171,1547,1.171,1548,1.171,1549,1.171,1550,0.802,1551,1.171,1552,1.171,1553,1.869,1554,1.171,1555,1.171,1556,1.171,1557,1.171,1558,1.171,1559,1.171,1560,1.171,1561,1.171,1562,1.938,1563,1.938,1564,1.938,1565,1.171,1566,2.31,1567,2.882,1568,1.938,1569,1.171,1570,1.171,1571,1.171,1572,1.171,1573,1.171,1574,1.171,1575,1.091,1576,1.171,1577,1.171,1578,1.171,1579,1.171,1580,0.697,1581,1.171,1582,1.171,1583,1.938,1584,1.171,1585,2.48,1586,1.171,1587,1.171,1588,1.171,1589,1.938,1590,1.171,1591,1.171,1592,1.938,1593,1.938,1594,1.171,1595,1.171,1596,1.091,1597,1.129,1598,1.171,1599,1.171,1600,1.171,1601,1.938,1602,1.938,1603,1.171,1604,1.171,1605,1.938,1606,1.171,1607,1.171,1608,1.171,1609,1.171,1610,1.171,1611,1.171,1612,1.171,1613,1.129,1614,1.171,1615,1.171,1616,1.171,1617,1.171,1618,1.171,1619,1.938,1620,1.171,1621,1.171,1622,1.171,1623,1.171,1624,1.171,1625,1.171,1626,1.171,1627,1.171,1628,1.171,1629,1.938,1630,2.882,1631,2.48,1632,1.171,1633,1.171,1634,1.938,1635,1.171,1636,1.171,1637,1.171,1638,1.171,1639,1.171,1640,1.171,1641,1.171,1642,1.265,1643,1.938,1644,1.171,1645,1.171,1646,1.171,1647,1.129,1648,1.171,1649,1.171,1650,1.171,1651,1.171,1652,1.171,1653,1.171,1654,1.129,1655,1.171,1656,1.171,1657,1.171,1658,1.171,1659,1.171,1660,1.171,1661,2.882,1662,1.171,1663,1.171,1664,1.171,1665,1.171,1666,1.171,1667,1.171,1668,1.129,1669,1.171,1670,1.171,1671,1.938,1672,1.171,1673,1.938,1674,1.171,1675,1.171,1676,1.938,1677,1.171,1678,1.171,1679,1.171,1680,1.171,1681,1.171,1682,2.48,1683,1.171,1684,1.171,1685,1.171,1686,1.171,1687,1.171,1688,0.843,1689,1.171,1690,1.171,1691,1.171,1692,1.171,1693,1.171,1694,1.171,1695,1.171,1696,1.171,1697,1.023,1698,1.129,1699,1.171,1700,1.171,1701,0.993,1702,1.171,1703,1.171,1704,1.938,1705,3.193,1706,0.937,1707,1.171,1708,1.171,1709,1.171,1710,1.171,1711,1.171,1712,1.171,1713,1.938,1714,1.171,1715,1.171,1716,1.748,1717,1.171,1718,1.171,1719,1.091,1720,1.171,1721,1.171,1722,1.091,1723,1.171,1724,1.171,1725,1.171]],["title/interfaces/ColumnRendererSpec.html",[0,0.175,1001,1.857]],["body/interfaces/ColumnRendererSpec.html",[0,0.287,2,1.085,3,0.081,4,0.063,5,0.054,8,0.304,9,2.808,12,0.182,13,0.592,18,0.317,19,0.008,21,5.094,22,2.855,26,0.134,27,1.642,30,1.329,35,1.444,38,2.93,47,2.821,50,1.069,52,1.463,55,2.57,57,1.444,60,1.001,61,2.287,64,1.606,65,2.922,66,1.834,73,0.546,78,0.12,83,2.45,85,0.914,90,3.936,91,1.679,96,0.782,99,0.942,102,3.037,112,2.93,115,1.067,133,1.474,138,1.572,141,3.037,143,0.641,148,2.236,151,3.348,153,3.19,159,0.004,160,0.005,161,0.004,165,1.717,168,1.086,192,0.886,195,0.671,200,0.698,203,2.844,204,0.636,233,1.762,234,1.506,244,2.93,247,1.329,259,0.451,266,0.76,272,1.225,280,0.449,321,1.84,344,1.884,361,1.665,363,2.389,389,2.771,466,3.081,509,1.717,513,2.194,565,1.93,570,1.84,583,1.844,615,1.93,619,2.339,651,1.25,680,2.255,699,1.996,705,1.756,746,2.139,774,1.538,801,1.884,807,1.538,832,3.19,869,1.93,889,2.389,899,1.385,966,3.285,976,2.463,981,2.542,984,3.137,985,3.932,986,1.797,988,2.89,989,2.804,990,3.28,991,3.381,995,2.73,996,3.19,999,2.136,1001,3.468,1020,2.194,1028,4.777,1030,1.756,1033,4.705,1034,2.922,1035,1.717,1036,3.348,1037,1.978,1049,1.717,1060,3.19,1089,1.797,1164,3.182,1188,2.755,1245,2.081,1246,2.542,1251,3.474,1271,2.542,1272,2.542,1275,2.255,1276,2.32,1278,2.463,1279,2.049,1280,2.771,1281,3.238,1282,3.28,1284,2.701,1294,3.115,1304,1.978,1341,2.081,1361,2.542,1363,2.32,1511,2.542,1519,3.728,1688,2.701,1726,3.533,1727,3.533,1728,5.014,1729,2.194,1730,2.844,1731,4.678,1732,6.037,1733,5.622,1734,4.032,1735,3.533,1736,4.032,1737,6.037,1738,5.369,1739,5.369,1740,5.369,1741,4.032,1742,4.032,1743,4.032,1744,4.705,1745,2.542,1746,3.052,1747,2.819,1748,4.032,1749,3.754,1750,4.032,1751,4.032,1752,4.032,1753,2.93,1754,4.032,1755,3.533,1756,4.032,1757,2.463,1758,3.348,1759,4.032,1760,2.819,1761,4.032,1762,3.754,1763,3.754,1764,3.19,1765,5.369,1766,4.032,1767,3.052,1768,2.93,1769,4.032,1770,3.348,1771,2.542,1772,2.463,1773,2.627,1774,3.19,1775,3.348,1776,3.19,1777,3.348,1778,3.348,1779,2.719,1780,4.032]],["title/classes/CommonUtil.html",[78,0.11,264,3.234]],["body/classes/CommonUtil.html",[3,0.107,4,0.084,5,0.072,8,0.403,12,0.241,14,0.664,18,0.317,19,0.008,25,2.252,26,0.107,52,1.443,60,1.593,66,1.949,78,0.159,85,1.092,136,3.147,140,0.868,141,3.227,143,1.094,159,0.005,160,0.007,161,0.005,163,1.622,181,0.998,195,0.802,197,1.353,198,0.722,200,0.884,216,2.86,224,0.886,264,5.622,280,0.536,364,1.469,605,1.353,875,3.88,1162,2.665,1173,5.974,1642,2.436,1781,7.511,1782,5.339,1783,7.904,1784,7.904,1785,7.904,1786,6.578,1787,7.904,1788,7.904,1789,8.095,1790,6.578,1791,7.904,1792,7.904,1793,8.79,1794,7.904,1795,7.007,1796,7.007,1797,6.578]],["title/interfaces/ComponentRenderer.html",[0,0.175,981,2.327]],["body/interfaces/ComponentRenderer.html",[0,0.306,2,1.445,3,0.107,4,0.084,5,0.073,8,0.405,12,0.242,13,0.592,18,0.323,19,0.008,26,0.138,50,1.128,52,1.085,57,2.468,64,2.138,88,2.569,109,0.976,115,1.097,159,0.005,160,0.007,161,0.005,192,1.414,204,0.647,216,2.392,224,0.742,259,0.376,326,2.633,336,3.088,361,1.815,466,3.08,478,0.637,557,2.633,651,1.995,652,2.353,699,1.916,746,2.138,777,3.496,966,2.92,981,4.345,983,2.74,995,2.772,1001,2.699,1004,5.993,1280,3.321,1281,2.699,1304,2.633,1351,2.699,1519,3.786,1701,4.235,1719,3.496,1735,4.703,1768,3.9,1798,4.997,1799,4.997,1800,7.028,1801,5.936,1802,5.861,1803,4.997,1804,6.435,1805,5.861,1806,5.861,1807,4.063,1808,5.861]],["title/directives/ComponentRendererOutletDirective.html",[599,1.408,746,1.471]],["body/directives/ComponentRendererOutletDirective.html",[3,0.087,4,0.068,5,0.059,8,0.329,9,2.703,12,0.197,13,0.52,14,0.649,17,4.23,18,0.319,19,0.008,26,0.087,33,6.102,36,1.105,50,1.008,52,0.882,55,3.372,57,2.377,59,1.045,66,1.717,78,0.13,88,2.706,109,1.206,112,4.107,159,0.004,160,0.006,161,0.004,172,1.677,181,0.879,191,2.773,192,0.958,195,0.909,197,1.323,198,0.706,204,0.665,224,0.917,233,1.649,234,2.111,259,0.396,266,0.617,272,1.325,275,1.664,280,0.472,336,3.253,461,1.242,463,1.615,478,0.518,513,2.372,599,2.532,623,3.124,658,2.087,666,2.302,745,1.594,746,2.252,776,2.354,813,2.393,936,4.279,981,2.748,982,3.076,986,2.52,987,4.184,991,3.463,995,2.343,998,2.509,999,2.309,1001,2.843,1032,3.61,1067,2.773,1164,3.35,1280,3.237,1281,3.607,1351,3.696,1378,4.184,1383,4.475,1510,2.94,1519,2.994,1706,2.439,1809,8.024,1810,4.761,1811,6.964,1812,5.264,1813,6.964,1814,6.964,1815,6.964,1816,7.248,1817,4.107,1818,8.68,1819,8.956,1820,8.176,1821,6.964,1822,8.176,1823,8.176,1824,5.371,1825,8.68,1826,7.728,1827,8.176,1828,6.964,1829,6.964,1830,7.728,1831,5.841,1832,5.496,1833,6.964,1834,5.371,1835,5.371,1836,5.371,1837,5.371,1838,5.371,1839,5.371,1840,6.964,1841,6.964,1842,5.371,1843,5.371,1844,5.371,1845,8.176,1846,5.371,1847,5.371,1848,5.371,1849,5.371,1850,5.371,1851,5.371,1852,5.371,1853,5.371,1854,5.371,1855,5.371,1856,5.371]],["title/interfaces/ComponentRendererSpec.html",[0,0.175,1281,1.857]],["body/interfaces/ComponentRendererSpec.html",[0,0.3,2,1.403,3,0.104,4,0.082,5,0.07,8,0.393,12,0.235,13,0.581,18,0.33,19,0.008,26,0.136,50,1.12,52,1.278,57,1.866,64,2.519,88,3.026,109,1.149,115,1.006,159,0.005,160,0.006,161,0.005,192,1.555,204,0.649,216,2.323,224,0.874,259,0.365,326,3.101,336,3.638,361,1.852,466,3.387,478,0.619,557,3.101,651,1.616,652,1.906,699,1.552,746,2.519,777,4.119,966,3.44,981,4.29,983,2.219,995,2.786,1001,3.18,1004,6.59,1280,3.652,1281,3.18,1304,3.101,1351,3.18,1519,3.84,1701,3.746,1719,4.119,1735,4.566,1768,3.786,1798,4.852,1799,4.852,1800,5.691,1801,6.021,1802,5.691,1803,5.887,1804,7.076,1805,5.691,1806,6.904,1807,4.786,1808,5.691,1857,6.419]],["title/injectables/CsvExporterService.html",[1858,2.255,1859,3.234]],["body/injectables/CsvExporterService.html",[3,0.082,4,0.064,5,0.091,8,0.46,12,0.185,14,0.631,18,0.277,19,0.008,20,1.176,26,0.122,35,2.323,36,1.042,50,0.625,52,1.312,57,1.472,59,0.826,60,1.722,73,0.577,74,3.13,78,0.122,83,2.781,85,1.237,96,1.308,101,2.009,102,2.068,115,0.865,124,3.112,127,2.017,143,0.654,156,3.724,158,1.063,159,0.007,160,0.006,161,0.004,181,0.846,195,0.762,197,1.285,198,0.759,200,0.705,216,2.717,224,0.932,259,0.288,266,0.955,272,1.249,280,0.6,281,1.123,322,3.668,361,1.021,364,0.941,389,2.807,415,6.657,478,0.488,508,3.602,509,2.763,522,2.12,569,3.577,605,1.042,635,2.121,839,4.536,966,3.317,985,3.963,1034,2.237,1089,2.425,1284,3.487,1310,4.09,1642,1.876,1706,2.3,1745,2.592,1749,3.828,1858,3.323,1859,4.766,1860,3.253,1861,4.911,1862,6.487,1863,4.111,1864,6.701,1865,6.701,1866,5.94,1867,6.701,1868,7.265,1869,5.065,1870,7.51,1871,7.443,1872,7.992,1873,6.041,1874,7.085,1875,8.712,1876,7.51,1877,5.341,1878,8.844,1879,6.701,1880,6.933,1881,5.065,1882,3.952,1883,5.439,1884,5.439,1885,6.747,1886,6.701,1887,5.065,1888,7.51,1889,3.828,1890,5.065,1891,5.065,1892,3.112,1893,5.065,1894,2.875,1895,3.828,1896,5.94,1897,3.828,1898,5.065,1899,5.065,1900,6.701,1901,5.065,1902,5.065,1903,6.701,1904,5.065,1905,5.065,1906,5.065,1907,2.875,1908,4.111,1909,5.065,1910,5.065,1911,5.065,1912,5.065,1913,6.701,1914,5.065,1915,5.065,1916,5.065,1917,5.065,1918,5.065,1919,5.065,1920,5.065,1921,4.111,1922,4.111,1923,5.065,1924,5.065,1925,5.065,1926,5.065,1927,5.065,1928,5.065,1929,5.065,1930,5.065,1931,5.065,1932,8.844,1933,6.701,1934,6.701,1935,5.065,1936,7.51,1937,3.414,1938,4.49,1939,5.065,1940,5.065,1941,7.51,1942,5.065,1943,3.602,1944,5.065,1945,5.065,1946,5.065,1947,5.065,1948,5.065,1949,4.49,1950,5.065,1951,5.065,1952,5.065,1953,4.111,1954,5.065,1955,5.065,1956,5.065,1957,5.065,1958,5.065,1959,5.065]],["title/classes/CypressLocatorDriver.html",[78,0.11,1960,3.437]],["body/classes/CypressLocatorDriver.html",[3,0.087,4,0.068,5,0.059,8,0.328,12,0.196,14,0.711,18,0.31,19,0.008,26,0.087,57,2.653,60,1.402,73,0.579,78,0.129,96,1.215,101,2.186,113,2.769,152,2.818,159,0.004,160,0.006,161,0.004,163,1.322,168,0.88,170,1.582,172,1.51,181,0.878,192,0.956,195,0.896,197,1.485,198,0.773,200,0.767,216,3.274,224,0.973,259,0.396,266,0.973,275,1.66,280,0.599,281,1.369,323,4.688,324,3.448,341,3.253,361,1.402,373,2.082,408,3.072,409,4.946,433,4.181,435,2.745,436,2.578,437,3.947,438,2.956,441,1.786,442,4.382,444,5.204,445,5.645,446,5.256,447,5.572,464,3.699,465,4.351,466,3.289,468,3.443,469,4.818,470,4.688,472,4.688,474,4.688,475,4.751,484,2.834,485,2.834,486,3.248,487,5.707,524,2.299,545,2.702,598,2.824,635,3.234,808,2.064,939,3.158,1247,3.072,1256,2.459,1654,3.806,1755,4.946,1960,6.766,1961,6.766,1962,6.871,1963,6.954,1964,6.165,1965,6.165,1966,6.165,1967,6.165,1968,6.165,1969,6.165,1970,4.051,1971,8.17,1972,5.36,1973,7.72,1974,6.844,1975,5.36,1976,6.954,1977,5.36,1978,5.36,1979,4.751,1980,6.165,1981,6.954,1982,6.954,1983,5.36,1984,5.36,1985,4.051,1986,4.751,1987,4.051,1988,4.751,1989,4.351,1990,4.351,1991,4.751,1992,7.72,1993,5.36,1994,8.465,1995,6.954,1996,5.36,1997,5.36,1998,5.36,1999,6.954,2000,5.36,2001,5.36,2002,4.751]],["title/classes/CypressWidgetObjectFinder.html",[78,0.11,1985,3.437]],["body/classes/CypressWidgetObjectFinder.html",[3,0.098,4,0.077,5,0.066,8,0.459,12,0.221,14,0.507,18,0.296,19,0.008,26,0.098,29,6.086,57,2.551,60,1.511,66,1.849,73,0.547,77,2.913,78,0.146,81,2.048,85,1.127,87,2.226,99,1.144,113,2.985,159,0.005,160,0.006,161,0.005,163,1.488,165,3.135,168,0.99,181,0.946,192,1.337,195,0.612,197,1.283,198,0.551,224,0.677,245,2.913,259,0.464,266,1.028,280,0.409,281,1.257,323,5.054,341,2.985,361,1.72,373,2.344,392,2.179,408,3.312,433,3.502,435,2.79,437,4.255,438,3.175,441,1.926,447,4.816,459,2.273,464,3.839,466,3.409,468,3.876,469,5.033,485,3.191,486,3.502,522,1.932,598,2.592,608,4.56,609,4.607,626,5.349,627,5.636,629,7.231,630,6.646,631,5.667,632,3.874,635,2.527,644,5.349,648,5.349,844,4.231,911,4.104,913,3.559,914,3.876,921,4.067,1247,3.312,1256,2.651,1755,5.333,1960,4.56,1961,5.667,1962,7.123,1964,6.646,1965,6.646,1966,6.646,1967,6.646,1968,6.646,1969,6.646,1970,4.56,1974,6.646,1985,5.667,1986,5.349,1987,4.56,1988,5.349,1989,4.897,1990,4.897,1991,5.349,2002,6.646,2003,6.034,2004,5.349,2005,6.034,2006,6.034,2007,6.034,2008,6.034]],["title/interfaces/DataExportRequestEvent.html",[0,0.175,2009,3.437]],["body/interfaces/DataExportRequestEvent.html",[0,0.214,2,0.844,3,0.106,4,0.049,5,0.078,8,0.237,12,0.141,13,0.415,18,0.226,19,0.008,20,1.511,26,0.134,27,1.277,30,2.102,34,1.423,35,1.123,36,1.339,40,3.08,50,0.803,52,1.169,58,2.907,59,0.998,60,1.782,62,1.431,66,1.371,73,0.462,75,4.458,78,0.093,83,1.431,85,0.768,86,3.74,96,1.274,97,2.921,99,1.431,101,2.257,108,2.253,109,1.35,113,2.835,114,1.829,115,0.499,129,2.39,133,1.147,140,0.689,143,0.499,146,3.155,148,1.306,154,1.965,158,1.366,159,0.003,160,0.005,161,0.003,170,0.879,172,1.527,194,2.658,198,0.65,200,0.708,204,0.389,237,5.284,247,1.468,259,0.447,260,1.197,266,0.903,275,1.197,280,0.625,281,1.503,282,3.137,321,3.068,325,2.748,341,2.213,347,2.605,358,0.862,361,1.121,363,1.859,364,0.718,373,1.501,392,1.616,461,0.689,478,0.372,524,1.277,545,2.16,548,1.336,560,1.277,561,1.805,605,1.339,606,1.985,619,1.965,659,0.704,660,1.172,670,4.495,681,3.131,708,1.501,719,1.542,782,1.147,808,1.147,813,1.197,838,1.398,855,3.39,867,3.74,889,2.674,899,1.077,910,1.277,969,2.748,984,2.494,988,3.218,990,3.228,1023,2.482,1032,2.597,1038,1.466,1045,1.616,1046,2.108,1070,2.727,1076,2.605,1204,1.501,1220,1.197,1249,3.765,1254,2.956,1256,2.302,1259,1.539,1264,1.123,1273,1.965,1274,1.662,1284,1.578,1293,1.805,1294,1.619,1304,2.592,1310,1.977,1381,1.501,1388,2.043,1389,2.043,1390,2.939,1391,2.043,1395,2.939,1449,1.916,1550,1.501,1566,2.043,1575,2.043,1757,1.916,1817,2.279,1859,4.63,1861,2.375,1868,4.512,1871,6.376,1873,5.381,1880,3.137,1883,4.512,1884,3.137,1885,3.137,1894,3.695,1922,4.512,2009,4.202,2010,2.482,2011,2.921,2012,4.512,2013,6.687,2014,6.963,2015,6.687,2016,4.928,2017,4.928,2018,4.202,2019,4.928,2020,6.621,2021,5.771,2022,5.687,2023,3.137,2024,3.233,2025,4.512,2026,3.426,2027,3.426,2028,3.137,2029,2.939,2030,3.426,2031,1.859,2032,3.137,2033,4.512,2034,4.512,2035,6.123,2036,3.137,2037,3.137,2038,3.426,2039,2.482,2040,3.426,2041,5.771,2042,3.426,2043,2.921,2044,3.137,2045,3.426,2046,3.426,2047,3.426,2048,3.426,2049,3.426,2050,3.426,2051,3.954,2052,5.771,2053,3.426,2054,3.426,2055,2.482,2056,3.426,2057,3.426,2058,3.426,2059,3.426,2060,3.426,2061,3.137,2062,3.426,2063,3.426,2064,3.426,2065,3.426,2066,3.426,2067,3.426,2068,3.426,2069,3.426,2070,3.426,2071,3.426,2072,3.426,2073,3.426,2074,5.284,2075,4.154,2076,3.426,2077,3.426,2078,3.426,2079,3.426,2080,3.571,2081,3.426,2082,3.426,2083,3.426,2084,3.426,2085,3.426,2086,3.426,2087,3.426,2088,3.426,2089,3.426,2090,3.426,2091,3.426,2092,3.426,2093,3.426,2094,3.426,2095,3.426,2096,3.954,2097,3.426,2098,3.954,2099,3.426,2100,4.928,2101,2.748,2102,2.748,2103,4.928,2104,3.426,2105,3.426,2106,3.426,2107,5.771,2108,3.426,2109,4.928,2110,3.426,2111,3.426,2112,2.921,2113,3.426,2114,3.426,2115,3.426,2116,6.311,2117,3.426,2118,3.426,2119,3.426,2120,3.426,2121,4.928,2122,3.426,2123,3.426,2124,3.426,2125,3.426,2126,3.426,2127,3.426,2128,3.426,2129,3.426,2130,3.426,2131,3.426,2132,3.426,2133,3.426,2134,3.426,2135,4.928,2136,3.426,2137,3.426,2138,3.426,2139,3.426,2140,3.426,2141,3.426,2142,3.426,2143,3.426,2144,3.426,2145,3.426,2146,3.426,2147,1.916,2148,3.426,2149,3.426,2150,3.426,2151,3.426,2152,3.426,2153,3.954,2154,3.426,2155,3.426,2156,3.426,2157,3.426,2158,3.426,2159,3.426,2160,3.426,2161,3.426,2162,3.426,2163,3.426,2164,3.426,2165,3.426,2166,3.426,2167,3.426,2168,3.426,2169,3.426,2170,3.426,2171,3.426,2172,3.426,2173,3.426,2174,3.426,2175,3.426,2176,3.426,2177,3.426,2178,3.426,2179,4.928,2180,3.426,2181,3.426,2182,3.426]],["title/classes/DataExporterWidgetObject.html",[78,0.11,2183,3.691]],["body/classes/DataExporterWidgetObject.html",[3,0.082,4,0.064,5,0.055,8,0.408,12,0.304,13,0.498,14,0.751,18,0.322,19,0.008,25,1.846,26,0.143,50,0.621,57,1.939,60,1.345,73,0.508,75,4.936,78,0.121,84,2.755,85,0.695,114,1.923,117,5.996,140,0.684,143,1.19,146,4.249,152,2.27,154,2.359,158,1.056,159,0.004,160,0.006,161,0.004,163,1.241,168,1.095,181,0.842,195,0.944,197,0.861,198,0.46,200,0.865,216,2.708,217,3.174,224,0.894,247,1.255,259,0.286,280,0.541,361,1.509,364,1.541,438,2.708,442,4.249,459,1.526,463,1.479,464,3.571,485,4.599,575,4.1,605,1.372,606,1.86,632,3.399,659,1.215,708,2.592,760,2.678,867,3.308,934,3.232,949,4.746,950,4.746,951,4.746,955,5.046,956,3.579,957,5.324,959,5.324,960,3.579,962,3.935,963,3.579,984,3.096,1015,3.803,1034,3.306,1067,2.981,1129,2.724,1449,3.308,1861,5.63,1873,6.27,2010,5.884,2022,4.498,2044,5.416,2061,5.416,2074,5.416,2075,4.508,2183,5.416,2184,4.461,2185,3.652,2186,7.486,2187,7.486,2188,7.486,2189,7.486,2190,7.486,2191,7.486,2192,7.486,2193,7.486,2194,7.486,2195,6.672,2196,7.486,2197,5.032,2198,7.486,2199,5.032,2200,7.972,2201,7.486,2202,5.032,2203,4.746,2204,7.486,2205,5.032,2206,4.746,2207,6.672,2208,7.486,2209,5.032,2210,7.486,2211,5.032,2212,7.486,2213,5.032,2214,5.747,2215,7.486,2216,5.032,2217,6.672,2218,7.486,2219,5.032,2220,5.032,2221,4.461,2222,4.461,2223,4.461,2224,4.461,2225,6.672,2226,5.032,2227,5.032,2228,5.032,2229,5.032,2230,5.032]],["title/classes/DatagridFilter.html",[78,0.11,1277,1.645]],["body/classes/DatagridFilter.html",[0,0.221,3,0.065,4,0.051,5,0.044,8,0.246,9,2.768,12,0.147,13,0.497,14,0.61,18,0.321,19,0.008,26,0.124,35,1.171,36,0.828,45,4.053,47,1.527,50,1.089,52,1.093,59,1.051,60,0.812,61,2.508,66,1.412,73,0.529,78,0.138,96,1.142,99,1.264,109,1.07,111,2.024,112,2.375,114,1.471,115,1.14,118,1.893,140,0.7,143,0.99,158,0.845,159,0.003,160,0.005,161,0.003,163,2.021,168,1.093,170,1.303,172,1.188,181,0.916,190,3.441,191,2.28,192,1.021,195,0.937,197,1.242,198,0.663,200,0.866,204,0.587,224,0.98,233,0.954,234,2.324,259,0.477,266,0.765,280,0.556,281,1.216,322,3.134,324,2.839,361,1.154,373,3.094,377,2.171,435,2.486,466,3.483,478,0.388,487,2.715,557,2.28,560,1.893,565,1.565,583,1.123,584,2.587,598,1.392,615,2.224,646,1.732,651,1.929,666,2.398,710,1.63,713,1.63,716,1.457,720,1.457,727,1.596,734,1.412,746,2.346,751,1.7,760,2.65,774,1.247,776,1.935,782,2.432,807,1.773,813,1.773,832,2.587,838,1.457,867,2.839,885,3.028,889,1.937,899,2.023,910,1.331,966,2.942,976,1.997,981,3.712,983,2.508,984,2.202,986,1.457,989,1.424,991,2.171,995,2.676,998,1.881,999,1.732,1038,2.171,1039,3.25,1045,1.936,1046,2.527,1162,1.221,1164,2.754,1188,2.121,1204,2.819,1211,2.286,1220,2.247,1243,2.529,1256,2.024,1264,1.171,1267,1.687,1268,1.732,1273,2.71,1274,1.732,1277,2.41,1279,2.883,1280,2.398,1281,2.72,1307,2.653,1335,1.997,1341,2.79,1363,1.881,1367,3.21,1368,2.942,1370,1.881,1503,2.529,1519,3.296,1550,2.224,1728,2.715,1729,2.942,1730,3.12,1745,2.93,1767,2.475,1768,2.375,1770,2.715,1771,2.061,1772,4.224,1773,2.13,1774,2.587,1775,2.715,1776,2.587,1777,2.715,1778,2.715,1779,2.204,1801,3.86,1817,2.375,1882,3.929,1892,2.475,2024,3.802,2031,2.754,2231,4.174,2232,2.864,2233,4.647,2234,3.518,2235,4.647,2236,4.66,2237,6.465,2238,5.407,2239,4.279,2240,4.458,2241,3.712,2242,3.971,2243,3.941,2244,3.712,2245,4.072,2246,3.678,2247,3.712,2248,5.725,2249,2.204,2250,4.027,2251,3.518,2252,4.66,2253,4.027,2254,4.279,2255,4.027,2256,4.027,2257,3.678,2258,4.027,2259,3.518,2260,4.027,2261,3.678,2262,4.027,2263,3.134,2264,3.028,2265,4.027,2266,3.25,2267,3.678,2268,4.027,2269,4.027,2270,3.134,2271,4.027,2272,3.518,2273,3.377,2274,3.678,2275,4.66,2276,3.377,2277,4.027,2278,2.93,2279,5.725,2280,4.027,2281,4.027,2282,4.027,2283,4.027,2284,4.027,2285,3.269,2286,3.269,2287,3.269,2288,3.044,2289,3.044,2290,3.044,2291,4.072,2292,3.044,2293,3.269,2294,3.269,2295,3.269,2296,3.269,2297,3.269,2298,3.269,2299,5.407,2300,3.269,2301,3.269,2302,3.269,2303,3.269,2304,3.269,2305,3.269,2306,3.269,2307,3.269,2308,3.269,2309,2.204,2310,2.839,2311,4.647,2312,3.269,2313,3.269,2314,3.269,2315,2.587,2316,3.269,2317,3.269]],["title/components/DatagridMultiSelectFilterComponent.html",[204,0.319,712,1.684]],["body/components/DatagridMultiSelectFilterComponent.html",[0,0.244,3,0.06,4,0.047,5,0.04,8,0.226,9,1.776,12,0.135,13,0.401,14,0.622,18,0.306,19,0.008,20,1.617,26,0.113,31,2.367,34,1.522,36,1.105,45,2.84,50,0.859,52,0.605,59,1.045,60,0.743,61,1.274,63,1.028,65,2.372,73,0.536,78,0.089,79,3.45,81,1.467,85,0.742,91,1.815,96,1.096,99,0.699,109,0.544,114,0.947,115,1.056,118,2.095,127,1.467,133,2.067,140,0.676,143,0.956,152,2.731,159,0.003,160,0.004,161,0.003,163,1.563,168,1.215,170,1.222,172,0.958,181,0.678,190,3.213,192,0.657,195,0.944,197,1.267,198,0.793,200,0.866,204,0.488,208,1.398,217,3.518,224,1.004,233,1.272,234,1.117,247,0.618,259,0.454,263,1.218,266,0.728,275,1.142,280,0.524,281,1.37,322,2.017,324,1.827,338,1.561,358,0.822,364,0.685,373,2.462,374,1.166,377,1.398,389,1.544,390,1.218,435,2.198,441,0.947,461,1.669,463,1.061,466,2.706,478,0.355,548,2.191,557,1.467,560,1.218,583,1.498,599,1.142,615,1.432,623,1.303,646,1.585,650,1.166,651,1.352,652,1.094,653,1.467,656,1.192,658,1.432,659,1.684,660,1.629,666,2.095,698,1.192,699,1.868,700,3.162,701,1.673,702,1.218,703,1.673,704,1.673,705,1.303,706,1.585,707,1.673,708,1.432,709,1.673,710,1.804,711,1.673,712,2.955,713,2.2,714,3.48,715,3.162,716,1.333,717,1.432,718,1.432,719,1.975,720,1.333,721,1.432,722,1.673,723,1.467,724,1.673,725,1.585,726,1.432,727,2.224,728,1.673,729,1.365,730,3.162,731,1.398,732,2.588,733,1.398,734,1.325,735,1.398,736,2.439,737,1.365,738,1.505,739,1.673,740,1.333,741,1.673,742,1.544,743,1.166,744,1.192,745,1.094,746,1.737,747,1.673,748,1.432,749,1.673,750,1.467,751,1.094,752,1.673,753,1.365,754,1.585,755,1.673,760,2.528,776,1.246,782,2.067,796,1.722,807,1.142,813,1.142,844,3.142,855,2.655,893,2.265,899,1.498,910,1.218,911,2.94,912,2.621,913,2.174,914,2.367,921,2.484,936,2.265,983,2.559,984,1.776,986,1.943,988,2.087,989,1.899,990,2.663,991,2.037,995,2.632,1023,4.473,1035,2.191,1038,1.398,1039,2.092,1045,1.842,1098,1.886,1164,1.773,1188,1.365,1204,2.462,1220,2.471,1237,1.585,1243,1.628,1256,1.303,1264,1.071,1273,2.241,1277,3.275,1279,2.79,1304,2.139,1307,2.139,1311,2.372,1341,1.544,1346,3.077,1351,2.193,1358,1.303,1367,2.25,1368,1.628,1503,1.628,1550,1.432,1580,1.246,1697,1.827,1729,2.372,1730,3.183,1745,1.886,1747,3.049,1772,2.663,1882,2.174,2024,3.941,2031,1.773,2075,3.683,2147,1.827,2203,3.82,2231,3.846,2236,4.473,2239,3.45,2240,3.895,2241,4.082,2242,4.367,2243,3.933,2244,4.082,2245,4.953,2246,2.367,2247,3.564,2249,2.94,2251,2.265,2252,3.45,2254,3.45,2257,2.367,2259,2.265,2261,2.367,2263,2.017,2264,2.84,2266,2.092,2267,2.367,2270,3.469,2272,2.265,2273,2.174,2274,2.367,2275,3.45,2276,2.174,2278,1.886,2318,1.827,2319,3.683,2320,3.621,2321,4.06,2322,4.695,2323,4.06,2324,4.06,2325,3.049,2326,3.685,2327,2.786,2328,3.685,2329,3.685,2330,3.685,2331,3.685,2332,3.685,2333,4.695,2334,3.685,2335,4.06,2336,3.82,2337,3.621,2338,3.267,2339,2.786,2340,2.786,2341,2.786,2342,2.786,2343,2.786,2344,2.786,2345,2.786,2346,2.786,2347,2.786,2348,4.272,2349,3.685,2350,4.06,2351,2.786,2352,2.786,2353,2.786,2354,2.786,2355,3.048,2356,2.092,2357,1.827,2358,2.092,2359,2.017,2360,4.695,2361,2.786,2362,2.786,2363,3.82,2364,2.786,2365,2.484,2366,2.092,2367,2.621,2368,2.786,2369,2.786,2370,2.786,2371,2.786,2372,2.786,2373,2.786,2374,2.786,2375,4.06,2376,2.786,2377,2.786,2378,2.786,2379,2.786,2380,2.786,2381,2.786,2382,2.786,2383,2.786,2384,2.786,2385,2.786,2386,2.786,2387,2.786,2388,2.786,2389,2.786,2390,2.621,2391,4.36,2392,5.653,2393,3.45]],["title/interfaces/DatagridMultiSelectFilterConfig.html",[0,0.175,2333,3.065]],["body/interfaces/DatagridMultiSelectFilterConfig.html",[0,0.296,2,1.159,3,0.086,4,0.067,5,0.058,12,0.194,13,0.515,18,0.266,19,0.008,20,1.889,26,0.132,31,3.407,34,1.509,36,1.091,50,1.004,52,0.871,59,0.947,65,2.343,73,0.529,78,0.128,79,4.437,81,1.449,85,0.954,91,1.793,96,0.835,109,0.783,115,1.051,118,1.754,127,2.112,133,2.051,140,0.485,143,0.685,152,2.847,159,0.004,160,0.006,161,0.004,168,1.385,170,1.207,195,0.538,198,0.485,200,0.861,204,0.484,233,1.256,259,0.501,266,0.883,275,1.643,280,0.572,281,1.45,364,0.986,389,2.222,435,1.575,461,0.946,478,0.511,548,2.388,583,1.479,623,1.876,646,2.281,659,0.966,660,1.608,699,1.857,710,1.51,712,2.845,713,1.51,714,3.162,719,2.087,727,1.926,760,1.608,796,2.478,844,3.809,855,2.893,893,3.26,899,1.479,910,1.754,911,3.781,912,3.773,913,3.129,914,3.407,921,3.576,936,3.26,983,2.388,984,1.754,986,1.919,988,2.061,989,1.876,990,2.63,991,2.012,995,2.558,1023,4.934,1035,2.388,1045,2.008,1098,2.714,1220,1.643,1237,2.281,1264,1.542,1277,2.499,1279,2.767,1304,2.112,1307,2.112,1311,3.051,1346,3.36,1351,2.166,1358,1.876,1580,1.793,1697,2.63,1729,3.393,1730,3.499,1747,3.011,2024,3.831,2075,4.062,2147,2.63,2203,3.773,2231,2.408,2241,2.714,2242,2.903,2243,2.552,2244,2.714,2247,3.535,2249,2.903,2270,2.903,2318,2.63,2319,4.062,2320,3.576,2321,4.009,2322,4.657,2323,4.009,2324,4.009,2325,3.011,2333,5.178,2335,4.009,2336,3.773,2337,3.576,2348,4.657,2350,4.009,2355,3.695,2356,3.011,2357,2.63,2358,3.011,2359,2.903,2360,5.832,2361,4.009,2362,4.009,2363,4.913,2364,4.009,2365,3.576,2366,3.011,2367,3.773,2368,4.009,2369,4.009,2370,4.009,2371,4.009,2372,4.009,2373,4.009,2374,4.009,2375,5.221,2376,4.009,2377,4.009,2378,4.009,2379,4.009,2380,4.009,2381,4.009,2382,4.009,2383,4.009,2384,4.009,2385,4.009,2386,4.009,2387,4.009,2388,4.009,2389,4.009,2390,3.773]],["title/components/DatagridNumericFilterComponent.html",[204,0.319,716,1.645]],["body/components/DatagridNumericFilterComponent.html",[0,0.14,3,0.059,4,0.046,5,0.04,9,2.076,12,0.133,13,0.468,14,0.667,18,0.317,19,0.008,26,0.112,27,1.199,36,1.092,40,2.564,45,2.807,50,0.655,52,0.595,59,1.087,60,0.731,61,1.254,63,1.011,73,0.47,78,0.088,85,0.868,87,1.077,96,1.088,99,0.688,101,0.97,109,1.201,114,0.932,115,0.686,118,1.199,140,0.811,143,0.992,152,1.904,154,1.282,159,0.003,160,0.004,161,0.003,163,1.549,168,1.031,170,1.208,172,1.452,181,0.67,190,3.201,191,2.114,192,0.647,195,0.956,197,1.359,198,0.79,200,0.833,204,0.484,208,1.375,217,3.508,224,1.013,234,1.1,247,0.608,259,0.452,263,1.199,266,0.721,275,1.123,280,0.58,281,1.288,322,1.985,324,1.798,338,1.543,358,0.809,364,0.674,373,2.685,374,1.148,377,1.375,389,1.519,390,1.199,435,2.052,441,0.932,461,1.666,463,1.049,466,2.685,478,0.349,557,1.444,560,1.199,599,1.123,605,0.746,615,1.409,623,1.282,650,1.148,651,1.336,652,1.077,653,1.444,656,1.173,658,1.409,659,1.686,660,1.61,666,2.076,698,1.173,699,1.283,700,3.138,701,1.647,702,1.199,703,1.647,704,1.647,705,1.282,706,1.559,707,1.647,708,1.409,709,1.647,710,1.032,711,1.647,712,1.343,713,2.187,714,1.409,715,3.138,716,2.661,717,3.637,718,1.409,719,1.637,720,1.312,721,1.409,722,1.647,723,1.444,724,1.647,725,1.559,726,1.409,727,2.269,728,1.647,729,1.343,730,3.138,731,1.375,732,2.564,733,1.375,734,2.308,735,1.375,736,2.41,737,1.343,738,1.481,739,1.647,740,2.78,741,1.647,742,1.519,743,1.148,744,1.173,745,1.077,746,1.717,747,1.647,748,1.409,749,1.647,750,1.444,751,1.864,752,1.647,753,1.343,754,1.559,755,1.647,760,2.518,776,1.226,782,2.052,807,1.123,813,1.123,839,2.058,855,1.519,869,1.409,885,3.889,899,1.011,910,1.199,939,2.41,983,1.254,995,2.33,1035,2.656,1038,1.375,1039,2.058,1045,1.825,1046,2.381,1049,1.254,1164,1.744,1188,1.343,1204,2.44,1212,2.33,1220,2.459,1243,1.602,1256,1.282,1259,1.444,1264,1.054,1273,2.22,1277,3.268,1279,2.65,1341,1.519,1357,1.856,1358,1.282,1367,2.224,1368,1.602,1381,2.062,1425,3.228,1503,1.602,1550,1.409,1642,3.126,1729,2.773,1730,2.7,1745,1.856,1772,2.632,1882,2.139,2024,3.696,2029,2.807,2031,1.744,2147,1.798,2231,4.137,2236,4.439,2239,3.41,2240,3.859,2241,4.062,2242,3.437,2243,3.915,2244,4.062,2245,4.916,2246,2.33,2247,3.536,2249,2.906,2251,2.229,2252,3.41,2254,3.41,2257,2.33,2259,2.229,2261,2.33,2263,1.985,2264,3.321,2266,2.058,2267,2.33,2270,3.437,2272,2.229,2273,2.139,2274,2.33,2275,3.41,2276,2.139,2278,1.856,2318,1.798,2319,2.807,2325,3.013,2327,2.741,2337,3.579,2338,3.215,2339,2.741,2340,2.741,2341,2.741,2342,2.741,2343,2.741,2344,2.741,2345,2.741,2346,2.741,2347,2.741,2351,2.741,2352,2.741,2353,2.741,2354,2.741,2357,2.632,2358,2.058,2359,1.985,2366,2.058,2394,5.566,2395,5.566,2396,4.746,2397,5.566,2398,5.566,2399,5.566,2400,5.598,2401,3.627,2402,4.706,2403,5.309,2404,3.627,2405,3.627,2406,3.627,2407,3.627,2408,5.231,2409,3.627,2410,5.97,2411,3.215,2412,3.627,2413,3.655,2414,3.215,2415,4.309,2416,4.706,2417,3.215,2418,5.566,2419,3.627,2420,4.706,2421,3.627,2422,3.627,2423,3.627,2424,3.627,2425,3.627,2426,3.627,2427,3.627,2428,2.229,2429,2.229,2430,2.944,2431,2.944,2432,3.215,2433,4.012,2434,5.566,2435,4.746,2436,4.012,2437,4.012,2438,3.215,2439,5.566,2440,3.215,2441,4.706,2442,3.215,2443,3.215,2444,3.215,2445,2.944,2446,3.215,2447,3.215,2448,2.944,2449,3.215,2450,3.215,2451,2.445,2452,4.706,2453,4.706,2454,3.215,2455,3.215,2456,3.215,2457,3.215,2458,3.215,2459,2.944,2460,4.309,2461,4.706,2462,3.627,2463,2.944]],["title/interfaces/DatagridNumericFilterConfig.html",[0,0.175,2408,3.234]],["body/interfaces/DatagridNumericFilterConfig.html",[0,0.205,2,1.163,3,0.086,4,0.068,5,0.058,8,0.326,9,2.289,12,0.195,13,0.608,14,0.685,18,0.293,19,0.008,26,0.132,27,1.76,36,1.424,40,2.827,50,0.854,52,0.874,59,1.005,73,0.326,78,0.129,85,1.063,87,2.055,96,0.838,101,1.424,109,1.278,140,0.844,143,0.687,152,2.099,154,1.882,159,0.004,160,0.006,161,0.004,168,1.263,170,1.211,172,1.235,200,0.813,204,0.485,259,0.502,266,0.884,275,1.649,280,0.618,281,1.366,364,0.989,373,2.69,389,2.23,435,2.055,461,0.949,478,0.513,623,1.882,659,0.969,660,1.614,713,1.515,716,2.505,717,3.425,719,1.64,727,1.484,734,2.363,740,2.784,760,1.614,855,2.23,869,2.068,885,4.069,910,1.76,939,2.417,995,2.099,1035,2.66,1045,2.012,1046,2.626,1220,1.649,1259,2.119,1264,1.547,1277,2.505,1279,2.616,1357,2.724,1358,1.882,1381,2.068,1425,2.486,1642,3.376,1729,3.731,1730,3.308,2024,3.493,2029,2.815,2147,2.639,2231,2.417,2241,2.724,2243,2.56,2244,2.724,2247,3.543,2249,2.913,2264,2.815,2270,2.913,2318,2.639,2319,3.661,2325,3.021,2337,3.588,2357,3.433,2358,3.021,2359,2.913,2366,3.021,2394,4.719,2395,4.719,2396,4.023,2397,4.719,2398,4.719,2399,4.719,2400,6.026,2408,5.795,2410,6.246,2413,3.661,2416,4.719,2418,4.719,2420,4.719,2428,3.271,2429,3.271,2430,4.321,2431,5.62,2432,4.719,2433,5.233,2434,6.821,2435,5.816,2436,5.233,2437,5.233,2438,4.719,2439,6.821,2440,4.719,2441,6.137,2442,4.719,2443,4.719,2444,4.719,2445,4.321,2446,4.719,2447,4.719,2448,4.321,2449,4.719,2450,4.719,2451,3.588,2452,6.137,2453,6.137,2454,4.719,2455,4.719,2456,4.719,2457,4.719,2458,4.719,2459,4.321]],["title/components/DatagridSelectFilterComponent.html",[204,0.319,718,1.767]],["body/components/DatagridSelectFilterComponent.html",[0,0.148,3,0.062,4,0.049,5,0.042,8,0.235,9,1.827,12,0.14,13,0.412,14,0.596,18,0.306,19,0.008,20,1.504,26,0.105,30,1.479,34,1.712,35,1.606,36,1.137,45,2.923,50,0.875,52,0.629,59,1.019,60,0.773,61,1.325,63,1.069,65,2.441,66,0.945,73,0.523,78,0.093,81,1.509,85,0.895,96,1.233,99,1.048,109,0.956,114,0.985,115,0.971,118,2.143,140,0.769,143,1.012,152,2.591,159,0.003,160,0.005,161,0.003,163,1.598,168,1.064,170,1.257,172,1.156,181,0.698,190,3.242,192,0.684,195,0.94,197,1.214,198,0.769,200,0.882,204,0.497,208,1.454,217,3.542,224,1.004,233,1.309,234,1.162,243,1.565,247,0.643,259,0.446,263,1.267,266,0.635,275,1.187,280,0.547,281,1.26,322,2.098,324,1.901,338,1.606,358,0.855,364,0.712,373,2.518,374,1.213,377,1.454,389,1.606,390,1.267,435,2.232,441,0.985,461,1.674,463,1.092,466,2.756,478,0.369,557,1.526,560,1.267,599,1.187,605,0.789,615,1.489,623,1.356,646,1.648,650,1.213,651,1.391,652,1.138,653,1.526,656,1.24,658,1.489,659,1.691,660,1.676,666,2.143,698,1.24,699,1.336,700,3.221,701,1.741,702,1.267,703,1.741,704,1.741,705,1.356,706,1.648,707,1.741,708,1.489,709,1.741,710,1.845,711,1.741,712,1.42,713,2.23,714,1.489,715,3.221,716,1.387,717,1.489,718,3.137,719,2.194,720,1.387,721,1.489,722,1.741,723,1.526,724,1.741,725,1.648,726,1.489,727,2.097,728,1.741,729,1.42,730,3.221,731,1.454,732,2.646,733,1.454,734,1.363,735,1.454,736,2.509,737,1.42,738,1.565,739,1.741,740,1.387,741,1.741,742,1.606,743,1.213,744,1.24,745,1.138,746,1.787,747,1.741,748,1.489,749,1.741,750,1.526,751,1.138,752,1.741,753,1.42,754,1.648,755,1.741,760,2.553,774,1.187,776,1.296,782,2.106,807,1.187,813,1.187,855,2.315,869,1.489,899,1.069,910,1.267,983,1.325,984,1.827,986,2,988,2.147,989,1.954,990,2.74,991,2.096,995,2.448,1035,2.24,1038,1.454,1039,2.176,1045,1.884,1046,2.458,1164,1.844,1188,1.42,1204,2.518,1220,2.501,1221,4.177,1243,1.693,1256,1.356,1264,1.114,1273,2.292,1277,3.292,1279,2.83,1307,2.201,1309,2.923,1341,1.606,1346,2.994,1351,2.257,1358,1.356,1367,2.715,1368,1.693,1503,1.693,1550,1.489,1729,2.441,1730,3.233,1745,1.962,1747,3.137,1764,3.55,1772,2.74,1882,2.261,2024,3.753,2031,1.844,2147,2.74,2214,2.584,2231,3.823,2236,4.556,2239,3.55,2240,3.983,2241,4.132,2242,4.419,2243,3.975,2244,4.132,2245,3.931,2246,2.462,2247,3.63,2249,3.025,2251,2.356,2252,3.55,2254,3.55,2257,2.462,2259,2.356,2261,2.462,2263,2.098,2264,2.027,2266,2.176,2267,2.462,2270,2.098,2272,2.356,2273,2.261,2274,2.462,2275,3.55,2276,3.823,2278,1.962,2318,1.901,2319,3.751,2325,3.137,2327,2.898,2339,2.898,2340,2.898,2341,2.898,2342,2.898,2343,2.898,2344,2.898,2345,2.898,2346,2.898,2347,2.898,2351,2.898,2352,2.898,2353,2.898,2354,2.898,2355,3.617,2356,2.176,2357,2.74,2358,2.176,2359,2.098,2366,2.176,2391,4.486,2392,5.758,2393,3.55,2402,3.398,2411,3.398,2428,4.359,2451,2.584,2464,5.362,2465,4.177,2466,4.899,2467,5.045,2468,4.899,2469,5.745,2470,4.61,2471,3.834,2472,3.398,2473,3.834,2474,3.834,2475,3.834,2476,3.834,2477,4.899,2478,2.898,2479,3.398,2480,4.899,2481,6.288,2482,5.745,2483,2.898,2484,3.398,2485,3.112,2486,3.398,2487,3.112,2488,2.898,2489,3.398,2490,5.745,2491,2.898,2492,3.112,2493,3.112,2494,5.527]],["title/interfaces/DatagridSelectFilterConfig.html",[0,0.175,2478,3.437]],["body/interfaces/DatagridSelectFilterConfig.html",[0,0.211,2,1.194,3,0.089,4,0.069,5,0.06,8,0.335,12,0.2,13,0.525,14,0.592,18,0.285,19,0.008,20,1.977,26,0.126,30,1.462,34,1.703,35,1.589,36,1.449,50,1.015,52,0.897,59,0.869,65,2.414,66,1.737,73,0.477,78,0.132,81,1.493,85,1.077,96,1.34,99,1.037,109,1.039,115,1.006,118,1.807,140,0.712,143,0.706,152,2.837,159,0.005,160,0.006,161,0.005,168,1.279,170,1.244,172,0.975,200,0.887,204,0.493,233,1.295,243,2.876,259,0.496,266,0.809,275,1.693,280,0.591,281,1.306,364,1.016,389,2.29,435,1.623,461,0.975,478,0.527,605,1.124,623,1.933,646,2.35,659,0.995,660,1.657,710,1.556,713,1.556,718,3.198,719,2.196,760,1.657,774,1.693,855,2.95,869,2.736,910,1.807,984,1.807,986,1.978,988,2.124,989,1.933,990,2.71,991,2.073,995,2.363,1035,2.434,1045,2.047,1046,2.671,1220,1.693,1221,4.131,1264,1.589,1277,2.548,1279,2.856,1307,2.176,1309,2.89,1346,3.103,1351,2.232,1358,1.933,1367,2.95,1729,3.442,1730,3.539,1747,3.102,1764,5.005,2024,3.538,2147,3.492,2214,4.748,2231,2.482,2241,2.797,2242,2.992,2243,2.629,2244,2.797,2247,3.604,2249,2.992,2276,3.224,2318,2.71,2319,4.121,2325,3.102,2355,4.195,2356,3.102,2357,3.492,2358,3.102,2359,2.992,2366,3.102,2428,4.328,2451,3.685,2464,5.324,2465,4.131,2466,4.845,2467,5.009,2468,4.845,2469,4.845,2470,3.888,2477,4.845,2478,5.324,2479,6.244,2480,6.244,2481,7.864,2482,6.908,2483,4.131,2484,4.845,2485,4.437,2486,4.845,2487,4.437,2488,4.131,2489,4.845,2490,6.908,2491,4.131,2492,4.437,2493,4.437]],["title/components/DatagridStringFilterComponent.html",[204,0.319,720,1.645]],["body/components/DatagridStringFilterComponent.html",[0,0.162,3,0.068,4,0.053,5,0.046,9,1.951,12,0.154,13,0.44,14,0.654,18,0.306,19,0.008,26,0.12,27,1.39,45,3.121,50,0.519,52,0.969,59,1.044,60,0.848,61,1.453,63,1.172,66,1.037,73,0.583,78,0.102,85,0.815,96,1.164,99,0.798,109,0.62,114,1.08,115,0.762,118,1.39,140,0.623,143,1.043,158,0.883,159,0.003,160,0.005,161,0.003,163,1.682,168,1.12,170,1.343,172,1.389,181,0.745,190,3.307,192,0.75,195,0.947,197,1.333,198,0.796,200,0.86,204,0.518,208,1.595,217,3.594,224,1.018,234,1.275,247,0.705,259,0.443,263,1.39,266,0.784,275,1.302,280,0.574,281,1.306,322,2.301,324,2.085,338,1.716,346,1.717,358,0.938,364,1.268,373,2.65,374,1.331,377,1.595,389,1.761,390,1.39,435,2.025,441,1.08,461,1.687,463,1.166,466,2.873,478,0.405,557,1.674,560,1.39,599,1.302,605,0.865,615,1.634,623,1.487,650,1.331,651,1.486,652,1.248,653,1.674,656,1.36,658,1.634,659,1.706,660,1.79,666,2.255,680,1.275,698,1.36,699,1.427,700,3.358,701,1.909,702,1.39,703,1.909,704,1.909,705,1.487,706,1.808,707,1.909,708,1.634,709,1.909,710,1.197,711,1.909,712,1.557,713,2.299,714,1.634,715,3.358,716,1.521,717,1.634,718,1.634,719,0.996,720,2.818,721,1.634,722,1.909,723,1.674,724,1.909,725,1.808,726,1.634,727,2.172,728,1.909,729,1.557,730,3.358,731,1.595,732,2.785,733,1.595,734,1.456,735,1.595,736,2.68,737,1.557,738,1.717,739,1.909,740,1.521,741,1.909,742,1.761,743,1.331,744,1.36,745,1.248,746,1.909,747,1.909,748,1.634,749,1.909,750,1.674,751,1.248,752,1.909,753,1.557,754,1.808,755,1.909,760,2.449,776,1.421,782,2.195,793,2.839,807,1.302,813,1.302,837,4.892,855,2.472,899,1.172,910,1.39,983,1.453,995,2.362,1035,2.358,1038,1.595,1039,2.386,1045,1.983,1162,1.275,1164,2.023,1188,1.557,1204,2.65,1220,2.569,1243,1.857,1256,2.412,1264,1.222,1273,2.412,1277,3.331,1279,2.7,1313,2.085,1341,1.761,1358,1.487,1367,3.098,1368,1.857,1503,1.857,1550,1.634,1729,2.607,1730,2.933,1745,2.152,1772,2.927,1882,2.48,2024,3.844,2031,2.023,2147,2.085,2231,3.844,2236,4.75,2239,3.791,2240,4.191,2241,4.244,2242,3.733,2243,4.072,2244,4.244,2245,4.198,2246,2.701,2247,3.784,2249,3.231,2251,2.584,2252,3.791,2254,3.791,2257,2.701,2259,2.584,2261,2.701,2263,2.301,2264,2.224,2266,2.386,2267,2.701,2270,2.301,2272,2.584,2273,2.48,2274,2.701,2275,3.791,2276,4.023,2278,2.152,2318,2.085,2319,3.121,2325,3.35,2327,3.178,2339,3.178,2340,3.178,2341,3.178,2342,3.178,2343,3.178,2344,3.178,2345,3.178,2346,3.178,2347,3.178,2351,3.178,2352,3.178,2353,3.178,2354,3.178,2357,2.927,2358,2.386,2359,2.301,2366,2.386,2414,3.728,2417,3.728,2428,2.584,2451,2.835,2472,3.728,2488,3.178,2491,3.178,2495,5.903,2496,4.205,2497,5.233,2498,6.724,2499,6.556,2500,4.205,2501,5.233,2502,6.046,2503,4.205,2504,4.205,2505,3.791,2506,3.178,2507,5.233,2508,4.791,2509,3.728,2510,3.178,2511,5.233,2512,5.233,2513,3.728,2514,5.233,2515,3.728,2516,5.233,2517,3.728,2518,2.991,2519,3.728,2520,5.233,2521,3.728,2522,3.413]],["title/interfaces/DatagridStringFilterConfig.html",[0,0.175,2510,3.437]],["body/interfaces/DatagridStringFilterConfig.html",[0,0.229,2,1.297,3,0.096,4,0.075,5,0.065,8,0.363,12,0.217,13,0.554,14,0.624,18,0.257,19,0.008,26,0.138,27,1.962,50,0.732,52,1.218,59,0.915,66,1.464,73,0.578,78,0.143,85,1.025,96,0.934,143,0.767,158,1.246,159,0.005,160,0.006,161,0.005,168,1.329,170,1.35,172,1.059,200,0.848,204,0.52,259,0.497,266,0.93,275,1.839,280,0.613,281,1.357,346,2.424,364,1.379,389,2.487,461,1.059,478,0.572,605,1.221,623,2.099,659,1.081,660,1.8,680,1.8,713,1.69,720,2.685,793,3.57,837,5.151,855,3.109,910,1.962,995,2.25,1035,2.565,1045,2.157,1162,1.8,1220,1.839,1256,2.863,1264,1.725,1277,2.685,1279,2.508,1313,2.943,1358,2.099,1367,3.392,1729,3.577,1730,3.482,2024,3.677,2147,2.943,2231,2.695,2241,3.038,2243,2.855,2244,3.038,2247,3.798,2249,3.249,2276,3.501,2318,2.943,2319,3.925,2325,3.369,2357,3.68,2358,3.369,2359,3.249,2366,3.369,2428,3.648,2451,4.002,2488,4.487,2491,4.487,2497,5.262,2498,7.164,2499,6.579,2501,5.262,2502,6.579,2505,4.767,2506,4.487,2507,6.579,2508,6.024,2509,6.579,2510,5.61,2511,6.579,2512,6.579,2513,5.262,2514,6.579,2515,5.262,2516,6.579,2517,5.262,2518,4.222,2519,5.262,2520,6.579,2521,5.262,2522,4.818]],["title/interfaces/DetailPane.html",[0,0.175,1356,2.405]],["body/interfaces/DetailPane.html",[0,0.277,1,2.17,2,0.452,3,0.034,4,0.026,5,0.023,8,0.127,9,1.862,10,3.255,12,0.285,13,0.379,14,0.174,15,3.438,18,0.249,19,0.008,20,1.18,22,0.715,25,1.079,26,0.126,27,1.681,28,1.058,30,1.798,34,1.675,36,1.682,39,0.995,40,2.478,42,0.913,47,0.784,50,0.975,52,0.835,53,1.751,54,1.058,55,3.178,56,1.809,59,0.908,60,1.223,61,2.221,62,0.766,63,1.692,64,2.078,66,0.844,67,0.913,69,2.919,71,0.844,73,0.477,74,2.044,77,1.329,78,0.106,80,1.025,81,1.195,83,1.267,84,1.947,85,0.605,86,2.793,87,1.509,88,0.803,90,3.779,91,0.699,93,3.491,96,1.096,99,0.965,101,2.013,102,0.844,108,1.783,109,1.275,111,1.992,114,0.531,115,0.972,118,1.862,120,1.094,127,1.742,129,1.471,133,1.016,136,0.823,137,2.239,138,1.083,140,0.818,141,1.397,143,0.83,148,1.904,149,1.094,152,1.948,154,1.992,155,0.966,158,1.507,159,0.003,160,0.003,161,0.002,168,0.339,170,0.47,172,1.541,173,1.132,181,0.552,192,0.369,194,1.787,195,0.21,198,0.4,200,0.411,202,0.995,203,0.889,204,0.546,210,2.17,224,0.491,233,0.81,234,1.037,243,0.844,247,0.347,250,1.132,259,0.436,260,0.641,266,0.998,269,1.132,270,1.873,272,0.844,280,0.607,281,1.077,286,2.86,321,0.766,327,0.889,336,0.966,338,1.272,344,2.548,358,0.461,361,1.025,364,1.369,369,1.646,374,0.654,377,2.136,378,2.375,390,1.131,392,1.272,438,1.238,459,1.037,461,0.369,463,0.676,478,0.199,509,1.512,513,0.913,522,1.036,524,1.862,539,1.751,545,0.803,547,1.329,548,0.715,554,1.355,562,0.823,570,0.766,583,0.954,598,1.183,605,1.248,606,0.577,619,1.547,642,2.417,650,0.654,651,0.861,652,1.299,656,0.669,659,0.797,660,0.627,666,1.131,670,1.696,680,1.708,681,2.446,697,1.094,699,1.058,702,1.131,710,0.589,713,0.589,719,0.49,743,0.654,744,0.669,745,1.016,751,0.614,774,0.641,776,1.156,782,1.907,784,1.833,787,0.803,808,1.299,813,1.06,823,1.025,838,0.748,865,1.025,869,0.803,891,0.995,899,0.577,982,1.933,983,1.512,984,2.434,986,0.748,987,3.106,988,2.924,989,2.464,995,1.327,998,0.966,999,0.889,1001,1.787,1002,1.094,1003,1.094,1020,2.246,1030,0.731,1032,3.138,1034,0.913,1035,2.919,1037,2.859,1038,1.298,1042,2.044,1044,1.433,1045,0.994,1046,1.298,1049,2.322,1067,1.362,1070,0.866,1073,0.913,1083,0.995,1089,1.84,1128,0.995,1129,1.397,1137,0.966,1139,3.455,1188,0.766,1204,0.803,1220,0.641,1232,0.866,1237,1.471,1240,2.689,1241,1.058,1242,1.942,1243,1.511,1244,1.942,1245,2.542,1246,1.751,1247,2.246,1248,1.174,1249,1.094,1250,1.174,1251,2.044,1252,1.751,1253,2.239,1254,2.558,1255,1.174,1256,2.271,1257,1.942,1258,1.942,1259,0.823,1260,1.174,1261,1.942,1262,2.484,1263,1.942,1264,0.601,1265,1.942,1266,1.174,1267,1.433,1268,0.889,1269,1.058,1270,1.132,1271,1.058,1272,1.058,1273,0.731,1274,0.889,1275,0.939,1276,0.966,1277,1.238,1278,1.025,1279,0.641,1280,2.36,1281,2.3,1282,2.17,1283,2.395,1284,3.47,1285,3.306,1286,2.979,1287,1.132,1288,2.314,1289,1.094,1290,1.058,1291,0.866,1292,1.025,1293,0.966,1294,3.152,1295,1.873,1296,2.239,1297,1.094,1298,1.132,1299,1.132,1300,2.689,1301,1.058,1302,1.397,1303,4.431,1304,2.025,1305,1.809,1306,1.132,1307,3.457,1308,2.395,1309,1.809,1310,3.106,1311,1.511,1312,1.174,1313,1.696,1314,1.174,1315,1.751,1316,1.174,1317,2.446,1318,2.602,1319,2.446,1320,1.809,1321,1.174,1322,1.174,1323,1.942,1324,1.132,1325,2.783,1326,1.174,1327,2.105,1328,1.809,1329,1.942,1330,1.174,1331,1.942,1332,1.942,1333,2.689,1334,2.484,1335,1.025,1336,0.995,1337,1.132,1338,1.174,1339,1.174,1340,0.913,1341,1.833,1342,3.197,1343,1.646,1344,3.894,1345,2.484,1346,0.823,1347,1.174,1348,1.174,1349,4.477,1350,1.094,1351,2.3,1352,3.444,1353,4.119,1354,1.094,1355,1.942,1356,2.689,1357,1.751,1358,1.21,1359,1.174,1360,1.174,1361,1.058,1362,2.793,1363,0.966,1364,1.174,1365,0.995,1366,2.314,1367,0.866,1368,0.913,1369,1.174,1370,2.044,1371,1.174,1372,1.094,1373,1.942,1374,1.751,1375,1.174,1376,1.174,1377,1.646,1378,1.058,1379,1.174,1380,1.174,1381,0.803,1382,1.174,1383,1.873,1384,2.484,1385,1.174,1386,1.174,1387,1.132,1388,1.809,1389,1.094,1390,1.809,1391,1.094,1392,2.484,1393,1.174,1394,1.025,1395,1.094,1396,1.174,1397,1.942,1398,1.174,1399,1.174,1400,1.174,1401,1.174,1402,1.174,1403,1.174,1404,1.873,1405,1.174,1406,2.484,1407,1.174,1408,1.174,1409,1.132,1410,2.886,1411,2.239,1412,1.174,1413,1.132,1414,1.094,1415,1.132,1416,1.174,1417,1.174,1418,1.132,1419,1.942,1420,1.174,1421,1.174,1422,1.942,1423,1.174,1424,1.174,1425,0.966,1426,1.174,1427,1.174,1428,1.174,1429,1.174,1430,3.813,1431,1.942,1432,1.174,1433,1.174,1434,1.174,1435,1.942,1436,1.174,1437,1.942,1438,1.942,1439,1.174,1440,1.174,1441,1.174,1442,1.942,1443,1.174,1444,2.886,1445,1.942,1446,1.942,1447,1.174,1448,1.174,1449,1.025,1450,1.174,1451,1.174,1452,1.174,1453,1.174,1454,1.174,1455,1.174,1456,1.942,1457,1.942,1458,1.942,1459,1.942,1460,2.484,1461,1.174,1462,1.174,1463,1.174,1464,1.174,1465,1.942,1466,1.942,1467,2.886,1468,1.174,1469,1.174,1470,1.174,1471,1.174,1472,1.174,1473,2.558,1474,3.444,1475,3.197,1476,1.942,1477,1.174,1478,1.942,1479,2.484,1480,1.174,1481,2.484,1482,1.174,1483,2.886,1484,1.942,1485,1.174,1486,1.174,1487,1.174,1488,1.942,1489,1.132,1490,1.174,1491,1.025,1492,1.174,1493,1.174,1494,1.174,1495,1.174,1496,1.942,1497,2.375,1498,1.174,1499,1.174,1500,1.174,1501,1.174,1502,1.174,1503,1.511,1504,1.174,1505,1.174,1506,1.174,1507,2.484,1508,1.174,1509,1.174,1510,1.132,1511,1.751,1512,1.174,1513,1.174,1514,1.174,1515,1.174,1516,1.174,1517,1.174,1518,1.174,1519,1.471,1520,1.174,1521,1.174,1522,1.174,1523,1.174,1524,1.094,1525,1.174,1526,1.174,1527,1.942,1528,1.174,1529,1.174,1530,1.174,1531,1.174,1532,1.174,1533,0.995,1534,1.174,1535,1.025,1536,1.174,1537,1.174,1538,0.995,1539,1.174,1540,1.174,1541,1.174,1542,1.174,1543,1.174,1544,1.174,1545,1.174,1546,1.174,1547,1.174,1548,1.174,1549,1.174,1550,0.803,1551,1.174,1552,1.174,1553,1.873,1554,1.174,1555,1.174,1556,1.174,1557,1.174,1558,1.174,1559,1.174,1560,1.174,1561,1.174,1562,1.942,1563,1.942,1564,1.942,1565,1.174,1566,2.314,1567,2.886,1568,1.942,1569,1.174,1570,1.174,1571,1.174,1572,1.174,1573,1.174,1574,1.174,1575,1.094,1576,1.174,1577,1.174,1578,1.174,1579,1.174,1580,0.699,1581,1.174,1582,1.174,1583,1.942,1584,1.174,1585,2.484,1586,1.174,1587,1.174,1588,1.174,1589,1.942,1590,1.174,1591,1.174,1592,1.942,1593,1.942,1594,1.174,1595,1.174,1596,1.094,1597,1.132,1598,1.174,1599,1.174,1600,1.174,1601,1.942,1602,1.942,1603,1.174,1604,1.174,1605,1.942,1606,1.174,1607,1.174,1608,1.174,1609,1.174,1610,1.174,1611,1.174,1612,1.174,1613,1.132,1614,1.174,1615,1.174,1616,1.174,1617,1.174,1618,1.174,1619,1.942,1620,1.174,1621,1.174,1622,1.174,1623,1.174,1624,1.174,1625,1.174,1626,1.174,1627,1.174,1628,1.174,1629,1.942,1630,2.886,1631,2.484,1632,1.174,1633,1.174,1634,1.942,1635,1.174,1636,1.174,1637,1.174,1638,1.174,1639,1.174,1640,1.174,1641,1.174,1642,1.267,1643,1.942,1644,1.174,1645,1.174,1646,1.174,1647,1.132,1648,1.174,1649,1.174,1650,1.174,1651,1.174,1652,1.174,1653,1.174,1654,1.132,1655,1.174,1656,1.174,1657,1.174,1658,1.174,1659,1.174,1660,1.174,1661,2.886,1662,1.174,1663,1.174,1664,1.174,1665,1.174,1666,1.174,1667,1.174,1668,1.132,1669,1.174,1670,1.174,1671,1.942,1672,1.174,1673,1.942,1674,1.174,1675,1.174,1676,1.942,1677,1.174,1678,1.174,1679,1.174,1680,1.174,1681,1.174,1682,2.484,1683,1.174,1684,1.174,1685,1.174,1686,1.174,1687,1.174,1688,0.844,1689,1.174,1690,1.174,1691,1.174,1692,1.174,1693,1.174,1694,1.174,1695,1.174,1696,1.174,1697,1.025,1698,1.132,1699,1.174,1700,1.174,1701,0.995,1702,1.174,1703,1.174,1704,1.942,1705,3.197,1706,0.939,1707,1.174,1708,1.174,1709,1.174,1710,1.174,1711,1.174,1712,1.174,1713,1.942,1714,1.174,1715,1.174,1716,1.751,1717,1.174,1718,1.174,1719,1.094,1720,1.174,1721,1.174,1722,1.094,1723,1.174,1724,1.174,1725,1.174]],["title/interfaces/DetailPaneConfig.html",[0,0.175,1354,2.405]],["body/interfaces/DetailPaneConfig.html",[0,0.277,1,2.175,2,0.454,3,0.034,4,0.026,5,0.023,8,0.127,9,1.866,10,3.259,12,0.285,13,0.38,14,0.174,15,3.443,18,0.242,19,0.008,20,1.183,22,0.717,25,1.082,26,0.126,27,1.685,28,1.062,30,1.8,34,1.677,36,1.684,39,0.998,40,2.482,42,0.917,47,0.787,50,0.976,52,0.563,53,1.756,54,1.062,55,3.236,56,1.815,59,0.909,60,1.226,61,2.224,62,0.769,63,1.695,64,2.081,66,1.082,67,0.917,69,2.925,71,0.846,73,0.477,74,1.603,77,1.333,78,0.106,80,1.029,81,0.937,83,1.271,84,1.951,85,0.606,86,2.799,87,1.513,88,0.806,90,3.885,91,0.702,93,3.494,96,1.098,99,0.967,101,2.016,102,0.848,108,1.786,109,1.276,111,1.996,114,0.533,115,0.952,118,1.866,120,1.098,127,1.747,129,1.476,133,1.019,136,0.827,137,2.245,138,1.086,140,0.819,141,1.401,143,0.831,148,1.908,149,1.098,152,1.951,154,1.996,155,0.97,158,1.509,159,0.003,160,0.003,161,0.002,168,0.341,170,0.472,172,1.542,173,1.136,181,0.554,192,0.37,194,1.791,195,0.211,198,0.401,200,0.412,202,0.998,203,0.893,204,0.528,210,2.175,224,0.492,233,0.813,234,1.041,243,0.848,247,0.348,250,1.136,259,0.437,260,0.643,266,0.998,269,1.136,270,1.878,272,0.846,280,0.608,281,1.079,286,2.863,321,0.769,327,0.893,336,0.97,338,1.275,344,2.552,358,0.463,361,1.138,364,1.37,369,1.651,374,0.657,377,2.141,378,2.381,390,1.135,392,1.275,438,1.242,459,1.041,461,0.37,463,0.678,478,0.2,509,1.517,513,0.917,522,1.039,524,1.866,539,1.756,545,0.806,547,1.333,548,0.717,554,1.359,562,0.827,570,0.769,583,0.957,598,1.186,605,1.251,606,0.579,619,1.551,642,2.421,650,0.657,651,0.864,652,1.302,656,0.671,659,0.799,660,0.629,666,1.135,670,1.702,680,1.711,681,2.452,697,1.098,699,1.06,702,1.135,710,0.591,713,0.591,719,0.492,743,0.657,744,0.671,745,1.019,751,0.616,774,0.643,776,1.16,782,1.91,784,1.838,787,0.806,808,1.302,813,1.063,823,1.029,838,0.751,865,1.029,869,0.806,891,0.998,899,0.579,982,1.938,983,1.517,984,2.437,986,0.751,987,3.111,988,2.927,989,2.467,995,1.33,998,0.97,999,0.893,1001,1.791,1002,1.098,1003,1.098,1020,2.251,1030,0.734,1032,3.143,1034,0.917,1035,2.901,1037,2.863,1038,1.302,1042,2.049,1044,1.438,1045,0.998,1046,1.302,1049,2.224,1067,1.367,1070,0.869,1073,0.917,1083,0.998,1089,1.587,1128,0.998,1129,1.401,1137,0.97,1139,3.46,1188,0.769,1204,0.806,1220,0.643,1232,0.869,1237,1.476,1240,2.695,1241,1.062,1242,1.948,1243,1.516,1244,1.948,1245,2.547,1246,1.756,1247,2.251,1248,1.178,1249,1.098,1250,1.178,1251,2.049,1252,1.756,1253,2.245,1254,2.563,1255,1.178,1256,2.275,1257,1.948,1258,1.948,1259,0.827,1260,1.178,1261,1.948,1262,2.49,1263,1.948,1264,0.603,1265,1.948,1266,1.178,1267,1.438,1268,0.893,1269,1.062,1270,1.136,1271,1.062,1272,1.062,1273,0.734,1274,0.893,1275,0.942,1276,0.97,1277,1.242,1278,1.029,1279,0.643,1280,1.838,1281,2.305,1282,2.175,1283,2.401,1284,3.473,1285,3.308,1286,2.985,1287,1.136,1288,2.32,1289,1.098,1290,1.062,1291,0.869,1292,1.029,1293,0.97,1294,2.819,1295,1.878,1296,2.245,1297,1.098,1298,1.136,1299,1.136,1300,2.695,1301,1.062,1302,1.401,1303,4.435,1304,2.03,1305,1.815,1306,1.136,1307,3.459,1308,2.401,1309,1.815,1310,3.111,1311,1.516,1312,1.178,1313,1.702,1314,1.178,1315,1.756,1316,1.178,1317,2.452,1318,2.608,1319,2.452,1320,1.815,1321,1.178,1322,1.178,1323,1.948,1324,1.136,1325,2.79,1326,1.178,1327,2.11,1328,1.815,1329,1.948,1330,1.178,1331,1.948,1332,1.948,1333,2.695,1334,2.49,1335,1.029,1336,0.998,1337,1.136,1338,1.178,1339,1.178,1340,0.917,1341,1.838,1342,3.204,1343,1.651,1344,3.899,1345,2.49,1346,0.827,1347,1.178,1348,1.178,1349,4.435,1350,1.098,1351,2.482,1352,3.451,1353,4.036,1354,1.815,1355,1.178,1356,2.32,1357,1.062,1358,0.734,1359,1.178,1360,1.178,1361,1.062,1362,2.799,1363,0.97,1364,1.178,1365,0.998,1366,2.32,1367,0.869,1368,0.917,1369,1.178,1370,2.049,1371,1.178,1372,1.098,1373,1.948,1374,1.756,1375,1.178,1376,1.178,1377,1.651,1378,1.062,1379,1.178,1380,1.178,1381,0.806,1382,1.178,1383,1.878,1384,2.49,1385,1.178,1386,1.178,1387,1.136,1388,1.815,1389,1.098,1390,1.815,1391,1.098,1392,2.49,1393,1.178,1394,1.029,1395,1.098,1396,1.178,1397,1.948,1398,1.178,1399,1.178,1400,1.178,1401,1.178,1402,1.178,1403,1.178,1404,1.878,1405,1.178,1406,2.49,1407,1.178,1408,1.178,1409,1.136,1410,2.893,1411,2.245,1412,1.178,1413,1.136,1414,1.098,1415,1.136,1416,1.178,1417,1.178,1418,1.136,1419,1.948,1420,1.178,1421,1.178,1422,1.948,1423,1.178,1424,1.178,1425,0.97,1426,1.178,1427,1.178,1428,1.178,1429,1.178,1430,3.819,1431,1.948,1432,1.178,1433,1.178,1434,1.178,1435,1.948,1436,1.178,1437,1.948,1438,1.948,1439,1.178,1440,1.178,1441,1.178,1442,1.948,1443,1.178,1444,2.893,1445,1.948,1446,1.948,1447,1.178,1448,1.178,1449,1.029,1450,1.178,1451,1.178,1452,1.178,1453,1.178,1454,1.178,1455,1.178,1456,1.948,1457,1.948,1458,1.948,1459,1.948,1460,2.49,1461,1.178,1462,1.178,1463,1.178,1464,1.178,1465,1.948,1466,1.948,1467,2.893,1468,1.178,1469,1.178,1470,1.178,1471,1.178,1472,1.178,1473,2.563,1474,3.451,1475,3.204,1476,1.948,1477,1.178,1478,1.948,1479,2.49,1480,1.178,1481,2.49,1482,1.178,1483,2.893,1484,1.948,1485,1.178,1486,1.178,1487,1.178,1488,1.948,1489,1.136,1490,1.178,1491,1.029,1492,1.178,1493,1.178,1494,1.178,1495,1.178,1496,1.948,1497,2.381,1498,1.178,1499,1.178,1500,1.178,1501,1.178,1502,1.178,1503,1.516,1504,1.178,1505,1.178,1506,1.178,1507,2.49,1508,1.178,1509,1.178,1510,1.136,1511,1.756,1512,1.178,1513,1.178,1514,1.178,1515,1.178,1516,1.178,1517,1.178,1518,1.178,1519,1.476,1520,1.178,1521,1.178,1522,1.178,1523,1.178,1524,1.098,1525,1.178,1526,1.178,1527,1.948,1528,1.178,1529,1.178,1530,1.178,1531,1.178,1532,1.178,1533,0.998,1534,1.178,1535,1.029,1536,1.178,1537,1.178,1538,0.998,1539,1.178,1540,1.178,1541,1.178,1542,1.178,1543,1.178,1544,1.178,1545,1.178,1546,1.178,1547,1.178,1548,1.178,1549,1.178,1550,0.806,1551,1.178,1552,1.178,1553,1.878,1554,1.178,1555,1.178,1556,1.178,1557,1.178,1558,1.178,1559,1.178,1560,1.178,1561,1.178,1562,1.948,1563,1.948,1564,1.948,1565,1.178,1566,2.32,1567,2.893,1568,1.948,1569,1.178,1570,1.178,1571,1.178,1572,1.178,1573,1.178,1574,1.178,1575,1.098,1576,1.178,1577,1.178,1578,1.178,1579,1.178,1580,0.702,1581,1.178,1582,1.178,1583,1.948,1584,1.178,1585,2.49,1586,1.178,1587,1.178,1588,1.178,1589,1.948,1590,1.178,1591,1.178,1592,1.948,1593,1.948,1594,1.178,1595,1.178,1596,1.098,1597,1.136,1598,1.178,1599,1.178,1600,1.178,1601,1.948,1602,1.948,1603,1.178,1604,1.178,1605,1.948,1606,1.178,1607,1.178,1608,1.178,1609,1.178,1610,1.178,1611,1.178,1612,1.178,1613,1.136,1614,1.178,1615,1.178,1616,1.178,1617,1.178,1618,1.178,1619,1.948,1620,1.178,1621,1.178,1622,1.178,1623,1.178,1624,1.178,1625,1.178,1626,1.178,1627,1.178,1628,1.178,1629,1.948,1630,2.893,1631,2.49,1632,1.178,1633,1.178,1634,1.948,1635,1.178,1636,1.178,1637,1.178,1638,1.178,1639,1.178,1640,1.178,1641,1.178,1642,1.271,1643,1.948,1644,1.178,1645,1.178,1646,1.178,1647,1.136,1648,1.178,1649,1.178,1650,1.178,1651,1.178,1652,1.178,1653,1.178,1654,1.136,1655,1.178,1656,1.178,1657,1.178,1658,1.178,1659,1.178,1660,1.178,1661,2.893,1662,1.178,1663,1.178,1664,1.178,1665,1.178,1666,1.178,1667,1.178,1668,1.136,1669,1.178,1670,1.178,1671,1.948,1672,1.178,1673,1.948,1674,1.178,1675,1.178,1676,1.948,1677,1.178,1678,1.178,1679,1.178,1680,1.178,1681,1.178,1682,2.49,1683,1.178,1684,1.178,1685,1.178,1686,1.178,1687,1.178,1688,0.848,1689,1.178,1690,1.178,1691,1.178,1692,1.178,1693,1.178,1694,1.178,1695,1.178,1696,1.178,1697,1.029,1698,1.136,1699,1.178,1700,1.178,1701,0.998,1702,1.178,1703,1.178,1704,1.948,1705,3.204,1706,0.942,1707,1.178,1708,1.178,1709,1.178,1710,1.178,1711,1.178,1712,1.178,1713,1.948,1714,1.178,1715,1.178,1716,1.756,1717,1.178,1718,1.178,1719,1.098,1720,1.178,1721,1.178,1722,1.098,1723,1.178,1724,1.178,1725,1.178]],["title/interfaces/DetailRowConfig.html",[0,0.175,1350,2.405]],["body/interfaces/DetailRowConfig.html",[0,0.277,1,2.166,2,0.451,3,0.033,4,0.026,5,0.023,8,0.126,9,1.86,10,3.252,12,0.299,13,0.379,14,0.173,15,3.435,18,0.255,19,0.008,20,1.179,22,0.713,25,1.078,26,0.126,27,1.679,28,1.056,30,1.796,34,1.674,36,1.682,39,0.993,40,2.475,42,0.911,47,0.783,50,0.974,52,0.561,53,1.748,54,1.056,55,3.232,56,1.806,59,0.908,60,1.222,61,2.218,62,0.764,63,1.69,64,2.076,66,1.078,67,0.911,69,2.916,71,0.842,73,0.477,74,1.595,77,1.327,78,0.105,80,1.023,81,0.933,83,1.265,84,1.945,85,0.604,86,2.79,87,1.508,88,0.802,90,3.881,91,0.697,93,3.489,96,1.096,99,0.963,101,2.012,102,0.843,108,1.781,109,1.275,111,1.989,114,0.53,115,0.95,118,1.86,120,1.091,127,1.74,129,1.469,133,1.014,136,0.822,137,2.236,138,1.081,140,0.828,141,1.394,143,0.829,148,1.902,149,1.091,152,1.946,154,1.989,155,0.964,158,1.506,159,0.003,160,0.003,161,0.002,168,0.339,170,0.469,172,1.541,173,1.129,181,0.551,192,0.368,194,1.784,195,0.209,198,0.399,200,0.41,202,0.993,203,0.887,204,0.527,210,2.166,224,0.49,233,0.809,234,1.035,243,0.843,247,0.346,250,1.129,259,0.436,260,0.639,266,0.997,269,1.129,270,1.869,272,0.842,280,0.607,281,1.076,286,2.858,321,0.764,327,0.887,336,0.964,338,1.27,344,2.546,358,0.46,361,1.134,364,1.368,369,1.643,374,0.653,377,2.134,378,2.372,390,1.129,392,1.27,438,1.236,459,1.035,461,0.368,463,0.675,478,0.199,509,1.51,513,0.911,522,1.035,524,1.86,539,1.748,545,0.802,547,1.327,548,0.713,554,1.353,562,0.822,570,0.764,583,0.952,598,1.18,605,1.247,606,0.575,619,1.545,642,2.414,650,0.653,651,0.86,652,1.297,656,0.667,659,0.796,660,0.626,666,1.129,670,1.693,680,1.706,681,2.443,697,1.091,699,1.056,702,1.129,710,0.587,713,0.587,719,0.489,743,0.653,744,0.667,745,1.014,751,0.613,774,0.639,776,1.154,782,1.905,784,1.83,787,0.802,808,1.297,813,1.058,823,1.023,838,0.747,865,1.023,869,0.802,891,0.993,899,0.575,982,1.93,983,1.51,984,2.433,986,0.747,987,3.102,988,2.922,989,2.462,995,1.325,998,0.964,999,0.887,1001,1.784,1002,1.091,1003,1.091,1020,2.243,1030,0.73,1032,3.136,1034,0.911,1035,2.937,1037,2.857,1038,1.295,1042,2.041,1044,1.431,1045,0.993,1046,1.295,1049,2.218,1067,1.36,1070,0.864,1073,0.911,1083,0.993,1089,1.581,1128,0.993,1129,1.394,1137,0.964,1139,3.452,1188,0.764,1204,0.802,1220,0.639,1232,0.864,1237,1.469,1240,2.686,1241,1.056,1242,1.938,1243,1.508,1244,1.938,1245,2.539,1246,1.748,1247,2.243,1248,1.171,1249,1.091,1250,1.171,1251,2.041,1252,1.748,1253,2.236,1254,2.555,1255,1.171,1256,2.269,1257,1.938,1258,1.938,1259,0.822,1260,1.171,1261,1.938,1262,2.48,1263,1.938,1264,0.6,1265,1.938,1266,1.171,1267,1.431,1268,0.887,1269,1.056,1270,1.129,1271,1.056,1272,1.056,1273,0.73,1274,0.887,1275,0.937,1276,0.964,1277,1.236,1278,1.023,1279,0.639,1280,1.83,1281,2.297,1282,2.166,1283,2.391,1284,3.527,1285,3.304,1286,2.975,1287,1.129,1288,2.31,1289,1.091,1290,1.056,1291,0.864,1292,1.023,1293,0.964,1294,2.812,1295,1.869,1296,2.236,1297,1.091,1298,1.129,1299,1.129,1300,2.686,1301,1.056,1302,1.394,1303,4.429,1304,2.022,1305,1.806,1306,1.129,1307,3.456,1308,2.391,1309,1.806,1310,3.284,1311,1.508,1312,1.171,1313,1.693,1314,1.171,1315,1.748,1316,1.171,1317,2.706,1318,2.599,1319,2.443,1320,1.806,1321,1.171,1322,1.171,1323,1.938,1324,1.129,1325,2.78,1326,1.171,1327,2.102,1328,1.806,1329,1.938,1330,1.171,1331,1.938,1332,1.938,1333,2.686,1334,2.48,1335,1.023,1336,0.993,1337,1.129,1338,1.171,1339,1.171,1340,0.911,1341,1.83,1342,3.193,1343,1.643,1344,3.892,1345,2.48,1346,0.822,1347,1.171,1348,1.171,1349,4.474,1350,1.806,1351,2.475,1352,3.951,1353,3.811,1354,1.091,1355,1.171,1356,2.31,1357,1.056,1358,0.73,1359,1.171,1360,1.171,1361,1.056,1362,2.79,1363,0.964,1364,1.171,1365,0.993,1366,2.31,1367,0.864,1368,0.911,1369,1.171,1370,2.041,1371,1.171,1372,1.091,1373,1.938,1374,1.748,1375,1.171,1376,1.171,1377,1.643,1378,1.056,1379,1.171,1380,1.171,1381,0.802,1382,1.171,1383,1.869,1384,2.48,1385,1.171,1386,1.171,1387,1.129,1388,1.806,1389,1.091,1390,1.806,1391,1.091,1392,2.48,1393,1.171,1394,1.023,1395,1.091,1396,1.171,1397,1.938,1398,1.171,1399,1.171,1400,1.171,1401,1.171,1402,1.171,1403,1.171,1404,1.869,1405,1.171,1406,2.48,1407,1.171,1408,1.171,1409,1.129,1410,2.882,1411,2.236,1412,1.171,1413,1.129,1414,1.091,1415,1.129,1416,1.171,1417,1.171,1418,1.129,1419,1.938,1420,1.171,1421,1.171,1422,1.938,1423,1.171,1424,1.171,1425,0.964,1426,1.171,1427,1.171,1428,1.171,1429,1.171,1430,3.81,1431,1.938,1432,1.171,1433,1.171,1434,1.171,1435,1.938,1436,1.171,1437,1.938,1438,1.938,1439,1.171,1440,1.171,1441,1.171,1442,1.938,1443,1.171,1444,2.882,1445,1.938,1446,1.938,1447,1.171,1448,1.171,1449,1.023,1450,1.171,1451,1.171,1452,1.171,1453,1.171,1454,1.171,1455,1.171,1456,1.938,1457,1.938,1458,1.938,1459,1.938,1460,2.48,1461,1.171,1462,1.171,1463,1.171,1464,1.171,1465,1.938,1466,1.938,1467,2.882,1468,1.171,1469,1.171,1470,1.171,1471,1.171,1472,1.171,1473,2.555,1474,3.441,1475,3.193,1476,1.938,1477,1.171,1478,1.938,1479,2.48,1480,1.171,1481,2.48,1482,1.171,1483,2.882,1484,1.938,1485,1.171,1486,1.171,1487,1.171,1488,1.938,1489,1.129,1490,1.171,1491,1.023,1492,1.171,1493,1.171,1494,1.171,1495,1.171,1496,1.938,1497,2.372,1498,1.171,1499,1.171,1500,1.171,1501,1.171,1502,1.171,1503,1.508,1504,1.171,1505,1.171,1506,1.171,1507,2.48,1508,1.171,1509,1.171,1510,1.129,1511,1.748,1512,1.171,1513,1.171,1514,1.171,1515,1.171,1516,1.171,1517,1.171,1518,1.171,1519,1.469,1520,1.171,1521,1.171,1522,1.171,1523,1.171,1524,1.091,1525,1.171,1526,1.171,1527,1.938,1528,1.171,1529,1.171,1530,1.171,1531,1.171,1532,1.171,1533,0.993,1534,1.171,1535,1.023,1536,1.171,1537,1.171,1538,0.993,1539,1.171,1540,1.171,1541,1.171,1542,1.171,1543,1.171,1544,1.171,1545,1.171,1546,1.171,1547,1.171,1548,1.171,1549,1.171,1550,0.802,1551,1.171,1552,1.171,1553,1.869,1554,1.171,1555,1.171,1556,1.171,1557,1.171,1558,1.171,1559,1.171,1560,1.171,1561,1.171,1562,1.938,1563,1.938,1564,1.938,1565,1.171,1566,2.31,1567,2.882,1568,1.938,1569,1.171,1570,1.171,1571,1.171,1572,1.171,1573,1.171,1574,1.171,1575,1.091,1576,1.171,1577,1.171,1578,1.171,1579,1.171,1580,0.697,1581,1.171,1582,1.171,1583,1.938,1584,1.171,1585,2.48,1586,1.171,1587,1.171,1588,1.171,1589,1.938,1590,1.171,1591,1.171,1592,1.938,1593,1.938,1594,1.171,1595,1.171,1596,1.091,1597,1.129,1598,1.171,1599,1.171,1600,1.171,1601,1.938,1602,1.938,1603,1.171,1604,1.171,1605,1.938,1606,1.171,1607,1.171,1608,1.171,1609,1.171,1610,1.171,1611,1.171,1612,1.171,1613,1.129,1614,1.171,1615,1.171,1616,1.171,1617,1.171,1618,1.171,1619,1.938,1620,1.171,1621,1.171,1622,1.171,1623,1.171,1624,1.171,1625,1.171,1626,1.171,1627,1.171,1628,1.171,1629,1.938,1630,2.882,1631,2.48,1632,1.171,1633,1.171,1634,1.938,1635,1.171,1636,1.171,1637,1.171,1638,1.171,1639,1.171,1640,1.171,1641,1.171,1642,1.265,1643,1.938,1644,1.171,1645,1.171,1646,1.171,1647,1.129,1648,1.171,1649,1.171,1650,1.171,1651,1.171,1652,1.171,1653,1.171,1654,1.129,1655,1.171,1656,1.171,1657,1.171,1658,1.171,1659,1.171,1660,1.171,1661,2.882,1662,1.171,1663,1.171,1664,1.171,1665,1.171,1666,1.171,1667,1.171,1668,1.129,1669,1.171,1670,1.171,1671,1.938,1672,1.171,1673,1.938,1674,1.171,1675,1.171,1676,1.938,1677,1.171,1678,1.171,1679,1.171,1680,1.171,1681,1.171,1682,2.48,1683,1.171,1684,1.171,1685,1.171,1686,1.171,1687,1.171,1688,0.843,1689,1.171,1690,1.171,1691,1.171,1692,1.171,1693,1.171,1694,1.171,1695,1.171,1696,1.171,1697,1.023,1698,1.129,1699,1.171,1700,1.171,1701,0.993,1702,1.171,1703,1.171,1704,1.938,1705,3.193,1706,0.937,1707,1.171,1708,1.171,1709,1.171,1710,1.171,1711,1.171,1712,1.171,1713,1.938,1714,1.171,1715,1.171,1716,1.748,1717,1.171,1718,1.171,1719,1.091,1720,1.171,1721,1.171,1722,1.091,1723,1.171,1724,1.171,1725,1.171]],["title/classes/DomUtil.html",[78,0.11,2523,3.065]],["body/classes/DomUtil.html",[3,0.105,4,0.082,5,0.071,8,0.396,12,0.237,14,0.544,18,0.224,19,0.008,25,2.075,26,0.105,38,4.617,59,0.965,73,0.515,77,3.608,78,0.156,85,1.081,159,0.005,160,0.006,161,0.005,163,1.596,181,0.988,195,0.657,197,1.108,198,0.591,224,0.726,259,0.368,266,0.899,280,0.439,341,2.578,409,4.604,459,2.373,461,1.656,463,1.9,478,0.624,518,3.765,522,1.533,573,4.006,582,6.133,699,1.892,807,2.876,844,3.881,1044,3.662,1378,4.006,1782,5.254,2336,5.568,2523,5.277,2524,6.939,2525,7.828,2526,7.828,2527,8.952,2528,6.473,2529,7.828,2530,7.828,2531,8.064,2532,6.939,2533,4.81,2534,7.46,2535,7.828,2536,7.828,2537,7.828,2538,6.473,2539,6.473,2540,5.738,2541,6.473,2542,6.473]],["title/directives/DropdownFocusHandlerDirective.html",[599,1.408,748,1.767]],["body/directives/DropdownFocusHandlerDirective.html",[0,0.144,3,0.061,4,0.047,5,0.041,8,0.229,12,0.257,13,0.405,14,0.625,18,0.305,19,0.008,20,1.728,22,2.208,26,0.104,27,1.793,35,1.856,42,4.203,50,0.988,52,0.613,59,1.113,63,1.041,64,2.933,71,1.338,75,3.978,78,0.09,80,3.475,88,1.451,100,2.12,101,1.451,105,2.399,111,1.321,113,1.487,114,0.959,118,1.793,129,2.332,138,1.182,140,0.583,143,0.825,154,3.221,158,1.34,159,0.003,160,0.004,161,0.004,170,1.234,172,1.711,181,0.685,191,2.16,192,0.967,195,0.932,197,0.928,198,0.495,200,0.599,202,1.797,204,0.38,224,0.938,236,2.518,244,5.077,259,0.399,266,0.805,272,1.338,280,0.526,281,0.909,286,3.075,361,0.753,389,2.272,441,1.64,458,1.525,459,1.936,461,0.967,463,1.621,478,0.36,545,1.451,546,2.657,548,2.573,554,2.405,565,1.451,573,4.199,599,2.171,605,0.768,606,1.041,615,1.451,619,1.321,623,1.918,625,2.823,635,2.272,658,1.451,659,1.355,665,3.013,699,1.311,721,3.112,745,1.109,748,2.892,751,1.109,774,1.68,809,4.356,895,2.776,962,2.203,991,2.422,1045,1.856,1050,3.013,1052,3.972,1070,1.565,1083,3.072,1119,2.657,1150,2.045,1220,2.171,1252,3.268,1273,2.632,1274,1.606,1279,1.68,1358,1.321,1425,1.745,1491,3.85,1550,2.107,1716,3.809,1731,4.133,1803,4.1,1894,2.12,2051,5.522,2102,2.657,2206,5.522,2263,2.045,2543,6.208,2544,6.016,2545,2.657,2546,5.184,2547,6.598,2548,6.302,2549,6.503,2550,5.4,2551,5.661,2552,4.808,2553,5.661,2554,5.661,2555,5.661,2556,5.661,2557,6.213,2558,6.598,2559,5.661,2560,5.661,2561,5.424,2562,6.042,2563,6.213,2564,6.213,2565,6.213,2566,6.213,2567,5.661,2568,5.661,2569,3.735,2570,5.661,2571,5.661,2572,5.661,2573,4.985,2574,3.735,2575,4.808,2576,4.808,2577,3.735,2578,3.735,2579,3.735,2580,3.735,2581,4.403,2582,3.657,2583,4.808,2584,6.213,2585,6.213,2586,4.808,2587,5.661,2588,4.808,2589,4.808,2590,3.657,2591,4.808,2592,3.735,2593,3.735,2594,6.299,2595,3.333,2596,4.808,2597,4.403,2598,3.735,2599,3.735,2600,3.735,2601,4.808,2602,3.735,2603,3.735,2604,3.735,2605,6.213,2606,3.735,2607,3.735,2608,5.661,2609,3.735,2610,3.735,2611,3.735,2612,3.735,2613,3.735,2614,3.735,2615,3.735,2616,3.735,2617,4.827,2618,3.311,2619,3.032,2620,1.352,2621,3.032,2622,4.403,2623,2.823,2624,3.032,2625,3.032,2626,3.311,2627,3.032,2628,2.823,2629,4.305,2630,3.311,2631,3.311,2632,3.311,2633,4.808,2634,3.311,2635,5.661,2636,3.311,2637,3.311,2638,3.311,2639,3.311,2640,4.808,2641,3.311,2642,4.808,2643,3.311,2644,2.203,2645,3.032,2646,5.661,2647,6.598,2648,3.311,2649,3.311,2650,3.311,2651,3.311,2652,3.311,2653,5.661,2654,3.311,2655,3.311,2656,3.032,2657,3.311,2658,3.032,2659,4.808,2660,3.311,2661,3.311,2662,3.311,2663,4.403,2664,3.311,2665,2.518,2666,3.311,2667,3.311,2668,3.311,2669,3.311,2670,3.311,2671,2.823,2672,3.311,2673,3.311,2674,3.311,2675,4.808,2676,3.311,2677,3.311,2678,3.311,2679,3.311,2680,3.311,2681,3.311,2682,3.311,2683,3.311,2684,5.661,2685,3.311,2686,4.808,2687,3.311,2688,3.311,2689,3.311,2690,3.311,2691,3.311,2692,3.311,2693,3.311,2694,3.311,2695,4.808,2696,3.311]],["title/injectables/DropdownFocusHandlerService.html",[1858,2.255,2550,3.065]],["body/injectables/DropdownFocusHandlerService.html",[3,0.079,4,0.062,5,0.053,8,0.298,12,0.178,13,0.487,14,0.661,18,0.293,19,0.008,26,0.079,35,1.899,42,4.136,50,0.806,52,0.8,59,1.064,64,2.873,66,1.611,71,2.084,78,0.118,81,1.785,88,3.058,91,1.648,96,1.239,99,1.557,101,2.261,111,1.724,113,1.942,115,0.844,117,3.132,118,2.16,143,0.63,154,3.101,159,0.004,160,0.005,161,0.004,170,1.109,181,0.825,192,0.87,195,0.89,197,1.347,198,0.719,200,0.458,224,0.996,234,1.981,244,5.293,259,0.372,275,1.51,280,0.573,361,1.317,364,1.214,377,2.478,441,1.678,459,1.981,463,1.669,477,5.304,478,0.47,554,2.716,573,3.771,635,3.759,699,2.042,721,2.539,776,2.208,796,3.052,807,2.024,809,2.418,889,2.345,895,2.495,899,1.822,983,2.258,991,2.478,1027,4.939,1045,1.899,1050,3.385,1052,4.279,1067,3.135,1142,5.057,1150,4.912,1220,2.438,1243,2.886,1285,1.991,1387,3.576,1409,3.576,1425,3.052,1491,3.903,1758,4.405,1804,5.304,1816,5.792,1858,3.24,1860,3.132,1877,3.468,1882,4.643,1953,5.304,1980,5.792,2206,6.384,2214,3.287,2518,5.599,2543,5.988,2544,6.116,2550,4.405,2573,5.599,2581,3.958,2582,5.817,2594,6.009,2595,4.015,2597,6.39,2623,3.686,2656,5.981,2658,3.958,2671,4.939,2697,4.323,2698,4.939,2699,6.534,2700,5.304,2701,7.276,2702,7.369,2703,7.369,2704,7.872,2705,6.534,2706,6.534,2707,6.534,2708,4.876,2709,6.534,2710,4.876,2711,5.792,2712,9.117,2713,6.534,2714,4.876,2715,6.534,2716,6.534,2717,4.647,2718,4.876,2719,6.534,2720,4.876,2721,6.534,2722,4.876,2723,4.876,2724,4.876,2725,4.323,2726,4.876,2727,4.876,2728,4.876,2729,4.876,2730,4.876,2731,4.876,2732,4.876,2733,4.876,2734,4.876,2735,6.534,2736,3.287,2737,4.876,2738,4.876,2739,4.876,2740,4.876,2741,5.95,2742,3.958,2743,4.323,2744,7.369,2745,7.369,2746,4.876,2747,4.876,2748,4.876,2749,4.876,2750,4.876,2751,6.534,2752,6.534,2753,6.534,2754,6.534]],["title/modules/DropdownModule.html",[2755,1.572,2756,3.065]],["body/modules/DropdownModule.html",[3,0.106,4,0.083,5,0.071,19,0.008,26,0.106,78,0.157,154,2.776,159,0.005,160,0.006,161,0.005,259,0.533,260,2.015,478,0.627,665,2.797,698,2.104,721,3.708,748,3.686,750,3.778,910,2.151,1030,2.3,1162,1.973,1264,1.891,1275,2.954,1580,2.199,1812,4.918,2544,4.179,2619,5.281,2620,2.354,2725,5.767,2755,2.249,2756,6.449,2757,2.954,2758,2.954,2759,3.829,2760,3.226,2761,2.591,2762,4.181,2763,5.767,2764,5.767,2765,5.767,2766,5.767,2767,5.767,2768,6.374,2769,5.597,2770,3.893,2771,6.506,2772,4.298,2773,3.226,2774,4.627,2775,3.129,2776,3.226,2777,3.226,2778,3.226,2779,3.226,2780,3.226,2781,4.456,2782,3.329,2783,4.018,2784,5.293,2785,4.631,2786,4.456,2787,4.918,2788,6.506]],["title/directives/DynamicDropdownPositionDirective.html",[599,1.408,750,1.811]],["body/directives/DynamicDropdownPositionDirective.html",[3,0.071,4,0.055,5,0.048,8,0.267,12,0.16,13,0.519,14,0.663,18,0.296,19,0.008,22,1.508,25,1.076,26,0.071,36,1.246,42,3.609,50,0.927,59,0.927,63,2.095,64,1.411,75,2.475,78,0.105,84,2.093,96,0.686,99,0.827,101,1.861,108,1.38,118,1.442,129,1.875,138,1.38,140,0.746,143,0.898,154,3.371,158,1.657,159,0.004,160,0.005,161,0.004,170,1.378,172,1.684,181,0.764,191,2.411,192,1.08,195,0.915,197,1.19,198,0.635,200,0.409,204,0.306,224,0.78,233,1.434,259,0.396,266,1.029,280,0.535,281,0.731,358,0.972,461,1.08,463,1.374,478,0.42,513,1.926,557,2.77,573,4.439,583,1.216,599,2.327,605,1.246,619,1.542,621,3.202,646,1.875,658,1.695,680,1.836,691,3.297,745,1.295,750,3.144,751,1.797,774,2.327,778,3.807,801,2.297,809,3.002,837,5.235,891,3.93,894,2.306,983,1.508,991,2.638,1030,2.657,1044,3.148,1049,2.729,1050,3.603,1052,3.449,1054,4.102,1076,2.94,1096,2.802,1129,2.84,1159,5.257,1162,2.278,1164,2.098,1173,3.297,1232,1.827,1236,3.002,1264,1.268,1294,2.536,1296,2.232,1414,3.202,1425,2.037,1491,2.163,1596,2.306,1698,2.387,1731,2.572,1753,2.572,1758,4.082,1773,2.306,1801,4.082,1812,4.577,1817,3.571,1877,3.102,1894,3.437,1949,5.368,2025,6.632,2051,3.102,2393,3.889,2518,3.102,2531,5.368,2533,2.68,2534,5.368,2573,5.345,2617,4.577,2629,5.759,2663,6.099,2742,3.54,2743,3.866,2782,2.232,2789,7.367,2790,3.54,2791,6.055,2792,6.632,2793,6.055,2794,6.055,2795,6.055,2796,6.956,2797,6.055,2798,6.055,2799,6.956,2800,6.956,2801,7.514,2802,6.956,2803,7.514,2804,6.956,2805,7.514,2806,6.055,2807,6.055,2808,6.956,2809,6.055,2810,6.956,2811,6.055,2812,4.361,2813,5.759,2814,6.956,2815,6.956,2816,4.361,2817,4.361,2818,4.361,2819,6.055,2820,3.54,2821,6.055,2822,4.361,2823,3.297,2824,4.361,2825,4.361,2826,4.361,2827,4.361,2828,3.54,2829,4.361,2830,4.361,2831,4.361,2832,7.514,2833,4.361,2834,4.361,2835,4.361,2836,4.361,2837,4.361,2838,4.361,2839,4.361,2840,4.361,2841,4.361,2842,4.361,2843,4.361,2844,4.361,2845,3.54,2846,5.368,2847,3.54,2848,6.661,2849,7.514,2850,4.361,2851,3.54,2852,3.866,2853,4.361,2854,4.361,2855,4.361,2856,4.361,2857,4.361,2858,4.361,2859,4.361,2860,4.361,2861,4.361,2862,4.361,2863,4.361,2864,6.055,2865,4.361,2866,6.055,2867,4.361,2868,6.055,2869,4.361,2870,4.361,2871,4.361,2872,4.361,2873,6.956,2874,4.361,2875,3.866,2876,4.361,2877,4.361,2878,4.361,2879,6.956,2880,4.361,2881,6.055,2882,4.361,2883,6.956,2884,4.361,2885,6.956,2886,7.514,2887,7.514,2888,4.361,2889,4.361,2890,4.361,2891,4.361,2892,4.361,2893,4.361,2894,6.055,2895,4.361,2896,6.055,2897,4.361,2898,4.361,2899,6.956,2900,4.361,2901,6.956,2902,4.361,2903,4.361,2904,3.297,2905,4.361,2906,4.361,2907,3.866,2908,4.361,2909,4.361,2910,4.361,2911,4.361,2912,4.361,2913,4.361,2914,6.055,2915,4.361,2916,4.361,2917,4.361,2918,4.361]],["title/components/ErrorBannerComponent.html",[204,0.319,723,1.811]],["body/components/ErrorBannerComponent.html",[3,0.12,4,0.063,5,0.054,8,0.303,12,0.181,13,0.492,14,0.554,18,0.315,19,0.008,26,0.08,30,1.765,36,1.018,59,0.916,60,0.997,63,1.38,66,1.627,73,0.53,78,0.119,96,1.298,99,1.502,100,3.745,108,2.088,109,1.168,140,0.603,143,1.023,159,0.004,160,0.005,161,0.004,172,1.324,181,0.833,191,2.627,195,0.904,197,1.129,198,0.791,200,0.743,204,0.578,208,1.877,224,0.74,247,0.829,259,0.282,263,1.636,280,0.336,281,1.106,321,3.259,338,1.918,342,4.238,346,2.694,358,2.102,374,1.566,390,1.636,394,5.849,411,6.802,441,1.271,461,1.707,463,1.303,478,0.477,539,3.376,554,2.044,599,1.533,605,1.357,650,1.566,651,1.661,652,1.469,653,1.97,656,2.801,658,1.922,659,1.73,660,2,666,2.181,698,1.6,699,1.595,700,3.595,701,2.247,702,1.636,703,2.247,704,2.247,705,1.75,706,2.128,707,2.247,708,1.922,709,2.247,710,1.409,711,2.247,712,1.833,713,2.254,714,1.922,715,3.595,716,1.79,717,1.922,718,1.922,719,1.172,720,1.79,721,1.922,722,2.247,723,3.153,724,2.247,725,2.128,726,1.922,727,2.208,728,2.247,729,1.833,730,3.595,731,1.877,732,3.031,733,1.877,734,1.627,735,1.877,736,2.996,737,1.833,738,2.02,739,2.247,740,1.79,741,2.247,742,2.073,743,1.566,744,1.6,745,1.469,746,1.6,747,2.247,748,1.922,749,2.247,750,1.97,751,2.519,752,2.247,753,1.833,754,2.128,755,2.247,813,2.453,885,3.926,1050,2.128,1052,2.453,1162,1.5,1185,5.356,1212,3.178,1254,3.745,1256,2.625,1377,3.174,1381,2.563,1503,3.497,1580,1.672,1817,3.892,1907,2.808,2460,4.016,2461,4.386,2463,5.356,2665,4.448,2711,7.521,2773,2.453,2775,2.38,2776,2.453,2777,2.453,2778,2.453,2779,2.453,2780,2.453,2919,6.802,2920,4.386,2921,9.074,2922,7.423,2923,6.598,2924,7.423,2925,6.598,2926,7.423,2927,7.423,2928,8.249,2929,7.423,2930,4.948,2931,6.598,2932,6.598,2933,7.918,2934,6.598,2935,4.948,2936,4.948,2937,4.448,2938,6.598,2939,5.356,2940,6.598,2941,4.948,2942,4.948,2943,6.598,2944,4.948,2945,4.948,2946,4.948,2947,4.948,2948,4.948,2949,7.423,2950,4.948,2951,4.948,2952,4.948,2953,4.948]],["title/classes/ErrorBannerWidgetObject.html",[78,0.11,2954,3.691]],["body/classes/ErrorBannerWidgetObject.html",[3,0.081,4,0.064,5,0.055,8,0.521,12,0.184,13,0.636,14,0.742,17,3.647,18,0.326,19,0.008,25,1.844,26,0.081,34,1.097,35,1.46,36,1.033,50,0.619,57,1.46,59,0.982,66,1.844,71,1.239,73,0.581,78,0.121,81,2.042,85,1.1,109,0.741,138,2.521,140,0.609,143,1.14,148,2.252,156,2.49,159,0.004,160,0.007,161,0.004,163,1.239,165,2.945,168,1.094,181,0.841,191,2.653,195,0.93,197,1.511,198,0.806,200,0.854,204,0.609,217,3.593,224,1.027,245,1.951,247,1.253,259,0.379,280,0.452,326,3.172,341,2.978,346,2.05,358,1.667,361,1.507,364,0.933,435,2.461,441,1.29,451,4.776,458,2.05,459,2.83,461,1.334,463,1.837,464,3.698,518,2.416,522,1.578,524,1.66,529,2.49,530,4.212,547,2.906,552,2.656,553,3.955,554,2.817,555,3.524,556,3.955,557,2.653,558,2.416,559,2.656,560,1.66,561,2.346,562,2,563,2.656,564,2.656,565,1.951,566,2.656,567,2.656,568,2.656,569,2.104,570,1.86,571,3.086,621,2.656,632,3.395,635,3.132,642,2.653,656,2.155,659,1.213,723,2.978,759,4.431,760,2.83,761,4.244,762,4.492,763,4.492,764,4.244,765,4.492,766,3.647,767,4.492,771,2.85,772,3.572,773,2.346,774,1.555,775,2.85,776,1.697,777,2.656,778,2.749,779,2.85,780,3.572,781,2.85,782,1.491,783,2.85,784,2.104,785,4.076,786,3.827,787,2.906,788,2.85,789,4.836,790,3.572,791,2.85,792,3.572,793,3.205,794,2.85,795,3.572,796,3.113,797,2.85,798,3.572,799,2.85,800,3.572,801,1.905,802,2.85,803,2.85,804,3.572,805,2.85,806,3.572,807,1.555,808,1.491,809,3.304,810,3.782,811,2.85,812,3.572,813,1.555,814,2.85,827,4.452,1015,3.796,2185,3.647,2919,5.653,2954,5.409,2955,4.452,2956,7.478,2957,5.022,2958,5.022,2959,5.022,2960,6.664,2961,6.664,2962,4.452,2963,5.022]],["title/interfaces/ExportColumn.html",[0,0.175,2020,3.437]],["body/interfaces/ExportColumn.html",[0,0.215,2,0.849,3,0.106,4,0.049,5,0.078,8,0.238,12,0.142,13,0.416,14,0.469,18,0.193,19,0.008,20,1.657,26,0.135,27,1.285,30,2.106,34,1.427,35,1.129,36,1.343,40,2.914,50,0.805,58,2.914,59,1,60,1.749,62,1.439,66,0.958,73,0.517,75,4.466,78,0.094,83,1.439,85,0.771,86,3.539,96,1.276,97,2.937,99,1.434,101,2.26,108,2.259,109,1.351,113,2.222,114,1.677,115,0.502,129,2.4,133,1.153,140,0.691,143,0.721,146,3.167,148,1.313,154,1.973,158,1.371,159,0.003,160,0.005,161,0.003,170,0.884,172,1.529,194,2.666,198,0.691,200,0.709,204,0.391,237,4.53,247,1.47,259,0.448,260,1.203,266,0.904,275,1.203,280,0.625,281,1.494,282,3.154,321,3.072,325,2.764,341,2.222,347,2.619,358,0.866,361,1.125,363,2.684,364,0.722,373,1.51,392,1.622,461,0.693,478,0.374,524,1.285,545,2.168,548,1.929,560,1.285,561,1.815,605,1.343,606,1.99,619,1.973,659,0.707,660,1.178,670,4.499,681,2.684,708,1.51,719,1.691,782,1.153,808,1.153,813,1.203,838,1.406,855,3.396,867,3.902,889,2.684,899,1.083,910,1.285,969,2.764,984,2.602,988,3.223,990,4.02,1023,2.496,1032,1.815,1038,1.474,1045,1.622,1046,2.117,1070,2.735,1076,2.619,1204,1.51,1220,1.203,1249,4.386,1254,2.965,1256,2.309,1259,1.547,1264,1.129,1273,1.973,1274,1.671,1284,1.586,1293,2.607,1294,1.628,1304,2.222,1310,1.988,1381,1.51,1388,2.055,1389,2.055,1390,2.951,1391,2.055,1395,2.055,1449,1.927,1550,1.51,1566,2.055,1575,2.055,1757,1.927,1817,2.292,1859,4.645,1861,2.388,1868,4.53,1871,6.136,1873,5.395,1880,3.154,1883,4.53,1884,3.154,1885,3.154,1894,3.706,1922,4.53,2009,2.937,2010,2.496,2011,2.937,2012,3.154,2013,4.947,2014,5.789,2015,4.947,2016,3.444,2017,3.444,2018,2.937,2019,3.444,2020,6.56,2021,4.947,2022,5.592,2023,3.154,2024,3.241,2025,4.53,2026,3.444,2027,4.947,2028,4.53,2029,3.453,2030,4.947,2031,2.684,2032,3.154,2033,4.53,2034,4.53,2035,6.136,2036,3.154,2037,3.154,2038,3.444,2039,2.496,2040,3.444,2041,5.789,2042,3.444,2043,2.937,2044,3.154,2045,3.444,2046,3.444,2047,3.444,2048,3.444,2049,3.444,2050,3.444,2051,3.969,2052,5.789,2053,3.444,2054,3.444,2055,2.496,2056,3.444,2057,3.444,2058,3.444,2059,3.444,2060,3.444,2061,3.154,2062,3.444,2063,3.444,2064,3.444,2065,3.444,2066,3.444,2067,3.444,2068,3.444,2069,3.444,2070,3.444,2071,3.444,2072,3.444,2073,3.444,2074,5.301,2075,4.161,2076,3.444,2077,3.444,2078,3.444,2079,3.444,2080,3.585,2081,3.444,2082,3.444,2083,3.444,2084,3.444,2085,3.444,2086,3.444,2087,3.444,2088,3.444,2089,3.444,2090,3.444,2091,3.444,2092,3.444,2093,3.444,2094,3.444,2095,3.444,2096,3.969,2097,3.444,2098,3.969,2099,3.444,2100,4.947,2101,2.764,2102,2.764,2103,4.947,2104,3.444,2105,3.444,2106,3.444,2107,5.789,2108,3.444,2109,4.947,2110,3.444,2111,3.444,2112,2.937,2113,3.444,2114,3.444,2115,3.444,2116,6.327,2117,3.444,2118,3.444,2119,3.444,2120,3.444,2121,4.947,2122,3.444,2123,3.444,2124,3.444,2125,3.444,2126,3.444,2127,3.444,2128,3.444,2129,3.444,2130,3.444,2131,3.444,2132,3.444,2133,3.444,2134,3.444,2135,4.947,2136,3.444,2137,3.444,2138,3.444,2139,3.444,2140,3.444,2141,3.444,2142,3.444,2143,3.444,2144,3.444,2145,3.444,2146,3.444,2147,1.927,2148,3.444,2149,3.444,2150,3.444,2151,3.444,2152,3.444,2153,3.969,2154,3.444,2155,3.444,2156,3.444,2157,3.444,2158,3.444,2159,3.444,2160,3.444,2161,3.444,2162,3.444,2163,3.444,2164,3.444,2165,3.444,2166,3.444,2167,3.444,2168,3.444,2169,3.444,2170,3.444,2171,3.444,2172,3.444,2173,3.444,2174,3.444,2175,3.444,2176,3.444,2177,3.444,2178,3.444,2179,4.947,2180,3.444,2181,3.444,2182,3.444]],["title/classes/FilterBuilder.html",[78,0.11,2357,2.255]],["body/classes/FilterBuilder.html",[3,0.054,4,0.043,5,0.037,8,0.205,12,0.123,13,0.374,14,0.741,18,0.313,19,0.008,26,0.097,35,1.933,59,0.618,61,1.731,71,0.827,73,0.552,78,0.081,82,3.376,96,0.527,115,0.647,129,2.153,139,6.458,140,0.816,143,0.433,159,0.005,160,0.004,161,0.003,163,0.827,172,1.593,181,0.632,192,0.598,195,0.926,197,1.51,198,0.816,200,0.874,224,1.052,246,5.068,266,0.989,272,1.479,280,0.609,281,1.115,347,3.376,459,2.158,522,2.253,540,5.399,560,1.655,565,1.946,583,1.854,598,2.581,773,4.341,807,1.551,808,1.486,885,1.772,899,1.854,986,1.812,1049,2.299,1089,1.812,1183,5.739,1232,3.128,1245,2.098,1279,2.879,1642,1.855,1758,4.484,1767,3.077,1795,4.439,1943,6.055,2259,3.077,2264,1.772,2357,4.797,2359,3.64,2445,4.065,2448,4.065,2470,3.562,2487,6.722,2506,5.645,2937,3.376,2964,6.919,2965,2.533,2966,5.008,2967,5.008,2968,5.008,2969,7.468,2970,5.008,2971,5.008,2972,5.008,2973,5.008,2974,5.008,2975,5.008,2976,5.008,2977,5.008,2978,5.008,2979,5.995,2980,5.008,2981,6.651,2982,5.008,2983,6.651,2984,5.008,2985,5.008,2986,5.008,2987,5.008,2988,5.008,2989,5.008,2990,5.008,2991,3.351,2992,3.351,2993,5.008,2994,3.351,2995,9.208,2996,3.351,2997,3.351,2998,7.739,2999,8.513,3000,3.351,3001,3.351,3002,5.008,3003,3.351,3004,3.351,3005,5.008,3006,3.351,3007,5.008,3008,3.351,3009,4.065,3010,7.468,3011,5.008,3012,5.008,3013,3.351,3014,3.351,3015,5.008,3016,7.957,3017,8.406,3018,3.351,3019,5.008,3020,3.351,3021,3.351,3022,5.008,3023,5.008,3024,3.351,3025,5.008,3026,3.351,3027,5.008,3028,3.351,3029,5.008,3030,3.351,3031,5.008,3032,3.351,3033,5.008,3034,3.351,3035,3.351,3036,3.351,3037,5.008,3038,3.351,3039,2.72,3040,4.439,3041,4.439,3042,4.439,3043,4.439,3044,2.971,3045,2.971,3046,7.956,3047,3.351,3048,3.351,3049,3.351,3050,3.351,3051,6.651,3052,7.739,3053,7.739,3054,5.008,3055,6.651,3056,8.879,3057,5.008,3058,7.468,3059,6.651,3060,6.651,3061,6.651,3062,6.651,3063,3.351,3064,3.351,3065,3.351,3066,3.351,3067,3.351,3068,3.351,3069,3.351,3070,5.008,3071,3.351,3072,5.008,3073,3.351,3074,5.008,3075,3.351,3076,5.008,3077,3.351,3078,3.351,3079,3.351,3080,3.351,3081,3.351,3082,3.351,3083,3.351]],["title/interfaces/FilterConfig.html",[0,0.175,1729,2.008]],["body/interfaces/FilterConfig.html",[0,0.249,2,1.044,3,0.078,4,0.061,5,0.052,8,0.293,9,2.695,12,0.175,13,0.583,14,0.656,18,0.317,19,0.008,26,0.132,35,1.389,36,0.983,45,3.858,47,1.813,50,1.121,52,1.197,59,0.963,60,1.3,61,2.699,66,1.179,73,0.534,78,0.156,96,1.014,99,1.223,109,1.076,111,1.69,112,2.819,114,1.228,115,1.143,118,1.58,140,0.713,143,0.617,158,1.003,159,0.004,160,0.005,161,0.004,163,1.799,168,1.058,170,1.087,172,0.853,181,0.814,190,3.186,192,0.853,195,0.485,200,0.863,204,0.588,233,1.132,234,2.212,259,0.497,266,0.838,280,0.57,281,1.081,322,2.616,324,2.37,361,1.3,373,2.834,377,1.813,435,2.42,466,3.437,478,0.461,487,3.222,557,1.903,560,1.58,565,1.857,583,1.333,584,3.07,598,2.228,615,1.857,646,2.055,651,1.836,666,1.58,710,1.361,713,1.361,716,1.729,720,1.729,727,1.333,734,1.59,746,2.085,751,1.419,760,2.367,774,1.997,776,1.615,782,2.165,807,1.48,813,1.48,832,3.07,838,1.729,867,3.617,885,2.528,889,2.299,899,2.177,910,1.58,966,2.847,976,2.37,981,3.733,983,2.228,984,2.581,986,1.729,989,1.69,991,2.445,995,2.603,998,2.233,999,2.055,1038,1.813,1039,2.713,1045,1.874,1046,2.445,1162,1.449,1164,2.299,1188,1.77,1204,1.857,1211,2.713,1220,1.48,1243,2.111,1256,1.69,1264,1.389,1267,2.002,1268,2.055,1273,2.279,1274,2.055,1277,1.729,1279,2.833,1280,2.7,1281,2.978,1307,3.345,1335,3.196,1341,3.056,1363,2.233,1367,3.056,1368,2.847,1370,3.011,1503,2.111,1519,3.506,1550,1.857,1728,3.222,1729,3.222,1730,3.358,1745,2.446,1767,2.937,1768,2.819,1770,3.222,1771,2.446,1772,4.257,1773,2.528,1774,3.07,1775,3.222,1776,3.07,1777,3.222,1778,3.222,1779,2.616,1801,3.222,1817,2.819,1882,4.302,1892,2.937,2024,3.545,2031,2.299,2231,2.17,2232,3.4,2233,3.88,2234,2.937,2235,3.88,2236,3.07,2237,6.818,2238,5.233,2239,3.07,2240,2.937,2241,2.446,2242,2.616,2243,3.509,2244,2.446,2246,3.07,2247,3.299,2251,2.937,2252,4.141,2254,3.07,2257,3.07,2259,2.937,2261,3.07,2263,2.616,2264,2.528,2266,2.713,2267,3.07,2270,2.616,2272,2.937,2273,2.819,2274,3.07,2275,4.141,2276,2.819,2278,2.446,2285,3.88,2286,3.88,2287,3.88,2288,3.613,2289,3.613,2290,3.613,2291,4.585,2292,3.613,2293,5.233,2294,5.233,2295,3.88,2296,3.88,2297,3.88,2298,3.88,2299,5.921,2300,3.88,2301,3.88,2302,3.88,2303,3.88,2304,3.88,2305,3.88,2306,3.88,2307,3.88,2308,3.88,2309,2.616,2310,3.196,2311,5.233,2312,3.88,2313,3.88,2314,3.88,2315,3.07,2316,3.88,2317,3.88]],["title/interfaces/FilterRendererSpec.html",[0,0.175,1730,1.955]],["body/interfaces/FilterRendererSpec.html",[0,0.249,2,1.049,3,0.078,4,0.061,5,0.053,8,0.294,9,2.841,12,0.176,13,0.545,18,0.317,19,0.008,26,0.132,35,1.395,36,0.987,45,3.866,47,1.821,50,1.122,52,1.2,59,0.965,60,0.968,61,2.704,66,1.184,73,0.515,78,0.156,96,1.017,99,1.226,109,1.079,111,1.697,112,2.831,114,1.233,115,1.144,118,1.587,140,0.715,143,0.62,158,1.008,159,0.004,160,0.005,161,0.004,163,1.803,168,1.2,170,1.092,172,0.856,181,0.816,190,3.19,192,0.856,195,0.487,200,0.84,204,0.62,233,1.137,234,2.217,259,0.497,266,0.84,280,0.57,281,1.084,322,2.627,324,2.38,361,1.474,373,2.84,377,1.821,435,2.551,466,3.507,478,0.463,487,3.236,557,1.911,560,1.587,565,1.865,583,1.338,584,3.083,598,1.659,615,1.865,646,2.064,651,1.84,666,1.587,710,1.367,713,1.367,716,1.737,720,1.737,727,1.338,734,1.595,746,2.364,751,1.425,760,2.372,774,1.487,776,1.622,782,2.17,807,1.487,813,1.487,832,3.083,838,1.737,867,3.206,885,2.539,889,2.309,899,2.038,910,1.587,966,3.229,976,2.38,981,3.741,983,2.235,984,2.699,986,1.737,989,1.697,991,2.773,995,2.737,998,2.242,999,2.064,1038,1.821,1039,2.725,1045,1.879,1046,2.452,1162,1.455,1164,2.309,1188,1.778,1204,1.865,1211,2.725,1220,1.487,1243,2.12,1256,1.697,1264,1.395,1267,2.011,1268,2.064,1273,2.286,1274,2.064,1277,1.737,1279,2.863,1280,2.708,1281,3.194,1307,2.911,1335,2.38,1341,2.708,1363,2.242,1367,3.062,1368,2.856,1370,2.242,1503,2.12,1519,3.616,1550,1.865,1728,4.359,1729,2.856,1730,3.511,1745,2.456,1767,2.95,1768,2.831,1770,3.236,1771,2.456,1772,4.048,1773,2.539,1774,3.083,1775,3.236,1776,3.083,1777,3.236,1778,3.236,1779,2.627,1801,3.236,1817,2.831,1882,3.813,1892,2.95,2024,3.552,2031,2.309,2231,2.18,2232,3.414,2233,3.897,2234,2.95,2235,3.897,2236,3.083,2237,5.934,2238,5.248,2239,3.083,2240,2.95,2241,2.456,2242,2.627,2243,3.517,2244,2.456,2246,3.083,2247,3.308,2251,2.95,2252,4.153,2254,3.083,2257,3.083,2259,2.95,2261,3.083,2263,2.627,2264,2.539,2266,2.725,2267,3.083,2270,2.627,2272,2.95,2273,2.831,2274,3.083,2275,4.153,2276,2.831,2278,2.456,2285,3.897,2286,3.897,2287,3.897,2288,3.628,2289,3.628,2290,3.628,2291,4.599,2292,3.628,2293,3.897,2294,3.897,2295,3.897,2296,3.897,2297,3.897,2298,3.897,2299,5.934,2300,3.897,2301,3.897,2302,3.897,2303,3.897,2304,3.897,2305,3.897,2306,3.897,2307,3.897,2308,3.897,2309,2.627,2310,3.206,2311,5.248,2312,3.897,2313,3.897,2314,3.897,2315,3.083,2316,3.897,2317,3.897]],["title/components/FilterTestHostComponent.html",[204,0.319,725,1.955]],["body/components/FilterTestHostComponent.html",[3,0.074,4,0.058,5,0.05,8,0.281,9,1.515,12,0.168,13,0.468,14,0.385,18,0.315,19,0.008,25,1.982,26,0.116,47,2.708,50,0.773,52,1.319,58,1.872,59,0.881,60,1.263,63,1.278,73,0.437,78,0.111,85,0.866,87,2.278,114,1.61,115,0.991,127,2.495,140,0.572,143,0.922,158,0.962,159,0.004,160,0.005,161,0.004,181,0.791,188,3.26,194,2.558,195,0.779,197,1.072,198,0.758,200,0.779,204,0.563,208,1.739,224,0.703,233,1.086,247,0.768,259,0.505,260,1.42,263,1.515,266,0.882,280,0.484,281,1.197,285,3.09,286,2.267,338,1.821,358,1.022,361,0.924,364,1.165,374,1.451,389,3.215,390,1.515,408,2.768,434,4.457,435,2.278,441,1.177,449,4.224,461,1.693,463,1.238,466,3.359,478,0.442,480,2.509,481,2.602,482,2.424,483,4.398,484,4.736,511,5.086,560,2.072,599,1.42,619,1.621,623,2.216,633,2.944,650,1.451,651,1.577,652,2.278,653,1.825,656,1.483,658,1.781,659,1.712,698,1.483,699,1.855,700,3.485,701,2.081,702,1.515,703,2.081,704,2.081,705,1.621,706,1.971,707,2.081,708,1.781,709,2.081,710,1.305,711,2.081,712,1.698,713,2.185,714,1.781,715,3.485,716,1.659,717,1.781,718,1.781,719,1.086,720,2.267,721,1.781,722,2.081,723,1.825,724,2.081,725,3.718,726,1.781,727,2.14,728,2.081,729,1.698,730,3.485,731,1.739,732,2.915,733,1.739,734,1.893,735,1.739,736,2.845,737,1.698,738,1.872,739,2.081,740,1.659,741,2.081,742,1.92,743,1.451,744,1.483,745,1.361,746,1.483,747,2.081,748,1.781,749,2.081,750,1.825,751,1.361,752,2.081,753,1.698,754,1.971,755,2.081,773,2.141,796,2.141,813,1.42,838,2.267,844,3.107,889,3.014,911,3.43,913,2.704,914,2.944,983,2.468,984,3.038,989,2.525,990,3.107,991,2.377,992,2.944,995,2.659,1020,2.768,1035,1.584,1211,2.602,1277,2.777,1279,2.87,1307,3.303,1315,3.653,1367,2.625,1377,3.014,1597,3.43,1730,2.694,1747,4.709,1771,3.207,1772,2.273,2185,4.541,2310,3.805,2319,3.314,2365,3.09,2498,3.465,2508,3.721,2671,3.465,2755,2.166,2759,2.081,2761,1.825,2772,2.509,3084,7.124,3085,4.064,3086,6.266,3087,7.14,3088,7.14,3089,6.266,3090,6.266,3091,4.584,3092,8.646,3093,7.14,3094,4.584,3095,6.266,3096,4.584,3097,4.584,3098,6.266,3099,4.224,3100,4.584,3101,3.721,3102,4.064,3103,4.584,3104,4.584,3105,6.329,3106,4.584,3107,4.584,3108,4.064,3109,4.584,3110,4.584,3111,4.064,3112,4.584,3113,2.944,3114,4.584,3115,4.584,3116,4.584,3117,4.584,3118,5.555,3119,4.584,3120,6.266,3121,6.266,3122,6.266,3123,6.266,3124,6.266,3125,6.266,3126,4.064,3127,4.584,3128,4.584]],["title/interfaces/FindParams.html",[0,0.175,3129,2.921]],["body/interfaces/FindParams.html",[0,0.286,2,0.809,3,0.06,4,0.047,5,0.041,8,0.227,12,0.136,13,0.596,14,0.65,18,0.304,19,0.008,20,0.86,22,1.28,25,0.913,26,0.126,34,0.809,35,1.076,36,1.109,41,2.379,50,1.03,52,0.608,57,2.426,59,0.915,66,1.721,71,1.329,73,0.557,77,2.094,78,0.169,81,2.316,85,1.279,87,1.6,91,2.359,99,0.702,109,0.546,113,1.475,114,0.951,115,0.821,133,1.099,134,2.379,138,2.209,140,0.338,148,2.866,156,1.836,158,0.777,159,0.003,160,0.006,161,0.003,165,2.83,168,0.608,172,0.661,179,1.73,181,0.467,190,1.404,192,1.323,198,0.58,200,0.655,203,1.592,204,0.585,216,1.34,224,0.605,245,2.712,247,1.065,259,0.362,266,1.008,272,0.913,280,0.575,281,0.903,326,2.779,327,2.733,346,2.201,358,0.826,361,1.56,364,1.002,392,2.029,408,1.636,433,1.73,435,2.517,436,1.781,438,2.525,441,1.632,451,4.612,456,2.379,458,1.512,459,2.759,461,1.245,463,1.797,464,3.552,478,0.357,479,3.607,480,2.027,481,2.102,482,1.958,483,2.027,484,3.361,486,2.968,507,1.895,510,2.379,522,1.757,523,4.738,524,1.224,529,1.836,530,2.85,533,2.95,547,2.094,551,2.276,552,1.958,553,3.691,554,2.717,555,3.361,556,3.361,557,2.146,558,2.593,559,2.85,560,1.782,561,1.73,562,2.53,563,1.958,564,1.958,565,2.469,566,1.958,567,1.958,568,1.958,569,2.924,570,1.372,574,2.379,575,3.312,576,2.379,577,2.379,578,2.379,580,4.082,583,1.032,598,2.564,605,0.762,606,1.032,610,2.496,615,1.439,616,2.496,617,2.496,618,3.634,619,2.247,620,2.496,621,3.361,622,2.496,623,2.468,627,4.972,632,2.447,633,2.379,634,2.496,635,3.704,636,2.496,639,2.496,640,2.276,641,2.496,642,3.181,643,4.117,646,2.318,653,2.53,734,0.913,759,2.593,760,2.571,761,2.102,764,2.102,766,2.027,771,2.102,773,3.26,774,1.968,775,2.102,776,1.252,777,2.85,778,2.027,779,2.102,781,2.102,782,1.099,783,2.102,784,1.551,785,3.572,786,3.252,787,2.469,788,2.102,789,4.393,791,2.102,793,2.593,794,2.102,796,2.518,797,2.102,799,2.102,801,1.404,802,2.102,803,2.102,805,2.102,807,2.398,808,1.099,809,2.673,810,3.059,811,2.102,813,1.147,814,2.102,835,1.636,838,1.34,894,2.85,935,2.276,976,1.836,982,1.636,1021,2.758,1067,2.146,1089,1.34,1236,1.836,1285,1.512,1327,1.781,1336,1.781,1340,1.636,1538,3.568,1642,1.996,1746,2.276,1757,1.836,1771,1.895,1773,1.958,1779,2.95,1807,2.276,1937,3.634,2039,2.379,2185,2.027,2278,1.895,2310,2.673,2644,2.184,2736,2.496,2813,2.496,3113,4.082,3129,4.972,3130,4.764,3131,5.259,3132,5.506,3133,3.834,3134,2.634,3135,2.634,3136,2.634,3137,5.506,3138,2.634,3139,2.634,3140,3.834,3141,2.634,3142,2.634,3143,4.52,3144,2.634,3145,4.52,3146,2.496,3147,2.634,3148,4.52,3149,2.634,3150,2.496,3151,2.634,3152,2.496,3153,2.634,3154,2.634,3155,2.634,3156,2.634,3157,2.634,3158,3.834,3159,2.634,3160,2.496,3161,2.634,3162,2.379,3163,2.634,3164,2.634,3165,2.496,3166,2.634,3167,2.634,3168,2.496,3169,2.634,3170,2.634,3171,2.496,3172,2.634,3173,2.634,3174,3.834,3175,3.834,3176,2.634,3177,2.634,3178,4.52,3179,3.834,3180,4.52,3181,2.634,3182,2.634,3183,2.634,3184,2.634,3185,2.634,3186,2.634,3187,2.634,3188,2.634,3189,2.496,3190,2.634,3191,2.634,3192,2.634,3193,2.634,3194,2.634,3195,2.634,3196,3.634,3197,2.184,3198,2.276,3199,2.634,3200,2.634,3201,2.634,3202,2.634,3203,2.634,3204,2.634,3205,2.634,3206,2.634,3207,2.634,3208,2.102,3209,2.634,3210,2.634,3211,2.634,3212,2.634,3213,4.964,3214,2.634,3215,4.52,3216,2.634,3217,2.634,3218,2.634,3219,2.634,3220,2.634,3221,2.634,3222,2.634,3223,2.634,3224,2.634,3225,2.634,3226,2.634,3227,2.634,3228,4.52,3229,2.634,3230,2.634,3231,2.634,3232,2.634,3233,2.634,3234,2.634,3235,2.634,3236,2.634,3237,2.379]],["title/interfaces/FindableWidget.html",[0,0.175,486,2.124]],["body/interfaces/FindableWidget.html",[0,0.309,2,0.817,3,0.061,4,0.048,5,0.041,8,0.229,12,0.137,13,0.598,14,0.314,18,0.302,19,0.008,20,0.868,22,1.293,25,1.339,26,0.126,34,0.817,35,1.087,36,1.117,41,2.403,50,1.032,52,0.614,57,2.33,59,0.919,66,1.73,71,1.339,73,0.558,77,1.453,78,0.154,81,2.286,85,1.28,87,1.612,91,2.16,99,0.71,109,0.552,113,1.49,114,0.961,115,0.701,133,1.11,134,2.403,138,2.219,140,0.342,148,2.829,156,1.855,158,0.785,159,0.003,160,0.006,161,0.003,165,2.77,168,0.891,172,0.667,179,1.747,181,0.472,190,1.419,192,1.328,198,0.496,200,0.658,203,1.608,204,0.586,216,1.353,224,0.609,245,2.725,247,1.071,259,0.364,266,1.01,272,0.923,280,0.576,281,0.91,326,2.792,327,2.748,346,2.217,358,0.834,361,1.501,364,1.009,392,2.038,408,1.652,433,1.747,435,2.484,436,1.799,438,2.537,441,1.642,451,4.533,456,2.403,458,1.527,459,2.762,461,1.251,463,1.8,464,3.56,478,0.36,479,3.628,480,2.047,481,2.123,482,1.978,483,2.047,484,3.38,486,3.479,507,1.914,510,2.403,522,1.764,523,4.66,524,1.237,529,1.855,530,2.871,533,2.972,547,2.11,551,2.299,552,1.978,553,3.709,554,2.722,555,3.38,556,3.38,557,2.162,558,3.074,559,2.871,560,1.795,561,1.747,562,2.545,563,1.978,564,1.978,565,2.725,566,1.978,567,1.978,568,1.978,569,2.938,570,1.385,574,2.403,575,3.337,576,2.403,577,2.403,578,2.403,580,4.106,583,1.514,598,2.574,605,0.769,606,1.043,610,2.522,615,1.453,616,2.522,617,2.522,618,3.66,619,2.26,620,2.522,621,3.38,622,2.522,623,2.48,627,4.106,632,3.381,633,2.403,634,2.522,635,3.681,636,2.522,639,2.522,640,2.299,641,2.522,642,3.191,643,3.77,646,2.335,653,2.162,734,0.923,759,3.074,760,2.577,761,2.123,764,2.123,766,2.047,771,2.123,773,3.629,774,1.98,775,2.123,776,1.264,777,2.871,778,2.047,779,2.123,781,2.123,782,1.11,783,2.123,784,1.567,785,3.589,786,3.271,787,2.483,788,2.123,789,4.409,791,2.123,793,2.612,794,2.123,796,2.536,797,2.123,799,2.123,801,1.419,802,2.123,803,2.123,805,2.123,807,2.307,808,1.11,809,2.692,810,3.082,811,2.123,813,1.159,814,2.123,835,1.652,838,1.353,894,2.871,935,2.299,976,1.855,982,1.652,1021,3.271,1067,1.49,1089,1.353,1236,1.855,1285,1.527,1327,1.799,1336,1.799,1340,1.652,1538,3.582,1642,2.011,1746,2.299,1757,1.855,1771,1.914,1773,2.871,1779,2.047,1807,2.299,1937,2.522,2039,2.403,2185,2.047,2278,1.914,2310,2.692,2644,2.206,2736,2.522,2813,2.522,3113,4.106,3129,4.784,3130,4.505,3131,4.784,3132,4.546,3133,2.661,3134,2.661,3135,2.661,3136,2.661,3137,5.525,3138,2.661,3139,2.661,3140,3.862,3141,2.661,3142,2.661,3143,4.988,3144,2.661,3145,4.988,3146,2.522,3147,2.661,3148,4.546,3149,2.661,3150,2.522,3151,2.661,3152,2.522,3153,2.661,3154,2.661,3155,2.661,3156,2.661,3157,2.661,3158,3.862,3159,2.661,3160,2.522,3161,2.661,3162,2.403,3163,2.661,3164,2.661,3165,2.522,3166,2.661,3167,2.661,3168,2.522,3169,2.661,3170,2.661,3171,2.522,3172,2.661,3173,2.661,3174,3.862,3175,3.862,3176,2.661,3177,2.661,3178,4.546,3179,3.862,3180,4.546,3181,2.661,3182,2.661,3183,2.661,3184,2.661,3185,2.661,3186,2.661,3187,2.661,3188,2.661,3189,2.522,3190,2.661,3191,2.661,3192,2.661,3193,2.661,3194,2.661,3195,2.661,3196,3.66,3197,2.206,3198,2.299,3199,2.661,3200,2.661,3201,2.661,3202,2.661,3203,2.661,3204,3.862,3205,3.862,3206,2.661,3207,2.661,3208,2.123,3209,2.661,3210,2.661,3211,2.661,3212,2.661,3213,4.988,3214,2.661,3215,4.546,3216,2.661,3217,2.661,3218,2.661,3219,2.661,3220,2.661,3221,2.661,3222,2.661,3223,2.661,3224,2.661,3225,2.661,3226,2.661,3227,2.661,3228,4.546,3229,2.661,3230,2.661,3231,2.661,3232,2.661,3233,2.661,3234,2.661,3235,2.661,3236,2.661,3237,2.403,3238,3.741]],["title/interfaces/FindableWidget-1.html",[0,0.146,158,0.794,486,1.768]],["body/interfaces/FindableWidget-1.html",[0,0.32,2,1.22,3,0.091,4,0.071,5,0.061,8,0.342,10,2.609,12,0.204,13,0.533,18,0.304,19,0.008,25,1.761,26,0.135,55,2.774,57,2.591,73,0.569,78,0.207,81,1.525,114,2.022,115,0.721,152,2.703,159,0.005,160,0.006,161,0.005,163,1.761,168,1.362,197,0.956,200,0.739,216,3.266,224,0.931,233,1.323,245,3.058,246,4.053,247,1.391,280,0.595,281,0.936,318,3.057,337,3.765,361,1.587,364,1.708,433,2.609,435,2.646,436,2.686,437,3.169,438,3.102,441,2.022,442,5.124,444,3.765,447,3.587,458,3.501,459,2.165,460,3.972,463,1.555,464,3.849,466,2.774,468,3.587,469,4.643,470,3.765,472,3.765,474,3.765,484,2.953,485,4.387,486,3.677,598,1.93,609,4.388,632,3.982,759,3.435,760,2.516,773,2.609,782,1.658,838,2.021,875,4.212,934,3.587,935,3.432,936,3.432,937,3.587,938,6.39,939,2.536,940,4.533,941,4.533,942,4.533,943,4.533,944,5.796,945,4.533,946,4.533,947,4.533,948,4.533,949,3.972,950,3.972,951,3.972,952,4.533,954,5.796,955,5.593,956,3.972,957,5.599,959,5.599,960,3.972,962,4.893,963,3.972,965,4.533,966,2.467,967,4.533,968,4.221,969,3.972,970,5.95,971,5.796,972,4.221,973,4.533,974,4.221,975,4.533,976,2.769,977,5.796,978,4.814]],["title/components/FormCheckboxComponent.html",[204,0.319,726,1.767]],["body/components/FormCheckboxComponent.html",[3,0.071,4,0.056,5,0.048,8,0.501,12,0.161,13,0.454,14,0.705,18,0.325,19,0.008,26,0.099,27,1.45,34,1.328,50,0.75,52,1.236,59,1.01,60,0.884,62,2.79,63,1.223,71,1.499,73,0.538,78,0.106,83,2.251,96,1.346,98,3.57,99,0.832,100,2.489,101,2.117,109,1.332,115,1.022,119,4.595,140,0.637,143,1.084,144,6.812,146,5.184,159,0.004,160,0.005,161,0.004,168,0.998,181,0.767,191,2.421,192,0.782,195,0.948,197,1.354,198,0.803,200,0.825,204,0.528,208,1.664,216,2.2,217,3.637,224,0.845,233,1.44,247,1.474,259,0.397,263,1.45,280,0.297,338,1.767,358,1.556,373,2.362,374,1.388,390,1.45,392,1.767,441,1.127,461,1.692,463,1.488,478,0.423,507,3.111,508,4.324,545,1.704,583,1.695,599,1.883,606,2.206,650,1.388,651,1.53,652,1.302,653,1.747,656,1.419,658,1.704,659,1.713,660,1.843,666,2.01,680,1.33,698,1.419,699,1.821,700,3.42,701,1.992,702,1.45,703,1.992,704,1.992,705,1.551,706,1.886,707,1.992,708,1.704,709,1.992,710,1.249,711,1.992,712,1.625,713,2.144,714,1.704,715,3.42,716,1.587,717,1.704,718,1.704,719,1.039,720,1.587,721,1.704,722,1.992,723,1.747,724,1.992,725,1.886,726,2.927,727,2.498,728,1.992,729,1.625,730,3.42,731,1.664,732,2.848,733,1.664,734,1.499,735,1.664,736,2.76,737,1.625,738,1.791,739,1.992,740,1.587,741,1.992,742,1.837,743,1.388,744,1.419,745,1.302,746,1.419,747,1.992,748,1.704,749,1.992,750,1.747,751,1.302,752,1.992,753,1.625,754,1.886,755,1.992,760,1.843,829,5.724,835,1.937,839,4.856,843,4.595,844,3.459,845,4.595,846,5.273,847,4.595,848,4.595,849,4.595,850,4.595,851,4.595,852,3.327,853,3.905,854,4.595,855,2.546,859,5.518,863,3.315,865,2.175,866,3.12,867,3.459,868,3.315,869,1.704,871,4.595,873,3.315,874,3.315,875,3.585,877,3.315,879,3.315,880,2.957,882,2.957,883,3.315,885,2.319,886,4.595,888,6.187,889,2.11,890,3.315,891,2.11,893,2.695,894,2.319,895,2.244,897,3.315,899,1.223,901,3.315,910,1.45,939,1.992,1046,1.664,1050,2.614,1052,3.735,1731,4.666,2075,4.854,2214,5.333,2393,3.905,3239,5.969,3240,6.344,3241,3.56,3242,6.079,3243,6.977,3244,6.977,3245,6.977,3246,3.888,3247,4.386,3248,4.595,3249,4.386,3250,6.079,3251,4.386,3252,6.079,3253,6.185,3254,6.977,3255,4.386,3256,4.386,3257,3.56,3258,3.56,3259,3.56,3260,3.56,3261,3.56,3262,3.56,3263,3.56,3264,3.56,3265,3.56,3266,3.56,3267,3.56,3268,3.56,3269,3.56,3270,3.56,3271,3.56,3272,4.386,3273,4.386,3274,3.12,3275,3.888,3276,4.386,3277,3.56,3278,3.315,3279,4.595]],["title/components/FormInputComponent.html",[204,0.319,729,1.684]],["body/components/FormInputComponent.html",[3,0.055,4,0.043,5,0.037,8,0.475,12,0.124,13,0.376,14,0.67,18,0.324,19,0.008,25,1.243,26,0.098,34,1.317,35,0.983,50,0.622,52,1.309,57,0.983,59,1.052,60,0.681,61,1.169,62,1.867,63,0.943,71,1.848,73,0.547,78,0.082,83,1.867,96,1.179,98,3.084,99,1.143,100,1.919,101,1.612,108,1.595,109,1.392,111,1.782,114,0.868,115,0.437,140,0.821,143,1.102,146,4.527,158,1.265,159,0.003,160,0.004,161,0.003,168,0.827,170,1.147,179,2.354,181,0.636,192,0.603,195,0.946,197,1.282,198,0.769,200,0.879,204,0.559,208,1.282,216,1.824,217,3.493,224,0.87,233,1.194,247,1.01,259,0.343,263,1.118,266,0.692,272,1.848,280,0.453,281,1.12,338,1.465,344,1.282,358,1.344,364,1.12,373,1.958,374,1.07,390,1.118,435,1.496,441,0.868,461,1.662,463,1.533,478,0.326,482,2.665,545,1.313,554,2.069,569,2.111,584,4.291,598,1.742,599,1.561,605,1.037,606,0.943,623,1.195,625,2.555,650,1.07,651,1.269,652,1.004,653,1.346,656,1.093,658,1.313,659,1.678,660,1.528,666,1.666,680,1.025,698,1.093,699,1.727,700,3.033,701,1.535,702,1.118,703,1.535,704,1.535,705,1.195,706,1.454,707,1.535,708,1.313,709,1.535,710,0.962,711,1.535,712,1.252,713,1.901,714,1.313,715,3.033,716,1.223,717,1.313,718,1.313,719,0.801,720,1.223,721,1.313,722,1.535,723,1.346,724,1.535,725,1.454,726,1.313,727,2.506,728,1.535,729,2.474,730,3.033,731,1.282,732,2.46,733,1.282,734,1.243,735,1.282,736,2.288,737,1.252,738,1.38,739,1.535,740,1.223,741,1.535,742,1.416,743,1.07,744,1.093,745,1.004,746,1.093,747,1.535,748,1.313,749,1.535,750,1.346,751,1.496,752,1.535,753,1.252,754,1.454,755,1.535,760,1.528,774,1.561,801,2.286,829,5.495,835,1.493,839,4.527,843,3.81,844,2.988,845,3.81,846,4.555,847,3.81,848,3.81,849,3.81,850,3.81,851,5.867,852,2.759,853,3.237,854,3.81,855,2.111,859,5.051,863,2.555,865,1.676,866,2.405,867,4.115,868,2.555,869,1.958,871,3.81,873,2.555,874,2.555,875,2.973,877,2.555,879,2.555,880,2.279,882,2.279,883,2.555,885,1.788,886,3.81,888,3.81,889,1.626,890,2.555,891,1.626,893,2.078,894,1.788,895,1.73,897,2.555,899,0.943,901,2.555,910,1.118,939,1.535,962,3.554,966,2.226,983,1.742,1037,2.845,1038,1.282,1044,2.524,1049,2.309,1050,3.072,1054,2.973,1137,2.354,1150,2.759,1212,2.172,1231,4.091,1247,2.226,1252,3.084,1254,2.736,1256,2.131,1259,2.4,1279,1.561,1291,2.111,1292,3.312,1293,3.12,1340,1.493,1362,3.312,1377,2.424,1378,2.579,1381,1.958,1414,2.665,1497,2.815,1642,1.252,1716,3.418,1745,2.579,1874,4.468,1895,3.81,1897,3.81,1908,4.091,1943,3.585,1953,4.091,2031,1.626,2080,5.237,2251,3.097,2393,3.237,2413,2.665,2415,2.744,2463,5.422,2645,2.744,3150,4.503,3239,6.284,3246,2.997,3248,3.81,3257,2.744,3258,2.744,3259,2.744,3260,2.744,3261,2.744,3262,2.744,3263,2.744,3264,2.744,3265,2.744,3266,2.744,3267,2.744,3268,2.744,3269,2.744,3270,2.744,3271,2.744,3274,2.405,3277,2.744,3278,2.555,3280,6.284,3281,2.172,3282,5.04,3283,6.68,3284,6.68,3285,2.997,3286,4.892,3287,4.091,3288,7.144,3289,6.68,3290,3.871,3291,4.892,3292,4.062,3293,4.589,3294,6.026,3295,6.026,3296,5.04,3297,3.381,3298,4.892,3299,2.997,3300,3.585,3301,3.381,3302,6.68,3303,2.997,3304,4.091,3305,4.105,3306,4.468,3307,3.381,3308,4.091,3309,3.381,3310,3.381,3311,2.997,3312,3.381,3313,6.68,3314,6.68,3315,5.04,3316,5.04,3317,3.381,3318,3.381,3319,4.091,3320,3.381,3321,4.468,3322,5.04,3323,5.04,3324,3.381,3325,4.468,3326,3.81,3327,2.997,3328,2.997,3329,3.381,3330,2.555,3331,4.091,3332,3.381,3333,3.381,3334,6.026,3335,5.04,3336,5.04,3337,3.381,3338,3.381,3339,5.04,3340,3.381,3341,3.381,3342,3.381,3343,3.381,3344,3.381,3345,3.381,3346,3.381,3347,3.381,3348,3.381,3349,3.381,3350,3.381,3351,3.381,3352,5.04,3353,2.997,3354,2.744,3355,2.997,3356,4.468,3357,2.997,3358,3.398,3359,6.026,3360,5.04,3361,5.342,3362,5.04,3363,2.997,3364,3.381,3365,3.381,3366,3.381]],["title/components/FormSelectComponent.html",[204,0.319,737,1.684]],["body/components/FormSelectComponent.html",[3,0.073,4,0.057,5,0.05,8,0.467,12,0.165,13,0.463,14,0.711,18,0.322,19,0.008,26,0.073,30,1.659,34,0.986,50,0.557,52,1.252,59,1.018,60,0.91,61,1.56,63,1.259,71,1.529,73,0.518,78,0.109,83,2.297,87,1.34,96,1.299,98,3.624,99,0.856,100,2.562,101,1.895,102,1.843,109,1.125,115,0.583,140,0.697,143,1.066,146,4.801,152,2.423,159,0.004,160,0.005,161,0.004,168,1.018,181,0.783,191,2.469,192,0.805,195,0.942,197,1.368,198,0.808,200,0.794,204,0.534,208,1.712,216,2.244,217,3.651,224,0.855,247,0.757,259,0.434,263,1.492,272,1.113,280,0.42,338,1.802,344,2.352,358,1.7,374,1.429,390,1.492,441,1.16,461,1.698,463,1.631,478,0.435,507,3.173,508,4.411,545,1.754,599,1.921,605,0.929,606,1.259,650,1.429,651,1.561,652,1.34,653,1.798,656,1.46,658,1.754,659,1.717,660,1.88,666,2.05,680,1.369,698,1.46,699,1.843,700,3.462,701,2.05,702,1.492,703,2.05,704,2.05,705,1.596,706,1.941,707,2.05,708,1.754,709,2.05,710,1.285,711,2.05,712,1.672,713,2.171,714,1.754,715,3.462,716,1.633,717,1.754,718,1.754,719,2.003,720,1.633,721,1.754,722,2.05,723,1.798,724,2.05,725,1.941,726,1.754,727,2.543,728,2.05,729,1.672,730,3.462,731,1.712,732,2.892,733,1.712,734,1.529,735,1.712,736,2.815,737,2.824,738,1.843,739,2.05,740,1.633,741,2.05,742,1.891,743,1.429,744,1.46,745,1.34,746,1.46,747,2.05,748,1.754,749,2.05,750,1.798,751,1.34,752,2.05,753,1.672,754,1.941,755,2.05,760,1.88,801,2.352,829,5.705,835,1.994,839,4.687,843,4.687,844,3.512,845,4.687,846,5.354,847,4.687,848,4.687,849,4.687,850,4.687,851,4.687,852,3.394,853,3.983,854,4.687,855,2.597,858,4.002,859,5.808,863,3.412,865,2.238,866,3.211,867,2.238,868,3.412,869,1.754,871,4.687,873,3.412,874,3.412,875,3.657,877,3.412,879,3.412,880,3.043,882,3.043,883,3.412,885,2.387,886,4.687,888,4.687,889,2.171,890,3.412,891,2.983,893,2.774,894,2.387,895,2.31,897,3.412,899,1.259,901,3.412,910,1.492,939,2.05,962,2.663,1050,2.666,1144,2.9,1212,2.9,1313,2.238,1346,1.798,1381,2.409,1776,2.9,2355,3.668,2356,2.562,2367,3.211,2391,5.033,2392,6.19,2393,5.304,2485,3.664,3239,5.424,3257,3.664,3258,3.664,3259,3.664,3260,3.664,3261,3.664,3262,3.664,3263,3.664,3264,3.664,3265,3.664,3266,3.664,3267,3.664,3268,3.664,3269,3.664,3270,3.664,3271,3.664,3274,3.211,3277,3.664,3279,5.354,3285,4.002,3325,5.497,3353,4.002,3354,3.664,3355,4.002,3356,5.497,3357,4.002,3363,5.497,3367,5.424,3368,3.664,3369,7.083,3370,6.201,3371,7.083,3372,6.201,3373,4.514,3374,4.514,3375,4.514,3376,6.201,3377,4.514,3378,4.514,3379,4.514,3380,6.201,3381,7.625,3382,4.514,3383,4.514,3384,4.514,3385,4.514]],["title/classes/FormValidators.html",[78,0.11,3386,3.234]],["body/classes/FormValidators.html",[3,0.102,4,0.08,5,0.069,8,0.47,12,0.23,14,0.645,18,0.266,19,0.008,25,2.227,26,0.102,34,1.678,52,1.457,59,0.774,71,1.894,73,0.47,78,0.151,81,2.098,85,0.867,115,0.992,140,0.843,143,0.81,159,0.005,160,0.006,161,0.005,163,1.547,181,0.969,195,0.917,197,1.314,198,0.702,200,0.858,216,2.27,224,0.861,259,0.357,266,0.954,272,1.547,280,0.587,358,1.712,462,5.805,507,3.93,662,4.53,717,2.984,727,2.141,839,4.711,855,3.217,875,4.53,899,2.141,910,2.074,1089,2.779,1302,3.136,1497,3.877,2240,4.72,3171,5.177,3292,5.177,3386,5.463,3387,5.561,3388,8.3,3389,7.68,3390,7.68,3391,7.68,3392,7.68,3393,6.274,3394,7.68,3395,8.65,3396,9.233,3397,6.808,3398,7.203,3399,7.68,3400,8.3,3401,6.274,3402,7.68,3403,6.808,3404,7.68,3405,7.68,3406,6.737,3407,6.274,3408,6.274,3409,5.092,3410,5.092,3411,6.274,3412,5.092,3413,6.234]],["title/components/FormlyInputComponent.html",[204,0.319,731,1.725]],["body/components/FormlyInputComponent.html",[3,0.09,4,0.071,5,0.061,12,0.204,18,0.273,19,0.008,26,0.09,50,1.099,60,1.122,63,1.553,73,0.545,78,0.134,109,1.052,140,0.801,159,0.005,160,0.006,161,0.005,168,1.17,181,0.9,191,2.838,195,0.904,198,0.783,204,0.551,208,2.112,224,0.999,247,1.195,259,0.406,263,1.841,280,0.604,338,2.072,358,1.242,374,1.762,390,1.841,441,1.43,461,1.72,463,1.408,478,0.537,599,1.725,650,1.762,651,1.794,652,2.116,653,2.217,656,1.801,658,2.163,659,1.746,698,1.801,699,1.723,700,3.763,701,2.528,702,1.841,703,2.528,704,2.528,705,1.969,706,2.394,707,2.528,708,2.163,709,2.528,710,1.585,711,2.528,712,2.062,713,2.359,714,2.163,715,3.763,716,2.015,717,2.163,718,2.163,719,1.319,720,2.015,721,2.163,722,2.528,723,2.217,724,2.528,725,2.394,726,2.163,727,2.311,728,2.528,729,2.062,730,3.763,731,3.143,732,3.498,733,2.112,734,1.758,735,2.112,736,3.236,737,2.062,738,2.273,739,2.528,740,2.015,741,2.528,742,2.332,743,1.762,744,1.801,745,1.653,746,1.801,747,2.528,748,2.163,749,2.528,750,2.217,751,1.653,752,2.528,753,2.062,754,2.394,755,2.528,852,4.303,1049,1.925,1050,2.394,1497,3.672,3281,3.577,3290,5.05,3292,5.3,3300,3.961,3303,4.936,3306,4.936,3414,7.998,3415,6.381,3416,6.727,3417,6.727,3418,7.128,3419,5.568,3420,7.128,3421,4.936,3422,5.568,3423,7.128,3424,4.936,3425,5.568,3426,7.128,3427,5.568,3428,5.568,3429,7.128,3430,4.936,3431,5.568,3432,7.128,3433,4.52,3434,5.568,3435,7.128,3436,3.577,3437,3.577,3438,4.936,3439,4.936,3440,5.568,3441,4.936,3442,4.52,3443,5.568,3444,5.568,3445,5.568,3446,5.568]],["title/components/FormlyNumberWithUnitInputComponent.html",[204,0.319,733,1.725]],["body/components/FormlyNumberWithUnitInputComponent.html",[3,0.089,4,0.069,5,0.06,12,0.2,19,0.008,26,0.089,50,1.076,60,1.103,63,1.525,73,0.521,78,0.132,96,1.227,99,1.037,109,1.04,140,0.863,159,0.005,160,0.006,161,0.005,168,1.157,191,2.806,195,0.885,198,0.778,204,0.546,208,2.074,224,0.978,247,0.917,259,0.444,263,1.808,280,0.602,338,2.048,358,1.22,374,1.731,390,1.808,441,1.405,461,1.718,463,1.392,478,0.527,599,1.694,650,1.731,651,1.773,652,2.092,653,2.178,656,1.769,658,2.125,659,1.744,698,1.769,699,1.703,700,3.738,701,2.483,702,1.808,703,2.483,704,2.483,705,1.934,706,2.352,707,2.483,708,2.125,709,2.483,710,1.557,711,2.483,712,2.026,713,2.344,714,2.125,715,3.738,716,1.979,717,2.125,718,2.125,719,1.296,720,1.979,721,2.125,722,2.483,723,2.178,724,2.483,725,2.352,726,2.125,727,2.375,728,2.483,729,2.026,730,3.738,731,2.074,732,3.478,733,3.122,734,2.347,735,2.074,736,3.199,737,2.026,738,2.233,739,2.483,740,1.979,741,2.483,742,2.291,743,1.731,744,1.769,745,1.624,746,1.769,747,2.483,748,2.125,749,2.483,750,2.178,751,1.624,752,2.483,753,2.026,754,2.352,755,2.483,852,4.267,1049,1.891,1050,2.352,1497,3.641,1642,2.026,3281,3.513,3290,5.007,3292,5.255,3299,4.849,3300,3.89,3311,4.849,3415,6.327,3421,4.849,3424,4.849,3430,4.849,3433,4.44,3436,3.513,3437,3.513,3438,4.849,3439,4.849,3441,4.849,3442,4.44,3447,7.866,3448,6.311,3449,5.544,3450,5.544,3451,5.47,3452,7.046,3453,5.47,3454,7.046,3455,5.47,3456,7.046,3457,7.046,3458,5.47,3459,5.47,3460,7.046,3461,5.47,3462,7.046,3463,5.544,3464,5.47,3465,3.513,3466,3.361,3467,7.046,3468,5.47]],["title/components/FormlySelectComponent.html",[204,0.319,735,1.725]],["body/components/FormlySelectComponent.html",[3,0.099,4,0.077,5,0.067,12,0.223,19,0.008,26,0.099,60,1.227,63,1.697,73,0.461,78,0.147,140,0.689,159,0.005,160,0.006,161,0.005,168,1.237,191,3.001,195,0.765,198,0.804,204,0.574,208,2.308,247,1.02,259,0.487,263,2.012,280,0.555,338,2.191,358,1.357,374,1.926,390,2.012,441,1.563,461,1.728,463,1.489,478,0.586,599,1.885,650,1.926,651,1.897,652,2.238,653,2.423,656,1.968,658,2.364,659,1.757,698,1.968,699,1.822,700,3.886,701,2.763,702,2.012,703,2.763,704,2.763,705,2.152,706,2.617,707,2.763,708,2.364,709,2.763,710,1.732,711,2.763,712,2.254,713,2.436,714,2.364,715,3.886,716,2.202,717,2.364,718,2.364,719,1.94,720,2.202,721,2.364,722,2.763,723,2.423,724,2.763,725,2.617,726,2.364,727,2.386,728,2.763,729,2.254,730,3.886,731,2.308,732,3.592,733,2.308,734,1.859,735,3.246,736,3.422,737,2.254,738,2.485,739,2.763,740,2.202,741,2.763,742,2.549,743,1.926,744,1.968,745,1.807,746,1.968,747,2.763,748,2.364,749,2.763,750,2.423,751,1.807,752,2.763,753,2.254,754,2.617,755,2.763,852,4.482,1267,3.43,1268,2.617,1346,2.423,1706,2.763,2355,2.927,2356,3.454,3368,4.94,3415,6.647,3433,4.94,3436,3.909,3437,3.909,3442,4.94,3469,7.259,3470,8.189,3471,6.086,3472,6.086,3473,6.086,3474,7.538,3475,6.086]],["title/interfaces/FunctionRenderer.html",[0,0.175,1251,2.124]],["body/interfaces/FunctionRenderer.html",[0,0.288,2,1.092,3,0.081,4,0.064,5,0.055,8,0.306,9,2.628,12,0.183,13,0.618,18,0.313,19,0.008,21,5.107,22,2.861,26,0.134,27,1.653,30,1.338,35,1.453,38,2.948,47,2.83,50,1.071,52,1.425,55,2.581,57,1.931,60,1.008,61,1.728,64,1.617,65,2.934,66,1.84,73,0.552,78,0.121,83,2.461,85,0.918,90,4.004,91,1.69,96,0.787,99,0.948,102,3.046,112,2.948,115,1.027,133,1.484,138,1.582,141,3.046,143,0.646,148,2.245,151,3.37,153,3.211,159,0.004,160,0.005,161,0.004,165,1.728,168,0.821,192,0.892,195,0.757,200,0.746,203,3.208,204,0.625,224,0.561,233,1.767,234,1.516,244,2.948,247,1.333,259,0.453,266,0.763,272,1.233,280,0.45,321,1.852,344,1.896,361,1.603,363,2.405,389,2.094,466,3.089,509,1.728,513,2.208,565,1.942,570,1.852,583,2.08,615,1.942,619,2.349,651,1.258,680,2.262,699,2,705,1.768,746,1.617,774,1.548,801,1.896,807,1.548,832,3.211,869,1.942,889,2.405,899,1.394,966,2.934,976,2.479,981,2.558,984,3.133,985,3.942,986,1.809,988,2.899,989,2.811,990,3.294,991,3.386,995,2.58,996,3.211,999,2.15,1001,3.379,1020,2.208,1028,4.793,1030,1.768,1033,4.725,1034,2.934,1035,1.728,1036,3.37,1037,1.991,1049,1.728,1060,3.211,1089,1.809,1164,3.196,1188,2.764,1245,2.783,1246,2.558,1251,3.714,1271,2.558,1272,2.558,1275,2.27,1276,2.335,1278,2.479,1279,2.058,1280,2.783,1281,3.046,1282,3.294,1284,2.712,1294,3.125,1304,1.991,1341,2.094,1361,2.558,1363,2.335,1511,2.558,1519,3.559,1688,3.046,1726,3.556,1727,3.556,1728,4.479,1729,2.208,1730,2.857,1731,4.69,1732,6.057,1733,5.64,1734,4.058,1735,3.556,1736,4.058,1737,6.057,1738,5.393,1739,5.393,1740,5.393,1741,4.058,1742,4.058,1743,4.058,1744,4.725,1745,2.558,1746,3.072,1747,2.837,1748,4.058,1749,3.779,1750,4.058,1751,4.058,1752,4.058,1753,2.948,1754,4.058,1755,3.556,1756,4.058,1757,2.479,1758,3.37,1759,4.058,1760,2.837,1761,4.058,1762,3.779,1763,3.779,1764,3.211,1765,5.393,1766,4.058,1767,3.072,1768,2.948,1769,4.058,1770,3.37,1771,2.558,1772,2.479,1773,2.644,1774,3.211,1775,3.37,1776,3.211,1777,3.37,1778,3.37,1779,2.736,1780,4.058,3476,4.432,3477,4.058]],["title/pipes/FunctionRendererPipe.html",[3478,3.234,3479,3.065]],["body/pipes/FunctionRendererPipe.html",[3,0.112,4,0.088,5,0.076,8,0.422,13,0.607,14,0.58,18,0.239,19,0.008,26,0.112,52,1.133,59,0.851,64,2.63,73,0.498,78,0.167,99,1.543,115,1.05,159,0.006,160,0.007,161,0.006,170,1.57,181,0.871,195,0.7,197,1.181,198,0.79,210,4.032,224,0.774,259,0.393,272,1.702,280,0.551,361,1.639,392,2.364,478,0.665,522,1.926,658,2.681,885,4.301,984,2.689,991,3.387,1034,3.592,1245,3.407,1251,3.799,2264,4.301,2625,6.601,2828,5.602,3111,7.916,3478,5.784,3479,5.483,3480,4.652,3481,7.209,3482,6.118,3483,7.209,3484,7.209,3485,6.901,3486,7.209,3487,6.901]],["title/interfaces/GridColumn.html",[0,0.175,989,1.608]],["body/interfaces/GridColumn.html",[0,0.269,2,0.957,3,0.071,4,0.056,5,0.048,8,0.268,9,2.704,12,0.16,13,0.59,14,0.763,18,0.323,19,0.008,21,5.255,22,2.9,26,0.128,27,1.448,30,1.172,35,1.273,38,2.583,47,2.998,50,1.035,52,1.343,55,2.359,57,1.273,60,1.224,61,1.514,64,1.964,65,3.325,66,1.95,73,0.572,78,0.147,83,2.788,85,0.839,90,3.809,91,2.052,96,1.097,99,1.152,102,2.846,112,2.583,115,1.057,133,1.802,138,1.922,141,3.073,143,0.784,148,2.544,151,2.952,153,3.9,159,0.004,160,0.005,161,0.004,165,2.099,168,0.719,192,0.781,195,0.708,200,0.706,203,2.611,204,0.608,233,1.783,234,1.328,244,3.581,247,1.406,259,0.428,266,0.801,272,1.498,280,0.412,321,2.249,344,2.303,361,1.594,363,2.106,389,1.834,466,2.924,509,2.099,513,2.682,565,1.701,570,2.249,583,2.099,615,2.359,619,2.661,651,1.102,680,2.397,699,2.125,705,1.548,746,1.416,774,1.356,801,2.303,807,1.881,832,2.813,869,2.359,889,2.106,899,1.693,966,3.079,976,2.171,981,2.241,984,3.156,985,3.456,986,1.584,988,3.178,989,2.966,990,4.056,991,3.444,995,2.48,996,2.813,999,1.883,1001,3.492,1020,2.682,1028,5.493,1030,1.548,1033,5.354,1034,3.325,1035,2.099,1036,4.093,1037,2.418,1049,2.099,1060,3.9,1089,2.197,1164,3.353,1188,3.03,1245,1.834,1246,2.241,1251,3.821,1271,2.241,1272,2.241,1275,1.988,1276,2.045,1278,2.171,1279,2.449,1280,2.543,1281,2.846,1282,3.732,1284,2.846,1294,3.427,1304,2.418,1341,2.543,1361,3.107,1363,2.836,1511,2.241,1519,3.607,1688,2.846,1726,3.114,1727,3.114,1728,4.093,1729,1.934,1730,3.237,1731,4.663,1732,5.658,1733,5.689,1734,3.554,1735,3.114,1736,4.929,1737,6.64,1738,6.11,1739,6.64,1740,6.11,1741,4.929,1742,4.929,1743,4.929,1744,5.354,1745,3.107,1746,3.731,1747,4.272,1748,4.929,1749,4.589,1750,4.929,1751,4.929,1752,4.929,1753,3.581,1754,4.929,1755,4.319,1756,6.11,1757,3.011,1758,4.093,1759,4.929,1760,3.446,1761,4.929,1762,4.589,1763,4.589,1764,3.9,1765,6.64,1766,6.11,1767,2.691,1768,2.583,1769,3.554,1770,2.952,1771,2.241,1772,2.171,1773,2.316,1774,2.813,1775,2.952,1776,2.813,1777,2.952,1778,2.952,1779,2.397,1780,3.554]],["title/interfaces/GridDataFetchResult.html",[0,0.175,1315,2.327]],["body/interfaces/GridDataFetchResult.html",[0,0.277,1,2.17,2,0.452,3,0.034,4,0.026,5,0.023,8,0.127,9,1.681,10,3.255,12,0.285,13,0.379,14,0.368,15,3.439,18,0.249,19,0.008,20,1.181,22,0.715,25,1.079,26,0.126,27,1.681,28,1.058,30,1.798,34,1.675,36,1.682,39,0.995,40,2.478,42,0.914,47,0.785,50,0.975,52,0.562,53,1.751,54,1.058,55,3.234,56,1.81,59,0.908,60,1.295,61,2.323,62,0.766,63,1.692,64,2.078,66,0.844,67,0.914,69,2.92,71,0.844,73,0.477,74,2.044,77,1.33,78,0.106,80,1.026,81,0.935,83,1.267,84,1.947,85,0.605,86,2.793,87,1.51,88,0.804,90,3.779,91,0.699,93,3.491,96,1.097,99,0.965,101,2.014,102,0.845,108,1.783,109,1.275,111,1.992,114,0.531,115,0.951,118,1.862,120,1.094,127,1.743,129,1.471,133,1.016,136,0.824,137,2.24,138,1.083,140,0.824,141,1.397,143,0.83,148,1.904,149,1.094,152,1.948,154,1.992,155,0.966,158,1.507,159,0.003,160,0.003,161,0.002,168,0.34,170,0.471,172,1.541,173,1.132,181,0.552,192,0.369,194,1.787,195,0.21,198,0.4,200,0.411,202,0.995,203,0.889,204,0.516,210,2.17,224,0.491,233,0.811,234,1.038,243,0.845,247,0.347,250,1.132,259,0.436,260,0.641,266,0.998,269,1.132,270,1.873,272,0.844,280,0.607,281,1.077,286,3.012,321,0.766,327,0.889,336,0.966,338,1.272,344,2.549,358,0.461,361,1.025,364,1.369,369,1.646,374,0.655,377,2.137,378,2.376,390,1.131,392,1.272,438,1.238,459,1.038,461,0.369,463,0.676,478,0.199,509,1.513,513,0.914,522,1.037,524,1.862,539,1.751,545,0.804,547,1.33,548,0.715,554,1.356,562,0.824,570,0.766,583,0.954,598,1.183,605,1.249,606,0.577,619,1.548,642,2.417,650,0.655,651,0.861,652,1.299,656,0.669,659,0.797,660,0.627,666,1.131,670,1.697,680,1.708,681,2.446,697,1.094,699,1.058,702,1.131,710,0.589,713,0.589,719,0.49,743,0.655,744,0.669,745,1.016,751,0.614,774,0.641,776,1.157,782,1.907,784,1.833,787,0.804,808,1.299,813,1.06,823,1.026,838,0.748,865,1.026,869,0.804,891,0.995,899,0.577,982,2.246,983,1.513,984,2.435,986,0.748,987,3.106,988,2.924,989,2.464,995,1.327,998,0.966,999,0.889,1001,1.787,1002,1.094,1003,1.094,1020,2.246,1030,0.731,1032,3.255,1034,1.511,1035,2.899,1037,2.859,1038,1.298,1042,2.044,1044,1.433,1045,0.995,1046,1.298,1049,2.221,1067,1.363,1070,0.866,1073,0.914,1083,0.995,1089,1.584,1128,0.995,1129,1.397,1137,0.966,1139,3.455,1188,0.766,1204,0.804,1220,0.641,1232,0.866,1237,1.471,1240,2.69,1241,1.058,1242,1.942,1243,1.511,1244,1.942,1245,2.542,1246,1.751,1247,2.246,1248,1.174,1249,1.094,1250,1.174,1251,2.044,1252,1.751,1253,2.24,1254,2.558,1255,1.174,1256,2.272,1257,1.942,1258,1.942,1259,0.824,1260,1.174,1261,1.942,1262,2.484,1263,1.942,1264,0.601,1265,1.942,1266,1.174,1267,1.433,1268,0.889,1269,1.058,1270,1.132,1271,1.058,1272,1.058,1273,0.731,1274,0.889,1275,0.939,1276,0.966,1277,1.238,1278,1.026,1279,0.641,1280,1.833,1281,2.3,1282,2.17,1283,2.395,1284,3.471,1285,3.306,1286,2.979,1287,1.132,1288,2.314,1289,1.094,1290,1.058,1291,0.866,1292,1.026,1293,0.966,1294,2.815,1295,1.873,1296,2.24,1297,1.094,1298,1.132,1299,1.132,1300,2.69,1301,1.058,1302,1.397,1303,4.477,1304,2.025,1305,1.81,1306,1.132,1307,3.472,1308,2.395,1309,1.81,1310,3.106,1311,1.511,1312,1.174,1313,1.697,1314,1.942,1315,2.24,1316,1.942,1317,2.71,1318,3.288,1319,2.446,1320,1.81,1321,1.174,1322,1.174,1323,1.942,1324,1.132,1325,2.784,1326,1.174,1327,2.105,1328,1.81,1329,1.942,1330,1.174,1331,1.942,1332,1.942,1333,2.69,1334,2.484,1335,1.026,1336,0.995,1337,1.132,1338,1.174,1339,1.174,1340,0.914,1341,1.833,1342,3.198,1343,1.646,1344,3.895,1345,2.484,1346,0.824,1347,1.174,1348,1.174,1349,4.326,1350,1.094,1351,2.3,1352,3.445,1353,3.814,1354,1.094,1355,1.174,1356,2.314,1357,1.058,1358,0.731,1359,1.174,1360,1.174,1361,1.058,1362,2.793,1363,0.966,1364,1.174,1365,0.995,1366,2.314,1367,0.866,1368,0.914,1369,1.174,1370,2.044,1371,1.174,1372,1.094,1373,1.942,1374,1.751,1375,1.174,1376,1.174,1377,1.646,1378,1.058,1379,1.174,1380,1.174,1381,0.804,1382,1.174,1383,1.873,1384,2.484,1385,1.174,1386,1.174,1387,1.132,1388,1.81,1389,1.094,1390,1.81,1391,1.094,1392,2.484,1393,1.174,1394,1.026,1395,1.094,1396,1.174,1397,1.942,1398,1.174,1399,1.174,1400,1.174,1401,1.174,1402,1.174,1403,1.174,1404,1.873,1405,1.174,1406,2.484,1407,1.174,1408,1.174,1409,1.132,1410,2.887,1411,2.24,1412,1.174,1413,1.132,1414,1.094,1415,1.132,1416,1.174,1417,1.174,1418,1.132,1419,1.942,1420,1.174,1421,1.174,1422,1.942,1423,1.174,1424,1.174,1425,0.966,1426,1.174,1427,1.174,1428,1.174,1429,1.174,1430,3.814,1431,1.942,1432,1.174,1433,1.174,1434,1.174,1435,1.942,1436,1.174,1437,1.942,1438,1.942,1439,1.174,1440,1.174,1441,1.174,1442,1.942,1443,1.174,1444,2.887,1445,1.942,1446,1.942,1447,1.174,1448,1.174,1449,1.026,1450,1.174,1451,1.174,1452,1.174,1453,1.174,1454,1.174,1455,1.174,1456,1.942,1457,1.942,1458,1.942,1459,1.942,1460,2.484,1461,1.174,1462,1.174,1463,1.174,1464,1.174,1465,1.942,1466,1.942,1467,2.887,1468,1.174,1469,1.174,1470,1.174,1471,1.174,1472,1.174,1473,2.558,1474,3.445,1475,3.198,1476,1.942,1477,1.174,1478,1.942,1479,2.484,1480,1.174,1481,2.484,1482,1.174,1483,2.887,1484,1.942,1485,1.174,1486,1.174,1487,1.174,1488,1.942,1489,1.132,1490,1.174,1491,1.026,1492,1.174,1493,1.174,1494,1.174,1495,1.174,1496,1.942,1497,2.376,1498,1.174,1499,1.174,1500,1.174,1501,1.174,1502,1.174,1503,1.511,1504,1.174,1505,1.174,1506,1.174,1507,2.484,1508,1.174,1509,1.174,1510,1.132,1511,1.751,1512,1.174,1513,1.174,1514,1.174,1515,1.174,1516,1.174,1517,1.174,1518,1.174,1519,1.471,1520,1.174,1521,1.174,1522,1.174,1523,1.174,1524,1.094,1525,1.174,1526,1.174,1527,1.942,1528,1.174,1529,1.174,1530,1.174,1531,1.174,1532,1.174,1533,0.995,1534,1.174,1535,1.026,1536,1.174,1537,1.174,1538,0.995,1539,1.174,1540,1.174,1541,1.174,1542,1.174,1543,1.174,1544,1.174,1545,1.174,1546,1.174,1547,1.174,1548,1.174,1549,1.174,1550,0.804,1551,1.174,1552,1.174,1553,1.873,1554,1.174,1555,1.174,1556,1.174,1557,1.174,1558,1.174,1559,1.174,1560,1.174,1561,1.174,1562,1.942,1563,1.942,1564,1.942,1565,1.174,1566,2.314,1567,2.887,1568,1.942,1569,1.174,1570,1.174,1571,1.174,1572,1.174,1573,1.174,1574,1.174,1575,1.094,1576,1.174,1577,1.174,1578,1.174,1579,1.174,1580,0.699,1581,1.174,1582,1.174,1583,1.942,1584,1.174,1585,2.484,1586,1.174,1587,1.174,1588,1.174,1589,1.942,1590,1.174,1591,1.174,1592,1.942,1593,1.942,1594,1.174,1595,1.174,1596,1.094,1597,1.132,1598,1.174,1599,1.174,1600,1.174,1601,1.942,1602,1.942,1603,1.174,1604,1.174,1605,1.942,1606,1.174,1607,1.174,1608,1.174,1609,1.174,1610,1.174,1611,1.174,1612,1.174,1613,1.132,1614,1.174,1615,1.174,1616,1.174,1617,1.174,1618,1.174,1619,1.942,1620,1.174,1621,1.174,1622,1.174,1623,1.174,1624,1.174,1625,1.174,1626,1.174,1627,1.174,1628,1.174,1629,1.942,1630,2.887,1631,2.484,1632,1.174,1633,1.174,1634,1.942,1635,1.174,1636,1.174,1637,1.174,1638,1.174,1639,1.174,1640,1.174,1641,1.174,1642,1.267,1643,1.942,1644,1.174,1645,1.174,1646,1.174,1647,1.132,1648,1.174,1649,1.174,1650,1.174,1651,1.174,1652,1.174,1653,1.174,1654,1.132,1655,1.174,1656,1.174,1657,1.174,1658,1.174,1659,1.174,1660,1.174,1661,2.887,1662,1.174,1663,1.174,1664,1.174,1665,1.174,1666,1.174,1667,1.174,1668,1.132,1669,1.174,1670,1.174,1671,1.942,1672,1.174,1673,1.942,1674,1.174,1675,1.174,1676,1.942,1677,1.174,1678,1.174,1679,1.174,1680,1.174,1681,1.174,1682,2.484,1683,1.174,1684,1.174,1685,1.174,1686,1.174,1687,1.174,1688,0.845,1689,1.174,1690,1.174,1691,1.174,1692,1.174,1693,1.174,1694,1.174,1695,1.174,1696,1.174,1697,1.026,1698,1.132,1699,1.174,1700,1.174,1701,0.995,1702,1.174,1703,1.174,1704,1.942,1705,3.198,1706,0.939,1707,1.174,1708,1.174,1709,1.174,1710,1.174,1711,1.174,1712,1.174,1713,1.942,1714,1.174,1715,1.174,1716,1.751,1717,1.174,1718,1.174,1719,1.094,1720,1.174,1721,1.174,1722,1.094,1723,1.174,1724,1.174,1725,1.174]],["title/interfaces/GridState.html",[0,0.175,1366,2.405]],["body/interfaces/GridState.html",[0,0.276,1,2.159,2,0.449,3,0.033,4,0.026,5,0.023,8,0.126,9,1.674,10,3.246,12,0.285,13,0.378,14,0.538,15,3.428,18,0.255,19,0.008,20,1.302,22,0.71,25,1.074,26,0.126,27,1.674,28,1.051,30,1.792,34,1.672,36,1.68,39,0.988,40,2.469,42,0.907,47,0.779,50,0.973,52,0.558,53,1.74,54,1.051,55,3.173,56,1.798,59,0.906,60,1.219,61,2.213,62,0.76,63,1.686,64,2.071,66,0.839,67,1.502,69,2.909,71,0.839,73,0.489,74,1.589,77,1.321,78,0.105,80,1.018,81,0.929,83,1.26,84,1.939,85,0.601,86,2.782,87,1.503,88,0.798,90,3.774,91,0.694,93,3.485,96,1.093,99,0.96,101,2.009,102,0.838,108,1.776,109,1.273,111,1.984,114,0.527,115,0.97,118,1.855,120,1.086,127,1.734,129,1.462,133,1.292,136,0.818,137,2.228,138,1.076,140,0.817,141,1.389,143,0.827,148,1.896,149,1.086,152,1.942,154,1.984,155,0.959,158,1.503,159,0.003,160,0.003,161,0.002,168,0.337,170,0.467,172,1.54,173,1.124,181,0.55,192,0.366,194,1.778,195,0.208,198,0.398,200,0.409,202,0.988,203,0.883,204,0.515,210,2.159,224,0.488,233,0.806,234,1.031,243,0.838,247,0.344,250,1.124,259,0.435,260,0.636,266,0.996,269,1.124,270,1.861,272,0.839,280,0.607,281,1.073,286,2.855,321,0.76,327,0.883,336,0.959,338,1.265,344,2.541,358,0.458,361,1.219,364,1.365,369,1.636,374,0.65,377,2.294,378,2.365,390,1.124,392,1.265,438,1.231,459,1.031,461,0.366,463,0.672,478,0.198,509,1.505,513,0.907,522,1.031,524,1.855,539,1.74,545,0.798,547,1.321,548,0.71,554,1.568,562,0.818,570,0.76,583,0.948,598,1.505,605,1.244,606,0.572,619,1.539,642,2.408,650,0.65,651,0.856,652,1.292,656,0.664,659,0.793,660,0.623,666,1.124,670,1.686,680,1.834,681,2.435,697,1.086,699,1.052,702,1.124,710,0.584,713,0.584,719,0.486,743,0.65,744,0.664,745,1.01,751,0.609,774,0.636,776,1.149,782,1.901,784,1.824,787,0.798,808,1.503,813,1.053,823,1.018,838,0.743,865,1.018,869,0.798,891,0.988,899,0.572,982,1.923,983,1.505,984,2.482,986,0.743,987,3.095,988,2.917,989,2.457,995,1.32,998,0.959,999,0.883,1001,1.778,1002,1.086,1003,1.086,1020,2.236,1030,0.726,1032,3.246,1034,0.907,1035,2.934,1037,2.852,1038,1.29,1042,2.034,1044,1.425,1045,0.989,1046,1.29,1049,2.213,1067,1.354,1070,0.86,1073,0.907,1083,0.988,1089,1.575,1128,0.988,1129,1.389,1137,0.959,1139,3.445,1188,0.76,1204,0.798,1220,0.636,1232,0.86,1237,1.462,1240,2.677,1241,1.051,1242,1.93,1243,1.502,1244,1.93,1245,2.533,1246,1.74,1247,2.236,1248,1.165,1249,1.086,1250,1.165,1251,2.034,1252,1.74,1253,2.228,1254,2.548,1255,1.165,1256,2.264,1257,1.93,1258,1.93,1259,0.818,1260,1.165,1261,1.93,1262,2.471,1263,1.93,1264,0.597,1265,1.93,1266,1.165,1267,1.425,1268,0.883,1269,1.051,1270,1.124,1271,1.051,1272,1.051,1273,0.726,1274,0.883,1275,0.932,1276,0.959,1277,1.231,1278,1.018,1279,0.636,1280,1.824,1281,2.291,1282,2.159,1283,2.383,1284,3.466,1285,3.3,1286,2.967,1287,1.124,1288,2.302,1289,1.086,1290,1.051,1291,0.86,1292,1.018,1293,0.959,1294,2.806,1295,1.861,1296,2.228,1297,1.086,1298,1.124,1299,1.124,1300,2.677,1301,1.051,1302,1.389,1303,4.616,1304,2.016,1305,1.798,1306,1.124,1307,3.468,1308,2.383,1309,1.798,1310,3.095,1311,1.502,1312,1.165,1313,1.686,1314,1.165,1315,1.74,1316,1.165,1317,2.435,1318,2.591,1319,2.699,1320,2.677,1321,1.165,1322,1.165,1323,1.93,1324,1.124,1325,2.771,1326,1.165,1327,2.094,1328,2.677,1329,1.93,1330,1.165,1331,1.93,1332,1.93,1333,2.677,1334,2.471,1335,1.018,1336,0.988,1337,1.124,1338,1.165,1339,1.165,1340,0.907,1341,2.121,1342,3.185,1343,1.636,1344,3.885,1345,2.471,1346,0.818,1347,1.165,1348,1.165,1349,4.318,1350,1.086,1351,2.291,1352,3.432,1353,3.803,1354,1.086,1355,1.165,1356,2.302,1357,1.051,1358,0.726,1359,1.93,1360,1.93,1361,1.74,1362,2.999,1363,1.589,1364,1.93,1365,1.636,1366,2.677,1367,1.425,1368,1.502,1369,1.93,1370,2.991,1371,2.873,1372,1.086,1373,1.93,1374,1.74,1375,1.165,1376,1.165,1377,1.636,1378,1.051,1379,1.165,1380,1.165,1381,0.798,1382,1.165,1383,1.861,1384,2.471,1385,1.165,1386,1.165,1387,1.124,1388,1.798,1389,1.086,1390,1.798,1391,1.086,1392,2.471,1393,1.165,1394,1.018,1395,1.086,1396,1.165,1397,1.93,1398,1.165,1399,1.165,1400,1.165,1401,1.165,1402,1.165,1403,1.165,1404,1.861,1405,1.165,1406,2.471,1407,1.165,1408,1.165,1409,1.124,1410,2.873,1411,2.228,1412,1.165,1413,1.124,1414,1.086,1415,1.124,1416,1.165,1417,1.165,1418,1.124,1419,1.93,1420,1.165,1421,1.165,1422,1.93,1423,1.165,1424,1.165,1425,0.959,1426,1.165,1427,1.165,1428,1.165,1429,1.165,1430,3.802,1431,1.93,1432,1.165,1433,1.165,1434,1.165,1435,1.93,1436,1.165,1437,1.93,1438,1.93,1439,1.165,1440,1.165,1441,1.165,1442,1.93,1443,1.165,1444,2.873,1445,1.93,1446,1.93,1447,1.165,1448,1.165,1449,1.018,1450,1.165,1451,1.165,1452,1.165,1453,1.165,1454,1.165,1455,1.165,1456,1.93,1457,1.93,1458,1.93,1459,1.93,1460,2.471,1461,1.165,1462,1.165,1463,1.165,1464,1.165,1465,1.93,1466,1.93,1467,2.873,1468,1.165,1469,1.165,1470,1.165,1471,1.165,1472,1.165,1473,2.548,1474,3.432,1475,3.185,1476,1.93,1477,1.165,1478,1.93,1479,2.471,1480,1.165,1481,2.471,1482,1.165,1483,2.873,1484,1.93,1485,1.165,1486,1.165,1487,1.165,1488,1.93,1489,1.124,1490,1.165,1491,1.018,1492,1.165,1493,1.165,1494,1.165,1495,1.165,1496,1.93,1497,2.365,1498,1.165,1499,1.165,1500,1.165,1501,1.165,1502,1.165,1503,1.502,1504,1.165,1505,1.165,1506,1.165,1507,2.471,1508,1.165,1509,1.165,1510,1.124,1511,1.74,1512,1.165,1513,1.165,1514,1.165,1515,1.165,1516,1.165,1517,1.165,1518,1.165,1519,1.462,1520,1.165,1521,1.165,1522,1.165,1523,1.165,1524,1.086,1525,1.165,1526,1.165,1527,1.93,1528,1.165,1529,1.165,1530,1.165,1531,1.165,1532,1.165,1533,0.988,1534,1.165,1535,1.018,1536,1.165,1537,1.165,1538,0.988,1539,1.165,1540,1.165,1541,1.165,1542,1.165,1543,1.165,1544,1.165,1545,1.165,1546,1.165,1547,1.165,1548,1.165,1549,1.165,1550,0.798,1551,1.165,1552,1.165,1553,1.861,1554,1.165,1555,1.165,1556,1.165,1557,1.165,1558,1.165,1559,1.165,1560,1.165,1561,1.165,1562,1.93,1563,1.93,1564,1.93,1565,1.165,1566,2.302,1567,2.873,1568,1.93,1569,1.165,1570,1.165,1571,1.165,1572,1.165,1573,1.165,1574,1.165,1575,1.086,1576,1.165,1577,1.165,1578,1.165,1579,1.165,1580,0.694,1581,1.165,1582,1.165,1583,1.93,1584,1.165,1585,2.471,1586,1.165,1587,1.165,1588,1.165,1589,1.93,1590,1.165,1591,1.165,1592,1.93,1593,1.93,1594,1.165,1595,1.165,1596,1.086,1597,1.124,1598,1.165,1599,1.165,1600,1.165,1601,1.93,1602,1.93,1603,1.165,1604,1.165,1605,1.93,1606,1.165,1607,1.165,1608,1.165,1609,1.165,1610,1.165,1611,1.165,1612,1.165,1613,1.124,1614,1.165,1615,1.165,1616,1.165,1617,1.165,1618,1.165,1619,1.93,1620,1.165,1621,1.165,1622,1.165,1623,1.165,1624,1.165,1625,1.165,1626,1.165,1627,1.165,1628,1.165,1629,1.93,1630,2.873,1631,2.471,1632,1.165,1633,1.165,1634,1.93,1635,1.165,1636,1.165,1637,1.165,1638,1.165,1639,1.165,1640,1.165,1641,1.165,1642,1.26,1643,1.93,1644,1.165,1645,1.165,1646,1.165,1647,1.124,1648,1.165,1649,1.165,1650,1.165,1651,1.165,1652,1.165,1653,1.165,1654,1.124,1655,1.165,1656,1.165,1657,1.165,1658,1.165,1659,1.165,1660,1.165,1661,2.873,1662,1.165,1663,1.165,1664,1.165,1665,1.165,1666,1.165,1667,1.165,1668,1.124,1669,1.165,1670,1.165,1671,1.93,1672,1.165,1673,1.93,1674,1.165,1675,1.165,1676,1.93,1677,1.165,1678,1.165,1679,1.165,1680,1.165,1681,1.165,1682,2.471,1683,1.165,1684,1.165,1685,1.165,1686,1.165,1687,1.165,1688,0.838,1689,1.165,1690,1.165,1691,1.165,1692,1.165,1693,1.165,1694,1.165,1695,1.165,1696,1.165,1697,1.018,1698,1.124,1699,1.165,1700,1.165,1701,0.988,1702,1.165,1703,1.165,1704,1.93,1705,3.185,1706,0.932,1707,1.165,1708,1.165,1709,1.165,1710,1.165,1711,1.165,1712,1.165,1713,1.93,1714,1.165,1715,1.165,1716,1.74,1717,1.165,1718,1.165,1719,1.086,1720,1.165,1721,1.165,1722,1.086,1723,1.165,1724,1.165,1725,1.165]],["title/interfaces/HasFinder.html",[0,0.175,3237,2.921]],["body/interfaces/HasFinder.html",[0,0.288,2,0.823,3,0.061,4,0.048,5,0.041,8,0.23,12,0.138,13,0.599,14,0.316,18,0.299,19,0.008,20,0.874,22,1.301,25,0.928,26,0.126,34,0.823,35,1.094,36,1.122,41,2.418,50,1.034,52,0.618,57,2.334,59,0.921,66,1.735,71,1.345,73,0.553,77,1.463,78,0.155,81,2.289,85,1.281,87,1.619,91,2.168,99,0.714,109,0.555,113,1.499,114,0.967,115,0.828,133,1.117,134,2.418,138,2.226,140,0.344,148,2.833,156,1.867,158,0.79,159,0.003,160,0.006,161,0.003,165,2.776,168,0.618,172,0.671,179,1.758,181,0.475,190,1.428,192,1.255,198,0.498,200,0.66,203,1.619,204,0.587,216,1.362,224,0.612,245,2.733,247,1.075,259,0.365,266,1.011,272,0.928,280,0.577,281,0.914,326,2.801,327,2.758,346,2.227,358,0.839,361,1.505,364,1.014,392,2.17,408,1.663,433,1.758,435,2.488,436,1.811,438,2.545,441,1.648,451,4.537,456,2.418,458,1.537,459,2.764,461,1.255,463,1.801,464,3.566,478,0.363,479,3.641,480,2.06,481,2.137,482,1.991,483,2.06,484,4.246,486,2.996,507,1.926,510,2.418,522,1.768,523,4.668,524,1.244,529,1.867,530,2.884,533,2.986,547,2.119,551,2.313,552,1.991,553,3.72,554,2.725,555,3.392,556,3.392,557,2.172,558,2.624,559,2.884,560,1.803,561,1.758,562,2.554,563,1.991,564,1.991,565,2.492,566,1.991,567,1.991,568,1.991,569,2.946,570,1.394,574,2.418,575,3.352,576,2.418,577,2.418,578,2.418,580,4.12,583,1.05,598,2.581,605,0.774,606,1.05,610,2.538,615,1.463,616,2.538,617,2.538,618,3.677,619,2.268,620,2.538,621,3.392,622,2.538,623,2.487,627,4.12,632,2.477,633,2.418,634,2.538,635,3.685,636,2.538,639,2.538,640,2.313,641,2.538,642,3.1,643,3.783,646,2.345,653,2.172,734,0.928,759,2.624,760,2.581,761,2.137,764,2.137,766,2.06,771,2.137,773,3.286,774,1.987,775,2.137,776,1.272,777,2.884,778,2.06,779,2.137,781,2.137,782,1.117,783,2.137,784,1.577,785,3.599,786,3.282,787,2.492,788,2.137,789,4.418,791,2.137,793,2.624,794,2.137,796,2.548,797,2.137,799,2.137,801,1.428,802,2.137,803,2.137,805,2.137,807,2.312,808,1.117,809,2.705,810,3.096,811,2.137,813,1.166,814,2.137,835,1.663,838,1.362,894,3.392,935,2.313,976,1.867,982,1.663,1021,2.791,1067,1.499,1089,1.362,1236,1.867,1285,1.537,1327,1.811,1336,1.811,1340,1.663,1538,3.591,1642,2.02,1746,2.313,1757,1.867,1771,1.926,1773,1.991,1779,2.06,1807,2.313,1937,2.538,2039,2.418,2185,2.06,2278,1.926,2310,3.181,2644,2.22,2736,2.538,2813,2.538,3113,4.12,3129,4.796,3130,4.796,3131,4.796,3132,4.563,3133,2.677,3134,2.677,3135,2.677,3136,2.677,3137,5.537,3138,2.677,3139,2.677,3140,3.88,3141,2.677,3142,2.677,3143,4.563,3144,2.677,3145,4.563,3146,2.538,3147,2.677,3148,4.563,3149,2.677,3150,2.538,3151,2.677,3152,2.538,3153,2.677,3154,2.677,3155,2.677,3156,2.677,3157,2.677,3158,3.88,3159,2.677,3160,2.538,3161,2.677,3162,2.418,3163,2.677,3164,2.677,3165,2.538,3166,2.677,3167,2.677,3168,2.538,3169,2.677,3170,2.677,3171,2.538,3172,2.677,3173,2.677,3174,3.88,3175,3.88,3176,2.677,3177,2.677,3178,4.563,3179,3.88,3180,4.563,3181,2.677,3182,2.677,3183,2.677,3184,2.677,3185,2.677,3186,2.677,3187,2.677,3188,2.677,3189,2.538,3190,2.677,3191,2.677,3192,2.677,3193,2.677,3194,2.677,3195,2.677,3196,3.677,3197,2.22,3198,2.313,3199,2.677,3200,2.677,3201,2.677,3202,2.677,3203,2.677,3204,2.677,3205,2.677,3206,2.677,3207,2.677,3208,2.137,3209,2.677,3210,2.677,3211,2.677,3212,2.677,3213,5.003,3214,2.677,3215,4.563,3216,2.677,3217,2.677,3218,2.677,3219,2.677,3220,2.677,3221,2.677,3222,2.677,3223,2.677,3224,2.677,3225,2.677,3226,2.677,3227,2.677,3228,4.563,3229,2.677,3230,2.677,3231,2.677,3232,2.677,3233,3.88,3234,3.88,3235,3.88,3236,3.88,3237,3.504]],["title/interfaces/ISubscriptionTracker.html",[0,0.175,3488,3.437]],["body/interfaces/ISubscriptionTracker.html",[0,0.309,2,1.265,3,0.094,4,0.074,5,0.063,8,0.354,12,0.212,14,0.614,18,0.278,19,0.008,26,0.118,50,0.987,52,1.199,57,2.327,59,1.147,78,0.14,85,1.277,113,3.188,114,1.487,158,1.533,159,0.005,160,0.006,161,0.005,170,1.317,172,1.033,181,0.922,195,0.813,197,1.37,198,0.667,200,0.686,204,0.406,224,0.898,259,0.456,266,0.92,280,0.495,281,0.97,341,3.188,358,2.061,364,1.645,376,4.925,392,1.683,437,4.147,478,0.558,646,2.489,651,1.457,1027,4.376,1045,2.124,1267,3.872,1268,2.489,1273,2.047,1533,4.414,2595,4.49,2717,4.118,3488,6.051,3489,6.824,3490,4.699,3491,7.847,3492,7.453,3493,6.477,3494,7.847,3495,5.132,3496,7.847,3497,7.685,3498,5.789,3499,6.477,3500,6.477,3501,6.477,3502,8.46,3503,7.096,3504,5.789,3505,7.453,3506,5.789,3507,7.453,3508,6.477,3509,5.132,3510,5.132,3511,5.132,3512,4.699,3513,5.132,3514,4.376,3515,5.132,3516,5.132,3517,5.132,3518,6.477,3519,5.132,3520,5.132,3521,5.132,3522,5.132,3523,6.477,3524,6.477,3525,5.132,3526,5.132,3527,5.132,3528,5.132,3529,5.132,3530,5.132]],["title/classes/IdGenerator.html",[78,0.11,911,2.489]],["body/classes/IdGenerator.html",[3,0.112,4,0.087,5,0.075,8,0.421,12,0.252,13,0.606,14,0.578,18,0.282,19,0.008,25,2.13,26,0.112,50,0.849,73,0.57,78,0.166,79,5.548,140,0.629,143,0.889,159,0.006,160,0.007,161,0.006,163,1.697,172,1.541,181,1.025,192,1.228,195,0.877,197,1.178,198,0.629,200,0.646,224,0.969,275,2.132,280,0.467,328,6.015,354,4.895,363,3.906,605,1.67,844,4.026,911,4.728,913,5.262,1938,7.198,2363,4.895,3531,7.909,3532,6.101,3533,8.637,3534,6.883,3535,6.883,3536,8.12,3537,6.883,3538,6.883,3539,8.12,3540,6.883,3541,6.883,3542,6.883]],["title/components/LoadingIndicatorComponent.html",[204,0.319,738,1.857]],["body/components/LoadingIndicatorComponent.html",[3,0.075,4,0.058,5,0.05,8,0.282,12,0.262,13,0.469,14,0.387,18,0.295,19,0.008,26,0.116,27,1.521,30,1.681,34,1.373,36,1.471,47,2.915,59,0.567,60,0.927,61,2.657,63,1.283,73,0.438,78,0.111,81,1.716,96,1.126,99,1.191,109,1.187,115,0.811,140,0.574,143,1.187,153,4.035,158,0.966,159,0.004,160,0.005,161,0.004,172,1.481,191,2.501,195,0.878,197,0.787,198,0.759,200,0.798,204,0.501,208,1.745,224,0.705,247,1.199,259,0.262,263,1.521,272,1.549,280,0.312,286,1.665,338,1.826,358,1.026,374,2.922,390,1.521,441,1.182,461,1.698,463,1.241,478,0.443,522,1.694,524,2.077,584,4.595,599,1.425,605,1.581,606,1.751,623,2.221,650,1.456,651,1.581,652,1.366,653,1.832,656,1.488,658,1.787,659,1.72,660,1.905,666,2.077,680,1.905,681,4.221,698,1.488,699,1.518,700,3.49,701,2.089,702,1.521,703,2.089,704,2.089,705,1.627,706,1.978,707,2.089,708,1.787,709,2.089,710,1.31,711,2.089,712,1.704,713,2.188,714,1.787,715,3.49,716,1.665,717,1.787,718,1.787,719,1.09,720,1.665,721,1.787,722,2.089,723,1.832,724,2.089,725,1.978,726,1.787,727,2.143,728,2.089,729,1.704,730,3.49,731,1.745,732,2.921,733,1.745,734,1.549,735,1.745,736,2.852,737,1.704,738,3.138,739,2.089,740,1.665,741,2.089,742,1.927,743,1.456,744,2.921,745,1.366,746,1.488,747,2.089,748,1.787,749,2.089,750,1.832,751,1.366,752,2.089,753,1.704,754,1.978,755,2.089,801,1.745,807,2.216,813,2.216,835,3.159,837,3.705,974,3.477,1037,3.746,1049,1.59,1050,1.978,1052,2.281,1054,2.713,1056,4.748,1058,5.81,1060,4.035,1067,1.832,1096,2.955,1139,3.547,1150,2.518,1153,4.748,1186,4.595,1212,2.955,1284,1.878,1285,2.565,1296,3.933,1381,2.441,1535,3.547,1596,2.433,1642,1.704,1647,4.207,1668,2.518,2272,4.396,2309,4.207,2393,4.035,2540,4.078,2848,7.362,2904,3.477,3354,6.741,3361,5.569,3543,6.242,3544,3.477,3545,6.282,3546,7.686,3547,7.153,3548,6.282,3549,7.153,3550,7.153,3551,8.046,3552,7.153,3553,4.6,3554,4.6,3555,4.6,3556,8.654,3557,7.78,3558,6.282,3559,7.153,3560,7.153,3561,4.6,3562,8.654,3563,6.282,3564,6.814,3565,6.282,3566,6.282,3567,6.282,3568,6.282,3569,6.282,3570,7.686,3571,6.282,3572,6.282,3573,6.282,3574,6.282,3575,4.6,3576,4.6,3577,4.6,3578,4.6,3579,4.6,3580,4.6,3581,7.153,3582,8.305,3583,4.6,3584,6.282,3585,5.569,3586,4.6,3587,6.282,3588,4.6,3589,4.6,3590,4.468,3591,6.282,3592,4.6,3593,4.6,3594,4.6]],["title/interfaces/LocatorDriver.html",[0,0.175,442,2.581]],["body/interfaces/LocatorDriver.html",[0,0.29,2,1.11,3,0.082,4,0.065,5,0.056,8,0.311,10,2.374,12,0.186,14,0.672,18,0.318,19,0.008,25,1.253,26,0.13,55,2.609,57,2.628,73,0.578,78,0.201,81,1.834,114,1.932,115,0.656,152,2.797,159,0.004,160,0.006,161,0.004,163,1.253,168,1.314,181,0.848,195,0.845,197,1.463,198,0.731,200,0.818,216,3.355,224,1.014,233,1.204,245,3.321,246,4.542,247,1.395,280,0.58,281,0.852,318,2.781,337,4.527,341,3.186,361,1.677,364,1.737,433,3.993,435,2.684,436,2.444,437,3.812,438,3.093,441,2.055,442,5.207,444,5.071,445,5.451,446,5.076,447,5.14,458,3.614,459,2.281,460,4.777,463,1.486,464,3.939,465,4.125,466,3.233,468,4.314,469,4.72,470,4.527,472,4.527,474,4.527,484,2.687,485,3.978,486,3.137,598,2.321,609,4.127,632,3.049,759,2.444,760,2.426,773,3.137,782,1.508,838,1.839,875,3.961,934,5.491,935,3.123,936,3.123,937,3.264,938,5.451,939,2.307,940,4.125,941,4.125,942,4.125,943,4.125,944,5.451,945,4.125,946,4.125,947,4.125,948,4.125,949,3.614,950,3.614,951,3.614,952,4.125,954,5.451,955,5.395,956,3.614,957,5.35,959,5.35,960,3.614,962,5.042,963,3.614,965,4.125,966,2.966,967,5.451,968,5.076,969,4.777,970,5.686,971,5.451,972,3.841,973,4.125,974,3.841,975,4.125,976,2.519,977,4.125,978,3.426,3595,5.081,3596,5.081,3597,5.081,3598,5.081,3599,5.081]],["title/interfaces/MenuItem.html",[0,0.175,2594,3.234]],["body/interfaces/MenuItem.html",[0,0.168,2,0.952,3,0.071,4,0.055,5,0.048,8,0.267,12,0.275,13,0.451,14,0.758,18,0.296,19,0.008,20,1.614,22,2.823,26,0.113,27,2,35,1.759,42,4.21,50,1.007,52,0.993,59,1.07,63,1.215,64,2.966,71,1.074,75,4.263,78,0.105,80,3,88,1.693,100,2.473,101,1.166,105,2.798,111,1.54,113,2.409,114,1.554,118,1.44,129,1.873,138,1.379,140,0.553,154,3.257,158,1.459,159,0.004,160,0.005,161,0.005,170,0.991,172,1.669,192,0.777,202,2.096,204,0.305,236,2.937,244,4.941,259,0.427,266,0.863,272,1.492,280,0.554,281,0.73,286,3.031,361,1.22,389,1.825,441,1.554,458,2.47,459,2.108,461,0.777,463,1.735,478,0.42,545,1.693,546,3.099,548,2.596,554,2.326,565,1.693,573,4.287,599,2.153,605,0.896,606,1.215,615,1.693,619,1.54,623,2.139,625,3.293,635,1.825,659,1.266,665,1.873,699,1.815,721,2.701,748,2.351,751,1.293,774,1.349,809,4.354,895,3.096,962,2.57,991,1.652,1045,1.759,1050,3.602,1052,4.235,1070,1.825,1083,3.344,1119,3.099,1150,2.385,1220,1.349,1252,3.096,1273,2.139,1274,1.873,1279,1.874,1358,1.54,1425,2.826,1491,3.724,1550,1.693,1716,3.096,1731,3.569,1803,3.293,1894,2.473,2051,5.342,2102,3.099,2206,5.342,2263,2.385,2543,2.937,2544,5.246,2545,3.099,2546,4.911,2547,6.658,2548,6.63,2549,6.8,2550,5.32,2551,5.364,2552,3.862,2553,3.862,2554,3.862,2555,3.862,2556,3.862,2557,5.364,2558,6.162,2559,3.862,2560,3.862,2562,4.911,2563,3.862,2564,3.862,2565,3.862,2566,3.862,2567,3.862,2568,3.862,2570,3.862,2571,3.862,2572,3.862,2573,4.303,2575,3.862,2576,3.862,2581,3.536,2582,2.937,2583,3.862,2584,5.364,2585,5.364,2586,3.862,2587,5.364,2588,3.862,2589,3.862,2590,2.937,2591,3.862,2594,6.62,2595,2.677,2596,3.862,2597,3.536,2601,3.862,2605,5.364,2608,6.162,2617,5.254,2618,3.862,2619,3.536,2620,1.576,2621,3.536,2622,4.911,2623,3.293,2624,3.536,2625,3.536,2626,3.862,2627,3.536,2628,3.293,2629,5.506,2630,5.364,2631,5.364,2632,5.364,2633,6.996,2634,3.862,2635,6.162,2636,3.862,2637,3.862,2638,3.862,2639,3.862,2640,5.364,2641,3.862,2642,5.364,2643,3.862,2644,2.57,2645,3.536,2646,6.162,2647,6.996,2648,3.862,2649,3.862,2650,3.862,2651,3.862,2652,3.862,2653,6.162,2654,3.862,2655,3.862,2656,3.536,2657,3.862,2658,3.536,2659,5.364,2660,3.862,2661,3.862,2662,3.862,2663,4.911,2664,3.862,2665,2.937,2666,3.862,2667,3.862,2668,3.862,2669,3.862,2670,3.862,2671,3.293,2672,3.862,2673,3.862,2674,3.862,2675,5.364,2676,3.862,2677,3.862,2678,3.862,2679,3.862,2680,3.862,2681,3.862,2682,3.862,2683,3.862,2684,6.162,2685,3.862,2686,5.364,2687,3.862,2688,3.862,2689,3.862,2690,3.862,2691,3.862,2692,3.862,2693,3.862,2694,3.862,2695,5.364,2696,3.862]],["title/interfaces/MockRecord.html",[0,0.175,992,2.921]],["body/interfaces/MockRecord.html",[0,0.265,2,1.5,3,0.111,4,0.087,5,0.075,12,0.251,13,0.605,17,4.437,18,0.323,19,0.008,26,0.131,73,0.58,133,2.737,140,0.788,158,1.441,159,0.006,160,0.007,161,0.006,198,0.842,266,0.789,992,5.542,1162,2.081,1831,6.969,2320,4.627,2322,4.627,2464,6.969,2465,5.188,2467,4.882,3600,5.572,3601,5.572,3602,8.173,3603,7.648,3604,5.572,3605,7.187,3606,6.085,3607,6.085,3608,6.085,3609,6.085,3610,6.085]],["title/interfaces/MultiSelectOption.html",[0,0.175,2360,3.065]],["body/interfaces/MultiSelectOption.html",[0,0.296,2,1.157,3,0.086,4,0.067,5,0.058,8,0.324,12,0.194,13,0.515,18,0.266,19,0.008,20,1.781,26,0.132,31,4.431,34,1.507,36,1.089,50,1.003,52,0.869,59,0.946,65,2.338,73,0.552,78,0.128,79,4.431,81,1.446,85,0.953,91,1.789,96,0.833,109,0.781,115,1.05,118,1.75,127,2.108,133,2.048,140,0.484,143,0.684,152,2.799,159,0.004,160,0.006,161,0.004,168,1.384,170,1.204,195,0.537,198,0.484,200,0.878,204,0.483,233,1.254,259,0.501,266,0.882,275,1.64,280,0.572,281,1.449,364,0.984,389,2.217,435,1.571,461,0.944,478,0.51,548,2.384,583,1.476,623,1.872,646,2.276,659,0.964,660,1.605,699,1.855,710,1.507,712,2.842,713,1.507,714,3.159,719,2.048,727,1.923,760,1.605,796,3.222,844,3.805,855,2.89,893,3.253,899,1.476,910,1.75,911,3.776,912,3.765,913,3.122,914,3.4,921,3.569,936,3.253,983,2.384,984,1.75,986,1.915,988,2.057,989,1.872,990,2.625,991,2.008,995,2.557,1023,4.929,1035,2.384,1045,2.005,1098,2.709,1220,1.64,1237,2.276,1264,1.539,1277,2.496,1279,2.765,1304,2.108,1307,2.108,1311,3.047,1346,3.358,1351,2.161,1358,1.872,1580,1.789,1697,2.625,1729,3.047,1730,3.496,1747,3.004,2024,3.829,2075,4.058,2147,2.625,2203,3.765,2231,2.404,2241,2.709,2242,2.897,2243,2.546,2244,2.709,2247,3.53,2249,2.897,2270,2.897,2318,2.625,2319,4.058,2320,3.569,2321,4.001,2322,4.65,2323,4.001,2324,4.001,2325,3.004,2333,4.65,2335,4.001,2336,3.765,2337,3.569,2348,4.65,2350,4.001,2355,4.056,2356,3.004,2357,2.625,2358,3.004,2359,2.897,2360,5.684,2361,4.001,2362,4.001,2363,4.907,2364,4.001,2365,3.569,2366,3.004,2367,3.765,2368,4.001,2369,4.001,2370,4.001,2371,4.001,2372,4.001,2373,4.001,2374,4.001,2375,5.214,2376,4.001,2377,4.001,2378,4.001,2379,4.001,2380,4.001,2381,4.001,2382,4.001,2383,4.001,2384,4.001,2385,4.001,2386,4.001,2387,4.001,2388,4.001,2389,4.001,2390,3.765]],["title/interfaces/MultiSelectOptionInternal.html",[0,0.175,2348,3.065]],["body/interfaces/MultiSelectOptionInternal.html",[0,0.294,2,1.143,3,0.085,4,0.066,5,0.057,8,0.32,12,0.192,13,0.511,18,0.265,19,0.008,20,1.771,26,0.131,31,3.361,34,1.496,36,1.076,50,0.998,52,0.859,59,0.941,65,2.311,73,0.545,78,0.126,79,5.2,81,1.429,85,0.946,91,1.769,96,0.823,109,0.772,115,1.113,118,1.73,127,2.726,133,2.032,140,0.478,143,0.676,152,2.822,159,0.004,160,0.006,161,0.004,168,1.379,170,1.19,195,0.531,198,0.478,200,0.859,204,0.48,233,1.239,259,0.5,266,0.877,275,1.621,280,0.57,281,1.445,364,0.972,389,2.192,435,1.553,461,0.933,478,0.504,548,2.638,583,1.459,623,1.85,646,2.25,659,0.953,660,1.587,699,2.03,710,1.49,712,2.826,713,1.49,714,3.145,719,2.041,727,1.909,760,1.587,796,2.444,844,4.273,855,2.868,893,4.207,899,1.459,910,1.73,911,3.747,912,3.722,913,3.086,914,3.361,921,3.528,936,4.207,983,2.367,984,1.73,986,1.893,988,2.033,989,1.85,990,2.595,991,1.985,995,2.547,1023,4.902,1035,2.367,1045,1.99,1098,2.678,1220,1.621,1237,2.25,1264,1.521,1277,2.477,1279,2.79,1304,2.084,1307,2.084,1311,3.024,1346,3.432,1351,2.136,1358,1.85,1580,2.314,1697,2.595,1729,3.024,1730,3.481,1747,2.97,2024,3.814,2075,4.443,2147,2.595,2203,3.722,2231,2.376,2241,2.678,2242,2.864,2243,2.517,2244,2.678,2247,3.503,2249,2.864,2270,2.864,2318,2.595,2319,4.035,2320,3.528,2321,3.955,2322,4.615,2323,3.955,2324,3.955,2325,2.97,2333,4.615,2335,3.955,2336,3.722,2337,3.528,2348,5.144,2350,3.955,2355,3.671,2356,2.97,2357,2.595,2358,2.97,2359,2.864,2360,5.663,2361,5.175,2362,5.175,2363,5.757,2364,5.175,2365,3.528,2366,2.97,2367,3.722,2368,3.955,2369,3.955,2370,3.955,2371,3.955,2372,3.955,2373,3.955,2374,3.955,2375,5.175,2376,3.955,2377,3.955,2378,3.955,2379,3.955,2380,3.955,2381,3.955,2382,3.955,2383,3.955,2384,3.955,2385,3.955,2386,3.955,2387,3.955,2388,3.955,2389,3.955,2390,3.722]],["title/pipes/NestedPropertyPipe.html",[3478,3.234,3611,3.065]],["body/pipes/NestedPropertyPipe.html",[3,0.098,4,0.077,5,0.067,8,0.371,14,0.51,18,0.261,19,0.008,26,0.098,52,0.996,57,1.763,64,2.645,73,0.548,78,0.146,96,0.955,99,1.427,115,0.972,140,0.554,158,1.273,159,0.005,160,0.006,161,0.005,170,1.38,172,1.082,181,0.766,195,0.616,197,1.288,198,0.747,200,0.868,216,2.195,224,0.68,233,1.782,234,1.839,244,4.437,259,0.428,266,1.029,272,2.239,280,0.607,281,1.261,344,2.853,361,1.648,424,7.94,462,4.586,466,3.48,478,0.585,522,1.782,583,2.497,652,2.233,658,2.357,691,4.586,1473,3.416,1642,2.247,1706,2.754,1767,3.728,1943,5.351,2782,3.104,2828,4.924,3478,5.351,3480,4.09,3483,6.669,3484,6.669,3486,6.669,3611,5.072,3612,6.106,3613,4.924,3614,7.523,3615,8.549,3616,7.523,3617,8.549,3618,7.523,3619,7.523,3620,6.067,3621,6.067,3622,6.067,3623,6.067,3624,4.924,3625,4.924,3626,6.067,3627,6.067,3628,7.523,3629,6.067,3630,6.067,3631,6.067,3632,7.523,3633,6.067,3634,6.067,3635,6.067,3636,6.067,3637,6.067,3638,6.067,3639,6.067,3640,6.067]],["title/classes/NoUnit.html",[78,0.11,3641,3.691]],["body/classes/NoUnit.html",[3,0.048,4,0.037,5,0.032,8,0.338,12,0.107,13,0.337,14,0.596,18,0.256,19,0.008,20,1.441,22,1.013,25,1.531,26,0.09,30,1.21,34,1.356,35,0.852,36,1.699,40,2.534,50,0.986,52,0.481,59,0.986,61,1.013,62,2.299,65,1.294,71,1.531,73,0.506,78,0.109,84,2.319,85,0.405,87,1.342,88,2.412,93,2.439,96,0.869,98,1.499,99,1.401,101,2.14,108,1.431,109,1.334,113,1.167,115,0.802,124,1.8,127,1.167,133,0.87,138,1.431,140,0.842,141,1.196,143,0.802,152,0.888,154,2.195,158,1.488,159,0.002,160,0.004,161,0.002,163,0.723,168,0.742,170,0.666,172,1.537,181,0.571,190,2.688,192,0.806,194,2.254,195,0.849,197,1.148,198,0.567,200,0.891,202,1.409,204,0.497,210,1.453,217,3.118,224,0.939,233,1.308,246,1.663,259,0.463,260,0.907,261,2.378,266,0.99,272,2.007,275,0.907,280,0.613,281,0.925,318,1.603,321,1.675,346,1.846,358,0.653,364,0.84,376,4.185,377,1.715,378,2.579,392,0.852,408,1.997,458,1.196,461,0.523,463,1.226,478,0.282,509,2.637,522,1.894,527,2.214,558,1.409,560,0.968,569,1.894,583,0.817,605,1.136,606,1.261,635,1.227,659,0.533,660,0.888,665,1.26,680,0.888,719,1.071,727,2.403,729,1.675,734,2.365,737,1.675,740,1.06,773,2.112,785,1.499,801,1.111,807,1.71,808,0.87,829,2.778,835,3.131,839,3.134,852,2.475,855,1.227,856,2.378,859,3.048,867,2.242,869,1.757,880,1.975,882,3.048,894,1.549,899,0.817,910,0.968,928,2.378,933,3.927,939,2.507,1020,1.294,1037,1.8,1038,1.715,1045,1.314,1046,1.715,1049,1.013,1050,1.26,1073,1.997,1098,1.499,1129,2.254,1150,1.603,1162,0.888,1204,1.757,1211,1.663,1220,0.907,1232,1.227,1259,1.167,1273,1.036,1274,1.26,1284,1.196,1291,1.894,1292,2.737,1293,2.112,1302,2.254,1311,1.294,1340,1.294,1351,1.196,1381,1.138,1473,1.33,1497,2.579,1550,1.138,1688,2.534,1722,1.549,1760,1.663,1764,1.882,1858,2.242,1877,2.084,1889,2.214,1895,2.214,1897,2.214,2018,2.214,2024,3.219,2029,3.283,2031,2.656,2075,3.547,2080,3.546,2112,4.173,2147,3.326,2234,1.8,2243,1.409,2264,1.549,2273,1.728,2309,1.603,2355,3.226,2396,2.214,2400,4.779,2413,4.14,2428,2.778,2429,2.778,2433,3.417,2435,4.692,2436,4.173,2437,3.417,2470,2.084,2483,3.417,2620,1.636,2629,1.975,2644,1.728,2792,2.378,2820,2.378,2904,2.214,2939,2.378,3162,1.882,3208,1.663,3248,2.214,3274,3.216,3278,2.214,3279,2.214,3280,2.084,3281,1.882,3286,2.378,3287,2.378,3290,1.882,3291,2.378,3292,3.722,3293,2.904,3298,2.378,3300,3.216,3304,2.378,3305,1.8,3308,3.67,3319,2.378,3331,3.67,3358,1.975,3367,2.084,3386,2.084,3398,3.67,3406,2.378,3409,2.378,3410,3.67,3412,2.378,3413,2.378,3449,2.084,3450,2.084,3463,6.077,3465,4.309,3466,1.8,3514,2.214,3641,3.67,3642,4.771,3643,3.048,3644,3.048,3645,4.185,3646,4.779,3647,4.779,3648,3.048,3649,3.722,3650,2.904,3651,3.546,3652,2.93,3653,2.93,3654,2.084,3655,2.084,3656,3.048,3657,4.122,3658,2.93,3659,2.93,3660,2.93,3661,2.084,3662,4.54,3663,1.975,3664,1.975,3665,2.084,3666,2.084,3667,1.975,3668,3.546,3669,2.084,3670,2.084,3671,2.084,3672,1.882,3673,2.904,3674,3.546,3675,3.048,3676,1.975,3677,2.084,3678,1.882,3679,4.008,3680,4.008,3681,4.008,3682,4.008,3683,2.597,3684,4.309,3685,2.378,3686,1.975,3687,2.378,3688,2.597,3689,4.008,3690,2.084,3691,2.597,3692,1.975,3693,5.07,3694,2.597,3695,2.597,3696,4.008,3697,2.597,3698,2.597,3699,2.597,3700,2.597,3701,2.597,3702,2.597,3703,2.597,3704,2.597,3705,2.597,3706,2.597,3707,2.597,3708,2.597,3709,2.084,3710,2.597,3711,2.597,3712,2.597,3713,4.008,3714,2.597,3715,2.597,3716,2.597,3717,2.597,3718,2.597,3719,1.882,3720,2.597,3721,2.597,3722,2.597,3723,2.597,3724,2.597,3725,2.084,3726,2.597,3727,2.597,3728,2.597,3729,2.597,3730,2.597,3731,2.597,3732,2.597,3733,2.597,3734,2.597,3735,2.597,3736,4.008,3737,6.284,3738,7.418,3739,2.597,3740,2.597,3741,1.975,3742,2.597,3743,5.503,3744,4.894,3745,6.55,3746,4.008,3747,5.503,3748,3.216,3749,4.008,3750,5.503,3751,2.597,3752,4.008,3753,4.008,3754,2.597,3755,2.597,3756,4.008,3757,2.597,3758,5.503,3759,2.597,3760,2.597,3761,2.597,3762,4.894,3763,4.008,3764,2.597,3765,2.597,3766,2.597,3767,2.597,3768,2.597,3769,2.597,3770,2.597,3771,2.597,3772,2.597,3773,2.597,3774,2.597,3775,4.008,3776,4.008,3777,3.67,3778,2.597,3779,2.597,3780,2.597,3781,2.597,3782,2.597,3783,4.894,3784,2.597,3785,2.597,3786,6.284,3787,2.597,3788,2.597,3789,2.597,3790,2.597,3791,2.597,3792,2.597,3793,2.597,3794,2.597,3795,2.597,3796,2.597,3797,4.008,3798,2.597,3799,2.378,3800,4.008,3801,2.597,3802,4.008,3803,3.67,3804,3.67,3805,3.67,3806,4.008,3807,4.008,3808,5.997,3809,2.597,3810,2.597,3811,2.597,3812,2.597,3813,2.597,3814,2.597,3815,2.597,3816,2.597,3817,2.597,3818,2.378,3819,2.597,3820,2.597,3821,2.597,3822,2.597,3823,4.481,3824,2.597,3825,4.894,3826,2.597,3827,2.597,3828,2.597,3829,4.894,3830,2.597,3831,2.597,3832,4.008,3833,2.597,3834,2.597,3835,2.597,3836,2.597,3837,2.597,3838,2.597,3839,2.597,3840,3.216,3841,4.008,3842,2.597,3843,2.597,3844,5.503,3845,2.597,3846,2.597,3847,2.597,3848,2.597,3849,2.214,3850,2.597,3851,2.597]],["title/classes/NumberUnit.html",[78,0.11,3852,2.921]],["body/classes/NumberUnit.html",[3,0.076,4,0.06,5,0.052,8,0.496,12,0.172,13,0.476,14,0.652,18,0.296,19,0.008,20,1.48,26,0.076,34,1.695,62,2.873,71,1.913,73,0.54,78,0.154,84,3.007,85,1.218,109,1.145,115,1.08,130,4.097,140,0.864,143,0.608,159,0.004,160,0.005,161,0.004,163,1.16,168,1.047,172,1.525,179,2.197,181,0.805,190,3.497,195,0.92,197,1.328,198,0.741,200,0.901,217,3.511,224,1.043,233,1.114,245,2.478,266,0.733,275,1.457,280,0.526,364,1.442,373,3.014,509,2.681,522,2.147,548,1.626,605,0.968,606,1.312,734,2.399,760,1.934,808,1.893,835,3.693,895,2.407,939,3.285,985,3.846,1098,3.263,1162,1.934,1232,3.249,1291,2.671,1302,3.311,1319,3.068,1343,3.068,1365,2.263,1473,2.896,1688,2.604,2029,4.421,2413,4.6,2620,3.025,3643,4.878,3644,4.878,3645,5.23,3646,5.23,3647,5.23,3648,4.299,3649,5.23,3650,4.097,3651,4.983,3654,3.346,3655,3.346,3656,5.23,3657,5.528,3661,3.346,3662,5.478,3663,5.23,3664,4.299,3665,3.346,3666,3.346,3667,4.299,3668,5.37,3669,3.346,3670,3.346,3671,3.346,3672,5.208,3673,4.983,3674,4.983,3675,5.23,3676,4.299,3677,3.346,3678,4.097,3709,3.346,3719,4.097,3852,5.37,3853,3.171,3854,3.919,3855,5.518,3856,5.873,3857,5.873,3858,4.704,3859,4.536,3860,4.536,3861,4.536,3862,5.946,3863,4.704,3864,4.704,3865,3.818,3866,3.818,3867,3.346,3868,4.536,3869,4.536,3870,4.536,3871,3.346,3872,3.346,3873,4.536,3874,4.536,3875,4.536,3876,3.346]],["title/classes/NumberWithUnitFormInputWidgetObject.html",[78,0.11,3877,3.691]],["body/classes/NumberWithUnitFormInputWidgetObject.html",[3,0.065,4,0.051,5,0.044,8,0.487,12,0.147,13,0.594,14,0.734,17,3.131,18,0.321,19,0.008,25,1.642,26,0.065,34,0.879,35,1.169,36,0.828,43,3.516,57,1.169,59,1.088,66,1.642,71,0.992,73,0.581,78,0.097,81,1.818,85,1.002,87,1.698,96,0.633,109,1.13,138,2.295,140,0.765,143,1.081,148,1.934,152,1.22,156,1.995,159,0.003,160,0.006,161,0.003,163,0.992,165,2.752,168,0.939,181,0.722,191,2.278,195,0.951,197,1.496,198,0.798,200,0.82,204,0.574,217,3.439,224,1.041,245,1.563,247,1.215,259,0.413,266,0.462,280,0.598,326,2.887,341,2.651,346,3.128,361,0.811,364,0.748,435,2.274,436,1.935,441,1.033,451,4.642,458,1.643,459,2.75,461,1.188,463,1.801,464,3.568,467,3.566,507,2.928,518,1.935,522,1.355,524,1.33,529,1.995,530,3.835,533,3.131,547,2.587,552,2.127,553,3.521,554,2.707,555,3.025,556,3.521,557,2.278,558,1.935,559,2.127,560,1.33,561,1.879,562,1.602,563,2.127,564,2.127,565,1.563,566,2.127,567,2.127,568,2.127,569,1.685,570,1.49,571,2.472,573,2.928,606,1.122,621,2.127,632,3.023,635,2.789,642,2.278,659,1.32,699,1.383,727,2.588,734,2.374,740,1.456,759,4.281,760,2.75,761,3.779,762,3.857,763,3.857,764,3.779,765,3.857,766,3.131,767,3.857,771,2.283,772,2.862,773,1.879,774,1.246,775,2.283,776,1.36,777,2.127,778,2.202,779,2.283,780,2.862,781,2.283,782,1.194,783,2.283,784,1.685,785,3.711,786,3.407,787,2.587,788,2.283,789,4.519,790,2.862,791,2.283,792,2.862,793,2.752,794,2.283,795,2.862,796,2.672,797,2.283,798,2.862,799,2.283,800,2.862,801,1.526,802,2.283,803,2.283,804,2.862,805,2.283,806,2.862,807,1.246,808,1.194,809,2.837,810,3.247,811,2.283,812,2.862,813,1.246,814,2.283,835,3.203,855,2.789,902,3.566,910,1.33,964,3.566,1015,3.041,1346,1.602,1979,3.566,2023,6.219,2429,2.472,3113,3.675,3189,2.712,3465,5.856,3466,2.472,3642,6.484,3651,2.584,3777,3.266,3799,3.266,3803,3.266,3804,3.266,3805,3.266,3808,5.404,3818,5.404,3877,4.644,3878,8.081,3879,5.721,3880,5.721,3881,5.721,3882,7.252,3883,7.252,3884,6.658,3885,6.658,3886,6.658,3887,6.658,3888,6.658,3889,6.658,3890,6.658,3891,4.023,3892,5.721,3893,5.721,3894,4.023,3895,5.721,3896,4.023,3897,4.023,3898,4.023,3899,4.023,3900,4.023,3901,4.023,3902,4.023,3903,5.721,3904,4.023,3905,4.023,3906,4.023,3907,4.023,3908,4.023,3909,4.023,3910,4.023,3911,4.023,3912,4.023,3913,4.023,3914,4.023,3915,4.023,3916,3.041,3917,4.023,3918,4.023,3919,4.023,3920,4.023,3921,4.023,3922,4.023,3923,4.023,3924,4.023,3925,5.721,3926,4.023,3927,6.658,3928,4.023,3929,4.023,3930,4.023,3931,4.023,3932,4.023,3933,4.023,3934,4.023,3935,4.023,3936,4.023]],["title/injectables/NumberWithUnitsFormValidatorsFactory.html",[1858,2.255,3849,3.437]],["body/injectables/NumberWithUnitsFormValidatorsFactory.html",[3,0.052,4,0.041,5,0.035,12,0.117,14,0.547,18,0.168,19,0.008,20,1.356,22,1.109,25,1.195,26,0.095,30,1.297,34,1.422,35,0.933,36,1.735,40,2.657,50,1.01,52,0.527,59,1.01,61,1.109,62,1.795,65,1.418,71,1.195,73,0.45,78,0.117,84,2.019,85,0.443,87,1.439,88,2.529,93,2.58,96,0.919,98,1.642,99,1.447,101,2.192,108,1.534,109,1.348,113,1.278,115,0.626,124,1.972,127,1.278,133,0.953,138,1.534,140,0.837,141,1.31,143,0.841,152,0.973,154,2.301,158,1.601,159,0.003,160,0.004,161,0.003,168,0.527,170,0.73,172,1.504,181,0.612,192,1.042,194,2.385,195,0.492,197,1,198,0.443,200,0.886,202,1.544,204,0.515,210,1.591,224,0.36,233,1.383,246,1.822,259,0.474,260,0.994,261,2.605,266,1.006,272,2.053,275,0.994,280,0.62,281,0.812,318,1.757,321,1.795,346,1.979,358,0.716,364,0.596,376,4.387,377,1.838,378,2.728,392,0.933,408,2.141,458,1.31,461,0.572,463,1.286,478,0.309,509,2.715,522,1.541,527,2.426,558,1.544,560,1.061,569,2.03,583,0.895,605,1.201,606,1.352,635,1.344,659,0.584,660,0.973,665,1.38,680,0.973,719,1.148,727,2.402,729,1.795,734,2.329,737,1.795,740,1.161,785,1.642,801,1.217,807,1.809,829,2.979,839,3.315,852,2.653,855,1.344,856,2.605,859,3.268,867,2.403,869,1.883,880,2.164,882,3.268,894,1.697,899,0.895,910,1.061,928,2.605,933,4.154,939,2.201,1020,1.418,1037,1.93,1038,1.838,1045,1.409,1046,1.838,1049,1.109,1050,1.38,1073,2.141,1129,2.385,1150,1.757,1204,1.883,1211,1.822,1220,0.994,1259,1.278,1273,1.135,1274,1.38,1284,1.31,1291,1.344,1292,2.896,1293,2.264,1302,1.31,1311,1.418,1340,1.418,1351,1.31,1381,1.247,1497,3.264,1550,1.247,1688,2.385,1722,1.697,1760,1.822,1764,2.062,1858,2.403,1860,2.062,1877,2.283,1889,2.426,1895,2.426,1897,2.426,2018,2.426,2024,3.336,2029,2.563,2031,2.81,2075,3.695,2080,3.752,2112,4.415,2147,3.464,2234,1.972,2243,1.544,2264,1.697,2273,1.893,2309,1.757,2355,3.361,2396,2.426,2400,4.953,2413,4.034,2428,2.979,2429,2.979,2433,3.664,2435,4.919,2436,4.415,2437,3.664,2470,2.283,2483,3.664,2629,2.164,2644,1.893,2792,2.605,2820,2.605,2904,2.426,2939,2.605,3162,2.062,3208,1.822,3248,2.426,3274,3.448,3278,2.426,3279,2.426,3280,2.283,3281,2.062,3286,2.605,3287,2.605,3290,2.062,3291,2.605,3292,4.387,3293,3.114,3298,2.605,3300,3.448,3304,2.605,3305,1.972,3308,3.935,3319,2.605,3331,3.935,3358,2.164,3367,2.283,3386,2.283,3398,4.741,3406,2.605,3409,2.605,3410,3.935,3412,2.605,3413,2.605,3449,2.283,3450,2.283,3463,6.272,3465,3.752,3466,1.972,3514,2.426,3642,4.154,3657,3.589,3662,3.999,3674,2.062,3679,4.297,3680,4.297,3681,4.297,3682,4.297,3683,2.845,3684,5.044,3685,2.605,3686,2.164,3687,2.605,3688,2.845,3689,4.297,3690,2.283,3691,2.845,3692,2.164,3693,5.281,3694,2.845,3695,2.845,3696,4.297,3697,2.845,3698,2.845,3699,2.845,3700,2.845,3701,2.845,3702,2.845,3703,2.845,3704,2.845,3705,2.845,3706,2.845,3707,2.845,3708,2.845,3709,2.283,3710,2.845,3711,2.845,3712,2.845,3713,4.297,3714,2.845,3715,2.845,3716,2.845,3717,2.845,3718,2.845,3719,2.062,3720,2.845,3721,2.845,3722,2.845,3723,2.845,3724,2.845,3725,2.283,3726,2.845,3727,2.845,3728,2.845,3729,2.845,3730,2.845,3731,2.845,3732,2.845,3733,2.845,3734,2.845,3735,2.845,3736,4.297,3737,6.513,3738,7.563,3739,2.845,3740,2.845,3741,2.164,3742,2.845,3743,5.769,3744,5.178,3745,6.762,3746,4.297,3747,5.769,3748,3.448,3749,4.297,3750,5.769,3751,2.845,3752,4.297,3753,4.297,3754,2.845,3755,2.845,3756,4.297,3757,2.845,3758,5.769,3759,2.845,3760,2.845,3761,2.845,3762,5.178,3763,4.297,3764,2.845,3765,2.845,3766,2.845,3767,2.845,3768,2.845,3769,2.845,3770,2.845,3771,2.845,3772,2.845,3773,2.845,3774,2.845,3775,4.297,3776,4.297,3777,3.935,3778,2.845,3779,2.845,3780,2.845,3781,2.845,3782,2.845,3783,5.178,3784,2.845,3785,2.845,3786,6.513,3787,2.845,3788,2.845,3789,2.845,3790,2.845,3791,2.845,3792,2.845,3793,2.845,3794,2.845,3795,2.845,3796,2.845,3797,4.297,3798,2.845,3799,2.605,3800,4.297,3801,2.845,3802,4.297,3803,3.935,3804,3.935,3805,3.935,3806,4.297,3807,4.297,3808,6.192,3809,2.845,3810,2.845,3811,2.845,3812,2.845,3813,2.845,3814,2.845,3815,2.845,3816,2.845,3817,2.845,3818,2.605,3819,2.845,3820,2.845,3821,2.845,3822,2.845,3823,5.671,3824,2.845,3825,5.178,3826,2.845,3827,2.845,3828,2.845,3829,5.178,3830,2.845,3831,2.845,3832,4.297,3833,2.845,3834,2.845,3835,2.845,3836,2.845,3837,2.845,3838,2.845,3839,2.845,3840,3.448,3841,4.297,3842,2.845,3843,2.845,3844,5.769,3845,2.845,3846,2.845,3847,2.845,3848,2.845,3849,3.664,3850,4.297,3851,2.845,3937,4.847,3938,3.209,3939,3.209,3940,3.209]],["title/interfaces/ObjectAndResponse.html",[0,0.175,329,3.234]],["body/interfaces/ObjectAndResponse.html",[0,0.283,2,1.272,3,0.094,4,0.074,5,0.064,8,0.356,12,0.213,13,0.547,14,0.616,18,0.301,19,0.008,26,0.13,34,1.272,50,0.904,57,2.448,58,3.835,60,1.478,66,1.808,73,0.516,78,0.177,82,4.942,85,1.2,136,2.919,159,0.007,160,0.006,161,0.005,234,2.223,258,3.738,280,0.627,286,2.106,313,4.505,314,3.576,315,3.576,316,4.399,317,4.724,318,3.185,319,4.724,320,6.803,321,3.216,322,3.185,323,3.923,324,3.635,325,4.139,326,2.317,327,2.503,328,5.41,329,5.708,330,5.95,331,4.724,334,5.976,336,3.424,337,4.942,338,2.719,339,5.541,340,4.942,342,5.78,343,5.95,344,2.78,345,6.514,346,2.993,347,4.942,348,6.514,349,5.95,350,4.724,352,5.41,353,5.41,354,5.214,355,5.95,356,5.95,357,5.991,358,1.936,359,4.724,360,5.95,361,1.865,362,5.95,363,4.176,364,1.362,365,5.95,366,5.95,367,4.139,368,4.724]],["title/interfaces/PaginationCallback.html",[0,0.175,1372,2.405]],["body/interfaces/PaginationCallback.html",[0,0.277,1,2.174,2,0.453,3,0.034,4,0.026,5,0.023,8,0.127,9,1.684,10,3.258,12,0.285,13,0.38,14,0.174,15,3.442,18,0.233,19,0.008,20,1.182,22,0.717,25,1.081,26,0.126,27,1.684,28,1.061,30,1.8,34,1.677,36,1.683,39,0.997,40,2.481,42,0.916,47,0.786,50,0.976,52,0.72,53,1.755,54,1.061,55,3.18,56,1.813,59,0.909,60,1.297,61,2.223,62,0.768,63,1.694,64,2.08,66,0.846,67,0.916,69,2.923,71,0.846,73,0.484,74,1.602,77,1.332,78,0.106,80,1.028,81,0.936,83,1.27,84,1.95,85,0.606,86,2.797,87,1.512,88,0.806,90,3.781,91,0.701,93,3.493,96,1.098,99,0.966,101,2.015,102,0.847,108,1.785,109,1.276,111,1.995,114,0.533,115,0.973,118,1.865,120,1.097,127,1.746,129,1.474,133,1.018,136,0.826,137,2.243,138,1.085,140,0.824,141,1.4,143,0.831,148,1.907,149,1.097,152,1.95,154,1.995,155,0.969,158,1.508,159,0.003,160,0.003,161,0.002,168,0.34,170,0.472,172,1.542,173,1.135,181,0.553,192,0.37,194,1.79,195,0.21,198,0.4,200,0.411,202,0.997,203,0.892,204,0.516,210,2.174,224,0.571,233,0.812,234,1.04,243,0.847,247,0.348,250,1.135,259,0.437,260,0.642,266,0.998,269,1.135,270,1.877,272,0.846,280,0.608,281,1.078,286,2.862,321,0.768,327,0.892,336,0.969,338,1.274,344,2.551,358,0.462,361,1.027,364,1.37,369,1.649,374,0.656,377,2.14,378,2.379,390,1.134,392,1.274,438,1.241,459,1.04,461,0.37,463,0.677,478,0.2,509,1.515,513,0.916,522,1.038,524,1.865,539,1.755,545,0.806,547,1.332,548,0.717,554,1.358,562,0.826,570,0.768,583,1.222,598,1.185,605,1.25,606,0.578,619,1.55,642,2.42,650,0.656,651,0.863,652,1.301,656,0.671,659,0.798,660,0.629,666,1.134,670,1.7,680,1.71,681,2.45,697,1.097,699,1.06,702,1.134,710,0.59,713,0.59,719,0.491,743,0.656,744,0.671,745,1.018,751,0.616,774,0.642,776,1.159,782,1.909,784,1.836,787,0.806,808,1.301,813,1.062,823,1.028,838,0.75,865,1.028,869,0.806,891,0.997,899,0.578,982,1.936,983,1.515,984,2.437,986,0.75,987,3.11,988,2.926,989,2.466,995,1.329,998,0.969,999,0.892,1001,1.79,1002,1.097,1003,1.097,1020,2.25,1030,0.733,1032,3.142,1034,0.916,1035,2.901,1037,2.862,1038,1.3,1042,2.048,1044,1.436,1045,0.997,1046,1.3,1049,2.223,1067,1.365,1070,0.869,1073,0.916,1083,0.997,1089,1.586,1128,0.997,1129,1.4,1137,0.969,1139,3.458,1188,0.768,1204,0.806,1220,0.642,1232,0.869,1237,1.474,1240,2.694,1241,1.061,1242,1.946,1243,1.514,1244,1.946,1245,2.545,1246,1.755,1247,2.25,1248,1.177,1249,1.097,1250,1.177,1251,2.048,1252,1.755,1253,2.243,1254,2.561,1255,1.177,1256,2.274,1257,1.946,1258,1.946,1259,0.826,1260,1.177,1261,1.946,1262,2.488,1263,1.946,1264,0.603,1265,1.946,1266,1.177,1267,1.836,1268,0.892,1269,1.061,1270,1.135,1271,1.061,1272,1.061,1273,0.733,1274,0.892,1275,0.941,1276,0.969,1277,1.241,1278,1.028,1279,0.642,1280,1.836,1281,2.303,1282,2.174,1283,2.4,1284,3.472,1285,3.308,1286,2.983,1287,1.135,1288,2.318,1289,1.097,1290,1.061,1291,0.869,1292,1.028,1293,0.969,1294,2.817,1295,1.877,1296,2.243,1297,1.097,1298,1.135,1299,1.135,1300,2.694,1301,1.061,1302,1.4,1303,4.479,1304,2.028,1305,1.813,1306,1.135,1307,3.474,1308,2.4,1309,1.813,1310,3.11,1311,1.514,1312,1.177,1313,1.7,1314,1.177,1315,1.755,1316,1.177,1317,2.45,1318,2.887,1319,2.45,1320,1.813,1321,1.177,1322,1.177,1323,1.946,1324,1.135,1325,2.788,1326,1.177,1327,2.109,1328,1.813,1329,1.946,1330,1.177,1331,1.946,1332,1.946,1333,2.694,1334,2.488,1335,1.028,1336,0.997,1337,1.135,1338,1.177,1339,1.177,1340,0.916,1341,1.836,1342,3.202,1343,1.649,1344,3.898,1345,2.488,1346,0.826,1347,1.177,1348,1.177,1349,4.329,1350,1.097,1351,2.481,1352,3.449,1353,3.818,1354,1.097,1355,1.177,1356,2.318,1357,1.061,1358,0.733,1359,1.177,1360,1.177,1361,1.061,1362,2.797,1363,0.969,1364,1.177,1365,0.997,1366,2.318,1367,0.869,1368,0.916,1369,1.177,1370,2.048,1371,1.177,1372,1.813,1373,2.488,1374,2.243,1375,1.177,1376,1.177,1377,1.649,1378,1.061,1379,1.177,1380,1.177,1381,0.806,1382,1.177,1383,1.877,1384,2.488,1385,1.177,1386,1.177,1387,1.135,1388,1.813,1389,1.097,1390,1.813,1391,1.097,1392,2.488,1393,1.177,1394,1.028,1395,1.097,1396,1.177,1397,1.946,1398,1.177,1399,1.177,1400,1.177,1401,1.177,1402,1.177,1403,1.177,1404,1.877,1405,1.177,1406,2.488,1407,1.177,1408,1.177,1409,1.135,1410,2.891,1411,2.243,1412,1.177,1413,1.135,1414,1.097,1415,1.135,1416,1.177,1417,1.177,1418,1.135,1419,1.946,1420,1.177,1421,1.177,1422,1.946,1423,1.177,1424,1.177,1425,0.969,1426,1.177,1427,1.177,1428,1.177,1429,1.177,1430,3.818,1431,1.946,1432,1.177,1433,1.177,1434,1.177,1435,1.946,1436,1.177,1437,1.946,1438,1.946,1439,1.177,1440,1.177,1441,1.177,1442,1.946,1443,1.177,1444,2.891,1445,1.946,1446,1.946,1447,1.177,1448,1.177,1449,1.028,1450,1.177,1451,1.177,1452,1.177,1453,1.177,1454,1.177,1455,1.177,1456,1.946,1457,1.946,1458,1.946,1459,1.946,1460,2.488,1461,1.177,1462,1.177,1463,1.177,1464,1.177,1465,1.946,1466,1.946,1467,2.891,1468,1.177,1469,1.177,1470,1.177,1471,1.177,1472,1.177,1473,2.561,1474,3.449,1475,3.202,1476,1.946,1477,1.177,1478,1.946,1479,2.488,1480,1.177,1481,2.488,1482,1.177,1483,2.891,1484,1.946,1485,1.177,1486,1.177,1487,1.177,1488,1.946,1489,1.135,1490,1.177,1491,1.028,1492,1.177,1493,1.177,1494,1.177,1495,1.177,1496,1.946,1497,2.379,1498,1.177,1499,1.177,1500,1.177,1501,1.177,1502,1.177,1503,1.514,1504,1.177,1505,1.177,1506,1.177,1507,2.488,1508,1.177,1509,1.177,1510,1.135,1511,1.755,1512,1.177,1513,1.177,1514,1.177,1515,1.177,1516,1.177,1517,1.177,1518,1.177,1519,1.474,1520,1.177,1521,1.177,1522,1.177,1523,1.177,1524,1.097,1525,1.177,1526,1.177,1527,1.946,1528,1.177,1529,1.177,1530,1.177,1531,1.177,1532,1.177,1533,0.997,1534,1.177,1535,1.028,1536,1.177,1537,1.177,1538,0.997,1539,1.177,1540,1.177,1541,1.177,1542,1.177,1543,1.177,1544,1.177,1545,1.177,1546,1.177,1547,1.177,1548,1.177,1549,1.177,1550,0.806,1551,1.177,1552,1.177,1553,1.877,1554,1.177,1555,1.177,1556,1.177,1557,1.177,1558,1.177,1559,1.177,1560,1.177,1561,1.177,1562,1.946,1563,1.946,1564,1.946,1565,1.177,1566,2.318,1567,2.891,1568,1.946,1569,1.177,1570,1.177,1571,1.177,1572,1.177,1573,1.177,1574,1.177,1575,1.097,1576,1.177,1577,1.177,1578,1.177,1579,1.177,1580,0.701,1581,1.177,1582,1.177,1583,1.946,1584,1.177,1585,2.488,1586,1.177,1587,1.177,1588,1.177,1589,1.946,1590,1.177,1591,1.177,1592,1.946,1593,1.946,1594,1.177,1595,1.177,1596,1.097,1597,1.135,1598,1.177,1599,1.177,1600,1.177,1601,1.946,1602,1.946,1603,1.177,1604,1.177,1605,1.946,1606,1.177,1607,1.177,1608,1.177,1609,1.177,1610,1.177,1611,1.177,1612,1.177,1613,1.135,1614,1.177,1615,1.177,1616,1.177,1617,1.177,1618,1.177,1619,1.946,1620,1.177,1621,1.177,1622,1.177,1623,1.177,1624,1.177,1625,1.177,1626,1.177,1627,1.177,1628,1.177,1629,1.946,1630,2.891,1631,2.488,1632,1.177,1633,1.177,1634,1.946,1635,1.177,1636,1.177,1637,1.177,1638,1.177,1639,1.177,1640,1.177,1641,1.177,1642,1.27,1643,1.946,1644,1.177,1645,1.177,1646,1.177,1647,1.135,1648,1.177,1649,1.177,1650,1.177,1651,1.177,1652,1.177,1653,1.177,1654,1.135,1655,1.177,1656,1.177,1657,1.177,1658,1.177,1659,1.177,1660,1.177,1661,2.891,1662,1.177,1663,1.177,1664,1.177,1665,1.177,1666,1.177,1667,1.177,1668,1.135,1669,1.177,1670,1.177,1671,1.946,1672,1.177,1673,1.946,1674,1.177,1675,1.177,1676,1.946,1677,1.177,1678,1.177,1679,1.177,1680,1.177,1681,1.177,1682,2.488,1683,1.177,1684,1.177,1685,1.177,1686,1.177,1687,1.177,1688,0.847,1689,1.177,1690,1.177,1691,1.177,1692,1.177,1693,1.177,1694,1.177,1695,1.177,1696,1.177,1697,1.028,1698,1.135,1699,1.177,1700,1.177,1701,0.997,1702,1.177,1703,1.177,1704,1.946,1705,3.202,1706,0.941,1707,1.177,1708,1.177,1709,1.177,1710,1.177,1711,1.177,1712,1.177,1713,1.946,1714,1.177,1715,1.177,1716,1.755,1717,1.177,1718,1.177,1719,1.097,1720,1.177,1721,1.177,1722,1.097,1723,1.177,1724,1.177,1725,1.177,3476,1.838,3477,1.683]],["title/interfaces/PaginationConfiguration.html",[0,0.175,1333,2.405]],["body/interfaces/PaginationConfiguration.html",[0,0.275,1,2.136,2,0.442,3,0.033,4,0.026,5,0.022,8,0.124,9,1.658,10,3.228,12,0.283,13,0.374,14,0.581,15,3.407,18,0.264,19,0.008,20,1.165,22,0.699,25,1.063,26,0.126,27,1.658,28,1.035,30,1.849,34,1.665,36,1.704,39,0.973,40,2.451,42,0.894,47,0.767,50,0.969,52,0.551,53,1.719,54,1.035,55,3.162,56,1.777,59,0.902,60,1.21,61,2.199,62,0.749,63,1.674,64,2.057,66,0.829,67,0.894,69,2.888,71,0.829,73,0.474,74,1.569,77,1.305,78,0.104,80,1.003,81,0.918,83,1.244,84,2.199,85,0.595,86,2.76,87,1.489,88,1.305,90,3.762,91,0.684,93,3.471,96,1.199,99,0.952,101,2.072,102,0.826,108,1.9,109,1.277,111,1.968,114,0.52,115,0.944,118,1.84,120,1.07,127,1.715,129,1.445,133,0.997,136,0.806,137,2.205,138,1.063,140,0.834,141,2.048,143,0.86,148,2.15,149,1.07,152,2.095,154,2.249,155,0.945,158,1.496,159,0.004,160,0.003,161,0.002,168,0.332,170,0.46,172,1.536,173,1.107,181,0.544,192,0.361,194,1.759,195,0.341,198,0.394,200,0.404,202,0.973,203,0.87,204,0.512,210,2.136,224,0.483,233,0.796,234,1.019,243,0.826,247,0.339,250,1.107,259,0.434,260,0.627,266,0.994,269,1.107,270,1.839,272,0.829,280,0.607,281,1.066,286,2.914,321,0.749,327,0.87,336,0.945,338,1.252,344,2.525,358,0.451,361,1.011,364,1.359,369,1.616,374,0.64,377,2.111,378,2.6,390,1.111,392,1.458,438,1.216,459,1.019,461,0.361,463,0.664,478,0.195,509,1.489,513,0.894,522,1.02,524,1.985,539,1.719,545,0.786,547,1.305,548,0.699,554,1.334,562,0.806,570,1.244,583,0.937,598,1.161,605,1.235,606,0.564,619,1.523,642,2.391,650,0.64,651,0.846,652,1.279,656,0.654,659,0.784,660,0.613,666,1.111,670,1.666,680,1.82,681,2.413,697,1.07,699,1.041,702,1.111,710,0.576,713,0.576,719,0.479,743,0.64,744,0.654,745,0.997,751,0.601,774,0.627,776,1.135,782,1.888,784,1.805,787,0.786,808,1.279,813,1.041,823,1.003,838,0.732,865,1.666,869,0.786,891,0.973,899,0.564,982,1.903,983,1.489,984,2.417,986,0.732,987,3.072,988,2.904,989,2.443,995,1.306,998,0.945,999,0.87,1001,1.759,1002,1.07,1003,1.07,1020,2.216,1030,0.715,1032,3.228,1034,0.894,1035,2.907,1037,3.13,1038,1.274,1042,2.012,1044,1.407,1045,0.977,1046,1.274,1049,2.199,1067,1.715,1070,0.847,1073,1.484,1083,0.973,1089,1.559,1128,0.973,1129,1.759,1137,0.945,1139,3.625,1188,0.749,1204,0.786,1220,0.627,1232,0.847,1237,1.445,1240,2.653,1241,1.035,1242,1.907,1243,1.484,1244,1.907,1245,2.515,1246,1.719,1247,2.216,1248,1.148,1249,1.07,1250,1.148,1251,2.012,1252,1.719,1253,2.205,1254,2.527,1255,1.148,1256,2.249,1257,1.907,1258,1.907,1259,0.806,1260,1.148,1261,1.907,1262,2.445,1263,1.907,1264,0.588,1265,1.907,1266,1.148,1267,1.407,1268,0.87,1269,1.035,1270,1.107,1271,1.035,1272,1.035,1273,0.715,1274,0.87,1275,0.919,1276,0.945,1277,1.216,1278,1.003,1279,0.627,1280,1.805,1281,2.272,1282,2.136,1283,2.358,1284,3.478,1285,3.478,1286,2.943,1287,1.107,1288,2.278,1289,1.07,1290,1.035,1291,0.847,1292,1.003,1293,0.945,1294,2.789,1295,1.839,1296,2.205,1297,1.07,1298,1.107,1299,1.107,1300,2.943,1301,1.035,1302,1.372,1303,4.455,1304,1.998,1305,1.777,1306,1.107,1307,3.445,1308,2.358,1309,1.777,1310,3.072,1311,1.484,1312,1.148,1313,1.666,1314,1.148,1315,1.719,1316,1.148,1317,2.413,1318,2.567,1319,2.413,1320,1.777,1321,1.148,1322,1.148,1323,1.907,1324,1.107,1325,2.746,1326,1.148,1327,2.072,1328,1.777,1329,1.907,1330,1.148,1331,1.907,1332,2.445,1333,2.943,1334,3.407,1335,1.666,1336,1.616,1337,1.839,1338,1.907,1339,1.907,1340,1.484,1341,2.101,1342,3.779,1343,2.072,1344,4.096,1345,3.407,1346,1.338,1347,2.847,1348,2.847,1349,4.302,1350,1.07,1351,2.272,1352,3.407,1353,3.782,1354,1.07,1355,1.148,1356,2.278,1357,1.035,1358,0.715,1359,1.148,1360,1.148,1361,1.035,1362,2.76,1363,0.945,1364,1.148,1365,0.973,1366,2.278,1367,0.847,1368,0.894,1369,1.148,1370,2.012,1371,1.148,1372,1.07,1373,1.907,1374,1.719,1375,1.148,1376,1.148,1377,1.616,1378,1.035,1379,1.148,1380,1.148,1381,0.786,1382,1.148,1383,1.839,1384,2.445,1385,1.148,1386,1.148,1387,1.107,1388,1.777,1389,1.07,1390,1.777,1391,1.07,1392,2.445,1393,1.148,1394,1.003,1395,1.07,1396,1.148,1397,1.907,1398,1.148,1399,1.148,1400,1.148,1401,1.148,1402,1.148,1403,1.148,1404,1.839,1405,1.148,1406,2.445,1407,1.148,1408,1.148,1409,1.107,1410,2.847,1411,2.205,1412,1.148,1413,1.107,1414,1.07,1415,1.107,1416,1.148,1417,1.148,1418,1.107,1419,1.907,1420,1.148,1421,1.148,1422,1.907,1423,1.148,1424,1.148,1425,0.945,1426,1.148,1427,1.148,1428,1.148,1429,1.148,1430,3.779,1431,1.907,1432,1.148,1433,1.148,1434,1.148,1435,1.907,1436,1.148,1437,1.907,1438,1.907,1439,1.148,1440,1.148,1441,1.148,1442,1.907,1443,1.148,1444,2.847,1445,1.907,1446,1.907,1447,1.148,1448,1.148,1449,1.003,1450,1.148,1451,1.148,1452,1.148,1453,1.148,1454,1.148,1455,1.148,1456,1.907,1457,1.907,1458,1.907,1459,1.907,1460,2.445,1461,1.148,1462,1.148,1463,1.148,1464,1.148,1465,1.907,1466,1.907,1467,2.847,1468,1.148,1469,1.148,1470,1.148,1471,1.148,1472,1.148,1473,2.527,1474,3.407,1475,3.159,1476,1.907,1477,1.148,1478,1.907,1479,2.445,1480,1.148,1481,2.445,1482,1.148,1483,2.847,1484,1.907,1485,1.148,1486,1.148,1487,1.148,1488,1.907,1489,1.107,1490,1.148,1491,1.003,1492,1.148,1493,1.148,1494,1.148,1495,1.148,1496,1.907,1497,2.343,1498,1.148,1499,1.148,1500,1.148,1501,1.148,1502,1.148,1503,1.484,1504,1.148,1505,1.148,1506,1.148,1507,2.445,1508,1.148,1509,1.148,1510,1.107,1511,1.719,1512,1.148,1513,1.148,1514,1.148,1515,1.148,1516,1.148,1517,1.148,1518,1.148,1519,1.445,1520,1.148,1521,1.148,1522,1.148,1523,1.148,1524,1.07,1525,1.148,1526,1.148,1527,1.907,1528,1.148,1529,1.148,1530,1.148,1531,1.148,1532,1.148,1533,0.973,1534,1.148,1535,1.003,1536,1.148,1537,1.148,1538,0.973,1539,1.148,1540,1.148,1541,1.148,1542,1.148,1543,1.148,1544,1.148,1545,1.148,1546,1.148,1547,1.148,1548,1.148,1549,1.148,1550,0.786,1551,1.148,1552,1.148,1553,1.839,1554,1.148,1555,1.148,1556,1.148,1557,1.148,1558,1.148,1559,1.148,1560,1.148,1561,1.148,1562,1.907,1563,1.907,1564,1.907,1565,1.148,1566,2.278,1567,2.847,1568,1.907,1569,1.148,1570,1.148,1571,1.148,1572,1.148,1573,1.148,1574,1.148,1575,1.07,1576,1.148,1577,1.148,1578,1.148,1579,1.148,1580,0.684,1581,1.148,1582,1.148,1583,1.907,1584,1.148,1585,2.445,1586,1.148,1587,1.148,1588,1.148,1589,1.907,1590,1.148,1591,1.148,1592,1.907,1593,1.907,1594,1.148,1595,1.148,1596,1.07,1597,1.107,1598,1.148,1599,1.148,1600,1.148,1601,1.907,1602,1.907,1603,1.148,1604,1.148,1605,1.907,1606,1.148,1607,1.148,1608,1.148,1609,1.148,1610,1.148,1611,1.148,1612,1.148,1613,1.107,1614,1.148,1615,1.148,1616,1.148,1617,1.148,1618,1.148,1619,1.907,1620,1.148,1621,1.148,1622,1.148,1623,1.148,1624,1.148,1625,1.148,1626,1.148,1627,1.148,1628,1.148,1629,1.907,1630,2.847,1631,2.445,1632,1.148,1633,1.148,1634,1.907,1635,1.148,1636,1.148,1637,1.148,1638,1.148,1639,1.148,1640,1.148,1641,1.148,1642,1.244,1643,1.907,1644,1.148,1645,1.148,1646,1.148,1647,1.107,1648,1.148,1649,1.148,1650,1.148,1651,1.148,1652,1.148,1653,1.148,1654,1.107,1655,1.148,1656,1.148,1657,1.148,1658,1.148,1659,1.148,1660,1.148,1661,2.847,1662,1.148,1663,1.148,1664,1.148,1665,1.148,1666,1.148,1667,1.148,1668,1.107,1669,1.148,1670,1.148,1671,1.907,1672,1.148,1673,1.907,1674,1.148,1675,1.148,1676,1.907,1677,1.148,1678,1.148,1679,1.148,1680,1.148,1681,1.148,1682,2.445,1683,1.148,1684,1.148,1685,1.148,1686,1.148,1687,1.148,1688,0.826,1689,1.148,1690,1.148,1691,1.148,1692,1.148,1693,1.148,1694,1.148,1695,1.148,1696,1.148,1697,1.003,1698,1.107,1699,1.148,1700,1.148,1701,0.973,1702,1.148,1703,1.148,1704,1.907,1705,3.159,1706,0.919,1707,1.148,1708,1.148,1709,1.148,1710,1.148,1711,1.148,1712,1.148,1713,1.907,1714,1.148,1715,1.148,1716,1.719,1717,1.148,1718,1.148,1719,1.07,1720,1.148,1721,1.148,1722,1.07,1723,1.148,1724,1.148,1725,1.148]],["title/interfaces/PagionationInformation.html",[0,0.175,1328,2.405]],["body/interfaces/PagionationInformation.html",[0,0.277,1,2.172,2,0.453,3,0.034,4,0.026,5,0.023,8,0.127,9,1.683,10,3.257,12,0.285,13,0.38,14,0.174,15,3.441,18,0.249,19,0.008,20,1.182,22,0.716,25,1.081,26,0.126,27,1.683,28,1.06,30,1.799,34,1.676,36,1.683,39,0.997,40,2.625,42,0.915,47,0.786,50,0.975,52,0.562,53,1.753,54,1.06,55,3.179,56,1.812,59,0.909,60,1.225,61,2.222,62,0.767,63,1.694,64,2.079,66,0.845,67,0.915,69,2.922,71,0.845,73,0.477,74,1.601,77,1.331,78,0.106,80,1.027,81,0.936,83,1.269,84,1.949,85,0.605,86,2.796,87,1.511,88,0.805,90,3.781,91,0.7,93,3.493,96,1.097,99,0.966,101,2.014,102,0.846,108,1.784,109,1.275,111,1.994,114,0.532,115,0.952,118,1.864,120,1.096,127,1.745,129,1.473,133,1.017,136,1.364,137,2.242,138,1.084,140,0.826,141,1.399,143,0.83,148,1.906,149,1.096,152,1.949,154,1.994,155,0.968,158,1.508,159,0.003,160,0.003,161,0.002,168,0.34,170,0.471,172,1.542,173,1.134,181,0.553,192,0.37,194,1.789,195,0.21,198,0.4,200,0.411,202,0.997,203,0.891,204,0.516,210,2.172,224,0.491,233,0.812,234,1.039,243,0.846,247,0.347,250,1.134,259,0.437,260,0.642,266,0.998,269,1.134,270,1.876,272,0.845,280,0.608,281,1.078,286,2.898,321,0.767,327,0.891,336,0.968,338,1.274,344,2.55,358,0.462,361,1.026,364,1.369,369,1.648,374,0.656,377,2.304,378,2.378,390,1.133,392,1.274,438,1.24,459,1.039,461,0.37,463,0.677,478,0.2,509,1.515,513,0.915,522,1.038,524,1.864,539,1.753,545,0.805,547,1.331,548,0.716,554,1.357,562,0.825,570,0.767,583,0.955,598,1.184,605,1.25,606,0.578,619,1.549,642,2.419,650,0.656,651,0.862,652,1.301,656,0.67,659,0.798,660,0.628,666,1.133,670,1.699,680,1.71,681,2.449,697,1.096,699,1.059,702,1.133,710,0.59,713,0.59,719,0.491,743,0.656,744,0.67,745,1.017,751,0.615,774,0.642,776,1.158,782,1.909,784,1.835,787,0.805,808,1.301,813,1.061,823,1.027,838,0.75,865,1.027,869,0.805,891,0.997,899,0.578,982,1.935,983,1.515,984,2.436,986,0.75,987,3.108,988,2.925,989,2.465,995,1.328,998,0.968,999,0.891,1001,1.789,1002,1.096,1003,1.096,1020,2.249,1030,0.733,1032,3.257,1034,0.915,1035,2.9,1037,2.861,1038,1.3,1042,2.047,1044,1.435,1045,0.996,1046,1.3,1049,2.222,1067,1.364,1070,0.868,1073,0.915,1083,0.997,1089,1.585,1128,0.997,1129,1.399,1137,0.968,1139,3.457,1188,0.767,1204,0.805,1220,0.642,1232,0.868,1237,1.473,1240,2.692,1241,1.06,1242,1.945,1243,1.513,1244,1.945,1245,2.544,1246,1.753,1247,2.249,1248,1.176,1249,1.096,1250,1.176,1251,2.047,1252,1.753,1253,2.242,1254,2.56,1255,1.176,1256,2.273,1257,1.945,1258,1.945,1259,0.825,1260,1.176,1261,1.945,1262,2.487,1263,1.945,1264,0.602,1265,1.945,1266,1.176,1267,1.435,1268,0.891,1269,1.06,1270,1.134,1271,1.06,1272,1.06,1273,0.733,1274,0.891,1275,0.941,1276,0.968,1277,1.24,1278,1.027,1279,0.642,1280,1.835,1281,2.302,1282,2.172,1283,2.398,1284,3.472,1285,3.371,1286,2.982,1287,1.134,1288,2.317,1289,1.096,1290,1.06,1291,0.868,1292,1.027,1293,0.968,1294,2.817,1295,1.876,1296,2.242,1297,1.096,1298,1.134,1299,1.134,1300,2.692,1301,1.06,1302,1.399,1303,4.433,1304,2.027,1305,1.812,1306,1.134,1307,3.458,1308,2.398,1309,1.812,1310,3.108,1311,1.513,1312,1.176,1313,1.699,1314,1.176,1315,1.753,1316,1.176,1317,2.449,1318,2.605,1319,2.449,1320,1.812,1321,1.176,1322,1.176,1323,1.945,1324,1.134,1325,2.787,1326,1.945,1327,2.449,1328,2.317,1329,3.2,1330,1.945,1331,3.2,1332,1.945,1333,2.692,1334,2.487,1335,1.027,1336,0.997,1337,1.134,1338,1.176,1339,1.176,1340,0.915,1341,1.835,1342,3.2,1343,1.648,1344,3.897,1345,2.487,1346,0.825,1347,1.176,1348,1.176,1349,4.328,1350,1.096,1351,2.302,1352,3.448,1353,3.816,1354,1.096,1355,1.176,1356,2.317,1357,1.06,1358,0.733,1359,1.176,1360,1.176,1361,1.06,1362,2.796,1363,0.968,1364,1.176,1365,0.997,1366,2.317,1367,0.868,1368,0.915,1369,1.176,1370,2.047,1371,1.176,1372,1.096,1373,1.945,1374,1.753,1375,1.176,1376,1.176,1377,1.648,1378,1.06,1379,1.176,1380,1.176,1381,0.805,1382,1.176,1383,1.876,1384,2.487,1385,1.176,1386,1.176,1387,1.134,1388,1.812,1389,1.096,1390,1.812,1391,1.096,1392,2.487,1393,1.176,1394,1.027,1395,1.096,1396,1.176,1397,1.945,1398,1.176,1399,1.176,1400,1.176,1401,1.176,1402,1.176,1403,1.176,1404,1.876,1405,1.176,1406,2.487,1407,1.176,1408,1.176,1409,1.134,1410,2.889,1411,2.242,1412,1.176,1413,1.134,1414,1.096,1415,1.134,1416,1.176,1417,1.176,1418,1.134,1419,1.945,1420,1.176,1421,1.176,1422,1.945,1423,1.176,1424,1.176,1425,0.968,1426,1.176,1427,1.176,1428,1.176,1429,1.176,1430,3.816,1431,1.945,1432,1.176,1433,1.176,1434,1.176,1435,1.945,1436,1.176,1437,1.945,1438,1.945,1439,1.176,1440,1.176,1441,1.176,1442,1.945,1443,1.176,1444,2.889,1445,1.945,1446,1.945,1447,1.176,1448,1.176,1449,1.027,1450,1.176,1451,1.176,1452,1.176,1453,1.176,1454,1.176,1455,1.176,1456,1.945,1457,1.945,1458,1.945,1459,1.945,1460,2.487,1461,1.176,1462,1.176,1463,1.176,1464,1.176,1465,1.945,1466,1.945,1467,2.889,1468,1.176,1469,1.176,1470,1.176,1471,1.176,1472,1.176,1473,2.56,1474,3.448,1475,3.2,1476,1.945,1477,1.176,1478,1.945,1479,2.487,1480,1.176,1481,2.487,1482,1.176,1483,2.889,1484,1.945,1485,1.176,1486,1.176,1487,1.176,1488,1.945,1489,1.134,1490,1.176,1491,1.027,1492,1.176,1493,1.176,1494,1.176,1495,1.176,1496,1.945,1497,2.378,1498,1.176,1499,1.176,1500,1.176,1501,1.176,1502,1.176,1503,1.513,1504,1.176,1505,1.176,1506,1.176,1507,2.487,1508,1.176,1509,1.176,1510,1.134,1511,1.753,1512,1.176,1513,1.176,1514,1.176,1515,1.176,1516,1.176,1517,1.176,1518,1.176,1519,1.473,1520,1.176,1521,1.176,1522,1.176,1523,1.176,1524,1.096,1525,1.176,1526,1.176,1527,1.945,1528,1.176,1529,1.176,1530,1.176,1531,1.176,1532,1.176,1533,0.997,1534,1.176,1535,1.027,1536,1.176,1537,1.176,1538,0.997,1539,1.176,1540,1.176,1541,1.176,1542,1.176,1543,1.176,1544,1.176,1545,1.176,1546,1.176,1547,1.176,1548,1.176,1549,1.176,1550,0.805,1551,1.176,1552,1.176,1553,1.876,1554,1.176,1555,1.176,1556,1.176,1557,1.176,1558,1.176,1559,1.176,1560,1.176,1561,1.176,1562,1.945,1563,1.945,1564,1.945,1565,1.176,1566,2.317,1567,2.889,1568,1.945,1569,1.176,1570,1.176,1571,1.176,1572,1.176,1573,1.176,1574,1.176,1575,1.096,1576,1.176,1577,1.176,1578,1.176,1579,1.176,1580,0.7,1581,1.176,1582,1.176,1583,1.945,1584,1.176,1585,2.487,1586,1.176,1587,1.176,1588,1.176,1589,1.945,1590,1.176,1591,1.176,1592,1.945,1593,1.945,1594,1.176,1595,1.176,1596,1.096,1597,1.134,1598,1.176,1599,1.176,1600,1.176,1601,1.945,1602,1.945,1603,1.176,1604,1.176,1605,1.945,1606,1.176,1607,1.176,1608,1.176,1609,1.176,1610,1.176,1611,1.176,1612,1.176,1613,1.134,1614,1.176,1615,1.176,1616,1.176,1617,1.176,1618,1.176,1619,1.945,1620,1.176,1621,1.176,1622,1.176,1623,1.176,1624,1.176,1625,1.176,1626,1.176,1627,1.176,1628,1.176,1629,1.945,1630,2.889,1631,2.487,1632,1.176,1633,1.176,1634,1.945,1635,1.176,1636,1.176,1637,1.176,1638,1.176,1639,1.176,1640,1.176,1641,1.176,1642,1.269,1643,1.945,1644,1.176,1645,1.176,1646,1.176,1647,1.134,1648,1.176,1649,1.176,1650,1.176,1651,1.176,1652,1.176,1653,1.176,1654,1.134,1655,1.176,1656,1.176,1657,1.176,1658,1.176,1659,1.176,1660,1.176,1661,2.889,1662,1.176,1663,1.176,1664,1.176,1665,1.176,1666,1.176,1667,1.176,1668,1.134,1669,1.176,1670,1.176,1671,1.945,1672,1.176,1673,1.945,1674,1.176,1675,1.176,1676,1.945,1677,1.176,1678,1.176,1679,1.176,1680,1.176,1681,1.176,1682,2.487,1683,1.176,1684,1.176,1685,1.176,1686,1.176,1687,1.176,1688,0.846,1689,1.176,1690,1.176,1691,1.176,1692,1.176,1693,1.176,1694,1.176,1695,1.176,1696,1.176,1697,1.027,1698,1.134,1699,1.176,1700,1.176,1701,0.997,1702,1.176,1703,1.176,1704,1.945,1705,3.2,1706,0.941,1707,1.176,1708,1.176,1709,1.176,1710,1.176,1711,1.176,1712,1.176,1713,1.945,1714,1.176,1715,1.176,1716,1.753,1717,1.176,1718,1.176,1719,1.096,1720,1.176,1721,1.176,1722,1.096,1723,1.176,1724,1.176,1725,1.176]],["title/interfaces/PartialResult.html",[0,0.175,3941,3.234]],["body/interfaces/PartialResult.html",[0,0.316,2,0.877,3,0.065,4,0.051,5,0.044,8,0.246,12,0.147,13,0.426,18,0.198,19,0.008,20,1.543,25,0.99,26,0.093,30,1.938,33,2.705,35,2.105,36,1.175,40,1.638,43,5.305,50,1.009,58,2.332,59,1.032,60,1.34,64,2.825,67,2.522,73,0.501,78,0.097,84,2.298,85,0.789,87,1.695,88,1.559,91,1.356,93,2.522,96,1.288,99,1.374,101,2.048,105,4.27,108,1.27,109,1.069,114,1.467,121,2.854,124,3.509,133,1.974,140,0.789,143,0.518,145,2.577,155,3.106,159,0.008,160,0.006,161,0.007,165,3.272,171,3.773,172,1.54,179,3.383,192,0.716,194,2.714,200,0.377,204,0.586,206,4.883,208,2.521,223,3.033,225,4.451,233,0.95,234,1.217,243,1.638,246,3.241,253,2.367,259,0.453,260,1.243,262,4.272,263,2.941,266,0.914,272,1.64,280,0.567,281,1.114,285,2.705,286,3.08,318,2.196,346,2.332,361,0.809,363,2.747,374,2.517,378,2.668,392,1.166,408,3.381,461,0.716,478,0.387,509,1.974,518,1.93,522,1.716,548,1.387,554,2.243,583,1.592,605,1.175,606,1.119,609,2.466,652,1.191,659,1.21,660,1.217,662,2.367,680,1.217,719,1.884,727,1.119,786,2.053,807,1.769,808,2.15,916,2.577,937,2.577,966,2.937,1021,2.053,1025,3.033,1041,2.854,1044,3.034,1070,1.681,1073,2.522,1080,2.705,1129,2.332,1142,2.577,1144,3.668,1174,4.062,1183,4.883,1186,2.577,1188,1.486,1236,1.99,1253,3.402,1254,3.289,1256,2.351,1259,1.598,1317,2.747,1318,3.706,1358,1.419,1362,1.99,1374,3.706,1381,1.559,1394,1.99,1411,2.922,1533,1.93,1535,2.831,1706,1.822,1753,2.367,1757,1.99,1760,2.277,1772,1.99,1892,2.466,1894,4.344,1939,3.033,2022,2.705,2055,3.668,2096,4.062,2098,2.854,2101,4.062,2153,2.854,2234,2.466,2266,3.241,2309,3.126,2315,2.577,2505,4.27,2523,2.705,2533,2.466,2582,2.705,2590,2.705,2595,3.509,2665,3.85,2698,4.316,2741,5.025,2761,2.884,2823,3.033,2937,3.85,3198,4.086,3208,2.277,3293,3.668,3305,2.466,3326,3.033,3330,3.033,3358,2.705,3590,2.854,3692,2.705,3725,2.854,3741,2.705,3748,2.854,3840,2.854,3854,2.466,3941,5.152,3942,2.122,3943,2.053,3944,3.033,3945,5.658,3946,4.316,3947,4.635,3948,3.257,3949,3.033,3950,2.854,3951,4.272,3952,3.033,3953,5.95,3954,4.703,3955,4.729,3956,4.635,3957,4.635,3958,4.635,3959,5.879,3960,3.257,3961,3.257,3962,3.257,3963,3.257,3964,3.257,3965,3.257,3966,3.257,3967,3.257,3968,3.257,3969,3.033,3970,3.257,3971,3.257,3972,3.257,3973,3.257,3974,2.577,3975,3.257,3976,3.033,3977,3.257,3978,6.643,3979,4.316,3980,3.257,3981,3.257,3982,3.257,3983,2.854,3984,2.854,3985,3.257,3986,3.257,3987,3.257,3988,4.635,3989,4.635,3990,3.257,3991,3.257,3992,3.257,3993,3.033,3994,3.257,3995,3.257,3996,4.635,3997,3.257,3998,4.635,3999,3.257,4000,3.257,4001,3.257,4002,5.397,4003,3.257,4004,3.033,4005,3.257,4006,3.257,4007,3.257,4008,3.257,4009,3.257,4010,3.257,4011,3.257,4012,3.257,4013,3.257,4014,3.257,4015,6.457,4016,3.257,4017,3.257,4018,4.635,4019,3.257,4020,3.257,4021,4.635,4022,3.257,4023,5.879,4024,4.635,4025,3.257,4026,3.257,4027,3.257,4028,3.257,4029,3.033,4030,3.257,4031,3.257,4032,3.257,4033,4.635,4034,3.257,4035,3.257,4036,3.257,4037,3.257,4038,3.257,4039,3.257,4040,3.257,4041,3.257,4042,4.635,4043,3.257,4044,3.257,4045,3.257,4046,3.257,4047,3.257,4048,3.257,4049,3.257,4050,3.257,4051,4.635,4052,3.257,4053,3.033,4054,3.257,4055,3.257,4056,3.257,4057,3.257,4058,3.257,4059,3.257,4060,3.257,4061,4.635,4062,4.635,4063,3.257,4064,3.257,4065,3.257,4066,3.257,4067,3.257,4068,3.257,4069,3.257,4070,3.257]],["title/classes/Percent.html",[78,0.11,3916,3.437]],["body/classes/Percent.html",[3,0.074,4,0.058,5,0.05,8,0.469,12,0.167,13,0.467,14,0.675,18,0.313,19,0.008,20,1.452,25,2.131,26,0.074,31,4.019,34,1.558,62,2.84,71,1.891,73,0.556,78,0.151,84,2.866,85,1.211,87,1.358,109,0.923,115,1.096,130,2.937,140,0.859,143,0.99,147,3.712,159,0.004,160,0.005,161,0.004,163,1.128,168,1.027,172,1.514,181,0.79,190,3.395,192,0.816,195,0.94,197,1.374,198,0.757,200,0.901,217,3.49,224,1.039,245,1.777,266,0.719,275,1.416,280,0.52,281,1.049,364,1.325,373,2.431,509,2.162,522,2.137,548,1.581,605,0.941,657,4.054,734,2.393,808,1.857,835,3.662,895,2.34,939,3.238,985,3.102,1098,3.201,1162,1.897,1232,2.987,1245,1.916,1290,3.649,1291,2.621,1302,3.278,1319,2.2,1343,2.2,1365,2.2,1473,2.841,1688,2.554,2029,4.246,2031,3.009,2413,4.488,2620,2.905,2937,3.083,3585,4.054,3643,4.807,3644,4.807,3645,5.169,3646,5.722,3647,5.722,3648,4.218,3649,5.169,3650,4.019,3651,4.925,3654,3.253,3655,3.253,3656,5.169,3657,5.31,3661,3.253,3662,5.386,3663,4.807,3664,4.218,3665,3.253,3666,3.253,3667,4.218,3668,5.325,3669,3.253,3670,3.253,3671,3.253,3672,5.452,3673,5.452,3674,4.925,3675,5.169,3676,4.218,3677,3.253,3678,4.019,3719,2.937,3852,4.019,3853,3.083,3854,2.81,3855,4.45,3859,3.253,3860,3.253,3861,3.253,3862,5.711,3867,3.253,3868,4.45,3869,4.45,3870,4.45,3871,3.253,3872,3.253,3873,4.45,3874,4.45,3875,4.45,3876,3.253,3916,6.266,4071,3.712,4072,4.573,4073,4.573,4074,6.256,4075,6.256,4076,8.29,4077,7.131,4078,6.256,4079,6.256,4080,4.054,4081,6.256,4082,4.573,4083,4.573,4084,4.573,4085,4.573,4086,4.573,4087,4.573,4088,4.573,4089,6.256,4090,4.573,4091,4.573,4092,4.573]],["title/modules/PipesModule.html",[2755,1.572,4093,3.234]],["body/modules/PipesModule.html",[3,0.112,4,0.088,5,0.076,19,0.008,26,0.112,78,0.167,159,0.006,160,0.007,161,0.006,244,4.077,259,0.463,266,0.794,478,0.666,665,2.973,698,2.236,726,3.54,729,3.375,737,3.375,740,3.297,1162,2.096,1580,2.337,2620,2.501,2755,2.39,2757,3.139,2758,3.139,2759,4.137,2760,3.428,2761,2.753,2762,4.291,2770,4.037,2773,3.428,2774,4.917,2775,3.325,2776,3.428,2777,3.428,2778,3.428,2779,3.428,2780,3.428,2783,4.166,3611,6.225,4093,6.75,4094,6.129,4095,6.129,4096,6.129,4097,5.612,4098,6.913]],["title/classes/PowerTwoUnit.html",[78,0.11,4099,3.691]],["body/classes/PowerTwoUnit.html",[3,0.067,4,0.053,5,0.045,8,0.516,12,0.152,13,0.436,14,0.694,18,0.308,19,0.008,20,1.57,26,0.067,34,1.605,62,2.977,71,1.982,73,0.547,78,0.141,84,3.004,85,1.185,109,1.084,115,1.089,130,3.751,140,0.867,143,0.535,159,0.003,160,0.005,161,0.003,163,1.021,168,0.959,172,1.568,179,1.935,181,0.737,190,3.521,195,0.945,197,1.414,198,0.77,200,0.903,217,3.697,224,1.058,233,0.981,245,2.269,266,0.671,275,1.283,280,0.498,364,1.44,373,2.854,509,2.539,522,2.192,548,1.432,605,0.852,606,1.155,734,2.399,760,1.771,808,2.008,835,3.839,895,2.119,939,3.336,985,3.643,1098,3.462,1162,2.051,1232,3.245,1291,2.834,1302,3.372,1319,2.809,1343,2.809,1365,1.992,1473,3.071,1688,2.762,2029,4.46,2413,4.596,2620,3.052,3643,5.222,3644,5.222,3645,5.418,3646,5.568,3647,5.568,3648,4.952,3649,5.568,3650,4.719,3651,5.305,3654,2.946,3655,2.946,3656,5.222,3657,5.496,3661,2.946,3662,5.496,3663,5.222,3664,4.56,3665,2.946,3666,2.946,3667,4.56,3668,5.508,3669,2.946,3670,2.946,3671,2.946,3672,5.163,3673,5.163,3674,5.163,3675,5.418,3676,4.56,3677,2.946,3678,4.345,3709,4.154,3719,3.751,3852,5.903,3853,2.792,3854,3.589,3855,4.812,3856,5.491,3857,6.524,3859,4.154,3860,4.154,3861,4.154,3862,5.717,3865,3.362,3866,3.362,3867,2.946,3868,4.154,3869,4.154,3870,4.154,3871,2.946,3872,2.946,3873,4.154,3874,4.154,3875,4.154,3876,2.946,4099,3.362,4100,3.672,4101,3.672,4102,4.142,4103,3.672,4104,3.672,4105,3.672,4106,3.672,4107,3.672,4108,3.672,4109,3.672,4110,3.672,4111,3.672,4112,3.672]],["title/modules/QuickSearchModule.html",[2755,1.572,4113,3.234]],["body/modules/QuickSearchModule.html",[3,0.112,4,0.087,5,0.075,19,0.008,26,0.112,78,0.166,159,0.006,160,0.007,161,0.006,208,3.622,259,0.525,260,2.132,263,2.275,478,0.663,665,2.959,698,2.226,910,2.275,1162,2.087,1264,2.001,1580,2.326,1907,3.906,2620,2.49,2755,2.379,2757,3.125,2758,3.125,2759,3.922,2760,3.413,2761,2.741,2762,4.283,2770,4.026,2772,3.767,2773,3.413,2775,3.311,2776,3.413,2777,3.413,2778,3.413,2779,3.413,2780,3.413,2781,4.608,2782,3.522,2783,4.155,2784,5.474,2785,4.789,2786,4.608,3942,3.64,3943,3.522,4113,6.626,4114,6.101,4115,6.101,4116,6.101,4117,6.883,4118,6.591,4119,6.883]],["title/interfaces/QuickSearchProvider.html",[0,0.175,171,2.581]],["body/interfaces/QuickSearchProvider.html",[0,0.318,2,1.348,3,0.1,4,0.078,5,0.068,8,0.465,12,0.226,13,0.567,14,0.518,18,0.298,19,0.008,20,1.764,26,0.123,30,2.034,43,5.526,50,0.761,58,3.103,60,1.78,65,3.357,73,0.568,78,0.149,84,2.627,85,0.852,108,2.405,115,0.982,117,4.882,140,0.753,158,1.729,159,0.006,160,0.006,161,0.007,165,3.289,167,4.387,169,4.387,170,1.403,171,4.676,179,4.383,180,7.168,181,0.959,190,2.883,195,0.626,197,1.056,198,0.563,204,0.532,206,5.797,216,3.111,224,0.924,240,6.687,253,5.072,259,0.351,263,2.919,286,2.75,326,3.424,392,2.209,509,2.972,583,2.119,631,5.745,807,2.354,978,5.124,1021,3.889,1294,3.184,1832,5.406,2533,4.671,2761,3.424,3009,6.17,3942,4.019,3943,3.889,3951,4.483,3954,4.671,3974,4.882,4120,6.168,4121,6.738,4122,6.738,4123,6.738,4124,6.738,4125,6.738,4126,6.738,4127,6.738,4128,6.738,4129,6.17]],["title/classes/QuickSearchProviderDefaults.html",[78,0.11,169,3.234]],["body/classes/QuickSearchProviderDefaults.html",[0,0.299,3,0.103,4,0.081,5,0.07,12,0.234,13,0.579,14,0.536,18,0.302,19,0.008,20,1.482,26,0.126,30,1.708,43,5.139,50,0.787,58,2.606,60,1.754,65,2.819,73,0.562,78,0.154,84,2.206,85,0.882,108,2.02,115,0.824,117,4.1,140,0.583,143,1.002,158,1.826,159,0.006,160,0.006,161,0.006,163,1.574,165,3.224,167,4.539,169,5.52,170,1.766,171,4.747,179,4.287,180,7.063,181,0.98,190,3.3,195,0.883,197,1.092,198,0.583,200,0.728,204,0.447,206,5.638,216,3.026,224,0.87,240,6.789,253,5.132,259,0.363,263,2.765,286,2.309,326,3.09,392,1.855,509,2.683,583,1.779,631,4.824,807,1.977,978,4.303,1021,3.266,1294,2.673,1832,4.539,2533,3.922,2761,3.09,3009,5.181,3942,4.715,3943,4.563,3951,3.764,3954,3.922,3974,4.1,4121,5.658,4122,5.658,4123,5.658,4124,5.658,4125,5.658,4126,5.658,4127,5.658,4128,5.658,4129,5.181,4130,6.382,4131,6.382,4132,6.382,4133,6.382]],["title/injectables/QuickSearchRegistrarService.html",[1858,2.255,4134,3.691]],["body/injectables/QuickSearchRegistrarService.html",[3,0.106,4,0.083,5,0.072,8,0.401,12,0.24,13,0.588,14,0.662,18,0.293,19,0.008,26,0.106,50,0.807,59,1.082,78,0.158,143,0.845,159,0.005,160,0.006,161,0.005,165,3.104,170,1.489,171,5.176,172,1.508,181,0.995,192,1.167,195,0.891,197,1.349,198,0.72,200,0.614,204,0.615,224,0.884,259,0.481,263,2.605,266,0.752,275,2.027,478,0.631,561,3.681,651,1.983,807,2.441,1045,2.29,1220,2.718,1858,3.907,1860,4.204,2533,4.842,2717,5.605,2761,3.575,3512,6.396,3942,4.748,3943,4.595,3950,4.655,3951,5.487,3952,4.947,3954,4.842,3974,5.636,4134,7.123,4135,5.802,4136,6.985,4137,6.544,4138,6.544,4139,6.544,4140,7.88,4141,6.544,4142,6.544,4143,6.544,4144,6.544,4145,6.544,4146,6.544]],["title/interfaces/QuickSearchResultItem.html",[0,0.175,225,2.794]],["body/interfaces/QuickSearchResultItem.html",[0,0.339,2,1.44,3,0.107,4,0.084,5,0.072,8,0.403,12,0.241,13,0.59,18,0.305,19,0.008,20,1.53,26,0.138,30,2.117,52,1.444,58,3.23,59,0.813,64,2.987,67,3.885,71,1.951,73,0.519,108,2.504,114,2.032,140,0.803,159,0.007,160,0.007,161,0.005,165,3.241,204,0.554,225,5.211,247,1.326,253,3.886,262,4.667,263,2.974,286,2.863,292,7.139,363,4.079,529,3.923,808,2.349,1021,4.049,1037,2.624,1285,3.462,1317,3.806,1344,3.484,1524,4.184,1760,4.491,2700,6.422,3305,4.862,3942,3.484,3943,3.372,3945,5.628,4071,6.422,4147,4.98]],["title/interfaces/QuickSearchResults.html",[0,0.175,262,2.682]],["body/interfaces/QuickSearchResults.html",[0,0.338,2,1.42,3,0.105,4,0.083,5,0.071,8,0.398,12,0.238,13,0.586,14,0.765,18,0.316,19,0.008,20,1.822,26,0.137,30,1.739,52,1.067,58,3.204,59,0.802,64,2.899,67,2.871,71,1.603,73,0.398,108,2.057,114,1.67,140,0.863,159,0.007,160,0.006,161,0.005,165,3.267,204,0.455,225,5.38,247,1.09,253,3.834,262,4.972,263,2.894,286,3.295,292,5.276,363,4.38,529,3.223,808,2.599,1021,3.326,1037,3.125,1285,3.794,1317,4.38,1344,4.63,1524,3.438,1760,3.689,2700,5.276,3305,3.995,3942,3.438,3943,3.326,3945,4.624,4071,5.276,4147,4.913]],["title/injectables/QuickSearchService.html",[1858,2.255,3951,2.682]],["body/injectables/QuickSearchService.html",[3,0.098,4,0.077,5,0.066,8,0.46,12,0.328,13,0.56,14,0.631,18,0.283,19,0.008,20,1.743,26,0.098,50,0.746,59,0.926,64,2.428,78,0.146,85,1.037,96,1.181,99,1.424,143,0.781,158,1.905,159,0.005,160,0.006,161,0.005,165,3.169,171,5.335,179,3.814,181,0.948,195,0.867,197,1.285,198,0.686,200,0.568,224,0.985,259,0.427,263,1.999,266,0.863,280,0.509,281,1.014,344,2.294,478,0.583,522,2.19,558,3.612,605,1.244,635,2.533,642,2.408,807,1.873,837,3.567,844,3.723,978,5.062,1045,1.758,1642,2.24,1807,4.614,1858,3.723,1860,3.885,1889,4.571,2761,2.99,3942,4.643,3943,4.493,3950,4.301,3951,4.428,3954,5.819,3974,4.823,3979,5.675,4136,6.656,4148,5.361,4149,8.166,4150,8.54,4151,7.508,4152,7.508,4153,6.048,4154,7.508,4155,6.048,4156,7.508,4157,6.048,4158,8.781,4159,7.508,4160,7.508,4161,6.048,4162,7.508,4163,7.508,4164,6.048,4165,6.048,4166,6.048,4167,6.048,4168,6.048,4169,6.048,4170,6.048,4171,6.048,4172,6.048,4173,6.048,4174,6.048]],["title/interfaces/ResultActivatedEvent.html",[0,0.175,3955,3.234]],["body/interfaces/ResultActivatedEvent.html",[0,0.316,2,0.877,3,0.065,4,0.051,5,0.044,8,0.246,12,0.147,13,0.426,18,0.23,19,0.008,20,1.543,25,0.99,26,0.093,30,1.938,33,2.705,35,2.105,36,1.175,40,1.638,43,5.305,50,1.009,58,2.332,59,1.032,60,1.34,64,2.825,67,2.937,73,0.535,78,0.097,84,2.298,85,0.789,87,1.695,88,1.559,91,1.356,93,2.522,96,1.288,99,1.374,101,2.048,105,4.27,108,1.27,109,1.069,114,1.708,121,2.854,124,3.509,133,1.974,140,0.662,143,0.518,145,2.577,155,3.106,159,0.008,160,0.006,161,0.007,165,3.262,171,3.773,172,1.54,179,3.383,192,0.716,194,2.714,200,0.377,204,0.586,206,4.482,208,2.521,223,3.033,225,4.451,233,0.95,234,1.217,243,1.638,246,2.277,253,2.367,259,0.453,260,1.243,262,4.272,263,2.941,266,0.914,272,1.64,280,0.567,281,1.114,285,2.705,286,2.961,318,2.196,346,2.332,361,0.809,363,2.747,374,2.517,378,2.668,392,1.166,408,3.381,461,0.716,478,0.387,509,1.974,518,1.93,522,1.716,548,1.387,554,2.464,583,1.592,605,1.175,606,1.119,609,2.466,652,1.191,659,1.21,660,1.217,662,2.367,680,1.217,719,1.884,727,1.119,786,2.053,807,1.769,808,2.15,916,2.577,937,2.577,966,2.937,1021,2.053,1025,3.033,1041,2.854,1044,3.034,1070,1.681,1073,1.772,1080,2.705,1129,2.332,1142,2.577,1144,3.668,1174,5.152,1183,4.482,1186,2.577,1188,1.486,1236,1.99,1253,3.402,1254,3.289,1256,2.351,1259,1.598,1317,1.93,1318,2.053,1358,1.419,1362,2.831,1374,2.053,1381,1.559,1394,1.99,1411,2.922,1533,1.93,1535,2.831,1706,1.822,1753,2.367,1757,1.99,1760,2.277,1772,1.99,1892,2.466,1894,4.344,1939,3.033,2022,2.705,2055,3.668,2096,4.062,2098,2.854,2101,4.062,2153,2.854,2234,2.466,2266,3.773,2309,2.196,2315,2.577,2505,4.27,2523,2.705,2533,2.466,2582,2.705,2590,2.705,2595,3.509,2665,3.85,2698,4.316,2741,5.025,2761,2.884,2823,3.033,2937,3.85,3198,4.086,3208,2.277,3293,3.668,3305,2.466,3326,3.033,3330,3.033,3358,2.705,3590,2.854,3692,2.705,3725,2.854,3741,2.705,3748,2.854,3840,2.854,3854,2.466,3941,4.729,3942,2.122,3943,2.053,3944,3.033,3945,5.658,3946,3.033,3947,3.257,3948,3.257,3949,3.033,3950,2.854,3951,4.272,3952,3.033,3953,5.95,3954,4.703,3955,5.152,3956,6.213,3957,6.213,3958,6.213,3959,6.457,3960,3.257,3961,3.257,3962,3.257,3963,3.257,3964,3.257,3965,3.257,3966,3.257,3967,3.257,3968,3.257,3969,3.033,3970,3.257,3971,3.257,3972,3.257,3973,3.257,3974,2.577,3975,3.257,3976,3.033,3977,3.257,3978,6.643,3979,4.316,3980,3.257,3981,3.257,3982,3.257,3983,2.854,3984,2.854,3985,3.257,3986,3.257,3987,3.257,3988,4.635,3989,4.635,3990,3.257,3991,3.257,3992,3.257,3993,3.033,3994,3.257,3995,3.257,3996,4.635,3997,3.257,3998,4.635,3999,3.257,4000,3.257,4001,3.257,4002,5.397,4003,3.257,4004,3.033,4005,3.257,4006,3.257,4007,3.257,4008,3.257,4009,3.257,4010,3.257,4011,3.257,4012,3.257,4013,3.257,4014,3.257,4015,6.457,4016,3.257,4017,3.257,4018,4.635,4019,3.257,4020,3.257,4021,4.635,4022,3.257,4023,5.879,4024,4.635,4025,3.257,4026,3.257,4027,3.257,4028,3.257,4029,3.033,4030,3.257,4031,3.257,4032,3.257,4033,4.635,4034,3.257,4035,3.257,4036,3.257,4037,3.257,4038,3.257,4039,3.257,4040,3.257,4041,3.257,4042,4.635,4043,3.257,4044,3.257,4045,3.257,4046,3.257,4047,3.257,4048,3.257,4049,3.257,4050,3.257,4051,4.635,4052,3.257,4053,3.033,4054,3.257,4055,3.257,4056,3.257,4057,3.257,4058,3.257,4059,3.257,4060,3.257,4061,4.635,4062,4.635,4063,3.257,4064,3.257,4065,3.257,4066,3.257,4067,3.257,4068,3.257,4069,3.257,4070,3.257]],["title/interfaces/SearchSection.html",[0,0.175,3953,3.234]],["body/interfaces/SearchSection.html",[0,0.308,2,0.884,3,0.066,4,0.051,5,0.044,12,0.148,13,0.429,18,0.232,19,0.008,20,1.55,25,0.998,26,0.093,30,1.945,33,2.728,35,2.113,36,1.182,40,1.652,43,5.315,50,1.012,58,2.345,59,1.034,60,1.346,64,2.797,67,2.537,73,0.502,78,0.098,84,2.309,85,0.794,87,1.705,88,1.572,91,1.368,93,2.537,96,1.342,99,1.379,101,2.054,105,4.29,108,1.281,109,1.073,114,1.475,121,2.878,124,3.53,133,1.983,140,0.664,143,0.523,145,2.599,155,2.683,159,0.008,160,0.006,161,0.007,165,3.264,171,4.358,172,1.543,179,3.396,192,0.722,194,2.727,200,0.38,204,0.587,206,4.503,208,2.533,223,3.058,225,4.468,233,0.958,234,1.227,243,1.652,246,2.297,253,2.387,259,0.454,260,1.253,262,4.705,263,2.945,266,0.916,272,1.647,280,0.568,281,1.12,285,2.728,286,2.968,318,2.215,346,2.345,361,0.816,363,2.763,374,2.524,378,2.683,392,1.176,408,3.391,461,0.722,478,0.39,509,1.986,518,1.946,522,1.722,548,1.399,554,2.252,583,1.602,605,1.182,606,1.128,609,2.487,652,1.201,659,1.216,660,1.227,662,2.387,680,1.227,719,1.889,727,1.128,786,2.071,807,1.779,808,2.158,916,2.599,937,2.599,966,2.95,1021,2.071,1025,3.058,1041,2.878,1044,3.045,1070,1.695,1073,1.787,1080,2.728,1129,2.345,1142,2.599,1144,3.69,1174,4.086,1183,4.503,1186,2.599,1188,1.499,1236,2.006,1253,3.418,1254,3.301,1256,2.362,1259,1.611,1317,1.946,1318,2.071,1358,1.431,1362,2.006,1374,2.071,1381,1.572,1394,2.006,1411,2.94,1533,1.946,1535,3.807,1706,1.837,1753,2.387,1757,2.006,1760,2.297,1772,2.006,1892,2.487,1894,4.358,1939,3.058,2022,2.728,2055,3.69,2096,4.086,2098,2.878,2101,4.086,2153,2.878,2234,2.487,2266,3.26,2309,2.215,2315,2.599,2505,4.29,2523,2.728,2533,2.487,2582,2.728,2590,2.728,2595,3.53,2665,3.873,2698,4.342,2741,5.048,2761,2.895,2823,3.058,2937,3.873,3198,4.104,3208,2.297,3293,3.69,3305,2.487,3326,3.058,3330,3.058,3358,2.728,3590,2.878,3692,2.728,3725,2.878,3741,2.728,3748,2.878,3840,2.878,3854,2.487,3941,4.751,3942,2.14,3943,2.071,3944,3.058,3945,5.461,3946,3.058,3947,3.284,3948,3.284,3949,3.058,3950,2.878,3951,4.288,3952,3.058,3953,6.066,3954,5.152,3955,4.751,3956,4.663,3957,4.663,3958,4.663,3959,5.901,3960,3.284,3961,3.284,3962,3.284,3963,3.284,3964,3.284,3965,3.284,3966,3.284,3967,3.284,3968,3.284,3969,3.058,3970,3.284,3971,3.284,3972,3.284,3973,3.284,3974,2.599,3975,3.284,3976,3.058,3977,3.284,3978,6.659,3979,4.342,3980,3.284,3981,3.284,3982,3.284,3983,2.878,3984,2.878,3985,3.284,3986,3.284,3987,3.284,3988,4.663,3989,4.663,3990,3.284,3991,3.284,3992,3.284,3993,3.058,3994,3.284,3995,3.284,3996,4.663,3997,3.284,3998,4.663,3999,3.284,4000,3.284,4001,3.284,4002,5.421,4003,3.284,4004,3.058,4005,3.284,4006,3.284,4007,3.284,4008,3.284,4009,3.284,4010,3.284,4011,3.284,4012,3.284,4013,3.284,4014,3.284,4015,6.475,4016,3.284,4017,3.284,4018,4.663,4019,3.284,4020,3.284,4021,4.663,4022,3.284,4023,5.901,4024,4.663,4025,3.284,4026,3.284,4027,3.284,4028,3.284,4029,3.058,4030,3.284,4031,3.284,4032,3.284,4033,4.663,4034,3.284,4035,3.284,4036,3.284,4037,3.284,4038,3.284,4039,3.284,4040,3.284,4041,3.284,4042,4.663,4043,3.284,4044,3.284,4045,3.284,4046,3.284,4047,3.284,4048,3.284,4049,3.284,4050,3.284,4051,4.663,4052,3.284,4053,3.058,4054,3.284,4055,3.284,4056,3.284,4057,3.284,4058,3.284,4059,3.284,4060,3.284,4061,4.663,4062,4.663,4063,3.284,4064,3.284,4065,3.284,4066,3.284,4067,3.284,4068,3.284,4069,3.284,4070,3.284]],["title/interfaces/SelectOption.html",[0,0.175,2355,2.187]],["body/interfaces/SelectOption.html",[0,0.269,2,1.527,3,0.113,4,0.089,5,0.077,8,0.428,12,0.256,13,0.611,14,0.688,18,0.301,19,0.008,20,1.622,26,0.113,30,1.87,34,1.959,50,0.862,73,0.567,96,1.368,109,1.031,115,1.058,126,7.278,140,0.794,141,3.345,152,2.119,159,0.006,160,0.007,161,0.006,200,0.869,247,1.503,719,1.655,1302,3.345,1346,3.639,2355,3.941,4175,6.195,4176,6.195,4177,8.193]],["title/directives/ShowClippedTextDirective.html",[599,1.408,753,1.684]],["body/directives/ShowClippedTextDirective.html",[0,0.145,3,0.061,4,0.048,5,0.041,8,0.231,9,1.245,12,0.138,13,0.407,14,0.458,18,0.295,19,0.008,25,1.583,26,0.114,27,1.804,30,1.882,36,0.775,38,2.221,50,0.465,52,1.053,59,1.133,74,2.997,78,0.091,81,1.029,83,1.395,85,0.754,87,1.118,96,1.107,98,3.821,99,1.035,101,1.882,102,2.62,108,1.192,109,0.556,115,0.486,118,1.804,140,0.711,143,1.037,158,1.145,159,0.003,160,0.004,161,0.003,170,1.241,172,1.495,181,0.689,191,2.173,192,0.672,195,0.906,197,0.934,198,0.498,200,0.754,224,0.873,247,1.076,259,0.214,266,0.923,272,2.067,275,1.167,280,0.577,344,1.428,377,1.428,392,1.095,441,0.967,458,2.228,461,0.973,463,1.586,478,0.363,518,1.812,522,1.52,524,1.245,554,1.167,560,1.804,573,4.209,582,3.678,599,2.488,605,1.652,615,1.463,623,2.84,643,2.221,658,1.463,659,0.686,666,1.804,680,1.654,699,1.319,745,1.118,753,2.376,754,3.025,787,2.12,801,2.668,837,2.221,899,1.05,933,5.311,985,1.867,995,2.361,1028,4.122,1029,5.299,1030,3.248,1031,2.539,1032,1.759,1033,4.564,1034,1.664,1035,1.302,1036,5.034,1037,2.555,1038,1.428,1039,3.097,1040,4.429,1041,2.679,1042,3.751,1043,6.193,1044,2.947,1045,1.865,1046,2.434,1047,4.326,1048,5.318,1049,2.581,1050,3.348,1051,5.644,1052,3.703,1053,5.644,1054,4.149,1055,5.644,1056,2.847,1057,3.057,1058,2.847,1059,3.057,1060,2.419,1061,3.057,1062,3.057,1063,2.847,1064,2.847,1065,3.057,1066,3.057,1067,1.5,1068,3.057,1069,3.057,1070,1.578,1071,4.429,1072,3.057,1073,2.834,1074,5.208,1075,3.057,1076,3.678,1077,3.057,1078,3.057,1079,3.057,1080,2.539,1081,3.057,1082,2.847,1083,1.812,1084,6.061,1085,3.057,1086,5.208,1087,3.057,1088,3.057,1089,1.363,1090,5.208,1091,4.429,1092,3.057,1093,4.429,1094,3.057,1095,4.429,1096,2.419,1097,3.057,1098,1.927,1099,5.208,1100,3.057,1101,3.057,1102,3.057,1103,4.429,1104,4.429,1105,3.057,1106,3.057,1107,4.564,1108,3.057,1109,3.057,1110,3.057,1111,3.057,1112,3.057,1113,5.711,1114,3.057,1115,6.061,1116,3.057,1117,3.057,1118,5.711,1119,2.679,1120,5.208,1121,4.429,1122,3.057,1123,3.057,1124,3.057,1125,3.057,1126,3.057,1127,3.057,1128,2.625,1129,1.538,1130,3.057,1131,3.057,1132,4.429,1133,3.057,1134,4.429,1135,5.711,1136,4.429,1137,2.997,1138,4.429,1139,1.867,1140,4.429,1141,3.057,1142,2.419,1143,3.057,1144,2.419,1145,4.429,1146,3.057,1147,3.057,1148,3.057,1149,3.057,1150,2.061,1151,3.057,1152,2.679,1153,2.847,1154,3.057,1155,3.057,1156,3.057,1157,4.429,1158,5.208,1159,2.847,1160,3.057,1161,3.057,1162,2.264,1163,3.057,1164,2.625,1165,3.057,1166,4.429,1167,5.711,1168,2.679,1169,2.679,1170,2.679,1171,2.679,1172,6.061,1173,4.85,1174,4.564,1175,3.339,1176,6.237,1177,3.339,1178,3.339,1179,3.339,1180,3.339,1181,3.339,1182,3.339,1183,2.539,1184,3.339,1185,4.429,1186,3.505,1187,4.837,1188,2.021,1189,5.688,1190,3.339,1191,3.339,1192,4.837,1193,3.339,1194,4.837,1195,5.688,1196,3.339,1197,4.837,1198,4.837,1199,4.837,1200,5.688,1201,4.837,1202,5.688,1203,4.837,1204,2.733,1205,6.237,1206,5.688,1207,3.339,1208,3.339,1209,4.837,1210,4.837,1211,2.138,1212,2.419,1213,4.837,1214,3.339,1215,3.339,1216,3.339,1217,3.339,1218,3.339,1219,3.339,1220,2.179,1221,5.318,1222,3.339,1223,3.339,1224,5.688,1225,4.837,1226,4.837,1227,6.237,1228,5.688,1229,6.237,1230,3.339,1231,3.057,1232,1.578,1233,3.339,1234,3.339,1235,3.057,1236,1.867,1237,1.619,1238,3.057,1239,3.057,4178,3.766,4179,5.457,4180,5.457,4181,3.766,4182,3.766,4183,3.766,4184,3.766,4185,3.766,4186,3.766,4187,3.766,4188,3.766,4189,3.766,4190,3.766,4191,3.766,4192,3.766]],["title/modules/ShowClippedTextDirectiveModule.html",[2755,1.572,2769,2.794]],["body/modules/ShowClippedTextDirectiveModule.html",[3,0.114,4,0.089,5,0.077,19,0.008,26,0.114,78,0.17,159,0.006,160,0.007,161,0.006,259,0.469,478,0.679,665,3.03,680,2.136,698,2.279,753,3.547,1029,4.156,1030,2.911,1162,2.136,1276,3.291,1580,2.381,1907,3.999,2620,2.549,2755,2.435,2757,3.199,2758,3.199,2759,3.96,2760,3.493,2761,2.806,2762,4.325,2769,5.751,2770,4.082,2773,3.493,2775,3.389,2776,3.493,2777,3.493,2778,3.493,2779,3.493,2780,3.493,2783,4.213,4193,6.246,4194,6.246,4195,6.246,4196,7.046]],["title/classes/ShowClippedTextDirectiveTestHelper.html",[78,0.11,4197,3.437]],["body/classes/ShowClippedTextDirectiveTestHelper.html",[3,0.076,4,0.06,5,0.051,8,0.287,12,0.172,13,0.475,14,0.68,18,0.301,19,0.008,26,0.103,36,1.593,59,1.142,71,1.156,73,0.532,78,0.154,96,1.219,98,4.144,101,1.254,115,0.822,140,0.581,143,1,148,2.15,158,0.984,159,0.004,160,0.005,161,0.004,163,1.569,172,1.55,181,0.803,191,2.533,192,0.836,195,0.959,197,1.386,198,0.74,200,0.727,204,0.446,224,0.999,247,1.357,259,0.411,266,0.89,272,1.156,275,1.452,280,0.597,326,2.533,441,1.634,478,0.452,479,4.396,480,2.565,522,2.172,523,3.611,533,3.482,569,2.665,573,4.274,587,5.459,599,2.237,605,1.788,623,2.554,640,4.438,652,1.391,680,2.19,742,1.963,753,2.356,801,1.778,1029,5.58,1030,3.362,1042,3.374,1043,4.869,1044,3.025,1047,5.759,1049,2.496,1050,3.105,1052,3.581,1054,4.26,1096,3.011,1107,5.509,1137,3.618,1152,5.76,1168,3.334,1169,3.334,1170,3.334,1171,3.334,1237,2.735,1259,1.866,1276,2.189,2185,3.482,2310,3.154,3131,4.086,4197,4.809,4198,7.68,4199,3.804,4200,5.64,4201,6.402,4202,6.402,4203,6.867,4204,6.867,4205,6.867,4206,6.867,4207,6.867,4208,6.362,4209,6.362,4210,6.402,4211,6.402,4212,6.402,4213,6.402,4214,6.402,4215,4.155,4216,4.687,4217,4.687,4218,6.402,4219,4.687,4220,5.64,4221,4.687,4222,5.64,4223,4.687,4224,4.687,4225,4.687,4226,4.687,4227,4.687,4228,4.687,4229,4.687,4230,4.687,4231,4.687,4232,4.687,4233,4.687,4234,4.687,4235,4.687,4236,4.687,4237,4.687,4238,4.687,4239,4.687,4240,4.687,4241,4.687,4242,4.687,4243,4.687,4244,4.687,4245,4.687,4246,4.687,4247,4.687,4248,4.687,4249,4.687,4250,4.687,4251,4.687,4252,4.687,4253,4.687,4254,4.155,4255,4.155,4256,4.155,4257,4.155,4258,6.867,4259,4.155,4260,4.155,4261,4.155,4262,4.155,4263,4.155,4264,4.155,4265,5.64,4266,6.402,4267,4.155,4268,5.64,4269,5.64,4270,4.155,4271,5.64,4272,4.155,4273,4.155,4274,4.155,4275,4.155,4276,5.64,4277,4.155,4278,4.155,4279,4.155,4280,4.155,4281,4.155,4282,4.155,4283,5.64,4284,4.155,4285,4.155,4286,4.155,4287,4.155,4288,4.155,4289,5.64]],["title/components/ShowClippedTextDirectiveTestHostComponent.html",[204,0.319,742,1.905]],["body/components/ShowClippedTextDirectiveTestHostComponent.html",[3,0.078,4,0.061,5,0.053,12,0.176,13,0.482,18,0.292,19,0.008,26,0.105,36,1.609,59,1.037,60,0.968,63,1.338,71,1.184,73,0.526,78,0.156,96,1.15,98,4.003,101,1.73,115,0.62,140,0.715,143,0.944,148,2.185,158,1.008,159,0.004,160,0.005,161,0.004,163,1.184,172,1.395,195,0.854,198,0.746,200,0.686,204,0.512,208,1.821,247,1.484,259,0.416,263,1.587,266,0.899,272,1.184,275,1.487,280,0.6,326,1.911,338,1.879,358,1.07,374,1.519,390,1.587,441,1.661,461,1.699,463,1.277,478,0.463,479,3.67,480,2.627,522,2.179,523,2.725,533,3.539,569,2.011,573,4.003,587,3.628,599,2.529,605,1.798,623,1.697,640,2.95,650,1.519,651,1.627,652,1.919,653,1.911,656,1.553,658,1.865,659,1.719,680,2.217,698,1.553,699,1.563,700,3.552,701,2.18,702,1.587,703,2.18,704,2.18,705,1.697,706,2.064,707,2.18,708,1.865,709,2.18,710,1.367,711,2.18,712,1.778,713,2.227,714,1.865,715,3.552,716,1.737,717,1.865,718,1.865,719,1.137,720,1.737,721,1.865,722,2.18,723,1.911,724,2.18,725,2.064,726,1.865,727,2.181,728,2.18,729,1.778,730,3.552,731,1.821,732,2.985,733,1.821,734,1.595,735,1.821,736,2.936,737,1.778,738,1.96,739,2.18,740,1.737,741,2.18,742,3.277,743,1.519,744,1.553,745,1.425,746,1.553,747,2.18,748,1.865,749,2.18,750,1.911,751,1.425,752,2.18,753,2.897,754,2.064,755,2.18,801,1.821,1029,5.069,1030,3.164,1042,2.242,1043,3.236,1044,3.42,1047,5.504,1049,2.527,1050,3.144,1052,3.625,1054,4.312,1096,3.083,1107,3.414,1137,2.242,1152,5.564,1168,3.414,1169,3.414,1170,3.414,1171,3.414,1237,2.064,1259,1.911,1276,2.242,2185,2.627,2310,2.38,2415,5.934,3131,4.153,4197,3.628,4198,6.977,4199,3.897,4200,4.255,4201,4.255,4202,4.255,4203,4.255,4204,4.255,4205,4.255,4206,4.255,4207,4.255,4210,4.255,4211,4.255,4212,4.255,4213,4.255,4214,4.255,4218,4.255,4220,4.255,4222,4.255,4254,4.255,4255,4.255,4256,4.255,4257,4.255,4258,6.934,4259,4.255,4260,4.255,4261,4.255,4262,4.255,4263,4.255,4264,4.255,4265,5.732,4266,6.481,4267,4.255,4268,5.732,4269,5.732,4270,4.255,4271,5.732,4272,4.255,4273,4.255,4274,4.255,4275,4.255,4276,5.732,4277,4.255,4278,4.255,4279,4.255,4280,4.255,4281,4.255,4282,4.255,4283,7.456,4284,5.732,4285,5.732,4286,6.481,4287,5.732,4288,6.481,4289,6.934,4290,4.8,4291,4.8,4292,4.8,4293,4.8,4294,4.8,4295,4.8]],["title/interfaces/SortedColumn.html",[0,0.175,1320,2.405]],["body/interfaces/SortedColumn.html",[0,0.277,1,2.172,2,0.453,3,0.034,4,0.026,5,0.023,8,0.127,9,1.682,10,3.256,12,0.285,13,0.38,14,0.174,15,3.44,18,0.249,19,0.008,20,1.181,22,0.716,25,1.08,26,0.126,27,1.682,28,1.06,30,1.799,34,1.676,36,1.683,39,0.996,40,2.48,42,0.915,47,0.785,50,0.975,52,0.562,53,1.753,54,1.06,55,3.179,56,1.811,59,0.909,60,1.224,61,2.222,62,0.767,63,1.693,64,2.079,66,0.845,67,0.915,69,2.921,71,0.845,73,0.49,74,1.6,77,1.331,78,0.106,80,1.027,81,0.935,83,1.622,84,1.948,85,0.605,86,2.795,87,1.511,88,0.805,90,3.78,91,0.7,93,3.492,96,1.159,99,0.965,101,2.014,102,0.845,108,1.784,109,1.275,111,1.993,114,0.532,115,0.951,118,1.864,120,1.095,127,1.744,129,1.473,133,1.017,136,0.825,137,2.241,138,1.084,140,0.818,141,1.398,143,0.83,148,1.905,149,1.095,152,1.949,154,1.993,155,0.967,158,1.508,159,0.003,160,0.003,161,0.002,168,0.34,170,0.471,172,1.542,173,1.133,181,0.553,192,0.369,194,1.788,195,0.21,198,0.587,200,0.411,202,0.996,203,0.89,204,0.516,210,2.172,224,0.491,233,0.811,234,1.038,243,0.845,247,0.347,250,1.133,259,0.436,260,0.641,266,0.998,269,1.133,270,1.875,272,0.845,280,0.607,281,1.077,286,2.861,321,0.767,327,0.89,336,0.967,338,1.273,344,2.55,358,0.462,361,1.026,364,1.369,369,1.647,374,0.655,377,2.303,378,2.377,390,1.132,392,1.273,438,1.239,459,1.038,461,0.369,463,0.677,478,0.2,509,1.514,513,0.915,522,1.037,524,1.864,539,1.753,545,0.805,547,1.331,548,0.716,554,1.357,562,0.825,570,0.767,583,0.955,598,1.184,605,1.249,606,0.577,619,1.549,642,2.418,650,0.655,651,0.862,652,1.3,656,0.67,659,0.797,660,0.628,666,1.132,670,1.698,680,1.709,681,2.448,697,1.095,699,1.059,702,1.132,710,0.589,713,0.589,719,0.49,743,0.655,744,0.67,745,1.017,751,0.615,774,0.641,776,1.158,782,1.908,784,1.835,787,0.805,808,1.3,813,1.061,823,1.027,838,0.749,865,1.027,869,0.805,891,0.996,899,0.577,982,1.935,983,1.514,984,2.577,986,0.749,987,3.108,988,2.925,989,2.465,995,1.328,998,0.967,999,0.89,1001,1.788,1002,1.095,1003,1.095,1020,2.248,1030,0.732,1032,3.256,1034,0.915,1035,2.9,1037,2.86,1038,1.299,1042,2.046,1044,1.435,1045,0.996,1046,1.299,1049,2.222,1067,1.364,1070,0.867,1073,0.915,1083,0.996,1089,1.585,1128,0.996,1129,1.398,1137,0.967,1139,3.456,1188,0.767,1204,0.805,1220,0.641,1232,0.867,1237,1.473,1240,2.691,1241,1.06,1242,1.944,1243,1.513,1244,1.944,1245,2.544,1246,1.753,1247,2.248,1248,1.175,1249,1.095,1250,1.175,1251,2.046,1252,1.753,1253,2.241,1254,2.559,1255,1.175,1256,2.273,1257,1.944,1258,1.944,1259,0.825,1260,1.175,1261,1.944,1262,2.486,1263,1.944,1264,0.602,1265,1.944,1266,1.175,1267,1.435,1268,0.89,1269,1.06,1270,1.133,1271,1.06,1272,1.06,1273,0.732,1274,0.89,1275,0.94,1276,0.967,1277,1.239,1278,1.027,1279,0.641,1280,1.835,1281,2.302,1282,2.172,1283,2.397,1284,3.471,1285,3.307,1286,2.981,1287,1.133,1288,2.316,1289,1.095,1290,1.06,1291,0.867,1292,1.027,1293,0.967,1294,2.816,1295,1.875,1296,2.241,1297,1.095,1298,1.133,1299,1.133,1300,2.691,1301,1.06,1302,1.398,1303,4.433,1304,2.026,1305,1.811,1306,1.133,1307,3.458,1308,2.397,1309,1.811,1310,3.108,1311,1.513,1312,1.175,1313,1.698,1314,1.175,1315,1.753,1316,1.175,1317,2.448,1318,2.604,1319,3.092,1320,2.316,1321,1.944,1322,1.944,1323,3.199,1324,1.133,1325,2.786,1326,1.175,1327,2.107,1328,1.811,1329,1.944,1330,1.175,1331,1.944,1332,1.944,1333,2.691,1334,2.486,1335,1.027,1336,0.996,1337,1.133,1338,1.175,1339,1.175,1340,0.915,1341,1.835,1342,3.199,1343,1.647,1344,3.896,1345,2.486,1346,0.825,1347,1.175,1348,1.175,1349,4.328,1350,1.095,1351,2.302,1352,3.447,1353,3.816,1354,1.095,1355,1.175,1356,2.316,1357,1.06,1358,0.732,1359,1.175,1360,1.175,1361,1.06,1362,2.795,1363,0.967,1364,1.175,1365,0.996,1366,2.316,1367,0.867,1368,0.915,1369,1.175,1370,2.046,1371,1.175,1372,1.095,1373,1.944,1374,1.753,1375,1.175,1376,1.175,1377,1.647,1378,1.06,1379,1.175,1380,1.175,1381,0.805,1382,1.175,1383,1.875,1384,2.486,1385,1.175,1386,1.175,1387,1.133,1388,1.811,1389,1.095,1390,1.811,1391,1.095,1392,2.486,1393,1.175,1394,1.027,1395,1.095,1396,1.175,1397,1.944,1398,1.175,1399,1.175,1400,1.175,1401,1.175,1402,1.175,1403,1.175,1404,1.875,1405,1.175,1406,2.486,1407,1.175,1408,1.175,1409,1.133,1410,2.888,1411,2.241,1412,1.175,1413,1.133,1414,1.095,1415,1.133,1416,1.175,1417,1.175,1418,1.133,1419,1.944,1420,1.175,1421,1.175,1422,1.944,1423,1.175,1424,1.175,1425,0.967,1426,1.175,1427,1.175,1428,1.175,1429,1.175,1430,3.815,1431,1.944,1432,1.175,1433,1.175,1434,1.175,1435,1.944,1436,1.175,1437,1.944,1438,1.944,1439,1.175,1440,1.175,1441,1.175,1442,1.944,1443,1.175,1444,2.888,1445,1.944,1446,1.944,1447,1.175,1448,1.175,1449,1.027,1450,1.175,1451,1.175,1452,1.175,1453,1.175,1454,1.175,1455,1.175,1456,1.944,1457,1.944,1458,1.944,1459,1.944,1460,2.486,1461,1.175,1462,1.175,1463,1.175,1464,1.175,1465,1.944,1466,1.944,1467,2.888,1468,1.175,1469,1.175,1470,1.175,1471,1.175,1472,1.175,1473,2.559,1474,3.447,1475,3.199,1476,1.944,1477,1.175,1478,1.944,1479,2.486,1480,1.175,1481,2.486,1482,1.175,1483,2.888,1484,1.944,1485,1.175,1486,1.175,1487,1.175,1488,1.944,1489,1.133,1490,1.175,1491,1.027,1492,1.175,1493,1.175,1494,1.175,1495,1.175,1496,1.944,1497,2.377,1498,1.175,1499,1.175,1500,1.175,1501,1.175,1502,1.175,1503,1.513,1504,1.175,1505,1.175,1506,1.175,1507,2.486,1508,1.175,1509,1.175,1510,1.133,1511,1.753,1512,1.175,1513,1.175,1514,1.175,1515,1.175,1516,1.175,1517,1.175,1518,1.175,1519,1.473,1520,1.175,1521,1.175,1522,1.175,1523,1.175,1524,1.095,1525,1.175,1526,1.175,1527,1.944,1528,1.175,1529,1.175,1530,1.175,1531,1.175,1532,1.175,1533,0.996,1534,1.175,1535,1.027,1536,1.175,1537,1.175,1538,0.996,1539,1.175,1540,1.175,1541,1.175,1542,1.175,1543,1.175,1544,1.175,1545,1.175,1546,1.175,1547,1.175,1548,1.175,1549,1.175,1550,0.805,1551,1.175,1552,1.175,1553,1.875,1554,1.175,1555,1.175,1556,1.175,1557,1.175,1558,1.175,1559,1.175,1560,1.175,1561,1.175,1562,1.944,1563,1.944,1564,1.944,1565,1.175,1566,2.316,1567,2.888,1568,1.944,1569,1.175,1570,1.175,1571,1.175,1572,1.175,1573,1.175,1574,1.175,1575,1.095,1576,1.175,1577,1.175,1578,1.175,1579,1.175,1580,0.7,1581,1.175,1582,1.175,1583,1.944,1584,1.175,1585,2.486,1586,1.175,1587,1.175,1588,1.175,1589,1.944,1590,1.175,1591,1.175,1592,1.944,1593,1.944,1594,1.175,1595,1.175,1596,1.095,1597,1.133,1598,1.175,1599,1.175,1600,1.175,1601,1.944,1602,1.944,1603,1.175,1604,1.175,1605,1.944,1606,1.175,1607,1.175,1608,1.175,1609,1.175,1610,1.175,1611,1.175,1612,1.175,1613,1.133,1614,1.175,1615,1.175,1616,1.175,1617,1.175,1618,1.175,1619,1.944,1620,1.175,1621,1.175,1622,1.175,1623,1.175,1624,1.175,1625,1.175,1626,1.175,1627,1.175,1628,1.175,1629,1.944,1630,2.888,1631,2.486,1632,1.175,1633,1.175,1634,1.944,1635,1.175,1636,1.175,1637,1.175,1638,1.175,1639,1.175,1640,1.175,1641,1.175,1642,1.269,1643,1.944,1644,1.175,1645,1.175,1646,1.175,1647,1.133,1648,1.175,1649,1.175,1650,1.175,1651,1.175,1652,1.175,1653,1.175,1654,1.133,1655,1.175,1656,1.175,1657,1.175,1658,1.175,1659,1.175,1660,1.175,1661,2.888,1662,1.175,1663,1.175,1664,1.175,1665,1.175,1666,1.175,1667,1.175,1668,1.133,1669,1.175,1670,1.175,1671,1.944,1672,1.175,1673,1.944,1674,1.175,1675,1.175,1676,1.944,1677,1.175,1678,1.175,1679,1.175,1680,1.175,1681,1.175,1682,2.486,1683,1.175,1684,1.175,1685,1.175,1686,1.175,1687,1.175,1688,0.845,1689,1.175,1690,1.175,1691,1.175,1692,1.175,1693,1.175,1694,1.175,1695,1.175,1696,1.175,1697,1.027,1698,1.133,1699,1.175,1700,1.175,1701,0.996,1702,1.175,1703,1.175,1704,1.944,1705,3.199,1706,0.94,1707,1.175,1708,1.175,1709,1.175,1710,1.175,1711,1.175,1712,1.175,1713,1.944,1714,1.175,1715,1.175,1716,1.753,1717,1.175,1718,1.175,1719,1.095,1720,1.175,1721,1.175,1722,1.095,1723,1.175,1724,1.175,1725,1.175]],["title/components/SpinnerActivityReporterComponent.html",[204,0.319,743,1.439]],["body/components/SpinnerActivityReporterComponent.html",[3,0.076,4,0.06,5,0.052,8,0.443,12,0.172,13,0.476,14,0.718,18,0.314,19,0.008,21,4.983,26,0.076,30,1.706,34,1.394,36,1.312,39,3.068,57,2.103,58,3.725,59,1.088,60,0.948,63,1.312,65,2.817,73,0.555,78,0.114,96,0.74,99,1.372,101,2.076,108,2.29,111,2.558,136,1.873,140,0.583,143,0.824,159,0.004,160,0.005,161,0.004,168,1.047,181,0.805,188,5.946,190,3.171,192,0.839,195,0.92,197,1.526,198,0.828,200,0.598,204,0.507,208,1.784,217,3.329,224,1.017,234,1.934,236,4.299,243,2.604,247,1.3,258,3.022,259,0.412,263,1.555,272,1.785,313,4.767,314,5.254,321,3.167,324,3.162,334,5.23,338,2.702,340,3.171,341,1.873,342,4.648,352,4.299,353,3.171,358,2.034,363,3.068,369,4.241,374,2.706,375,4.82,381,5.177,382,5.177,383,5.177,384,6.297,385,6.786,386,6.94,387,4.17,390,2.764,395,5.177,396,3.818,398,5.873,399,3.818,400,5.177,401,3.818,403,3.818,405,3.818,406,5.873,408,2.817,409,4.536,410,5.946,411,3.556,412,3.818,441,1.208,461,1.701,463,1.26,478,0.453,522,1.98,599,1.457,650,1.489,651,1.605,652,1.396,653,1.873,655,3.818,656,2.34,658,1.828,659,1.723,660,1.934,661,5.654,662,4.268,679,5.654,680,2.535,681,4.021,682,4.17,683,4.17,684,4.17,685,4.17,686,4.17,687,4.17,690,4.17,691,3.556,693,4.17,694,6.414,696,5.654,698,1.521,699,1.541,700,3.522,701,2.136,702,1.555,703,2.136,704,2.136,705,1.663,706,2.023,707,2.136,708,1.828,709,2.136,710,1.339,711,2.136,712,1.742,713,2.208,714,1.828,715,3.522,716,1.702,717,1.828,718,1.828,719,1.114,720,1.702,721,1.828,722,2.136,723,1.873,724,2.136,725,2.023,726,1.828,727,2.163,728,2.136,729,1.742,730,3.522,731,1.784,732,2.954,733,1.784,734,1.573,735,1.784,736,2.896,737,1.742,738,1.921,739,2.136,740,1.702,741,2.136,742,1.97,743,2.455,744,2.909,745,1.396,746,1.521,747,2.136,748,1.828,749,2.136,750,1.873,751,1.396,752,2.136,753,1.742,754,2.023,755,2.136,4296,6.94,4297,6.378,4298,4.704,4299,7.758,4300,4.704,4301,4.704,4302,4.704]],["title/classes/SpinnerActivityReporterWidgetObject.html",[78,0.11,4303,3.691]],["body/classes/SpinnerActivityReporterWidgetObject.html",[3,0.078,4,0.061,5,0.053,8,0.5,12,0.176,13,0.627,14,0.734,17,3.537,18,0.324,19,0.008,25,1.803,26,0.078,34,1.048,35,1.394,36,0.987,57,1.394,59,0.965,66,1.803,71,1.183,73,0.578,78,0.116,81,1.996,85,1.08,96,1.15,101,1.284,109,0.708,138,2.475,140,0.59,143,1.128,148,2.184,156,2.379,159,0.004,160,0.006,161,0.004,163,1.183,165,2.907,168,1.061,172,1.304,181,0.816,191,2.573,195,0.938,197,1.495,198,0.798,200,0.847,204,0.572,217,3.563,224,1.026,245,1.864,247,1.225,259,0.416,266,0.551,280,0.57,281,0.804,326,3.114,338,2.54,341,2.91,346,1.959,358,1.07,361,0.967,364,0.892,390,2.416,410,5.198,435,2.321,438,1.736,441,1.232,451,4.797,458,1.959,459,2.814,461,1.304,463,1.861,464,3.66,478,0.462,518,2.308,522,1.934,524,2.416,529,2.379,530,4.135,547,2.84,552,2.537,553,3.865,554,2.796,555,3.418,556,3.865,557,2.573,558,2.308,559,2.537,560,1.586,561,2.241,562,1.91,563,2.537,564,2.537,565,1.864,566,2.537,567,2.537,568,2.537,569,2.01,570,1.777,571,2.948,621,2.537,632,3.318,635,3.061,642,2.573,646,2.063,659,1.177,662,4.311,743,1.518,744,2.64,757,6.826,758,3.894,759,4.402,760,2.814,761,4.148,762,4.357,763,4.357,764,4.148,765,4.357,766,3.537,767,4.357,771,2.723,772,3.412,773,2.241,774,1.486,775,2.723,776,1.621,777,2.537,778,2.626,779,2.723,780,3.412,781,2.723,782,1.424,783,2.723,784,2.01,785,4.002,786,3.74,787,2.84,788,2.723,789,4.773,790,3.412,791,2.723,792,3.412,793,3.109,794,2.723,795,3.412,796,3.019,797,2.723,798,3.412,799,2.723,800,3.412,801,1.819,802,2.723,803,2.723,804,3.412,805,2.723,806,3.412,807,1.486,808,1.424,809,3.204,810,3.668,811,2.723,812,3.412,813,1.486,814,2.723,815,4.253,817,4.253,822,4.253,823,2.379,824,4.253,825,4.253,1753,2.83,2875,4.253,4296,6.826,4303,5.246,4304,7.82,4305,7.82,4306,4.797,4307,4.797,4308,4.797,4309,4.797,4310,4.797,4311,4.797,4312,4.797]],["title/classes/SubscriptionTracker.html",[78,0.11,1273,1.608]],["body/classes/SubscriptionTracker.html",[0,0.28,3,0.093,4,0.073,5,0.063,8,0.35,12,0.21,13,0.541,14,0.669,18,0.3,19,0.008,26,0.118,50,0.982,52,1.191,57,2.315,59,1.145,78,0.138,85,1.194,113,3.171,114,1.863,143,0.739,158,1.523,159,0.005,160,0.006,161,0.005,163,1.412,170,1.65,172,1.421,181,0.916,192,1.021,195,0.877,197,1.433,198,0.727,200,0.747,204,0.508,224,0.893,259,0.453,266,0.915,280,0.492,281,0.96,341,3.171,358,2.042,364,1.48,376,3.859,392,2.109,437,3.249,478,0.552,646,2.462,651,1.826,1027,5.483,1045,2.434,1267,3.836,1268,2.462,1273,2.565,1533,4.313,2595,3.518,2717,5.16,3488,6.02,3489,7.165,3490,4.647,3491,7.659,3492,7.06,3493,5.075,3494,7.948,3495,5.075,3496,7.659,3497,7.659,3499,5.075,3500,5.075,3501,5.075,3502,8.451,3503,7.06,3505,6.431,3507,7.825,3508,5.075,3509,5.075,3510,5.075,3511,5.075,3512,5.889,3513,6.431,3514,5.483,3515,6.431,3516,6.431,3517,5.075,3518,6.431,3519,5.075,3520,5.075,3521,5.075,3522,5.075,3523,6.431,3524,6.431,3525,5.075,3526,5.075,3527,5.075,3528,5.075,3529,5.075,3530,5.075,4313,7.255,4314,5.725,4315,5.725,4316,5.725,4317,5.725]],["title/classes/TestElement.html",[78,0.11,449,3.065]],["body/classes/TestElement.html",[3,0.059,4,0.046,5,0.04,8,0.384,12,0.133,13,0.63,14,0.645,17,2.904,18,0.315,19,0.008,22,1.252,26,0.086,35,2.596,36,1.091,45,2.805,59,1.041,71,1.813,73,0.572,77,3.083,78,0.128,81,1.887,85,1.096,96,0.835,99,0.687,109,0.783,115,0.892,136,2.112,140,0.485,158,0.76,159,0.005,160,0.004,161,0.003,163,1.957,168,0.595,170,1.428,172,1.311,181,0.872,192,0.646,195,0.928,197,1.315,198,0.725,200,0.803,204,0.372,216,1.311,224,1.05,233,1.257,236,2.443,245,2.438,247,1.288,259,0.437,266,0.935,272,0.894,275,1.122,280,0.624,281,1.391,344,1.374,361,1.069,364,0.673,367,6.002,432,5.229,433,4.287,434,6.527,435,2.755,436,1.743,437,2.056,438,1.311,439,3.773,440,3.212,441,0.931,442,3.011,444,2.443,446,4.01,447,2.327,449,6.206,450,3.212,451,4.597,453,3.212,455,2.941,456,2.327,457,5.563,458,3.734,459,2.229,460,5.229,461,1.311,462,2.739,463,1.824,464,3.409,466,2.061,469,3.129,470,2.443,472,2.443,474,4.231,477,5.968,478,0.349,479,4.173,480,1.983,481,2.056,482,1.916,483,1.983,484,1.916,485,1.916,486,2.478,487,4.956,488,4.703,489,5.563,490,3.212,491,4.703,492,4.306,493,4.703,494,5.563,495,6.124,496,3.212,497,3.212,498,3.212,499,3.212,500,3.212,501,4.703,502,3.212,503,3.212,504,3.212,505,3.212,506,3.212,507,2.715,508,3.773,509,2.388,510,3.408,511,4.306,512,4.703,513,2.343,514,4.703,515,4.703,516,6.124,517,4.703,518,2.552,519,4.703,520,4.703,521,3.212,522,1.741,523,4.504,524,2.539,525,3.212,526,3.212,527,5.806,528,3.212,529,2.63,530,3.653,531,3.212,532,3.212,533,3.781,534,4.703,535,6.124,536,5.563,537,3.212,538,3.212,539,2.715,540,5.607,541,3.212,542,6.124,543,4.703,544,4.306,545,2.061,546,3.773,547,2.684,548,1.834,549,6.124,550,3.212,551,3.857,552,2.805,553,4.062,554,2.706,555,3.653,556,4.062,557,2.751,558,3.019,559,2.805,560,1.754,561,3.227,562,2.112,563,2.805,564,2.805,565,2.061,566,2.805,567,2.805,568,2.805,569,2.222,570,1.965,571,3.26,572,3.212,573,1.854,574,2.327,575,2.227,576,2.327,577,2.327,578,2.327,579,3.212,580,2.327,581,3.212,582,3.576,583,1.926,584,3.408,585,4.703,586,3.212,587,5.221,588,6.124,589,3.212,590,6.124,591,3.212,592,4.703,593,5.563,594,3.212,595,3.212,596,3.212,597,3.212,598,1.834,599,1.643,600,4.703,601,3.212,602,3.212,603,4.703,604,5.563,605,0.745,606,1.01,607,3.212,766,2.904,4318,5.305,4319,5.305,4320,5.305,4321,3.623,4322,3.623,4323,5.305,4324,3.623,4325,3.623,4326,3.623,4327,3.623,4328,3.623,4329,3.623,4330,3.623,4331,3.623,4332,3.623,4333,3.623,4334,3.623,4335,3.623,4336,3.623,4337,3.623,4338,3.623,4339,3.623,4340,3.623,4341,3.623]],["title/classes/ThousandsUnit.html",[78,0.11,4342,3.691]],["body/classes/ThousandsUnit.html",[3,0.067,4,0.053,5,0.045,8,0.516,12,0.152,13,0.436,14,0.694,18,0.308,19,0.008,20,1.57,26,0.067,34,1.605,62,2.977,71,1.982,73,0.547,78,0.141,84,3.004,85,1.185,109,1.084,115,1.089,130,3.751,140,0.867,143,0.535,159,0.003,160,0.005,161,0.003,163,1.021,168,0.959,172,1.568,179,1.935,181,0.737,190,3.521,195,0.945,197,1.414,198,0.77,200,0.903,217,3.697,224,1.058,233,0.981,245,2.269,266,0.671,275,1.283,280,0.498,364,1.44,373,2.854,509,2.539,522,2.192,548,1.432,605,0.852,606,1.155,734,2.399,760,1.771,808,2.008,835,3.839,895,2.119,939,3.336,985,3.643,1098,3.759,1162,2.051,1232,3.245,1291,2.834,1302,3.372,1319,2.809,1343,2.809,1365,1.992,1473,3.071,1688,2.762,2029,4.46,2413,4.596,2620,3.052,3643,5.222,3644,5.222,3645,5.418,3646,5.568,3647,5.568,3648,4.952,3649,5.568,3650,4.719,3651,5.305,3654,2.946,3655,2.946,3656,5.222,3657,5.496,3661,2.946,3662,5.496,3663,5.222,3664,4.56,3665,2.946,3666,2.946,3667,4.56,3668,5.508,3669,2.946,3670,2.946,3671,2.946,3672,5.163,3673,5.163,3674,5.163,3675,5.418,3676,4.56,3677,2.946,3678,4.345,3709,2.946,3719,3.751,3852,5.903,3853,2.792,3854,3.589,3855,4.812,3856,5.491,3857,6.524,3859,4.154,3860,4.154,3861,4.154,3862,5.717,3865,3.362,3866,3.362,3867,2.946,3868,4.154,3869,4.154,3870,4.154,3871,2.946,3872,2.946,3873,4.154,3874,4.154,3875,4.154,3876,2.946,4100,3.672,4101,3.672,4103,3.672,4104,3.672,4105,3.672,4106,3.672,4107,3.672,4108,3.672,4109,3.672,4110,3.672,4111,3.672,4112,3.672,4342,3.362,4343,4.142]],["title/classes/Unit.html",[78,0.11,734,1.121]],["body/classes/Unit.html",[3,0.08,4,0.063,5,0.054,8,0.505,12,0.181,13,0.492,14,0.665,18,0.305,19,0.008,20,1.531,26,0.08,34,1.441,62,2.932,71,1.952,73,0.555,78,0.159,84,2.932,85,1.231,109,0.973,115,1.136,130,3.176,140,0.861,159,0.004,160,0.005,161,0.004,163,1.22,168,0.812,172,1.545,181,0.832,190,3.441,192,0.882,195,0.913,197,1.355,198,0.775,200,0.901,224,1.031,245,1.921,266,0.758,275,1.532,280,0.537,364,1.379,373,2.562,509,2.28,522,2.164,548,2.28,561,2.31,605,1.017,734,2.393,808,1.958,835,3.747,895,3.375,939,3.594,985,3.27,1098,3.375,1162,2,1232,3.108,1245,2.071,1247,2.184,1291,2.763,1302,3.463,1319,2.378,1343,2.378,1365,3.172,1473,2.994,1688,2.693,2029,4.361,2043,3.738,2413,4.579,2620,2.984,3643,5.003,3644,5.003,3645,4.446,3646,5.337,3647,5.337,3648,4.446,3649,5.337,3650,4.236,3651,5.085,3656,5.003,3657,5.406,3662,5.406,3663,5.003,3664,4.446,3667,4.446,3668,5.449,3672,5.651,3673,5.085,3674,5.085,3675,5.337,3676,4.446,3678,4.236,3719,3.176,3852,4.236,3853,3.333,3854,3.039,3855,4.691,3859,3.517,3860,3.517,3861,3.517,3862,6.034,3867,4.691,3868,4.691,3869,4.691,3870,4.691,3871,3.517,3872,3.517,3873,4.691,3874,4.691,3875,4.691,3876,3.517,4080,4.383,4344,4.945,4345,4.945,4346,6.595,4347,4.945,4348,4.945,4349,4.945,4350,4.945,4351,4.945,4352,4.945,4353,4.945,4354,4.945]],["title/injectables/UnitFormatter.html",[1858,2.255,3684,2.921]],["body/injectables/UnitFormatter.html",[3,0.093,4,0.073,5,0.063,8,0.488,12,0.21,14,0.67,18,0.276,19,0.008,20,1.686,26,0.093,73,0.565,78,0.139,85,1.239,115,0.938,136,2.893,140,0.843,141,2.966,158,1.759,159,0.005,160,0.006,161,0.005,181,0.917,192,1.023,194,3.606,195,0.809,197,1.364,198,0.728,200,0.902,224,0.991,259,0.477,260,1.777,264,4.081,275,1.777,280,0.493,320,4.081,341,2.285,478,0.553,668,5.086,734,2.37,1162,2.203,1368,2.534,1688,2.966,1744,4.081,1789,6.44,1796,6.44,1832,4.081,1858,3.602,1860,3.686,2029,3.842,2031,4.366,2043,6.334,2413,3.842,2620,2.629,3650,3.686,3657,5.512,3662,5.15,3668,5.762,3672,4.666,3673,5.383,3684,5.383,3823,7.707,3949,4.337,4355,7.429,4356,5.086,4357,8.97,4358,7.265,4359,5.738,4360,7.265,4361,5.738,4362,8.38,4363,7.265,4364,8.38,4365,8.38,4366,8.38,4367,8.38,4368,7.265,4369,8.645,4370,5.738,4371,7.265,4372,4.657,4373,5.738,4374,5.738,4375,5.738,4376,5.738]],["title/modules/VcdActionMenuModule.html",[2755,1.572,4377,3.065]],["body/modules/VcdActionMenuModule.html",[3,0.109,4,0.086,5,0.074,19,0.008,26,0.109,63,1.879,78,0.163,159,0.006,160,0.007,161,0.006,164,5.093,259,0.528,260,2.087,478,0.649,665,2.897,698,2.179,702,3.149,1030,2.383,1162,2.043,1264,1.959,1269,3.448,1270,3.688,1275,3.06,1580,2.278,1907,3.825,2620,2.438,2755,2.329,2756,6.19,2757,3.06,2758,3.06,2759,3.887,2760,3.341,2761,3.193,2762,4.245,2769,5.642,2770,3.976,2772,4.389,2773,3.341,2775,3.241,2776,3.341,2777,3.341,2778,3.341,2779,3.341,2780,3.341,2781,4.551,2782,3.448,2783,4.103,2785,4.729,2786,4.551,2787,5.093,4377,6.401,4378,5.974,4379,5.974,4380,6.739,4381,5.974,4382,6.739,4383,5.974]],["title/modules/VcdActivityReporterModule.html",[2755,1.572,4384,3.065]],["body/modules/VcdActivityReporterModule.html",[3,0.107,4,0.084,5,0.072,19,0.008,26,0.107,78,0.159,159,0.005,160,0.007,161,0.005,259,0.53,260,2.037,314,4.042,315,4.042,338,2.297,478,0.634,650,3.024,656,2.127,665,2.828,698,2.127,743,3.024,744,2.127,1162,1.994,1264,1.912,1580,2.223,1907,3.733,2620,2.38,2755,2.274,2757,2.987,2758,2.987,2759,3.847,2760,3.262,2761,2.619,2762,4.201,2770,3.919,2772,4.326,2773,3.262,2775,3.164,2776,3.262,2777,3.262,2778,3.262,2779,3.262,2780,3.262,2781,4.486,2782,3.366,2783,4.045,2785,4.662,2786,4.486,4384,6.441,4385,5.831,4386,5.831,4387,5.831,4388,5.831,4389,6.156,4390,6.156,4391,6.578,4392,5.974,4393,6.578,4394,5.831,4395,6.578,4396,5.831,4397,7.904]],["title/modules/VcdComponentsModule.html",[2755,1.572,4398,3.437]],["body/modules/VcdComponentsModule.html",[3,0.103,4,0.081,5,0.07,19,0.008,26,0.103,60,1.285,63,1.778,78,0.154,159,0.005,160,0.006,161,0.005,259,0.536,263,2.108,315,3.919,478,0.615,665,2.742,698,2.062,823,3.162,1030,2.255,1162,1.933,1275,2.895,1580,2.155,2010,4.096,2620,2.307,2755,2.204,2756,6.186,2757,2.895,2758,2.895,2759,2.895,2760,3.162,2761,2.539,2762,4.145,2769,5.639,2770,3.846,2773,3.162,2774,4.536,2775,3.067,2776,3.162,2777,3.162,2778,3.162,2779,3.162,2780,3.162,2783,3.969,2787,4.82,3099,6.186,3943,3.263,4113,6.526,4377,6.186,4383,5.653,4384,6.186,4389,6.186,4390,6.186,4394,5.653,4396,5.653,4398,7.199,4399,5.653,4400,5.653,4401,6.526,4402,5.894,4403,6.377,4404,6.377,4405,5.653,4406,6.377,4407,6.377,4408,6.377,4409,6.377,4410,5.176,4411,6.377]],["title/modules/VcdDataExporterModule.html",[2755,1.572,4401,3.234]],["body/modules/VcdDataExporterModule.html",[3,0.112,4,0.088,5,0.076,19,0.008,26,0.112,60,1.39,78,0.166,159,0.006,160,0.007,161,0.006,259,0.525,260,2.136,478,0.664,665,2.965,698,2.23,708,3.711,910,2.279,1162,2.09,1264,2.004,1580,2.33,1861,4.237,2010,4.429,2620,2.495,2755,2.383,2757,3.131,2758,3.131,2759,3.925,2760,3.419,2761,2.745,2762,4.286,2770,4.03,2772,3.774,2773,3.419,2774,4.904,2775,3.316,2776,3.419,2777,3.419,2778,3.419,2779,3.419,2780,3.419,2781,4.613,2782,3.528,2783,4.159,2784,5.48,2785,4.794,2786,4.613,4401,6.628,4412,6.112,4413,6.112,4414,6.112,4415,6.895,4416,6.895]],["title/modules/VcdDatagridModule.html",[2755,1.572,3099,3.065]],["body/modules/VcdDatagridModule.html",[3,0.094,4,0.074,5,0.064,19,0.008,26,0.094,63,1.618,73,0.355,78,0.14,159,0.005,160,0.006,161,0.005,247,0.973,259,0.543,260,1.797,266,0.967,315,3.566,478,0.559,665,2.495,698,1.877,705,3.289,710,2.661,712,3.28,714,2.254,716,3.205,717,2.254,718,3.441,719,1.374,720,3.205,745,2.172,746,2.865,823,2.877,910,1.918,991,2.201,1016,5.144,1030,2.052,1162,1.759,1264,1.687,1269,2.969,1275,2.635,1278,4.172,1370,3.93,1580,1.961,1701,4.173,2620,2.099,2755,2.006,2757,2.635,2758,2.635,2759,3.638,2760,2.877,2761,2.913,2762,3.973,2769,5.443,2770,3.628,2772,4.005,2773,2.877,2774,4.127,2775,2.791,2776,2.877,2777,2.877,2778,2.877,2779,2.877,2780,2.877,2781,4.153,2782,2.969,2783,3.744,2784,4.932,2785,4.315,2786,4.153,2787,4.386,3099,6.52,3479,5.971,3480,4.932,4093,5.204,4118,5.939,4377,5.971,4384,5.971,4392,5.53,4402,5.689,4405,5.144,4410,4.71,4417,5.144,4418,5.144,4419,5.144,4420,5.144,4421,4.71,4422,7.316,4423,5.144,4424,5.802,4425,5.802,4426,5.802,4427,5.802,4428,5.802,4429,8.414,4430,5.802,4431,5.802,4432,5.802]],["title/classes/VcdDatagridWidgetObject.html",[78,0.11,4433,3.691]],["body/classes/VcdDatagridWidgetObject.html",[3,0.096,4,0.076,5,0.065,8,0.364,12,0.218,13,0.554,14,0.768,18,0.309,19,0.008,25,1.998,26,0.096,47,2.818,57,2.159,73,0.535,78,0.144,114,2.081,143,1.128,152,2.457,159,0.005,160,0.006,161,0.005,163,1.466,168,1.219,181,0.938,191,2.958,195,0.928,199,5.27,200,0.82,216,2.932,217,3.38,224,0.98,247,1.358,259,0.423,280,0.592,361,1.761,364,1.506,435,2.594,438,2.932,442,4.599,459,1.803,463,1.601,464,3.733,485,4.781,524,2.806,632,3.679,659,1.623,751,2.205,760,2.771,934,3.819,949,5.284,950,5.284,951,5.284,955,5.463,956,4.229,957,5.763,959,5.763,960,4.229,962,4.382,963,4.229,968,5.615,1035,3.159,1294,3.112,1307,2.958,2221,5.27,2222,5.27,2223,5.27,2224,5.27,3101,6.577,3102,5.27,3196,4.008,4433,6.03,4434,7.745,4435,5.27,4436,8.103,4437,8.488,4438,8.103,4439,8.103,4440,5.945,4441,5.945,4442,5.945,4443,5.945,4444,5.945,4445,5.945,4446,5.945]],["title/modules/VcdErrorBannerModule.html",[2755,1.572,4389,3.065]],["body/modules/VcdErrorBannerModule.html",[3,0.112,4,0.088,5,0.076,19,0.008,26,0.112,78,0.167,159,0.006,160,0.007,161,0.006,259,0.519,260,2.141,358,1.541,478,0.666,665,2.973,698,2.236,723,3.824,1162,2.096,1264,2.01,1580,2.337,1907,3.924,2620,2.501,2755,2.39,2757,3.139,2758,3.139,2759,3.929,2760,3.428,2761,2.753,2762,4.291,2770,4.037,2772,3.784,2773,3.428,2775,3.325,2776,3.428,2777,3.428,2778,3.428,2779,3.428,2780,3.428,2781,4.621,2782,3.538,2783,4.166,2785,4.802,2786,4.621,2919,5.225,2962,6.129,4389,6.286,4392,6.154,4447,6.129,4448,6.129,4449,6.129,4450,6.913]],["title/modules/VcdFormModule.html",[2755,1.572,4402,2.921]],["body/modules/VcdFormModule.html",[3,0.103,4,0.081,5,0.07,19,0.008,26,0.103,78,0.154,140,0.583,159,0.005,160,0.006,161,0.005,259,0.534,260,1.977,266,0.733,478,0.615,665,2.744,698,2.064,726,3.663,727,2.426,729,3.492,734,1.914,737,3.492,740,3.411,910,2.11,1162,1.935,1264,1.855,1580,2.157,1907,3.622,2429,3.922,2620,2.309,2755,2.206,2757,2.898,2758,2.898,2759,4.049,2760,3.165,2761,3.33,2762,4.147,2770,3.848,2772,3.493,2773,3.165,2775,3.07,2776,3.165,2777,3.165,2778,3.165,2779,3.165,2780,3.165,2781,4.405,2782,3.266,2783,3.971,2784,5.232,2785,4.577,2786,4.405,3240,4.824,3280,4.539,3367,4.539,3465,4.1,3466,4.769,3684,5.824,3685,5.181,3686,4.303,4118,6.3,4402,6.17,4451,5.658,4452,5.658,4453,6.382,4454,5.658,4455,5.181,4456,6.382]],["title/interfaces/VcdFormlyFieldConfig.html",[0,0.175,4457,3.437]],["body/interfaces/VcdFormlyFieldConfig.html",[0,0.29,2,1.326,3,0.098,4,0.077,5,0.067,8,0.371,9,2.487,12,0.222,13,0.561,14,0.753,18,0.323,19,0.008,26,0.139,27,2.006,50,1.12,66,1.496,73,0.501,96,1.184,109,1.11,115,1.056,140,0.687,152,2.281,159,0.005,160,0.006,161,0.005,168,1.342,198,0.747,204,0.573,243,2.477,259,0.517,266,0.697,326,3.256,651,1.527,659,1.557,666,2.487,699,1.466,719,1.782,727,2.098,731,3.101,732,2.477,733,3.101,734,2.168,735,3.101,852,3.321,853,3.897,867,3.73,1245,2.541,1247,2.68,1267,3.151,1268,2.609,1346,2.416,1377,2.918,2080,3.897,2355,3.619,2356,3.443,2400,4.09,2429,3.728,3290,3.897,3416,4.924,3417,4.924,3436,3.897,3437,3.897,3448,4.315,3449,4.315,3450,4.315,3466,4.623,3686,4.09,3690,4.315,3693,4.586,4457,6.643,4458,4.09,4459,4.315,4460,7.579,4461,7.791,4462,7.579,4463,7.579,4464,6.77,4465,7.27,4466,6.106,4467,6.669,4468,4.924,4469,4.924,4470,4.924,4471,5.378,4472,7.249,4473,6.106,4474,4.315,4475,4.924,4476,4.924,4477,4.924]],["title/modules/VcdFormlyModule.html",[2755,1.572,4478,3.437]],["body/modules/VcdFormlyModule.html",[3,0.101,4,0.079,5,0.068,8,0.38,9,2.848,14,0.521,18,0.215,19,0.008,25,1.881,26,0.101,50,0.765,78,0.15,85,0.857,99,1.177,107,6.191,115,0.985,140,0.567,143,0.985,159,0.005,160,0.006,161,0.005,181,0.783,195,0.63,197,1.062,198,0.567,224,0.696,259,0.534,260,1.921,266,0.713,280,0.421,408,2.74,478,0.598,659,1.129,665,2.667,698,2.006,731,3.415,732,3.114,733,3.415,734,1.881,735,3.415,910,2.051,1162,1.881,1311,2.74,1580,2.097,1907,3.521,2037,6.191,2431,6.191,2620,2.244,2755,2.144,2757,2.816,2758,2.816,2759,3.75,2760,3.076,2761,3.037,2762,3.782,2770,3.782,2772,4.175,2773,3.076,2775,2.984,2776,3.076,2777,3.076,2778,3.076,2779,3.076,2780,3.076,2781,4.329,2782,3.174,2783,4.226,2784,5.142,2786,4.329,3108,5.499,3436,4.899,3437,3.984,3448,4.412,3466,4.687,3686,4.182,4402,5.784,4410,5.035,4458,5.142,4466,7.405,4468,5.035,4469,5.035,4470,5.035,4474,5.874,4478,7.155,4479,5.499,4480,5.499,4481,6.203,4482,5.035,4483,6.203,4484,7.627,4485,6.203,4486,8.259,4487,6.203,4488,7.627,4489,7.627,4490,6.203,4491,6.203,4492,6.191,4493,6.203]],["title/interfaces/VcdFormlyTemplateOptions.html",[0,0.175,4464,3.437]],["body/interfaces/VcdFormlyTemplateOptions.html",[0,0.279,2,1.248,3,0.093,4,0.073,5,0.063,8,0.35,9,1.888,12,0.209,13,0.541,14,0.805,18,0.327,19,0.008,26,0.136,27,1.888,50,1.105,52,1.373,66,1.787,73,0.56,96,1.388,109,1.069,115,1.027,140,0.764,152,2.675,159,0.005,160,0.006,161,0.005,168,1.306,198,0.727,204,0.557,243,2.332,259,0.51,266,0.656,326,3.168,651,1.823,659,1.523,666,2.63,699,1.751,719,1.716,727,2.218,731,3.017,732,2.332,733,3.017,734,2.258,735,3.017,852,4.579,853,5.374,867,3.592,1245,2.393,1247,2.523,1267,3.504,1268,2.456,1346,2.275,1377,3.485,2080,5.374,2355,4.024,2356,3.242,2400,5.64,2429,3.51,3290,5.374,3416,6.791,3417,6.791,3436,3.669,3437,3.669,3448,4.063,3449,5.951,3450,5.951,3466,4.452,3686,3.851,3690,4.063,3693,6.324,4457,5.476,4458,3.851,4459,4.063,4460,6.422,4461,7.417,4462,5.064,4463,5.064,4464,6.324,4465,6.458,4466,5.88,4467,7.053,4468,4.637,4469,4.637,4470,4.637,4471,6.422,4472,7.053,4473,5.88,4474,4.063,4475,4.637,4476,4.637,4477,4.637]],["title/modules/VcdLoadingIndicatorModule.html",[2755,1.572,4390,3.065]],["body/modules/VcdLoadingIndicatorModule.html",[3,0.112,4,0.088,5,0.076,19,0.008,26,0.112,78,0.167,159,0.006,160,0.007,161,0.006,259,0.519,260,2.141,374,2.188,478,0.666,665,2.973,698,2.236,738,3.921,1162,2.096,1264,2.01,1580,2.337,1907,3.924,2620,2.501,2755,2.39,2757,3.139,2758,3.139,2759,3.929,2760,3.428,2761,2.753,2762,4.291,2770,4.037,2772,3.784,2773,3.428,2775,3.325,2776,3.428,2777,3.428,2778,3.428,2779,3.428,2780,3.428,2781,4.621,2782,3.538,2783,4.166,2785,4.802,2786,4.621,3543,4.917,4390,6.286,4392,6.154,4494,6.129,4495,6.129,4496,6.129,4497,6.913,4498,6.913]],["title/classes/WidgetFinder.html",[78,0.11,3130,2.921]],["body/classes/WidgetFinder.html",[0,0.281,3,0.058,4,0.045,5,0.039,8,0.217,12,0.13,13,0.588,14,0.575,18,0.315,19,0.008,20,1.213,22,1.227,25,0.876,26,0.124,34,0.776,35,1.032,36,1.075,41,2.28,50,1.019,52,0.583,57,2.529,59,0.941,66,1.687,71,1.289,73,0.548,77,1.379,78,0.15,81,2.294,85,1.273,87,1.841,91,2.096,99,0.673,109,0.524,113,1.414,114,0.912,115,0.675,133,1.054,134,2.28,138,2.165,140,0.324,148,2.791,156,1.76,158,0.745,159,0.003,160,0.006,161,0.003,163,0.876,165,2.725,168,0.583,172,1.106,179,1.658,181,0.783,190,1.346,192,1.301,195,0.774,197,1.248,198,0.666,200,0.642,203,1.526,204,0.588,216,1.284,224,0.818,233,0.841,245,2.963,247,1.04,259,0.353,266,1,272,0.876,280,0.569,281,0.876,326,2.724,327,2.941,341,1.414,346,2.532,358,0.792,361,1.537,364,1.153,392,1.988,408,1.568,433,3.683,435,2.493,436,1.708,438,2.759,441,1.593,451,4.556,456,2.28,458,1.449,459,2.766,461,1.22,463,1.787,464,3.518,466,2.03,478,0.342,479,3.883,480,1.943,481,2.015,482,1.877,483,1.943,484,3.28,486,2.897,507,1.817,510,2.28,522,2.061,523,4.939,524,1.174,529,1.76,530,2.764,533,2.86,547,2.833,551,2.182,552,1.877,553,3.617,554,2.695,555,3.28,556,3.28,557,2.081,558,2.514,559,2.764,560,2.05,561,1.658,562,2.47,563,1.877,564,1.877,565,2.41,566,1.877,567,1.877,568,1.877,569,2.865,570,1.315,574,2.28,575,3.211,576,2.28,577,2.28,578,2.28,580,3.984,583,0.99,598,2.52,605,0.73,606,0.99,610,4.181,615,2.03,616,3.523,617,3.523,618,4.181,619,2.419,620,3.523,621,3.617,622,3.523,623,2.697,627,3.984,632,2.373,633,2.28,634,3.523,635,3.677,636,3.523,639,2.393,640,2.182,641,2.393,642,3.037,643,3.658,646,2.247,653,2.081,734,0.876,759,2.514,760,2.546,761,2.015,764,2.015,766,1.943,771,2.015,773,3.195,774,1.921,775,2.015,776,1.2,777,2.764,778,1.943,779,2.015,781,2.015,782,1.054,783,2.015,784,1.487,785,3.5,786,3.174,787,2.41,788,2.015,789,4.328,791,2.015,793,2.514,794,2.015,796,2.441,797,2.015,799,2.015,801,1.346,802,2.015,803,2.015,805,2.015,807,2.258,808,1.054,809,2.591,810,2.966,811,2.015,813,1.1,814,2.015,835,1.568,838,1.284,894,2.764,935,2.182,976,1.76,982,1.568,1021,2.674,1067,1.414,1089,1.284,1236,1.76,1285,1.449,1327,1.708,1336,1.708,1340,1.568,1538,3.793,1642,1.936,1746,2.182,1757,1.76,1771,1.817,1773,1.877,1779,1.943,1807,2.182,1937,2.393,2039,3.357,2185,1.943,2278,1.817,2310,2.591,2644,2.094,2736,2.393,2813,2.393,3113,3.984,3129,5.305,3130,4.394,3131,4.683,3132,4.411,3133,2.525,3134,2.525,3135,2.525,3136,2.525,3137,5.755,3138,2.525,3139,2.525,3140,3.717,3141,2.525,3142,2.525,3143,4.411,3144,2.525,3145,4.411,3146,2.393,3147,2.525,3148,4.411,3149,2.525,3150,2.393,3151,2.525,3152,2.393,3153,2.525,3154,2.525,3155,2.525,3156,2.525,3157,2.525,3158,3.717,3159,2.525,3160,2.393,3161,2.525,3162,2.28,3163,2.525,3164,2.525,3165,2.393,3166,2.525,3167,2.525,3168,2.393,3169,2.525,3170,2.525,3171,2.393,3172,2.525,3173,2.525,3174,3.717,3175,3.717,3176,2.525,3177,2.525,3178,4.411,3179,3.717,3180,4.411,3181,2.525,3182,2.525,3183,2.525,3184,2.525,3185,2.525,3186,2.525,3187,2.525,3188,2.525,3189,2.393,3190,2.525,3191,2.525,3192,2.525,3193,2.525,3194,2.525,3195,2.525,3196,3.523,3197,2.094,3198,2.182,3199,2.525,3200,2.525,3201,2.525,3202,2.525,3203,2.525,3204,2.525,3205,2.525,3206,2.525,3207,2.525,3208,2.015,3209,3.717,3210,2.525,3211,3.717,3212,4.411,3213,5.424,3214,2.525,3215,4.411,3216,2.525,3217,2.525,3218,2.525,3219,2.525,3220,2.525,3221,2.525,3222,2.525,3223,2.525,3224,2.525,3225,2.525,3226,2.525,3227,2.525,3228,4.411,3229,2.525,3230,2.525,3231,2.525,3232,2.525,3233,2.525,3234,2.525,3235,2.525,3236,2.525,3237,2.28,4499,5.226,4500,3.55,4501,3.55,4502,3.55,4503,3.55,4504,3.55,4505,3.55]],["title/classes/WidgetObject.html",[78,0.11,759,2.187]],["body/classes/WidgetObject.html",[0,0.261,3,0.049,4,0.038,5,0.033,8,0.456,12,0.11,13,0.611,14,0.676,17,2.518,18,0.318,19,0.008,20,0.696,22,1.036,25,0.739,26,0.116,34,1.005,35,1.337,36,1.152,41,2.955,50,0.972,52,0.492,57,2.414,59,0.972,66,1.837,71,1.381,73,0.57,77,1.164,78,0.135,81,2.297,85,1.264,87,1.366,91,2.123,99,0.568,109,0.679,113,1.832,114,1.182,115,0.594,133,1.366,134,2.955,138,2.432,140,0.512,143,0.962,148,2.767,156,2.777,158,0.629,159,0.002,160,0.006,161,0.002,163,0.739,165,2.907,168,0.492,172,0.535,179,1.4,181,0.793,190,1.136,192,1.276,195,0.831,197,1.349,198,0.748,200,0.798,203,1.978,204,0.622,216,1.084,224,0.943,245,2.633,247,1.199,259,0.319,266,0.966,272,0.739,280,0.555,281,0.771,326,3.061,327,2.408,341,2.23,346,2.286,358,0.668,361,1.501,364,1.041,392,1.97,408,2.032,433,3.879,435,2.547,436,1.441,438,2.588,441,1.741,451,4.726,456,1.925,458,1.878,459,2.816,461,1.329,463,1.835,464,3.676,478,0.289,479,3.846,480,1.64,481,1.701,482,1.585,483,1.64,484,2.961,486,2.616,507,2.354,510,2.955,518,1.441,522,1.764,523,4.567,524,1.521,529,2.281,530,3.783,533,2.518,547,2.633,551,1.841,552,2.433,553,3.939,554,2.798,555,3.584,556,3.783,557,2.501,558,2.694,559,2.961,560,1.851,561,2.149,562,2.501,563,2.433,564,2.433,565,2.633,566,2.433,567,2.433,568,2.433,569,3.22,570,1.704,571,1.841,574,1.925,575,2.827,576,1.925,577,1.925,578,1.925,580,3.597,583,0.836,598,2.473,605,0.616,606,0.836,610,2.02,615,1.164,616,2.02,617,2.02,618,3.101,619,2.221,620,2.02,621,3.783,622,2.02,623,2.396,627,3.597,632,2.089,633,1.925,634,2.02,635,3.698,636,2.02,639,2.02,640,1.841,641,2.02,642,3.061,643,3.303,646,1.978,653,2.23,734,0.739,759,2.694,760,2.757,761,3.565,762,3.101,763,3.101,764,3.565,765,3.101,766,3.065,767,3.101,771,2.611,773,3.479,774,2.307,775,3.178,776,1.893,777,3.322,778,3.065,779,2.611,781,2.611,782,1.366,783,2.611,784,1.927,785,3.933,786,3.66,787,2.779,788,2.611,789,4.714,791,2.611,793,3.022,794,2.611,796,2.934,797,2.611,799,2.611,801,1.745,802,2.611,803,2.611,805,2.611,807,2.216,808,1.366,809,3.115,810,3.565,811,2.611,813,1.425,814,2.611,835,1.324,838,1.084,894,2.433,935,2.827,958,2.656,976,1.486,982,1.324,1021,2.354,1067,1.193,1089,1.084,1236,1.486,1285,1.878,1327,2.213,1336,2.213,1340,1.324,1538,3.26,1642,1.704,1746,2.827,1757,1.486,1771,1.533,1773,1.585,1779,1.64,1807,2.827,1937,2.02,2039,1.925,2185,2.518,2278,2.354,2310,2.281,2644,1.767,2736,3.101,2813,2.02,3113,4.595,3129,4.353,3130,3.597,3131,4.353,3132,3.983,3133,2.131,3134,3.272,3135,3.272,3136,3.272,3137,5.298,3138,3.272,3139,3.272,3140,4.468,3141,3.272,3142,3.272,3143,4.468,3144,3.272,3145,4.82,3146,3.101,3147,3.272,3148,5.088,3149,3.272,3150,3.101,3151,3.272,3152,3.101,3153,3.272,3154,3.272,3155,3.272,3156,3.272,3157,3.272,3158,4.468,3159,3.272,3160,3.101,3161,3.272,3162,2.955,3163,3.272,3164,3.272,3165,3.101,3166,3.272,3167,3.272,3168,3.101,3169,2.131,3170,2.131,3171,2.02,3172,2.131,3173,2.131,3174,3.272,3175,3.272,3176,2.131,3177,2.131,3178,3.983,3179,3.272,3180,3.983,3181,2.131,3182,2.131,3183,2.131,3184,2.131,3185,2.131,3186,2.131,3187,2.131,3188,2.131,3189,2.02,3190,2.131,3191,2.131,3192,2.131,3193,2.131,3194,2.131,3195,2.131,3196,3.101,3197,1.767,3198,1.841,3199,2.131,3200,2.131,3201,2.131,3202,2.131,3203,2.131,3204,2.131,3205,2.131,3206,2.131,3207,2.131,3208,1.701,3209,2.131,3210,2.131,3211,2.131,3212,2.131,3213,4.468,3214,2.131,3215,3.983,3216,2.131,3217,2.131,3218,2.131,3219,2.131,3220,2.131,3221,2.131,3222,2.131,3223,2.131,3224,2.131,3225,2.131,3226,2.131,3227,2.131,3228,3.983,3229,2.131,3230,2.131,3231,2.131,3232,2.131,3233,2.131,3234,2.131,3235,2.131,3236,2.131,3237,1.925,4215,2.656,4506,2.997,4507,2.997,4508,2.997,4509,2.997,4510,2.997,4511,2.997,4512,2.997,4513,2.997,4514,2.997,4515,2.997]],["title/contributing.html",[2263,2.072,4516,3.355,4517,3.355]],["body/contributing.html",[4,0.076,19,0.007,20,1.382,47,2.258,87,2.207,111,2.105,117,3.825,127,3.229,138,2.353,159,0.005,160,0.006,161,0.005,247,0.998,251,5.279,281,1.494,321,3.003,328,4.014,373,3.15,375,4.501,392,2.357,455,4.833,565,2.313,569,3.115,582,4.014,615,2.313,619,2.105,659,1.476,734,1.469,782,2.646,785,3.805,793,2.864,838,2.691,889,2.864,899,1.66,916,3.825,939,2.704,966,2.63,1052,2.952,1089,2.154,1128,2.864,1129,2.431,1186,4.776,1211,3.38,1236,2.952,1285,2.431,1404,3.259,1413,4.07,1415,4.07,1613,3.259,1753,3.512,1757,2.952,1771,4.149,1832,4.235,1894,3.38,1970,5.621,2012,4.833,2031,3.577,2036,4.833,2055,5.209,2102,4.235,2185,3.259,2309,4.07,2310,3.687,2413,3.149,2492,4.833,2518,4.235,2532,5.279,2590,4.014,2620,2.154,3197,4.386,3403,5.279,3477,4.833,3590,5.289,3946,4.501,3969,4.501,4372,6.582,4517,5.279,4518,5.279,4519,5.954,4520,5.954,4521,7.436,4522,5.954,4523,5.954,4524,5.954,4525,8.493,4526,7.436,4527,5.954,4528,5.954,4529,5.954,4530,7.436,4531,5.954,4532,5.954,4533,5.954,4534,5.954,4535,5.954,4536,6.592,4537,7.529,4538,8.741,4539,5.954,4540,8.317,4541,7.436,4542,7.749,4543,5.954,4544,5.954,4545,8.017,4546,5.954,4547,5.954,4548,5.954,4549,5.954,4550,5.954,4551,5.954,4552,5.954,4553,8.109,4554,5.954,4555,5.954,4556,8.109,4557,5.279,4558,5.954,4559,5.954,4560,5.954,4561,5.954,4562,5.954,4563,8.493,4564,5.954,4565,6.592,4566,5.954,4567,7.436,4568,7.436,4569,5.954,4570,5.954,4571,7.436,4572,7.436,4573,5.954,4574,8.35,4575,5.954,4576,5.954,4577,7.436,4578,6.592,4579,8.109,4580,8.109,4581,5.954,4582,5.954,4583,5.279,4584,7.436,4585,5.279,4586,7.436,4587,6.592,4588,5.954,4589,5.954,4590,7.436,4591,5.954,4592,5.954,4593,5.954,4594,5.954,4595,5.954,4596,6.592,4597,5.954,4598,7.436,4599,5.954,4600,5.954,4601,5.954,4602,5.954,4603,5.954,4604,6.592,4605,5.954,4606,5.954]],["title/coverage.html",[3197,3.676]],["body/coverage.html",[0,0.366,1,1.584,5,0.035,6,3.436,7,3.436,18,0.111,19,0.008,52,1.504,58,2.378,69,1.537,73,0.357,77,1.241,78,0.226,140,0.292,154,2.296,159,0.003,160,0.004,161,0.003,162,2.593,164,5.27,165,2.41,166,3.921,167,4.618,169,2.272,171,1.813,204,0.635,208,1.212,225,1.963,247,1.088,262,1.884,264,2.272,267,2.593,281,0.536,313,1.963,314,4.507,315,3.99,316,4.403,329,2.272,338,1.887,357,2.272,369,1.537,370,2.832,432,2.272,433,4.141,434,4.143,435,2.328,436,4.141,442,1.813,449,2.154,483,1.749,485,1.689,486,2.256,599,2.011,605,1.937,608,4.908,650,1.011,654,3.921,655,3.921,702,1.056,705,1.13,708,1.241,710,0.909,712,1.183,714,2.85,716,1.156,717,2.263,718,1.241,719,1.38,720,1.156,721,1.241,723,1.272,725,1.374,726,1.241,727,2.124,729,1.183,731,1.212,733,1.212,734,2.102,735,1.212,737,1.183,738,1.304,740,1.156,742,1.338,743,1.011,745,0.948,746,1.033,748,1.241,750,1.272,753,1.183,756,2.593,757,3.921,758,3.921,759,1.537,829,1.963,830,3.921,831,3.921,842,2.415,911,3.554,913,1.884,916,2.052,934,3.741,979,4.908,980,4.728,981,1.635,989,1.13,991,1.212,992,2.052,996,2.052,1000,2.593,1001,1.304,1007,2.593,1011,2.593,1012,2.832,1018,2.832,1019,2.832,1028,2.052,1029,4.735,1030,2.839,1031,5.134,1063,2.415,1240,1.689,1241,4.478,1251,1.492,1269,2.981,1273,1.13,1277,1.156,1281,1.304,1286,1.689,1288,1.689,1289,2.555,1290,4.312,1291,4.024,1297,1.689,1300,1.689,1301,1.635,1305,1.689,1315,1.635,1320,1.689,1328,1.689,1333,1.689,1350,1.689,1354,1.689,1356,1.689,1366,1.689,1370,1.492,1372,1.689,1580,1.08,1701,1.537,1726,4.618,1727,4.618,1729,1.411,1730,1.374,1763,2.415,1781,2.832,1782,3.921,1798,3.651,1799,3.651,1809,2.832,1810,2.832,1858,3.637,1859,2.272,1861,5.028,1862,5.953,1863,5.953,1866,2.832,1896,4.282,1921,2.593,1960,2.415,1961,5.27,1962,2.593,1985,2.415,1987,3.651,2009,2.415,2010,4.171,2011,4.403,2020,2.415,2183,2.593,2184,2.832,2231,4.068,2232,4.96,2291,2.272,2318,4.306,2319,1.689,2333,2.154,2348,2.154,2355,1.537,2357,1.584,2360,2.154,2390,2.272,2408,2.272,2459,2.593,2467,2.272,2478,2.415,2493,2.593,2510,2.415,2522,2.593,2523,2.154,2524,2.832,2543,4.377,2544,4.171,2545,4.143,2550,2.154,2594,2.272,2628,2.415,2697,2.832,2759,2.193,2768,2.415,2789,5.27,2790,5.27,2845,2.593,2847,2.593,2851,2.593,2919,3.651,2920,2.832,2954,2.593,2955,2.832,2964,3.651,2965,3.651,3039,2.593,3084,6.181,3085,6.181,3101,2.593,3105,2.832,3118,2.832,3126,2.832,3129,2.052,3130,2.052,3197,1.884,3237,2.052,3239,4.96,3240,2.415,3241,2.593,3280,4.143,3281,5.156,3328,8.305,3367,2.272,3368,3.921,3386,2.272,3387,2.832,3414,2.832,3447,2.832,3448,2.272,3463,2.272,3465,4.479,3469,2.832,3478,3.436,3479,2.154,3480,2.154,3481,2.832,3482,2.832,3488,2.415,3489,3.921,3490,3.921,3531,2.832,3532,2.832,3543,2.272,3544,2.415,3600,3.921,3601,3.921,3604,2.593,3611,2.154,3612,5.27,3613,5.27,3624,2.593,3625,2.593,3641,2.593,3642,4.96,3678,4.711,3684,2.052,3849,2.415,3852,2.052,3853,5.134,3877,2.593,3878,2.832,3916,2.415,3941,2.272,3942,4.327,3943,4.187,3944,4.908,3951,1.884,3953,2.272,3955,2.272,4097,2.593,4099,2.593,4134,2.593,4135,2.832,4147,3.651,4148,2.832,4175,2.832,4176,2.832,4197,2.415,4198,3.921,4199,3.921,4296,3.921,4303,2.593,4342,2.593,4355,2.832,4356,2.832,4421,5.27,4433,2.593,4434,2.832,4435,2.832,4455,2.593,4457,2.415,4458,4.377,4459,4.143,4464,2.415,4474,2.272,4482,2.593,4492,2.593,4607,2.832,4608,3.195,4609,5.825,4610,3.195,4611,3.195,4612,3.195,4613,9.272,4614,3.195,4615,4.831,4616,9.354,4617,8.685,4618,4.831,4619,3.195,4620,7.616,4621,3.195,4622,3.195,4623,3.195,4624,4.831,4625,3.195,4626,7.334,4627,4.831,4628,3.195,4629,7.842,4630,3.195,4631,3.195,4632,4.831,4633,3.195,4634,5.825,4635,3.195,4636,3.195,4637,3.195,4638,3.195,4639,3.195,4640,3.195,4641,3.195,4642,4.831,4643,7.842,4644,8.182,4645,4.831,4646,3.195,4647,3.195,4648,3.195,4649,3.195,4650,3.195,4651,3.195,4652,3.195,4653,3.195,4654,3.195,4655,3.195,4656,3.195,4657,3.195,4658,4.831,4659,4.831,4660,3.195,4661,3.195,4662,6.502,4663,3.195,4664,3.195,4665,2.832,4666,2.832,4667,2.832,4668,2.832,4669,3.195,4670,3.195,4671,3.195,4672,3.195,4673,3.195,4674,3.195,4675,3.195,4676,3.195,4677,3.195,4678,3.195,4679,4.831,4680,3.195,4681,3.195,4682,3.195,4683,3.195,4684,3.195,4685,4.831,4686,4.831,4687,3.195,4688,3.195,4689,3.195,4690,3.195,4691,3.195,4692,2.832,4693,3.195,4694,4.831,4695,3.195,4696,3.195,4697,3.195,4698,3.195,4699,3.195,4700,3.195,4701,3.195,4702,3.195,4703,3.195,4704,4.282,4705,3.195,4706,3.195,4707,3.195,4708,3.195,4709,3.195,4710,3.195,4711,4.831,4712,3.195,4713,3.195,4714,3.195,4715,4.831,4716,3.195,4717,3.195,4718,3.195,4719,3.195,4720,3.195,4721,3.195,4722,3.195,4723,4.831,4724,4.831,4725,3.195,4726,3.195,4727,3.195,4728,3.195,4729,3.195,4730,4.831,4731,4.831,4732,3.195,4733,3.195,4734,3.195,4735,3.195]],["title/dependencies.html",[2758,2.486,4736,3.785]],["body/dependencies.html",[13,0.492,19,0.008,48,6.888,159,0.005,160,0.007,161,0.005,439,4.695,478,0.763,481,4.994,482,4.653,699,1.595,910,2.618,1264,2.302,1268,2.838,1812,5.986,2758,3.596,2782,4.053,3197,3.893,3436,4.24,3437,4.24,3983,5.633,3984,5.633,4423,7.021,4737,7.92,4738,9.317,4739,7.92,4740,8.8,4741,6.6,4742,7.92,4743,7.92,4744,6.6,4745,6.6,4746,6.6,4747,5.851,4748,6.6,4749,6.6,4750,6.6,4751,6.6,4752,6.6,4753,6.6,4754,6.6,4755,6.6,4756,6.6,4757,5.851,4758,6.6,4759,6.6,4760,6.6,4761,6.6,4762,6.6,4763,6.6,4764,5.851,4765,6.6,4766,6.6,4767,6.6,4768,6.6,4769,6.6,4770,6.6,4771,6.6,4772,6.6,4773,6.6,4774,6.6,4775,6.6,4776,6.6,4777,6.6,4778,6.6,4779,6.6,4780,6.6,4781,6.6,4782,6.6,4783,6.6,4784,6.6,4785,5.851,4786,9.317]],["title/miscellaneous/enumerations.html",[4787,2.551,4788,4.854]],["body/miscellaneous/enumerations.html",[6,4.01,7,5.922,12,0.206,15,4.046,18,0.274,19,0.008,20,1.668,22,2.483,24,5.831,25,1.772,27,2.375,28,3.676,30,1.508,34,1.728,37,5.831,42,3.173,44,5.831,49,4.576,63,2.003,64,2.323,73,0.44,75,4.488,87,2.132,93,2.49,100,3.2,102,2.933,109,1.06,111,1.993,119,4.261,137,2.885,138,1.784,141,2.933,145,3.621,151,4.843,152,1.709,153,4.614,154,2.796,155,3.356,156,2.795,157,4.576,158,1.183,159,0.005,160,0.006,161,0.005,200,0.913,243,2.302,247,0.945,338,1.639,565,2.19,605,1.16,615,2.19,656,1.823,659,1.308,666,1.864,717,2.791,719,1.702,727,1.572,732,2.302,744,1.823,793,2.712,895,3.676,1029,3.325,1030,2.796,1031,5.33,1042,3.356,1043,5.613,1047,4.843,1048,4.261,1049,2.972,1050,3.58,1051,4.261,1052,4.128,1053,4.261,1054,4.237,1055,4.261,1056,5.976,1057,4.576,1058,5.976,1059,4.576,1060,5.079,1061,4.576,1150,3.932,1162,1.709,1241,2.885,1245,3.312,1247,3.173,1279,1.746,1282,3.562,1283,3.932,1284,3.228,1307,2.861,1308,3.932,1311,3.173,1313,3.92,1324,3.086,1325,3.932,1358,1.993,1726,4.01,1727,5.11,1731,3.325,1733,5.43,1861,3.464,2010,3.621,2011,5.43,2032,5.831,2033,5.831,2034,5.831,2035,5.831,2075,3.799,2206,5.11,2214,3.8,2231,3.262,2318,4.128,2430,5.831,2498,5.43,2505,3.621,2506,4.261,2543,3.8,2544,5.348,2545,5.624,2546,4.576,2549,4.576,2562,4.576,2620,2.04,2621,4.576,2622,5.831,2623,4.261,2624,5.831,2627,4.576,2629,4.843,3239,4.01,3240,4.261,3241,5.831,3253,6.368,3275,4.997,3543,4.01,3544,5.43,3564,6.368,3690,4.01,4458,3.8,4459,5.11,4465,5.831,4473,5.831,4787,3.8,4788,4.997,4789,6.418,4790,6.368,4791,7.009,4792,5.637,4793,6.418,4794,4.997,4795,5.831,4796,5.637,4797,4.997,4798,5.637]],["title/index.html",[12,0.139,2263,2.072,4516,3.355]],["body/index.html",[4,0.09,5,0.077,19,0.006,35,1.591,47,2.674,84,1.892,111,2.912,118,1.809,127,2.18,140,0.644,159,0.005,160,0.006,161,0.005,198,0.644,204,0.597,243,2.235,260,1.695,281,0.917,323,5.257,328,5.257,354,3.893,373,3.529,392,2.267,439,6.205,513,2.418,545,2.127,560,1.809,569,3.266,606,2.174,651,2.234,659,1.42,662,4.158,734,1.739,782,2.444,793,2.633,866,3.893,937,3.516,966,2.418,1020,2.418,1032,2.557,1064,4.137,1082,4.137,1089,2.551,1128,3.751,1211,4.674,1236,2.714,1302,2.235,1335,2.714,1337,2.996,1358,1.935,1394,3.495,1418,4.775,1489,2.996,1553,2.996,1774,4.528,1831,5.894,1892,5.06,1970,5.894,1989,7.081,1990,7.081,2028,4.443,2055,4.528,2309,4.775,2310,4.083,2315,4.528,2460,6.917,2505,5.29,2620,1.98,2717,3.893,2757,2.485,2758,2.485,2775,2.633,3160,3.69,3165,3.69,3168,3.69,3321,6.913,3327,4.852,3397,8.262,3692,3.69,3741,5.257,3976,4.137,3983,3.893,3984,3.893,3993,4.137,4004,4.137,4029,5.894,4053,4.137,4129,4.443,4372,5.722,4518,6.249,4536,6.249,4537,6.249,4540,4.852,4542,7.554,4545,6.249,4557,7.3,4565,4.852,4574,7.554,4578,4.852,4583,6.249,4585,4.852,4587,4.852,4596,4.852,4604,4.852,4607,4.852,4747,4.852,4757,7.554,4764,4.852,4785,4.852,4799,7.798,4800,5.474,4801,5.474,4802,5.474,4803,5.474,4804,7.05,4805,5.474,4806,7.05,4807,7.05,4808,8.235,4809,8.522,4810,5.474,4811,5.474,4812,5.474,4813,5.474,4814,9.222,4815,5.474,4816,7.05,4817,5.474,4818,7.05,4819,5.474,4820,5.474,4821,5.474,4822,5.474,4823,7.05,4824,8.235,4825,5.474,4826,5.474,4827,5.474,4828,5.474,4829,5.474,4830,5.474,4831,5.474,4832,5.474,4833,7.798,4834,5.474,4835,5.474,4836,5.474,4837,5.474,4838,5.474,4839,5.474,4840,5.474,4841,8.235,4842,7.05,4843,5.474,4844,5.474,4845,5.474,4846,5.474,4847,5.474,4848,5.474,4849,5.474,4850,8.724,4851,5.474,4852,7.798,4853,7.05,4854,5.474,4855,5.474,4856,5.474,4857,5.474,4858,5.474,4859,5.474,4860,5.474,4861,5.474,4862,5.474,4863,7.05,4864,7.05,4865,8.235,4866,7.05,4867,7.05,4868,7.05,4869,7.05,4870,7.05,4871,7.05,4872,7.05,4873,8.235,4874,5.474,4875,5.474,4876,5.474,4877,5.474,4878,7.05,4879,8.235,4880,7.05,4881,5.474,4882,5.474,4883,5.474,4884,5.474,4885,5.474,4886,5.474,4887,5.474,4888,5.474]],["title/modules.html",[2757,2.829]],["body/modules.html",[19,0.007,159,0.006,160,0.007,161,0.006,482,5.082,1745,4.917,2756,4.793,2757,3.228,2769,4.37,3099,4.793,4093,5.057,4113,5.057,4377,4.793,4384,4.793,4389,4.793,4390,4.793,4398,5.375,4401,5.057,4402,4.567,4478,5.375,4889,9.61,4890,9.61]],["title/overview.html",[4891,5.524]],["body/overview.html",[2,1.121,19,0.008,159,0.004,160,0.006,161,0.004,163,1.266,208,3.315,650,2.766,651,1.292,665,2.207,698,1.66,702,2.889,705,3.09,708,3.396,710,2.488,712,2.8,716,2.735,718,2.937,720,2.735,721,3.486,723,3.48,726,3.486,729,3.323,731,2.867,733,2.867,735,2.867,737,3.323,738,3.568,740,3.247,743,2.766,745,1.523,746,2.445,748,3.396,750,3.48,753,3.237,1162,1.556,1301,2.626,1860,3.296,2548,4.166,2620,1.857,2755,1.774,2756,6.346,2757,2.33,2758,2.33,2759,2.33,2760,2.545,2761,2.043,2762,2.545,2763,4.549,2764,4.549,2765,4.549,2766,4.549,2767,4.549,2768,5.713,2769,5.646,2770,3.352,3099,6.485,3479,5.096,3480,3.46,3611,5.096,3684,4.855,4093,6.309,4094,4.549,4095,4.549,4096,4.549,4113,6.382,4114,4.549,4115,4.549,4116,4.549,4193,4.549,4194,4.549,4195,4.549,4377,6.258,4378,4.549,4379,4.549,4381,4.549,4384,6.328,4385,4.549,4386,4.549,4387,4.549,4388,4.549,4389,6.106,4390,6.106,4398,6.945,4399,4.549,4400,4.549,4401,6.382,4402,6.101,4412,4.549,4413,4.549,4414,4.549,4417,4.549,4418,4.549,4419,4.549,4420,4.549,4447,4.549,4448,4.549,4449,4.549,4451,4.549,4452,4.549,4454,4.549,4478,6.847,4479,4.549,4480,4.549,4494,4.549,4495,4.549,4496,4.549,4891,4.549,4892,5.132,4893,5.132,4894,5.132,4895,5.132]],["title/miscellaneous/typealiases.html",[4787,2.551,4896,5.476]],["body/miscellaneous/typealiases.html",[6,4.822,7,5.724,12,0.248,18,0.319,19,0.008,51,5.503,52,1.457,53,4.118,55,2.634,58,3.504,73,0.493,78,0.164,96,1.067,113,2.7,115,0.876,140,0.784,159,0.007,160,0.007,161,0.006,165,2.967,200,0.636,253,4.747,260,2.1,262,3.999,263,2.241,280,0.46,433,3.167,436,4.271,469,4.747,670,4.256,717,3.127,782,2.013,934,4.355,955,5.425,970,6.083,972,5.125,1001,2.768,1029,3.999,1030,2.846,1031,5.425,1172,6.533,1267,2.84,1280,3.371,1357,3.469,1768,3.999,1798,5.125,1799,6.083,2231,3.078,2318,3.99,2408,4.822,2410,6.533,2964,5.125,2965,6.083,3016,7.134,3152,4.571,3543,4.822,3544,6.083,3557,7.134,3942,3.585,3943,3.469,4147,6.083,4787,4.571,4789,5.503,4793,5.503,4794,6.01,4795,5.503,4897,6.78,4898,6.78,4899,8.583,4900,6.78,4901,6.01,4902,6.78,4903,6.78,4904,6.78,4905,6.78]],["title/miscellaneous/variables.html",[4787,2.551,4906,4.854]],["body/miscellaneous/variables.html",[5,0.039,8,0.217,12,0.13,14,0.298,17,1.94,18,0.324,19,0.008,30,1.658,38,2.091,42,1.566,50,0.437,59,0.997,63,1.456,71,1.288,73,0.505,74,1.656,75,4.473,77,2.028,83,1.313,85,0.721,87,1.55,101,1.397,102,2.53,103,2.878,108,1.122,109,0.523,113,2.079,115,0.8,133,1.55,140,0.778,143,1.221,145,3.353,146,2.012,154,2.919,158,1.53,159,0.003,160,0.004,161,0.003,164,2.68,165,1.225,166,2.878,167,3.713,198,0.666,200,0.885,204,0.434,234,1.075,247,0.594,266,0.837,267,4.238,268,3.143,272,2.036,280,0.548,281,1.221,286,1.889,326,1.412,361,1.249,364,0.659,373,1.377,377,1.345,392,1.517,408,1.566,433,2.439,435,2.163,436,2.511,441,0.911,463,1.44,507,2.671,518,1.705,524,1.172,554,2.117,560,1.726,573,3.171,599,1.919,605,1.406,606,0.988,608,4.684,615,1.377,619,1.846,623,1.846,643,2.091,659,1.128,680,1.583,697,1.875,705,1.254,712,1.313,713,2.35,714,2.408,716,1.283,718,1.377,719,0.84,720,1.283,726,1.377,727,2.032,729,1.313,731,1.98,733,1.98,734,1.528,735,1.98,737,1.313,740,1.283,744,1.688,745,1.55,746,1.147,751,2.658,753,1.313,787,2.028,801,2.764,830,2.878,831,4.238,837,2.091,839,2.012,844,3.073,899,1.456,911,4.172,918,3.143,984,2.26,985,3.073,992,2.277,1029,2.091,1030,2.695,1031,4.178,1035,2.854,1036,2.39,1037,2.468,1039,2.012,1040,2.878,1042,2.439,1043,5.806,1047,3.519,1048,4.684,1049,2.142,1050,2.939,1051,5.167,1052,3.073,1053,5.167,1054,3.079,1055,5.167,1062,2.878,1063,3.946,1064,2.68,1065,2.878,1066,2.878,1067,1.412,1068,2.878,1069,2.878,1070,1.485,1071,4.238,1072,2.878,1073,2.737,1074,5.03,1075,2.878,1076,3.519,1077,2.878,1078,2.878,1079,2.878,1080,2.39,1081,2.878,1082,2.68,1083,1.705,1084,2.878,1085,2.878,1086,2.878,1087,2.878,1088,2.878,1089,1.283,1090,5.03,1091,4.238,1092,2.878,1093,4.238,1094,2.878,1095,4.238,1096,2.277,1097,2.878,1098,1.814,1099,5.03,1100,2.878,1101,2.878,1102,2.878,1103,4.238,1104,4.238,1105,2.878,1106,5.03,1107,2.522,1108,2.878,1109,2.878,1110,2.878,1111,2.878,1112,2.878,1113,4.238,1114,2.878,1115,5.03,1116,2.878,1117,2.878,1118,5.549,1119,2.522,1120,2.878,1121,4.238,1122,2.878,1123,2.878,1124,2.878,1125,2.878,1126,2.878,1127,2.878,1128,2.511,1129,1.447,1130,2.878,1131,2.878,1132,4.238,1133,2.878,1134,4.238,1135,5.549,1136,4.238,1137,2.439,1138,4.238,1139,1.758,1140,4.238,1141,2.878,1142,2.277,1143,2.878,1144,2.277,1145,2.878,1146,2.878,1147,2.878,1148,2.878,1149,2.878,1150,1.94,1151,2.878,1152,2.522,1153,2.68,1154,2.878,1155,2.878,1156,2.878,1157,4.238,1158,5.03,1159,3.946,1160,2.878,1161,2.878,1162,2.311,1163,2.878,1164,2.511,1165,2.878,1166,4.238,1167,5.549,1168,2.522,1169,2.522,1170,2.522,1171,2.522,1235,2.878,1236,1.758,1237,2.245,1238,2.878,1239,2.878,1241,1.814,1247,1.566,1267,1.485,1279,2.257,1284,2.791,1285,2.53,1286,3.277,1287,1.94,1288,2.761,1289,1.875,1290,1.814,1291,1.485,1292,1.758,1293,1.656,1294,2.187,1295,2.857,1296,2.671,1297,2.761,1298,1.94,1299,1.94,1300,2.761,1301,1.814,1302,2.132,1303,3.392,1304,1.412,1305,2.761,1306,1.94,1349,3.742,1353,1.94,1370,2.439,1449,1.758,1701,2.511,1731,2.091,1744,2.522,1762,2.68,1817,2.091,1831,3.946,1861,2.179,1862,2.878,1863,4.238,1908,2.878,1921,4.238,1943,2.522,1961,3.946,1987,5.167,2004,3.143,2075,1.875,2231,2.37,2232,3.713,2278,1.814,2288,2.68,2289,2.68,2290,2.68,2291,3.713,2292,2.68,2310,1.758,2318,2.589,2320,2.39,2322,2.39,2357,1.758,2365,2.39,2464,3.946,2465,2.68,2467,2.522,2543,2.39,2544,3.353,2545,3.713,2550,3.519,2573,2.522,2617,2.68,2628,3.946,2701,3.143,2742,2.878,2759,3.104,2768,3.946,2789,2.878,2790,5.549,2845,4.238,2846,3.143,2847,4.238,2851,4.238,2852,3.143,2907,3.143,2964,2.68,2965,3.946,3039,4.238,3040,4.628,3041,4.628,3042,4.628,3043,4.628,3044,3.143,3045,3.143,3146,2.39,3281,3.353,3293,3.353,3463,4.408,3465,2.277,3479,2.39,3480,3.519,3600,2.878,3601,4.238,3602,4.628,3603,4.628,3604,4.238,3605,4.628,3606,3.143,3607,3.143,3608,3.143,3609,3.143,3610,3.143,3611,2.39,3612,2.878,3613,5.03,3624,4.238,3625,4.238,3642,2.522,3687,2.878,3954,2.179,4097,2.878,4421,2.878,4455,2.878,4458,3.519,4459,3.713,4474,3.713,4475,2.878,4476,2.878,4477,2.878,4482,4.238,4492,4.238,4662,3.143,4665,3.143,4666,4.628,4667,4.628,4668,4.628,4692,4.628,4704,3.143,4787,2.39,4789,2.878,4790,3.143,4791,6.46,4793,4.238,4795,4.238,4797,4.628,4901,3.143,4906,3.143,4907,6.197,4908,3.545,4909,6.197,4910,5.221,4911,3.545,4912,3.545,4913,6.836,4914,6.836,4915,3.545,4916,3.545,4917,3.545,4918,3.545,4919,3.545,4920,3.545,4921,3.545,4922,3.545,4923,3.545,4924,3.545,4925,3.545,4926,3.545,4927,5.221,4928,3.545,4929,3.545,4930,3.545,4931,3.545,4932,3.545,4933,3.545,4934,3.545,4935,3.545,4936,3.545,4937,3.545,4938,3.545,4939,5.221,4940,3.545,4941,3.545,4942,3.545,4943,3.545,4944,3.545,4945,3.545,4946,3.545]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":605,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["0.0.2",{"_index":4751,"title":{},"body":{"dependencies.html":{}}}],["0.0.25",{"_index":4756,"title":{},"body":{"dependencies.html":{}}}],["0.0.8",{"_index":4748,"title":{},"body":{"dependencies.html":{}}}],["0.1.6",{"_index":4763,"title":{},"body":{"dependencies.html":{}}}],["0.10.2",{"_index":4784,"title":{},"body":{"dependencies.html":{}}}],["0.38.1",{"_index":4780,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":3585,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"classes/Percent.html":{}}}],["0.6.2",{"_index":4759,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":4616,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":4683,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":4696,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":4697,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":4657,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":4687,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":158,"title":{"interfaces/FindableWidget-1.html":{}},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchService.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"injectables/UnitFormatter.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["1.0.2",{"_index":4769,"title":{},"body":{"dependencies.html":{}}}],["1.1.11",{"_index":4777,"title":{},"body":{"dependencies.html":{}}}],["1.1.2",{"_index":4767,"title":{},"body":{"dependencies.html":{}}}],["1.1.20150312",{"_index":4761,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":4782,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":4774,"title":{},"body":{"dependencies.html":{}}}],["1.21.0",{"_index":4773,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":4746,"title":{},"body":{"dependencies.html":{}}}],["1.6.5",{"_index":4771,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":4613,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":4686,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":4644,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":4651,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":4642,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":4693,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2904,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["10/10",{"_index":4656,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":4712,"title":{},"body":{"coverage.html":{}}}],["10/15",{"_index":4647,"title":{},"body":{"coverage.html":{}}}],["10/22",{"_index":4655,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1291,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":1098,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"miscellaneous/variables.html":{}}}],["100px",{"_index":1057,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{}}}],["1024",{"_index":3709,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["1024mb",{"_index":3710,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["11/13",{"_index":4623,"title":{},"body":{"coverage.html":{}}}],["11/23",{"_index":4653,"title":{},"body":{"coverage.html":{}}}],["11/30",{"_index":4650,"title":{},"body":{"coverage.html":{}}}],["115",{"_index":4946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12/18",{"_index":4621,"title":{},"body":{"coverage.html":{}}}],["12/24",{"_index":4648,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":4892,"title":{},"body":{"overview.html":{}}}],["13/18",{"_index":4678,"title":{},"body":{"coverage.html":{}}}],["13/23",{"_index":4731,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":4628,"title":{},"body":{"coverage.html":{}}}],["14/16",{"_index":4640,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1287,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["150",{"_index":2852,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"miscellaneous/variables.html":{}}}],["15px",{"_index":3365,"title":{},"body":{"components/FormInputComponent.html":{}}}],["16",{"_index":3304,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["16/21",{"_index":4673,"title":{},"body":{"coverage.html":{}}}],["17/24",{"_index":4700,"title":{},"body":{"coverage.html":{}}}],["18x18",{"_index":3568,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["19/22",{"_index":4717,"title":{},"body":{"coverage.html":{}}}],["1].down",{"_index":2696,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["1gb",{"_index":3711,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["1st",{"_index":2910,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["2",{"_index":1162,"title":{},"body":{"interfaces/CliptextConfig.html":{},"classes/CommonUtil.html":{},"classes/DatagridFilter.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MockRecord.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":4753,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":4765,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":4643,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":4685,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":4633,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":4715,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1289,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["200px",{"_index":1059,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{}}}],["2019",{"_index":2774,"title":{},"body":{"modules/DropdownModule.html":{},"modules/PipesModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{}}}],["2020",{"_index":1907,"title":{},"body":{"injectables/CsvExporterService.html":{},"components/ErrorBannerComponent.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["23",{"_index":4893,"title":{},"body":{"overview.html":{}}}],["23/43",{"_index":4639,"title":{},"body":{"coverage.html":{}}}],["24/31",{"_index":4674,"title":{},"body":{"coverage.html":{}}}],["24/55",{"_index":4724,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":3678,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"coverage.html":{}}}],["250",{"_index":3584,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["255",{"_index":3587,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["27",{"_index":1763,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"coverage.html":{}}}],["27/39",{"_index":4664,"title":{},"body":{"coverage.html":{}}}],["29/55",{"_index":4680,"title":{},"body":{"coverage.html":{}}}],["2d",{"_index":1872,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["2nd",{"_index":2905,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["3",{"_index":48,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"dependencies.html":{}}}],["3.1.3",{"_index":4740,"title":{},"body":{"dependencies.html":{}}}],["3/11",{"_index":4669,"title":{},"body":{"coverage.html":{}}}],["3/15",{"_index":4688,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":4617,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":4634,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":4698,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2465,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["300",{"_index":2292,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"miscellaneous/variables.html":{}}}],["33",{"_index":4632,"title":{},"body":{"coverage.html":{}}}],["33/49",{"_index":4611,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":4681,"title":{},"body":{"coverage.html":{}}}],["35/38",{"_index":4706,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":4649,"title":{},"body":{"coverage.html":{}}}],["36x36",{"_index":3572,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["37",{"_index":1301,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":2548,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"overview.html":{}}}],["4/4",{"_index":4629,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":4708,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":4721,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":4659,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":4646,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1298,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["400",{"_index":4942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["400px",{"_index":1061,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{}}}],["43",{"_index":4723,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":4728,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":4654,"title":{},"body":{"coverage.html":{}}}],["47",{"_index":4652,"title":{},"body":{"coverage.html":{}}}],["49",{"_index":4895,"title":{},"body":{"overview.html":{}}}],["5.6.1",{"_index":4744,"title":{},"body":{"dependencies.html":{}}}],["5/14",{"_index":4682,"title":{},"body":{"coverage.html":{}}}],["5/20",{"_index":4615,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":4694,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":4714,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":4661,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1290,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["500",{"_index":1199,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["51/77",{"_index":4641,"title":{},"body":{"coverage.html":{}}}],["52",{"_index":4679,"title":{},"body":{"coverage.html":{}}}],["53",{"_index":4638,"title":{},"body":{"coverage.html":{}}}],["54",{"_index":4732,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":4660,"title":{},"body":{"coverage.html":{}}}],["56",{"_index":4730,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":4658,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":4670,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":3357,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["6",{"_index":4894,"title":{},"body":{"overview.html":{}}}],["6.5.5",{"_index":4778,"title":{},"body":{"dependencies.html":{}}}],["6/11",{"_index":4733,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":4645,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":4710,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":2467,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/MockRecord.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["600",{"_index":3592,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["61",{"_index":4726,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":4702,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":4620,"title":{},"body":{"coverage.html":{}}}],["67",{"_index":4610,"title":{},"body":{"coverage.html":{}}}],["69",{"_index":4663,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":3360,"title":{},"body":{"components/FormInputComponent.html":{}}}],["7/12",{"_index":4671,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":4630,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":4619,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":4625,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":4699,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":4677,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":4626,"title":{},"body":{"coverage.html":{}}}],["76",{"_index":4672,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":4624,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1896,"title":{},"body":{"injectables/CsvExporterService.html":{},"coverage.html":{}}}],["8.3.20",{"_index":4885,"title":{},"body":{"index.html":{}}}],["8/12",{"_index":4701,"title":{},"body":{"coverage.html":{}}}],["8/13",{"_index":4727,"title":{},"body":{"coverage.html":{}}}],["8/18",{"_index":4729,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":4707,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":4711,"title":{},"body":{"coverage.html":{}}}],["84",{"_index":4622,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":4716,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":4618,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":4786,"title":{},"body":{"dependencies.html":{}}}],["9.1.9",{"_index":4738,"title":{},"body":{"dependencies.html":{}}}],["9/12",{"_index":4627,"title":{},"body":{"coverage.html":{}}}],["9/14",{"_index":4703,"title":{},"body":{"coverage.html":{}}}],["9/17",{"_index":4684,"title":{},"body":{"coverage.html":{}}}],["9/24",{"_index":4695,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":4705,"title":{},"body":{"coverage.html":{}}}],["999",{"_index":4880,"title":{},"body":{"index.html":{}}}],["999].[0",{"_index":4879,"title":{},"body":{"index.html":{}}}],["_actions",{"_index":173,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["_columns",{"_index":1388,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["_config",{"_index":2239,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["_errormessage",{"_index":2924,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["_height",{"_index":1534,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["_isrequestpending",{"_index":2108,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["_multiplier",{"_index":3643,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["_open",{"_index":2098,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["_pagination",{"_index":1532,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["_progress",{"_index":2110,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["_searchcriteria",{"_index":3999,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["_selectedentities",{"_index":174,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["_selectiontype",{"_index":1526,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["_size",{"_index":3549,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["_unit",{"_index":2395,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["_unitname",{"_index":3644,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["_unitoptions",{"_index":2396,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["a.b.c",{"_index":3618,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["abort",{"_index":4039,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["above",{"_index":47,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/VcdDatagridWidgetObject.html":{},"contributing.html":{},"index.html":{}}}],["absolute",{"_index":1096,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/LoadingIndicatorComponent.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/variables.html":{}}}],["absolutely",{"_index":2859,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["abstract",{"_index":190,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["abstractcontrol",{"_index":2023,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["abstraction",{"_index":3153,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["acc",{"_index":3840,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["accepts",{"_index":2240,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"classes/FormValidators.html":{}}}],["access",{"_index":621,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["accessing",{"_index":514,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["accessors",{"_index":191,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BoldTextRendererWidgetObject.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"components/DatagridNumericFilterComponent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"components/FormCheckboxComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["according",{"_index":4126,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["account",{"_index":3735,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["achieved",{"_index":4552,"title":{},"body":{"contributing.html":{}}}],["action",{"_index":63,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["action.actiontype",{"_index":1444,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["action.availability",{"_index":307,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["action.availability(this._selectedentities",{"_index":308,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["action.disabled",{"_index":312,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["action.disabled(this._selectedentities",{"_index":311,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["action.handler(this._selectedentities",{"_index":294,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["action.handlerdata",{"_index":295,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["action.isseparator",{"_index":306,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["action.textkey",{"_index":293,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["action.textkey?.tolowercase().includes(searchcriteria",{"_index":290,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["actionbar",{"_index":1681,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actioncopy",{"_index":1435,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actioncopy.handler",{"_index":1437,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actiondisplayconfig",{"_index":1,"title":{"interfaces/ActionDisplayConfig.html":{}},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["actionhandler",{"_index":1436,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actionhandler(selectedentities",{"_index":1439,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actionhandlerresponse",{"_index":1438,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actionhandlertype",{"_index":53,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/typealiases.html":{}}}],["actionitem",{"_index":69,"title":{"interfaces/ActionItem.html":{}},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["actionitem.handler",{"_index":51,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"miscellaneous/typealiases.html":{}}}],["actionitem.textkey",{"_index":125,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["actionmenu.contextualfeaturedactions",{"_index":1500,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actionmenucomponent",{"_index":702,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdActionMenuModule.html":{},"coverage.html":{},"overview.html":{}}}],["actionmenus",{"_index":1494,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actionmenus.foreach((actionmenu",{"_index":1498,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actionmenus.length",{"_index":1495,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actionmenusinrow(actionmenus",{"_index":1493,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actionreporter",{"_index":1545,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actions",{"_index":10,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/BaseWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/LocatorDriver.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actions(actions",{"_index":269,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actions.map((action",{"_index":1434,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actions.reduce((flatactionlist",{"_index":296,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["actionsearchprovider",{"_index":162,"title":{"classes/ActionSearchProvider.html":{}},"body":{"classes/ActionSearchProvider.html":{},"coverage.html":{}}}],["actionstyling",{"_index":24,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"miscellaneous/enumerations.html":{}}}],["actiontype",{"_index":28,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["actiontype.static",{"_index":1446,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actiontype.static_featured",{"_index":1445,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["activatable",{"_index":2621,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["activatable/focusable",{"_index":2672,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["activatablemenuitemtype",{"_index":2624,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["activate",{"_index":1205,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["activated",{"_index":2266,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["activating",{"_index":2626,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["active",{"_index":1369,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["activites",{"_index":1543,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["activity",{"_index":338,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"modules/VcdActivityReporterModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["activityindicatortype",{"_index":1325,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["activitypromiseresolver",{"_index":313,"title":{"classes/ActivityPromiseResolver.html":{}},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{},"coverage.html":{}}}],["activitypromiseresolver.monitoractivities",{"_index":405,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activitypromiseresolver.monitoractivity",{"_index":400,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activityreporter",{"_index":369,"title":{"classes/ActivityReporter.html":{}},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"coverage.html":{}}}],["activityreporter:21",{"_index":687,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activityreporter:27",{"_index":685,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activityreporter:33",{"_index":686,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activityreporter:38",{"_index":683,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activityreporter:53",{"_index":684,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activityreporter:73",{"_index":682,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activityresolutionpromise",{"_index":352,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activityresolutionpromises",{"_index":340,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activityresponse",{"_index":357,"title":{"interfaces/ActivityResponse.html":{}},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{},"coverage.html":{}}}],["acts",{"_index":1811,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["actual_component",{"_index":755,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["add",{"_index":127,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"injectables/CsvExporterService.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"contributing.html":{},"index.html":{}}}],["addcolumn",{"_index":1508,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["addcolumn(col",{"_index":1565,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["added",{"_index":80,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["adding",{"_index":1697,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["addition",{"_index":2431,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"modules/VcdFormlyModule.html":{}}}],["additional",{"_index":107,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"modules/VcdFormlyModule.html":{}}}],["additionaldata",{"_index":95,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["adds",{"_index":511,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"components/FilterTestHostComponent.html":{},"classes/TestElement.html":{}}}],["addwildcard",{"_index":2495,"title":{},"body":{"components/DatagridStringFilterComponent.html":{}}}],["addwildcard(input",{"_index":2497,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["after(date",{"_index":2993,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["aftercontentchecked",{"_index":3679,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["aftercontentinit",{"_index":2796,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["afterviewinit",{"_index":1252,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["again",{"_index":2820,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["against",{"_index":1934,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["age",{"_index":2464,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["alert",{"_index":411,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["alert').nativeelement.getattribute('role",{"_index":2963,"title":{},"body":{"classes/ErrorBannerWidgetObject.html":{}}}],["alert').nativeelement.textcontent",{"_index":828,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["alertclosable",{"_index":2926,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["alerttype",{"_index":2927,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["alias",{"_index":1974,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["aliases",{"_index":4897,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":3594,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["all(...conditions",{"_index":3063,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["all(conditions",{"_index":2996,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["allow",{"_index":1025,"title":{},"body":{"interfaces/CanBeReadOnly.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["allowed",{"_index":1293,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["allows",{"_index":561,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/QuickSearchRegistrarService.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/Unit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["allresults",{"_index":4048,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["allresults.indexof(this.selecteditem",{"_index":4052,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["along",{"_index":2595,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/MenuItem.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/SubscriptionTracker.html":{}}}],["alongside",{"_index":3987,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["alternatives",{"_index":4559,"title":{},"body":{"contributing.html":{}}}],["alto",{"_index":3607,"title":{},"body":{"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["always",{"_index":31,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/Percent.html":{}}}],["amend",{"_index":4590,"title":{},"body":{"contributing.html":{}}}],["analyzer",{"_index":4824,"title":{},"body":{"index.html":{}}}],["analyzes",{"_index":4828,"title":{},"body":{"index.html":{}}}],["ancestor",{"_index":627,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["ancestor).queryall(by.css(query",{"_index":3218,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["and().or",{"_index":2972,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["and(...conditions",{"_index":3050,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["and(conditions",{"_index":3000,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["angular",{"_index":439,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/TestElement.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":4737,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":2782,"title":{},"body":{"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"pipes/NestedPropertyPipe.html":{},"modules/QuickSearchModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":4739,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":478,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"dependencies.html":{}}}],["angular/core/testing",{"_index":480,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["angular/forms",{"_index":910,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"modules/DropdownModule.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/QuickSearchModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":481,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"dependencies.html":{}}}],["angular/router",{"_index":4423,"title":{},"body":{"modules/VcdDatagridModule.html":{},"dependencies.html":{}}}],["angularlocatordriver",{"_index":432,"title":{"classes/AngularLocatorDriver.html":{}},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/TestElement.html":{},"coverage.html":{}}}],["angularlocatordriver(new",{"_index":492,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/TestElement.html":{}}}],["angularwidgetobjectfinder",{"_index":483,"title":{"classes/AngularWidgetObjectFinder.html":{}},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{}}}],["angularwidgetobjectfinder(filtertesthostcomponent",{"_index":3120,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["angularwidgetobjectfinder(this.testelement.fixture).find(widget",{"_index":506,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["another",{"_index":1514,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["any(...conditions",{"_index":3065,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["any(conditions",{"_index":3003,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["any).href",{"_index":1582,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["any).organizer.resize",{"_index":1725,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["any).popoverinstance.removescrolleventlisteners",{"_index":2874,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["anychoice",{"_index":2469,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["anychoice.display",{"_index":2494,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{}}}],["api",{"_index":778,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["app",{"_index":3321,"title":{},"body":{"components/FormInputComponent.html":{},"index.html":{}}}],["appear",{"_index":4005,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["appears",{"_index":888,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["append",{"_index":631,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["application",{"_index":4004,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["application's",{"_index":4832,"title":{},"body":{"index.html":{}}}],["applied",{"_index":3136,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["approach",{"_index":564,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["approval",{"_index":4868,"title":{},"body":{"index.html":{}}}],["area",{"_index":2846,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"miscellaneous/variables.html":{}}}],["arg",{"_index":613,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["argarray",{"_index":2634,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["args",{"_index":875,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/CommonUtil.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/LocatorDriver.html":{}}}],["argument",{"_index":112,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["arguments",{"_index":1779,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["aria",{"_index":2960,"title":{},"body":{"classes/ErrorBannerWidgetObject.html":{}}}],["ariarole",{"_index":2956,"title":{},"body":{"classes/ErrorBannerWidgetObject.html":{}}}],["around",{"_index":508,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"injectables/CsvExporterService.html":{},"components/FormCheckboxComponent.html":{},"components/FormSelectComponent.html":{},"classes/TestElement.html":{}}}],["array",{"_index":509,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["array.from(classes",{"_index":4274,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["array.from(this.clrdropdownmenuel.children",{"_index":2676,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["arrow",{"_index":2206,"title":{},"body":{"classes/DataExporterWidgetObject.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["artifacts",{"_index":4836,"title":{},"body":{"index.html":{}}}],["ascending",{"_index":3861,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["aside",{"_index":3359,"title":{},"body":{"components/FormInputComponent.html":{}}}],["assert",{"_index":3156,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["assertions",{"_index":3155,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["assign",{"_index":3329,"title":{},"body":{"components/FormInputComponent.html":{}}}],["assigned",{"_index":2251,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormInputComponent.html":{}}}],["assigning",{"_index":2275,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["assignvalue",{"_index":1821,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["assignvalue(config",{"_index":1833,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["associated",{"_index":904,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["associating",{"_index":2364,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["assumed",{"_index":348,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["asterisk",{"_index":901,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["async",{"_index":188,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/FilterTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["asynchronously",{"_index":238,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["attached",{"_index":2587,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["attaches",{"_index":1816,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{},"injectables/DropdownFocusHandlerService.html":{}}}],["attaching",{"_index":1844,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["attachrenderer",{"_index":1822,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["attempt",{"_index":937,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["attribute",{"_index":3302,"title":{},"body":{"components/FormInputComponent.html":{}}}],["auto",{"_index":865,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["automatically",{"_index":2717,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"interfaces/ISubscriptionTracker.html":{},"injectables/QuickSearchRegistrarService.html":{},"classes/SubscriptionTracker.html":{},"index.html":{}}}],["autosquash",{"_index":4593,"title":{},"body":{"contributing.html":{}}}],["availability",{"_index":94,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["available",{"_index":84,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BaseFormControl.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"index.html":{}}}],["availableheight",{"_index":1682,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["availableunits",{"_index":3657,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["avoid",{"_index":513,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"index.html":{}}}],["avoiding",{"_index":3141,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["await",{"_index":285,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"components/FilterTestHostComponent.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["b",{"_index":1473,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["back",{"_index":2632,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["background",{"_index":3582,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["backing",{"_index":840,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["banner",{"_index":656,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdActivityReporterModule.html":{},"miscellaneous/enumerations.html":{}}}],["banner'},{'name",{"_index":724,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["banner.component",{"_index":2962,"title":{},"body":{"classes/ErrorBannerWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{}}}],["banner.component.html",{"_index":2923,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.scss",{"_index":2922,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.ts",{"_index":2920,"title":{},"body":{"components/ErrorBannerComponent.html":{},"coverage.html":{}}}],["banner.component.ts:17",{"_index":2945,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.ts:19",{"_index":2946,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.ts:24",{"_index":2941,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.ts:29",{"_index":2936,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.ts:36",{"_index":2935,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.ts:41",{"_index":2930,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.ts:46",{"_index":2948,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.ts:54",{"_index":2942,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.ts:59",{"_index":2944,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.module",{"_index":4394,"title":{},"body":{"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{}}}],["banner.module.ts",{"_index":4450,"title":{},"body":{"modules/VcdErrorBannerModule.html":{}}}],["banner.wo.ts",{"_index":2955,"title":{},"body":{"classes/ErrorBannerWidgetObject.html":{},"coverage.html":{}}}],["banner.wo.ts:13",{"_index":2957,"title":{},"body":{"classes/ErrorBannerWidgetObject.html":{}}}],["banner.wo.ts:18",{"_index":2959,"title":{},"body":{"classes/ErrorBannerWidgetObject.html":{}}}],["banneractivityreportercomponent",{"_index":650,"title":{"components/BannerActivityReporterComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdActivityReporterModule.html":{},"coverage.html":{},"overview.html":{}}}],["banneractivityreporterwidgetobject",{"_index":756,"title":{"classes/BannerActivityReporterWidgetObject.html":{}},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"coverage.html":{}}}],["bar",{"_index":1449,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["base",{"_index":939,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/LocatorDriver.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"contributing.html":{}}}],["based",{"_index":1129,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["baseformcontrol",{"_index":829,"title":{"classes/BaseFormControl.html":{}},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"coverage.html":{}}}],["baseformcontrol:105",{"_index":3262,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:109",{"_index":3263,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:113",{"_index":3264,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:117",{"_index":3265,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:21",{"_index":3268,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:26",{"_index":3270,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:31",{"_index":3271,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:36",{"_index":3266,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:41",{"_index":3261,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:46",{"_index":3260,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:52",{"_index":3257,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:57",{"_index":3259,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:62",{"_index":3258,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:67",{"_index":3267,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:72",{"_index":3269,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseunit",{"_index":4345,"title":{},"body":{"classes/Unit.html":{}}}],["basevalue",{"_index":3874,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["basewidgetobject",{"_index":485,"title":{"classes/BaseWidgetObject.html":{}},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"coverage.html":{}}}],["basewidgetobject:30",{"_index":2221,"title":{},"body":{"classes/DataExporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["basewidgetobject:38",{"_index":2223,"title":{},"body":{"classes/DataExporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["basewidgetobject:45",{"_index":2222,"title":{},"body":{"classes/DataExporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["basewidgetobject:52",{"_index":2224,"title":{},"body":{"classes/DataExporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["basically",{"_index":3970,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["batch",{"_index":92,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["become",{"_index":1614,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["becomes",{"_index":2336,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"classes/DomUtil.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["before",{"_index":899,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["before(date",{"_index":3005,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["before/aftereach",{"_index":3234,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["beforeeach",{"_index":3110,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["beforeeach(function(this",{"_index":3115,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["begin",{"_index":630,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["beginning",{"_index":4128,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["begins",{"_index":679,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["behavior",{"_index":409,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"classes/CypressLocatorDriver.html":{},"classes/DomUtil.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["being",{"_index":774,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["belong",{"_index":1330,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["belongs",{"_index":1490,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["below",{"_index":889,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"contributing.html":{}}}],["benefit",{"_index":4888,"title":{},"body":{"index.html":{}}}],["best",{"_index":3662,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["bestformat",{"_index":4358,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["bestformat(1000000",{"_index":4363,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["bestformat(value",{"_index":4360,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["bestunit",{"_index":3719,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["bestvalue",{"_index":3718,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["between",{"_index":129,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityReporter.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["betweennumbers",{"_index":2980,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["betweennumbers(values",{"_index":3007,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["binding",{"_index":3988,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["bl",{"_index":1055,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["blob",{"_index":1870,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["blob([csvfile",{"_index":1905,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["block",{"_index":2540,"title":{},"body":{"classes/DomUtil.html":{},"components/LoadingIndicatorComponent.html":{}}}],["blocking",{"_index":3545,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["blur",{"_index":535,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["blurs",{"_index":534,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["body",{"_index":1668,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["bold",{"_index":706,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["boldtextrenderer",{"_index":1007,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"coverage.html":{}}}],["boldtextrenderercomponent",{"_index":705,"title":{"components/BoldTextRendererComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["boldtextrendererconfig",{"_index":996,"title":{"interfaces/BoldTextRendererConfig.html":{}},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"coverage.html":{}}}],["boldtextrendererwidgetobject",{"_index":1011,"title":{"classes/BoldTextRendererWidgetObject.html":{}},"body":{"classes/BoldTextRendererWidgetObject.html":{},"coverage.html":{}}}],["bom",{"_index":1891,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["boolean",{"_index":96,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/typealiases.html":{}}}],["bootstrap",{"_index":2760,"title":{},"body":{"modules/DropdownModule.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}],["boston",{"_index":3609,"title":{},"body":{"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["both",{"_index":147,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/Percent.html":{}}}],["bottom",{"_index":1054,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/FormInputComponent.html":{},"components/LoadingIndicatorComponent.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["bound",{"_index":2938,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["box",{"_index":1732,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["br",{"_index":1053,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["branch",{"_index":4537,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["break",{"_index":1142,"title":{},"body":{"interfaces/CliptextConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["breaking",{"_index":890,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["breaks",{"_index":1407,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["browse",{"_index":4890,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":482,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"dependencies.html":{},"modules.html":{}}}],["bsd",{"_index":2779,"title":{},"body":{"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["bubbles",{"_index":575,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["buckets",{"_index":49,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"miscellaneous/enumerations.html":{}}}],["bug",{"_index":1404,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"contributing.html":{}}}],["bugs",{"_index":4605,"title":{},"body":{"contributing.html":{}}}],["build",{"_index":3741,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["build:components",{"_index":4818,"title":{},"body":{"index.html":{}}}],["build:i18n",{"_index":4816,"title":{},"body":{"index.html":{}}}],["builder",{"_index":2359,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"classes/FilterBuilder.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["builder.is(\"created\").before(userinputdate",{"_index":2973,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.is(\"uptime\").greaterthan(user",{"_index":2974,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts",{"_index":2965,"title":{},"body":{"classes/FilterBuilder.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["builder.ts:106",{"_index":2997,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:126",{"_index":3036,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:160",{"_index":3004,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:180",{"_index":3038,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:190",{"_index":3020,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:198",{"_index":3034,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:206",{"_index":3030,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:214",{"_index":3032,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:222",{"_index":3024,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:230",{"_index":3026,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:238",{"_index":3006,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:246",{"_index":2994,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:256",{"_index":3008,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:270",{"_index":3018,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:282",{"_index":3014,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:291",{"_index":3013,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:39",{"_index":2992,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:40",{"_index":2991,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:41",{"_index":2990,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:52",{"_index":3028,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:62",{"_index":3021,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:72",{"_index":3001,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builders",{"_index":3075,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builders.push(new",{"_index":3076,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["buildpartial",{"_index":2981,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builds",{"_index":4860,"title":{},"body":{"index.html":{}}}],["busy",{"_index":132,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["button",{"_index":75,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["buttoncontents",{"_index":150,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["buttons",{"_index":137,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["by.css(selector",{"_index":3174,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["by.directive(selector",{"_index":3175,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["byte",{"_index":3866,"title":{},"body":{"classes/NumberUnit.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["bytes",{"_index":4722,"title":{},"body":{"coverage.html":{}}}],["c",{"_index":466,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/LocatorDriver.html":{},"pipes/NestedPropertyPipe.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{}}}],["ca",{"_index":2320,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"miscellaneous/variables.html":{}}}],["cache",{"_index":1510,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["calculate",{"_index":210,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["calculated",{"_index":1688,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["calculatepagesize",{"_index":1669,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["calculateposition(rect",{"_index":1155,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["calculates",{"_index":1343,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NumberUnit.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["calculating",{"_index":1551,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["california",{"_index":2321,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["call",{"_index":113,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/SubscriptionTracker.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["callback",{"_index":871,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["called",{"_index":114,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BaseWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["caller",{"_index":1304,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["callers",{"_index":3150,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["calling",{"_index":203,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["calls",{"_index":1980,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"injectables/DropdownFocusHandlerService.html":{}}}],["canbereadonly",{"_index":842,"title":{"interfaces/CanBeReadOnly.html":{}},"body":{"classes/BaseFormControl.html":{},"interfaces/CanBeReadOnly.html":{},"coverage.html":{}}}],["cancel",{"_index":2061,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/ExportColumn.html":{}}}],["canceltext",{"_index":2062,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["care",{"_index":616,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["caret",{"_index":4927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":88,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["cases",{"_index":1964,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["catch",{"_index":2875,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["catch(error",{"_index":366,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["caused",{"_index":1074,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["causes",{"_index":1720,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["causing",{"_index":4562,"title":{},"body":{"contributing.html":{}}}],["cd",{"_index":4869,"title":{},"body":{"index.html":{}}}],["cell",{"_index":985,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"miscellaneous/variables.html":{}}}],["cell's",{"_index":1931,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["cells",{"_index":1034,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{}}}],["cellvalue",{"_index":1932,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["cellvalue.tolocalestring",{"_index":1944,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["cellvalue.tostring",{"_index":1942,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["center",{"_index":1153,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/LoadingIndicatorComponent.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["certificate",{"_index":4524,"title":{},"body":{"contributing.html":{}}}],["certifies",{"_index":4528,"title":{},"body":{"contributing.html":{}}}],["cfr",{"_index":1826,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["chain",{"_index":456,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["chainable",{"_index":1976,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["chainables",{"_index":1963,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["chance",{"_index":1085,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["change",{"_index":545,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseFormControl.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"index.html":{}}}],["changed",{"_index":1817,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"miscellaneous/variables.html":{}}}],["changedetectorref",{"_index":1253,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["changes",{"_index":782,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["changing",{"_index":1722,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["character",{"_index":1875,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["characters",{"_index":1897,"title":{},"body":{"injectables/CsvExporterService.html":{},"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["check",{"_index":3168,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"index.html":{}}}],["checkbox",{"_index":2075,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/ExportColumn.html":{},"components/FormCheckboxComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["checkbox'},{'name",{"_index":728,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["checkbox.component",{"_index":4456,"title":{},"body":{"modules/VcdFormModule.html":{}}}],["checkbox.component.html",{"_index":3242,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["checkbox.component.ts",{"_index":3241,"title":{},"body":{"components/FormCheckboxComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["checkbox.component.ts:34",{"_index":3256,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["checkbox.component.ts:39",{"_index":3255,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["checkbox.component.ts:44",{"_index":3251,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["checkbox.component.ts:49",{"_index":3249,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["checkbox.component.ts:51",{"_index":3273,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["checkbox.component.ts:53",{"_index":3247,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["checkbox/form",{"_index":3240,"title":{},"body":{"components/FormCheckboxComponent.html":{},"modules/VcdFormModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["checkbox_wrapper",{"_index":4935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checkboxes",{"_index":2203,"title":{},"body":{"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["checkboxstyling",{"_index":3253,"title":{},"body":{"components/FormCheckboxComponent.html":{},"miscellaneous/enumerations.html":{}}}],["checkboxstyling.checkbox",{"_index":3254,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["checked",{"_index":3725,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["checkout",{"_index":4575,"title":{},"body":{"contributing.html":{}}}],["checkposition",{"_index":2520,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["checks",{"_index":462,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/FormValidators.html":{},"pipes/NestedPropertyPipe.html":{},"classes/TestElement.html":{}}}],["child",{"_index":962,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/FindableWidget-1.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["child.matches(activatablemenuitemtype.button",{"_index":2677,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["child.matches(activatablemenuitemtype.nested_vcd_dropdown",{"_index":2678,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["children",{"_index":123,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["chose",{"_index":1966,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["chrome",{"_index":1908,"title":{},"body":{"injectables/CsvExporterService.html":{},"components/FormInputComponent.html":{},"miscellaneous/variables.html":{}}}],["ci",{"_index":4583,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["ci/cd",{"_index":4851,"title":{},"body":{"index.html":{}}}],["city",{"_index":3602,"title":{},"body":{"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["clarity",{"_index":118,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"index.html":{}}}],["claritymodule",{"_index":2785,"title":{},"body":{"modules/DropdownModule.html":{},"modules/QuickSearchModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["class",{"_index":78,"title":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/CommonUtil.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"classes/DomUtil.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"classes/FormValidators.html":{},"classes/IdGenerator.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/QuickSearchProviderDefaults.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["classes",{"_index":163,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/CommonUtil.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"classes/DomUtil.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindableWidget-1.html":{},"classes/FormValidators.html":{},"classes/IdGenerator.html":{},"interfaces/LocatorDriver.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/QuickSearchProviderDefaults.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"overview.html":{}}}],["classlist.js",{"_index":4760,"title":{},"body":{"dependencies.html":{}}}],["classname",{"_index":3131,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["classselector",{"_index":2527,"title":{},"body":{"classes/DomUtil.html":{}}}],["clause",{"_index":2780,"title":{},"body":{"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["clear",{"_index":540,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/FilterBuilder.html":{},"classes/TestElement.html":{}}}],["cleared",{"_index":2939,"title":{},"body":{"components/ErrorBannerComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["clearhidetimeout",{"_index":1123,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["clearing",{"_index":3754,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["clears",{"_index":539,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{}}}],["clearselectioninformation",{"_index":1628,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["cleartimeout(tip.hidetimeout",{"_index":1124,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["cli",{"_index":4757,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["click",{"_index":530,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["click(cssselector",{"_index":779,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["clicked",{"_index":105,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["clicks",{"_index":529,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["client",{"_index":322,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"injectables/CsvExporterService.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/ObjectAndResponse.html":{}}}],["clientheight",{"_index":1295,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["clientrect",{"_index":1156,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["clipped",{"_index":1030,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["clipping",{"_index":2850,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["cliptext",{"_index":1033,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"directives/ShowClippedTextDirective.html":{}}}],["cliptextconfig",{"_index":1028,"title":{"interfaces/CliptextConfig.html":{}},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"directives/ShowClippedTextDirective.html":{},"coverage.html":{}}}],["clone",{"_index":4846,"title":{},"body":{"index.html":{}}}],["cloning",{"_index":4845,"title":{},"body":{"index.html":{}}}],["closable",{"_index":2932,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["close",{"_index":1425,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["closed",{"_index":2711,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"components/ErrorBannerComponent.html":{}}}],["closemenu",{"_index":2633,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["closer",{"_index":4127,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["closes",{"_index":673,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["closest",{"_index":967,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["closevcddropdown",{"_index":2553,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["closing",{"_index":3315,"title":{},"body":{"components/FormInputComponent.html":{}}}],["closure",{"_index":4026,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["closures",{"_index":3236,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["cloud",{"_index":1989,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"index.html":{}}}],["clr",{"_index":751,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/VcdDatagridWidgetObject.html":{},"miscellaneous/variables.html":{}}}],["clr/angular",{"_index":1264,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"modules/QuickSearchModule.html":{},"interfaces/SortedColumn.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"dependencies.html":{}}}],["clr/angular/data/datagrid/enums/selection",{"_index":1266,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["clr/angular/data/datagrid/interfaces/filter.interface",{"_index":2285,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["clr/core",{"_index":4741,"title":{},"body":{"dependencies.html":{}}}],["clr/icons",{"_index":4742,"title":{},"body":{"dependencies.html":{}}}],["clr/ui",{"_index":4743,"title":{},"body":{"dependencies.html":{}}}],["clrdatagrid",{"_index":1261,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["clrdatagridcssclass",{"_index":1528,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["clrdatagridfilter",{"_index":2247,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["clrdatagridfilterinterface",{"_index":2238,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["clrdatagridpagination",{"_index":1262,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["clrdatagridstateinterface",{"_index":1263,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["clrdatagridwidgetobject",{"_index":3101,"title":{},"body":{"components/FilterTestHostComponent.html":{},"classes/VcdDatagridWidgetObject.html":{},"coverage.html":{}}}],["clrdatarowcssclassgetter(row",{"_index":1598,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["clrdgcolumnclassname",{"_index":1766,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["clrdropdown",{"_index":2025,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{}}}],["clrdropdownmenu",{"_index":2663,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/MenuItem.html":{}}}],["clrdropdownmenuel",{"_index":2554,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["cluster_dropdownmodule",{"_index":2763,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_declarations",{"_index":2764,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_dropdowncomponent_providers",{"_index":2765,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_exports",{"_index":2767,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_imports",{"_index":2766,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_pipesmodule",{"_index":4094,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_declarations",{"_index":4095,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_exports",{"_index":4096,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_quicksearchmodule",{"_index":4114,"title":{},"body":{"modules/QuickSearchModule.html":{},"overview.html":{}}}],["cluster_quicksearchmodule_declarations",{"_index":4115,"title":{},"body":{"modules/QuickSearchModule.html":{},"overview.html":{}}}],["cluster_quicksearchmodule_exports",{"_index":4116,"title":{},"body":{"modules/QuickSearchModule.html":{},"overview.html":{}}}],["cluster_showclippedtextdirectivemodule",{"_index":4193,"title":{},"body":{"modules/ShowClippedTextDirectiveModule.html":{},"overview.html":{}}}],["cluster_showclippedtextdirectivemodule_declarations",{"_index":4194,"title":{},"body":{"modules/ShowClippedTextDirectiveModule.html":{},"overview.html":{}}}],["cluster_showclippedtextdirectivemodule_exports",{"_index":4195,"title":{},"body":{"modules/ShowClippedTextDirectiveModule.html":{},"overview.html":{}}}],["cluster_vcdactionmenumodule",{"_index":4378,"title":{},"body":{"modules/VcdActionMenuModule.html":{},"overview.html":{}}}],["cluster_vcdactionmenumodule_declarations",{"_index":4379,"title":{},"body":{"modules/VcdActionMenuModule.html":{},"overview.html":{}}}],["cluster_vcdactionmenumodule_exports",{"_index":4381,"title":{},"body":{"modules/VcdActionMenuModule.html":{},"overview.html":{}}}],["cluster_vcdactionmenumodule_imports",{"_index":4380,"title":{},"body":{"modules/VcdActionMenuModule.html":{}}}],["cluster_vcdactivityreportermodule",{"_index":4385,"title":{},"body":{"modules/VcdActivityReporterModule.html":{},"overview.html":{}}}],["cluster_vcdactivityreportermodule_declarations",{"_index":4386,"title":{},"body":{"modules/VcdActivityReporterModule.html":{},"overview.html":{}}}],["cluster_vcdactivityreportermodule_exports",{"_index":4388,"title":{},"body":{"modules/VcdActivityReporterModule.html":{},"overview.html":{}}}],["cluster_vcdactivityreportermodule_imports",{"_index":4387,"title":{},"body":{"modules/VcdActivityReporterModule.html":{},"overview.html":{}}}],["cluster_vcdcomponentsmodule",{"_index":4399,"title":{},"body":{"modules/VcdComponentsModule.html":{},"overview.html":{}}}],["cluster_vcdcomponentsmodule_exports",{"_index":4400,"title":{},"body":{"modules/VcdComponentsModule.html":{},"overview.html":{}}}],["cluster_vcddataexportermodule",{"_index":4412,"title":{},"body":{"modules/VcdDataExporterModule.html":{},"overview.html":{}}}],["cluster_vcddataexportermodule_declarations",{"_index":4413,"title":{},"body":{"modules/VcdDataExporterModule.html":{},"overview.html":{}}}],["cluster_vcddataexportermodule_exports",{"_index":4414,"title":{},"body":{"modules/VcdDataExporterModule.html":{},"overview.html":{}}}],["cluster_vcddatagridmodule",{"_index":4417,"title":{},"body":{"modules/VcdDatagridModule.html":{},"overview.html":{}}}],["cluster_vcddatagridmodule_declarations",{"_index":4418,"title":{},"body":{"modules/VcdDatagridModule.html":{},"overview.html":{}}}],["cluster_vcddatagridmodule_exports",{"_index":4420,"title":{},"body":{"modules/VcdDatagridModule.html":{},"overview.html":{}}}],["cluster_vcddatagridmodule_imports",{"_index":4419,"title":{},"body":{"modules/VcdDatagridModule.html":{},"overview.html":{}}}],["cluster_vcderrorbannermodule",{"_index":4447,"title":{},"body":{"modules/VcdErrorBannerModule.html":{},"overview.html":{}}}],["cluster_vcderrorbannermodule_declarations",{"_index":4448,"title":{},"body":{"modules/VcdErrorBannerModule.html":{},"overview.html":{}}}],["cluster_vcderrorbannermodule_exports",{"_index":4449,"title":{},"body":{"modules/VcdErrorBannerModule.html":{},"overview.html":{}}}],["cluster_vcdformlymodule",{"_index":4479,"title":{},"body":{"modules/VcdFormlyModule.html":{},"overview.html":{}}}],["cluster_vcdformlymodule_declarations",{"_index":4480,"title":{},"body":{"modules/VcdFormlyModule.html":{},"overview.html":{}}}],["cluster_vcdformlymodule_imports",{"_index":4481,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["cluster_vcdformmodule",{"_index":4451,"title":{},"body":{"modules/VcdFormModule.html":{},"overview.html":{}}}],["cluster_vcdformmodule_declarations",{"_index":4452,"title":{},"body":{"modules/VcdFormModule.html":{},"overview.html":{}}}],["cluster_vcdformmodule_exports",{"_index":4453,"title":{},"body":{"modules/VcdFormModule.html":{}}}],["cluster_vcdformmodule_providers",{"_index":4454,"title":{},"body":{"modules/VcdFormModule.html":{},"overview.html":{}}}],["cluster_vcdloadingindicatormodule",{"_index":4494,"title":{},"body":{"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}],["cluster_vcdloadingindicatormodule_declarations",{"_index":4495,"title":{},"body":{"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}],["cluster_vcdloadingindicatormodule_exports",{"_index":4496,"title":{},"body":{"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}],["cmd+space",{"_index":3964,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["co",{"_index":3806,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["co.value",{"_index":3807,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["code",{"_index":569,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"injectables/CsvExporterService.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"index.html":{}}}],["codecov.io",{"_index":4762,"title":{},"body":{"dependencies.html":{}}}],["col",{"_index":1566,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["col.displayname",{"_index":1575,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["col.fieldname",{"_index":2179,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["colindex",{"_index":1567,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["collect",{"_index":110,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["color",{"_index":3354,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/LoadingIndicatorComponent.html":{}}}],["cols",{"_index":1391,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["column",{"_index":984,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["column.datagrid",{"_index":4921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["column.displayname",{"_index":1576,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["column.filter",{"_index":1714,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["column.filter.config.queryfield",{"_index":1715,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["column.hideable",{"_index":1649,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["column.interface",{"_index":1003,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["column.interface.ts",{"_index":1727,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["column.queryfieldname",{"_index":1713,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["column.renderer",{"_index":1705,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["column_title",{"_index":4919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columncomponentrendererspec",{"_index":1000,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"coverage.html":{}}}],["columncomponentrendererspec(componentrendererspec",{"_index":1780,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["columncomponentrendererspec({type",{"_index":1769,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["columnconfig",{"_index":1704,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columnconfig.fieldcolumnrendererspec",{"_index":1709,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columnconfig.fieldname",{"_index":1710,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columnconfig.fieldrenderer",{"_index":1707,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columnconfiginternal",{"_index":1240,"title":{"interfaces/ColumnConfigInternal.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["columndropdown",{"_index":2049,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["columndropdown(columndropdown",{"_index":2048,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["columnrendererspec",{"_index":1001,"title":{"interfaces/ColumnRendererSpec.html":{}},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["columnrendererspec#type",{"_index":1802,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{}}}],["columnrendererspec).config",{"_index":1708,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columnrendererspec.config",{"_index":1815,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["columns",{"_index":988,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columns(cols",{"_index":1389,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columns.map((column",{"_index":1703,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columnsconfig",{"_index":1384,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columnsupdated",{"_index":1507,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["combination",{"_index":360,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["combooption",{"_index":3701,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["combooptions",{"_index":3715,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["combooptionunitmap",{"_index":3717,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["combounitoptions",{"_index":3746,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["commands",{"_index":4874,"title":{},"body":{"index.html":{}}}],["commas",{"_index":1927,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["comment",{"_index":4595,"title":{},"body":{"contributing.html":{}}}],["comments",{"_index":3845,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["commit",{"_index":4540,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["commits",{"_index":4538,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":4372,"title":{},"body":{"injectables/UnitFormatter.html":{},"contributing.html":{},"index.html":{}}}],["common/activity",{"_index":823,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{}}}],["common/error/error",{"_index":4406,"title":{},"body":{"modules/VcdComponentsModule.html":{}}}],["common/interfaces",{"_index":261,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["common/interfaces/action",{"_index":1271,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["common/interfaces/select",{"_index":2356,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/FormSelectComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["common/loading/loading",{"_index":4407,"title":{},"body":{"modules/VcdComponentsModule.html":{}}}],["common/pipes/pipes.module",{"_index":4425,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["common/subscription",{"_index":1274,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["commonmodule",{"_index":2781,"title":{},"body":{"modules/DropdownModule.html":{},"modules/QuickSearchModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["commonutil",{"_index":264,"title":{"classes/CommonUtil.html":{}},"body":{"classes/ActionSearchProvider.html":{},"classes/CommonUtil.html":{},"injectables/UnitFormatter.html":{},"coverage.html":{}}}],["commonutil.isfunction(action.disabled",{"_index":310,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["commonutil.roundto(inputunit.getoutputvalue(value",{"_index":4374,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["community",{"_index":4522,"title":{},"body":{"contributing.html":{}}}],["compared",{"_index":4073,"title":{},"body":{"classes/Percent.html":{}}}],["comparison",{"_index":3855,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["compatibility",{"_index":3511,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["compilecomponents",{"_index":3109,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["complete",{"_index":1533,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{}}}],["completed",{"_index":4038,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["complex",{"_index":2968,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["comply",{"_index":4121,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["compodoc",{"_index":4776,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":204,"title":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component's",{"_index":777,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["component({@link",{"_index":3112,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["component_template",{"_index":701,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["componentconstructor",{"_index":634,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["componentfactory",{"_index":1850,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["componentfactoryresolver",{"_index":1827,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["componentfixture",{"_index":479,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["componentfixture#detectchanges",{"_index":3169,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["componentfixture).componentref",{"_index":637,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["componentinstance",{"_index":587,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/TestElement.html":{}}}],["componentref",{"_index":1819,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["componentrenderer",{"_index":981,"title":{"interfaces/ComponentRenderer.html":{}},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"coverage.html":{}}}],["componentrenderer#config",{"_index":1735,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["componentrenderer.config",{"_index":1004,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{}}}],["componentrendererconstructor",{"_index":1280,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/typealiases.html":{}}}],["componentrendereroutletdirective",{"_index":746,"title":{"directives/ComponentRendererOutletDirective.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["componentrendereroutletdirective#assignvalue",{"_index":2296,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["componentrendererspec",{"_index":1281,"title":{"interfaces/ComponentRendererSpec.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["componentroots",{"_index":3217,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["componentroots.map",{"_index":3219,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["components",{"_index":651,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ISubscriptionTracker.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"injectables/QuickSearchRegistrarService.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SubscriptionTracker.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"index.html":{},"overview.html":{}}}],["components.git",{"_index":4883,"title":{},"body":{"index.html":{}}}],["components/master",{"_index":4867,"title":{},"body":{"index.html":{}}}],["components/pull/248",{"_index":1991,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["componenttype",{"_index":1820,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["compound",{"_index":4032,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["computebestunitandvalue(value",{"_index":3792,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["concat",{"_index":496,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["concat(...elements.map((element",{"_index":490,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["concurrent",{"_index":379,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["condition",{"_index":82,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/FilterBuilder.html":{},"interfaces/ObjectAndResponse.html":{}}}],["condition(operator",{"_index":3015,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["condition.buildpartial",{"_index":3062,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["condition.clear",{"_index":3067,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["conditions",{"_index":2999,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["conditions.foreach(condition",{"_index":3061,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["conditions.length",{"_index":3051,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["conditions.shift",{"_index":3059,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["config",{"_index":995,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{}}}],["config(config",{"_index":1191,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["config(context",{"_index":1855,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["config(record",{"_index":1009,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{}}}],["config(val",{"_index":2297,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["config.disabled",{"_index":1196,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["config.mouseoutdelay",{"_index":1192,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["config.options.foreach(option",{"_index":2371,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["config.options.map(option",{"_index":2368,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["config.size",{"_index":1194,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["config.text",{"_index":994,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{}}}],["config.unit",{"_index":2444,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["config.unitoptions",{"_index":2443,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["configoption",{"_index":4466,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["configurable",{"_index":3690,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{}}}],["configuration",{"_index":9,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["configurationcomponentrenderer",{"_index":1857,"title":{},"body":{"interfaces/ComponentRendererSpec.html":{}}}],["configuration{@link",{"_index":1805,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{}}}],["configured",{"_index":3981,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["configures",{"_index":2509,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["configuretestingmodule",{"_index":3105,"title":{},"body":{"components/FilterTestHostComponent.html":{},"coverage.html":{}}}],["conjunct",{"_index":3002,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["consider",{"_index":3691,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["considered",{"_index":4560,"title":{},"body":{"contributing.html":{}}}],["considering",{"_index":3742,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["consists",{"_index":3971,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["console.error('clarity",{"_index":2876,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["const",{"_index":266,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseFormControl.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["construct",{"_index":1365,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NumberUnit.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["constructed",{"_index":3714,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["constructor",{"_index":192,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/IdGenerator.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["constructor(@inject(activitypromiseresolver",{"_index":4302,"title":{},"body":{"components/SpinnerActivityReporterComponent.html":{}}}],["constructor(@inject(locale_id",{"_index":3626,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["constructor(@self",{"_index":3277,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["constructor(arg",{"_index":611,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["constructor(chainable",{"_index":1972,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["constructor(componentconstructor",{"_index":3209,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["constructor(controldirective",{"_index":3246,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{}}}],["constructor(destroyable",{"_index":3516,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["constructor(driver",{"_index":952,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["constructor(elements",{"_index":4321,"title":{},"body":{"classes/TestElement.html":{}}}],["constructor(elref",{"_index":2812,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["constructor(filtercontainer",{"_index":2246,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["constructor(fixture",{"_index":4215,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"classes/WidgetObject.html":{}}}],["constructor(host",{"_index":4178,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["constructor(multiplier",{"_index":4080,"title":{},"body":{"classes/Percent.html":{},"classes/Unit.html":{}}}],["constructor(ngcontrol",{"_index":858,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormSelectComponent.html":{}}}],["constructor(parent",{"_index":2989,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["constructor(parentvcddropdown",{"_index":2569,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["constructor(prefix",{"_index":3534,"title":{},"body":{"classes/IdGenerator.html":{}}}],["constructor(private",{"_index":275,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"interfaces/CliptextConfig.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/ExportColumn.html":{},"classes/IdGenerator.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"injectables/QuickSearchRegistrarService.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["constructor(promiseresolver",{"_index":387,"title":{},"body":{"classes/ActivityReporter.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["constructor(public",{"_index":521,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["constructor(quicksearchservice",{"_index":4137,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["constructor(renderer",{"_index":2708,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["constructor(testelement",{"_index":448,"title":{},"body":{"classes/AngularLocatorDriver.html":{}}}],["constructor(translationservice",{"_index":668,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"injectables/UnitFormatter.html":{}}}],["constructor(ts",{"_index":193,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["constructor(unitformatter",{"_index":3938,"title":{},"body":{"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["constructor(viewcontainerref",{"_index":1824,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["constructors",{"_index":1813,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["constructs",{"_index":3513,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["contain",{"_index":3946,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"contributing.html":{}}}],["contained",{"_index":367,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"interfaces/ObjectAndResponse.html":{},"classes/TestElement.html":{}}}],["container",{"_index":1067,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["container').unwrap",{"_index":948,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["contains",{"_index":966,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindableWidget-1.html":{},"components/FormInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/LocatorDriver.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"contributing.html":{},"index.html":{}}}],["content",{"_index":801,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["content/dimensions",{"_index":1130,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["content_area_selector",{"_index":2845,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contentareaelement",{"_index":2799,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["contentarearect",{"_index":2891,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["contentarearect.bottom",{"_index":2918,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["contentarearect.left",{"_index":2900,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["contentarearect.right",{"_index":2897,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["contentarearect.top",{"_index":2893,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["contentchild",{"_index":2843,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["contentchild(clrdropdownmenu",{"_index":2860,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["contents",{"_index":74,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"injectables/CsvExporterService.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":33,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["context(.modal",{"_index":3589,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["context(.modal):not(.adjust",{"_index":3364,"title":{},"body":{"components/FormInputComponent.html":{}}}],["contextual",{"_index":15,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["contextual_featured",{"_index":44,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"miscellaneous/enumerations.html":{}}}],["contextualactionposition",{"_index":1283,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["contextualactionposition.row",{"_index":1487,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["contextualactionposition.top",{"_index":1484,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["contextualactions",{"_index":1432,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["contextualfeaturedactions",{"_index":1499,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["continue",{"_index":4043,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["contract",{"_index":372,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["contributing",{"_index":4517,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contribution",{"_index":4530,"title":{},"body":{"contributing.html":{}}}],["contributions",{"_index":4521,"title":{},"body":{"contributing.html":{}}}],["contributor's",{"_index":4534,"title":{},"body":{"contributing.html":{}}}],["control",{"_index":839,"title":{},"body":{"classes/BaseFormControl.html":{},"injectables/CsvExporterService.html":{},"components/DatagridNumericFilterComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"miscellaneous/variables.html":{}}}],["control's",{"_index":3395,"title":{},"body":{"classes/FormValidators.html":{}}}],["control.ts",{"_index":831,"title":{},"body":{"classes/BaseFormControl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["control.ts:105",{"_index":876,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:109",{"_index":878,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:113",{"_index":881,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:117",{"_index":884,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:21",{"_index":864,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:26",{"_index":870,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:31",{"_index":872,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:36",{"_index":861,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:41",{"_index":900,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:46",{"_index":898,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:52",{"_index":887,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:57",{"_index":896,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:62",{"_index":892,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:67",{"_index":862,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:72",{"_index":860,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:85",{"_index":903,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:91",{"_index":906,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:98",{"_index":908,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.value",{"_index":3413,"title":{},"body":{"classes/FormValidators.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["controldirective",{"_index":3248,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["controlling",{"_index":3989,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["controls",{"_index":1023,"title":{},"body":{"interfaces/CanBeReadOnly.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["controlvalueaccessor",{"_index":841,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["convenience",{"_index":512,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["conventions",{"_index":4598,"title":{},"body":{"contributing.html":{}}}],["conversion",{"_index":2479,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["convert",{"_index":3867,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["converted",{"_index":2029,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/ExportColumn.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["convertgenericonly",{"_index":970,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"miscellaneous/typealiases.html":{}}}],["converts",{"_index":2043,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["copy/paste",{"_index":1087,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["copyright",{"_index":2773,"title":{},"body":{"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["correct",{"_index":1654,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["correctly",{"_index":3221,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["correctreturntypes",{"_index":469,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{},"miscellaneous/typealiases.html":{}}}],["corresponding",{"_index":1741,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["correspondingformctrl",{"_index":2375,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["correspondingformctrl.setvalue(true",{"_index":2380,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["costs",{"_index":515,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["count",{"_index":1352,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["counter",{"_index":604,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["cover",{"_index":2909,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["coverage",{"_index":3197,"title":{"coverage.html":{}},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{}}}],["covering",{"_index":3639,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["cr",{"_index":971,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["create",{"_index":1089,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/FilterBuilder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["createcsv",{"_index":1864,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["createcsv(rows",{"_index":1867,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["created",{"_index":560,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"directives/ShowClippedTextDirective.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["createdatagridfiltertesthelper",{"_index":3118,"title":{},"body":{"components/FilterTestHostComponent.html":{},"coverage.html":{}}}],["createdatagridfiltertesthelperwithfinder",{"_index":3126,"title":{},"body":{"components/FilterTestHostComponent.html":{},"coverage.html":{}}}],["createformgroup",{"_index":2241,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["createnullsafevalidator",{"_index":3390,"title":{},"body":{"classes/FormValidators.html":{}}}],["createnullsafevalidator(validator",{"_index":3392,"title":{},"body":{"classes/FormValidators.html":{}}}],["creates",{"_index":389,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["creating",{"_index":565,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"directives/DropdownFocusHandlerDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{}}}],["creation",{"_index":2017,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["criteria",{"_index":206,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["css",{"_index":77,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularLocatorDriver.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cssselector",{"_index":464,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["csv",{"_index":1871,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["csvexporterservice",{"_index":1859,"title":{"injectables/CsvExporterService.html":{}},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"coverage.html":{}}}],["csvfile",{"_index":1884,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["cur",{"_index":3841,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["current",{"_index":808,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["currentaction",{"_index":297,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["currentaction.istranslatable",{"_index":302,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["currentaction.textkey",{"_index":303,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["currentaction?.children?.length",{"_index":298,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["currentdetailrowconfig",{"_index":1557,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["currentdetailrowrenderspec",{"_index":1558,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["currentdirective",{"_index":1075,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["currentfocuseditem",{"_index":2702,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["currenthost",{"_index":1078,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":377,"title":{},"body":{"classes/ActivityReporter.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["currentoperator",{"_index":2979,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["currentpanespec",{"_index":1556,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["currentpanespecrecord",{"_index":1555,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["currentselection.map((selected",{"_index":1622,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["currentvalue",{"_index":2144,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["custom",{"_index":65,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnRendererSpec.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["customfiql",{"_index":2481,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["cy",{"_index":1987,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cy.get",{"_index":2002,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["cy.get(ancestor).find(tagname",{"_index":2005,"title":{},"body":{"classes/CypressWidgetObjectFinder.html":{}}}],["cy.get(tagname",{"_index":2006,"title":{},"body":{"classes/CypressWidgetObjectFinder.html":{}}}],["cycle",{"_index":625,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"directives/DropdownFocusHandlerDirective.html":{},"components/FormInputComponent.html":{},"interfaces/MenuItem.html":{}}}],["cypress",{"_index":1962,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"coverage.html":{}}}],["cypress.chainable",{"_index":1965,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["cypresslocatordriver",{"_index":1960,"title":{"classes/CypressLocatorDriver.html":{}},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"coverage.html":{}}}],["cypresslocatordriver(root",{"_index":2008,"title":{},"body":{"classes/CypressWidgetObjectFinder.html":{}}}],["cypresslocatordriver(root.contains(cssselector",{"_index":1997,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["cypresslocatordriver(root.find(cssselector",{"_index":1993,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["cypresslocatordriver(root.parents(cssselector",{"_index":1998,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["cypresswidgetobjectfinder",{"_index":1985,"title":{"classes/CypressWidgetObjectFinder.html":{}},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"coverage.html":{}}}],["cypresswidgetobjectfinder().find(widget",{"_index":2000,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["danger",{"_index":2933,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["data",{"_index":60,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{}}}],["data.ts",{"_index":3601,"title":{},"body":{"interfaces/MockRecord.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dataexportercomponent",{"_index":708,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDataExporterModule.html":{},"coverage.html":{},"overview.html":{}}}],["dataexporterwidgetobject",{"_index":2183,"title":{"classes/DataExporterWidgetObject.html":{}},"body":{"classes/DataExporterWidgetObject.html":{},"coverage.html":{}}}],["dataexportrequest",{"_index":2103,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["dataexportrequestevent",{"_index":2009,"title":{"interfaces/DataExportRequestEvent.html":{}},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"coverage.html":{}}}],["dataexportrequestevent.exportdata",{"_index":2104,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["datagrid",{"_index":1035,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/VcdDatagridWidgetObject.html":{},"miscellaneous/variables.html":{}}}],["datagrid'},{'name",{"_index":711,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["datagrid.component",{"_index":4426,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["datagrid.component.html",{"_index":1380,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["datagrid.component.scss",{"_index":1382,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["datagrid.wo",{"_index":3102,"title":{},"body":{"components/FilterTestHostComponent.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["datagrid.wo.ts",{"_index":4435,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{},"coverage.html":{}}}],["datagrid.wo.ts:13",{"_index":4441,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["datagrid.wo.ts:18",{"_index":4440,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["datagrid.wo.ts:23",{"_index":4442,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["datagrid.wo.ts:31",{"_index":4444,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["datagrid/datagrid.module",{"_index":4409,"title":{},"body":{"modules/VcdComponentsModule.html":{}}}],["datagrid/mock",{"_index":3100,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["datagridcomponent",{"_index":710,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"overview.html":{}}}],["datagridcomponent.gridrefresh",{"_index":1364,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["datagridfilter",{"_index":1277,"title":{"classes/DatagridFilter.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["datagridfilter#config",{"_index":2308,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["datagridfilter.queryfield",{"_index":1712,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["datagridfilter:107",{"_index":2346,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:112",{"_index":2340,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:117",{"_index":2347,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:122",{"_index":2342,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:127",{"_index":2343,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:132",{"_index":2344,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:137",{"_index":2339,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:59",{"_index":2353,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:60",{"_index":2354,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:71",{"_index":2351,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:72",{"_index":2327,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:87",{"_index":2352,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:89",{"_index":2345,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:99",{"_index":2341,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridmultiselectfilter",{"_index":2390,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"coverage.html":{}}}],["datagridmultiselectfiltercomponent",{"_index":712,"title":{"components/DatagridMultiSelectFilterComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["datagridmultiselectfiltercomponent.options",{"_index":2362,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["datagridmultiselectfilterconfig",{"_index":2333,"title":{"interfaces/DatagridMultiSelectFilterConfig.html":{}},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"coverage.html":{}}}],["datagridnumericfilter",{"_index":2459,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"coverage.html":{}}}],["datagridnumericfiltercomponent",{"_index":716,"title":{"components/DatagridNumericFilterComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["datagridnumericfiltercomponent.close",{"_index":3316,"title":{},"body":{"components/FormInputComponent.html":{}}}],["datagridnumericfilterconfig",{"_index":2408,"title":{"interfaces/DatagridNumericFilterConfig.html":{}},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["datagridnumericfiltervalue",{"_index":2410,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"miscellaneous/typealiases.html":{}}}],["datagridselectfilter",{"_index":2493,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"coverage.html":{}}}],["datagridselectfiltercomponent",{"_index":718,"title":{"components/DatagridSelectFilterComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["datagridselectfiltercomponent#getvalue",{"_index":2480,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["datagridselectfilterconfig",{"_index":2478,"title":{"interfaces/DatagridSelectFilterConfig.html":{}},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"coverage.html":{}}}],["datagridselection",{"_index":1472,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["datagridselection(selection",{"_index":1477,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["datagridselectionchange",{"_index":1504,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["datagridstringfilter",{"_index":2522,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"coverage.html":{}}}],["datagridstringfiltercomponent",{"_index":720,"title":{"components/DatagridStringFilterComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["datagridstringfilterconfig",{"_index":2510,"title":{"interfaces/DatagridStringFilterConfig.html":{}},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"coverage.html":{}}}],["datarow",{"_index":1595,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["date",{"_index":1943,"title":{},"body":{"injectables/CsvExporterService.html":{},"classes/FilterBuilder.html":{},"components/FormInputComponent.html":{},"pipes/NestedPropertyPipe.html":{},"miscellaneous/variables.html":{}}}],["date(getformatteddatevalue(value)).toisostring",{"_index":3342,"title":{},"body":{"components/FormInputComponent.html":{}}}],["date(value",{"_index":3344,"title":{},"body":{"components/FormInputComponent.html":{}}}],["date.getfullyear",{"_index":3345,"title":{},"body":{"components/FormInputComponent.html":{}}}],["date.toisostring",{"_index":3074,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["date_object_class",{"_index":3625,"title":{},"body":{"pipes/NestedPropertyPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datepipe",{"_index":3621,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["datepipe(this.localeid).transform(returnvalue",{"_index":3638,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["datetime",{"_index":3283,"title":{},"body":{"components/FormInputComponent.html":{}}}],["deactivate",{"_index":1221,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["debounce_time_for_grid_filter_changes",{"_index":2291,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["debouncetime",{"_index":2286,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["debug",{"_index":457,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["debugel",{"_index":593,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["debugel.nativeelement.matches(cssselector",{"_index":594,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["debugelement",{"_index":451,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["debugelement.nativeelement.matches(cssselector",{"_index":503,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["debugelement.parent",{"_index":504,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["debugelements",{"_index":510,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["decimal",{"_index":1796,"title":{},"body":{"classes/CommonUtil.html":{},"injectables/UnitFormatter.html":{}}}],["decimalpipe",{"_index":3622,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["decimalpipe(this.localeid).transform(returnvalue",{"_index":3637,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["decisions",{"_index":834,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["declarations",{"_index":2759,"title":{},"body":{"modules/DropdownModule.html":{},"components/FilterTestHostComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["declare",{"_index":1986,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["decorators",{"_index":2415,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"components/FormInputComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["deep",{"_index":2461,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"components/ErrorBannerComponent.html":{}}}],["default",{"_index":143,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/ThousandsUnit.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["default_action_search_section_header_prefix",{"_index":267,"title":{},"body":{"classes/ActionSearchProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_pagination_translation_key",{"_index":1305,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_size",{"_index":1286,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_size_options",{"_index":1288,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":148,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["defaultspinnersize",{"_index":3550,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["define",{"_index":4344,"title":{},"body":{"classes/Unit.html":{}}}],["defined",{"_index":195,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["defines",{"_index":1696,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["definition",{"_index":1597,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["delay",{"_index":1039,"title":{},"body":{"interfaces/CliptextConfig.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["delayed",{"_index":2289,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":2758,"title":{"dependencies.html":{}},"body":{"modules/DropdownModule.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependent",{"_index":46,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["depends",{"_index":1489,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"index.html":{}}}],["deprecated",{"_index":562,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["deps",{"_index":4941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["derived",{"_index":2273,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["described",{"_index":2532,"title":{},"body":{"classes/DomUtil.html":{},"contributing.html":{}}}],["describes",{"_index":155,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["descriptive",{"_index":4555,"title":{},"body":{"contributing.html":{}}}],["deselect",{"_index":2053,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["designed",{"_index":4124,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["desired",{"_index":1461,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["destroy",{"_index":1107,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/variables.html":{}}}],["destroyable",{"_index":4314,"title":{},"body":{"classes/SubscriptionTracker.html":{}}}],["destroyable.ngondestroy",{"_index":3518,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["destroyed",{"_index":3512,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"injectables/QuickSearchRegistrarService.html":{},"classes/SubscriptionTracker.html":{}}}],["detaching",{"_index":1843,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["detachrenderer",{"_index":1823,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["detail",{"_index":1349,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["detail_pane",{"_index":4923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detail_pane_button",{"_index":4928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detail_pane_header",{"_index":4924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detail_row",{"_index":4922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detail_row_button",{"_index":4925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detailcomponent",{"_index":1520,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["detailpane",{"_index":1356,"title":{"interfaces/DetailPane.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["detailpaneconfig",{"_index":1354,"title":{"interfaces/DetailPaneConfig.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["detailrowconfig",{"_index":1350,"title":{"interfaces/DetailRowConfig.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["details",{"_index":1831,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{},"interfaces/MockRecord.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["detectchanges",{"_index":547,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["detection",{"_index":546,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"classes/TestElement.html":{}}}],["detects",{"_index":781,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["determine",{"_index":4164,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["determined",{"_index":2889,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["determines",{"_index":4066,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["determining",{"_index":116,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["dev",{"_index":4819,"title":{},"body":{"index.html":{}}}],["developer",{"_index":3969,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"contributing.html":{}}}],["developers",{"_index":4807,"title":{},"body":{"index.html":{}}}],["developing",{"_index":1376,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["development",{"_index":4858,"title":{},"body":{"index.html":{}}}],["dg",{"_index":713,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"miscellaneous/variables.html":{}}}],["di",{"_index":2857,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dialog",{"_index":2041,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["dialogheader",{"_index":2058,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["dialogs",{"_index":3546,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["didn't",{"_index":2168,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["different",{"_index":1245,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/FilterBuilder.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"interfaces/SortedColumn.html":{},"classes/Unit.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{}}}],["differentiate",{"_index":1244,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["differentiating",{"_index":1699,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["differently",{"_index":4072,"title":{},"body":{"classes/Percent.html":{}}}],["digits",{"_index":1789,"title":{},"body":{"classes/CommonUtil.html":{},"injectables/UnitFormatter.html":{}}}],["dimensions",{"_index":1154,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["direct",{"_index":620,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["direction",{"_index":1150,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"components/FormInputComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["direction.down",{"_index":2727,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["direction.left",{"_index":2729,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["direction.right",{"_index":2733,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["direction.up",{"_index":2731,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["directions",{"_index":2549,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["directive",{"_index":599,"title":{"directives/ComponentRendererOutletDirective.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"directives/ShowClippedTextDirective.html":{}},"body":{"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/CliptextConfig.html":{},"directives/ComponentRendererOutletDirective.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/TestElement.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["directives",{"_index":745,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["directives/component",{"_index":4427,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":4835,"title":{},"body":{"index.html":{}}}],["directly",{"_index":3148,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["director",{"_index":1990,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"index.html":{}}}],["directory",{"_index":4838,"title":{},"body":{"index.html":{}}}],["dirty",{"_index":3760,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["disable",{"_index":1764,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["disabled",{"_index":98,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/BaseFormControl.html":{},"interfaces/CliptextConfig.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["disabled(disabled",{"_index":4260,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["disables",{"_index":1312,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["disjunct",{"_index":3037,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["dismissed",{"_index":2928,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["dismisses",{"_index":2940,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["dispatched",{"_index":3992,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["display",{"_index":34,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SelectOption.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/enumerations.html":{}}}],["displaycombounit",{"_index":3828,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["displayed",{"_index":30,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["displaying",{"_index":62,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityReporter.html":{},"classes/BaseFormControl.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["displayname",{"_index":990,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["displays",{"_index":1185,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/ErrorBannerComponent.html":{},"directives/ShowClippedTextDirective.html":{}}}],["displaytext",{"_index":292,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{}}}],["displayunit",{"_index":3829,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["displayvalue",{"_index":3818,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["dist",{"_index":4837,"title":{},"body":{"index.html":{}}}],["div",{"_index":4286,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["div2",{"_index":4288,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["dividing",{"_index":1686,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["docs",{"_index":3984,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"dependencies.html":{},"index.html":{}}}],["document",{"_index":2813,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["document.body.appendchild(link",{"_index":1918,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["document.body.appendchild(tip.container",{"_index":1101,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["document.body.removechild(link",{"_index":1920,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["document.body.removechild(tip.container",{"_index":1108,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["document.createelement('a",{"_index":1912,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["document.createelement('div",{"_index":1091,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["document.queryselector('.tooltip.vcd",{"_index":4282,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["document.queryselectorall('.tooltip.vcd",{"_index":4277,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["documentation",{"_index":4607,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documented",{"_index":4549,"title":{},"body":{"contributing.html":{}}}],["dom",{"_index":441,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["domrect",{"_index":2832,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["domutil",{"_index":2523,"title":{"classes/DomUtil.html":{}},"body":{"classes/DomUtil.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"coverage.html":{}}}],["don't",{"_index":615,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"directives/ShowClippedTextDirective.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["done",{"_index":558,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"injectables/QuickSearchService.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["dosearch",{"_index":4017,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["dot",{"_index":1748,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["double",{"_index":1946,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["doubled",{"_index":1947,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["down",{"_index":2629,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"miscellaneous/enumerations.html":{}}}],["download",{"_index":1883,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["downloadcsvfile",{"_index":1865,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["downloadcsvfile(csvfile",{"_index":1879,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["downloaddata(data",{"_index":2162,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["downloaded",{"_index":1885,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["downloading",{"_index":2089,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["downloadingmessage",{"_index":2090,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["downs",{"_index":2858,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dr",{"_index":1299,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["driver",{"_index":954,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["drop",{"_index":2792,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["dropdown",{"_index":154,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["dropdown'},{'name",{"_index":722,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["dropdown.component",{"_index":2619,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"modules/DropdownModule.html":{},"interfaces/MenuItem.html":{}}}],["dropdown.menu",{"_index":2641,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["dropdown/dropdown.module",{"_index":4383,"title":{},"body":{"modules/VcdActionMenuModule.html":{},"modules/VcdComponentsModule.html":{}}}],["dropdown[vcddropdownfocushandler",{"_index":2552,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["dropdown[vcddropdownfocushandler]'},{'name",{"_index":749,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["dropdown[vcddynamicdropdown",{"_index":2798,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdown[vcddynamicdropdown]'},{'name",{"_index":752,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["dropdown_focus_handler_provider",{"_index":2768,"title":{},"body":{"modules/DropdownModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["dropdown_item_selector",{"_index":4666,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dropdownbtn",{"_index":2814,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdowncomponent",{"_index":721,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dropdownfocushandlerdirective",{"_index":748,"title":{"directives/DropdownFocusHandlerDirective.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dropdownfocushandlerdirective.ngafterviewinit",{"_index":2716,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["dropdownfocushandlerservice",{"_index":2550,"title":{"injectables/DropdownFocusHandlerService.html":{}},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dropdownfocushandlerservicefactory",{"_index":4665,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dropdownmenu",{"_index":2809,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdownmenu(dropdown",{"_index":2861,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdownmenuelement",{"_index":2800,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdownmenuheight",{"_index":2886,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdownmenurect",{"_index":2801,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdownmenurect.bottom",{"_index":2887,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdownmenurect.height",{"_index":2896,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdownmenurect.top",{"_index":2888,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdownmenurect.width",{"_index":2899,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdownmodule",{"_index":2756,"title":{"modules/DropdownModule.html":{}},"body":{"modules/DropdownModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdComponentsModule.html":{},"modules.html":{},"overview.html":{}}}],["dropdowntriggerel",{"_index":2555,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["dropdowntriggerelement",{"_index":2802,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdowntriggerheight",{"_index":2883,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdowntriggerrect",{"_index":2803,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdowntriggerrect.bottom",{"_index":2884,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdowntriggerrect.left",{"_index":2898,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdowntriggerrect.top",{"_index":2885,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["due",{"_index":1402,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["duplicate",{"_index":3152,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/typealiases.html":{}}}],["duplication",{"_index":3142,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["during",{"_index":1536,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["dynamic",{"_index":1812,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"dependencies.html":{}}}],["dynamically",{"_index":1801,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["dynamicdropdownpositiondirective",{"_index":750,"title":{"directives/DynamicDropdownPositionDirective.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["e",{"_index":1173,"title":{},"body":{"interfaces/CliptextConfig.html":{},"classes/CommonUtil.html":{},"directives/DynamicDropdownPositionDirective.html":{},"directives/ShowClippedTextDirective.html":{}}}],["e.g",{"_index":2267,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["e2e",{"_index":4843,"title":{},"body":{"index.html":{}}}],["each",{"_index":548,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NumberUnit.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["earlier",{"_index":251,"title":{},"body":{"classes/ActionSearchProvider.html":{},"contributing.html":{}}}],["edit",{"_index":1024,"title":{},"body":{"interfaces/CanBeReadOnly.html":{}}}],["edited",{"_index":1876,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["editing",{"_index":1026,"title":{},"body":{"interfaces/CanBeReadOnly.html":{}}}],["el",{"_index":518,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"classes/DomUtil.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["el.addeventlistener('mouseenter",{"_index":1177,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["el.addeventlistener('mouseleave",{"_index":1178,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["el.getboundingclientrect",{"_index":1133,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["el.innerhtml",{"_index":1149,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["el.nativeelement.dispatchevent(new",{"_index":537,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["el.nativeelement.textcontent.includes(value",{"_index":499,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["el.nativeelement.textcontent.trim",{"_index":3201,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["el.nativeelement.value",{"_index":541,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["el.parent",{"_index":502,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["el.queryselector(classselector",{"_index":2538,"title":{},"body":{"classes/DomUtil.html":{}}}],["el.removeeventlistener('mouseenter",{"_index":1180,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["el.removeeventlistener('mouseleave",{"_index":1181,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["element",{"_index":463,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["element's",{"_index":1231,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/FormInputComponent.html":{},"directives/ShowClippedTextDirective.html":{}}}],["element.dispatchevent(event",{"_index":579,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["element.innerhtml",{"_index":3936,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["element.nativeelement.click",{"_index":532,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["element.parents('body').querydirective(filtertype",{"_index":3104,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["element.queryall(by.css(cssselector",{"_index":491,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["elementlocator",{"_index":955,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/VcdDatagridWidgetObject.html":{},"miscellaneous/typealiases.html":{}}}],["elementref",{"_index":1044,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{}}}],["elements",{"_index":458,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"directives/ShowClippedTextDirective.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["elements.map((element",{"_index":497,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["elementtoscroll",{"_index":2537,"title":{},"body":{"classes/DomUtil.html":{}}}],["elementtoscroll.scrollintoview",{"_index":2539,"title":{},"body":{"classes/DomUtil.html":{}}}],["ellipsis",{"_index":1213,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["elref",{"_index":2534,"title":{},"body":{"classes/DomUtil.html":{},"directives/DynamicDropdownPositionDirective.html":{}}}],["elref.nativeelement",{"_index":2536,"title":{},"body":{"classes/DomUtil.html":{}}}],["emission",{"_index":2261,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["emit",{"_index":3784,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["emitevent",{"_index":3786,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["emits",{"_index":1503,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["emitted",{"_index":1362,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["emitting",{"_index":2290,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"miscellaneous/variables.html":{}}}],["empty",{"_index":346,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["emptycolumnplaceholder",{"_index":1756,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["emptygridplaceholder",{"_index":1531,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["enabled",{"_index":527,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/TestElement.html":{}}}],["encoded",{"_index":1933,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["encodes",{"_index":1890,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["encodevalue",{"_index":4635,"title":{},"body":{"coverage.html":{}}}],["encodevalue(cell",{"_index":1929,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["encodevalue(cellvalue",{"_index":1940,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["encourage",{"_index":3149,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["end",{"_index":2505,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["enforce",{"_index":832,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["enough",{"_index":2793,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["ensure",{"_index":4037,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["ensurefirstsectionisloaded",{"_index":4033,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["enter",{"_index":3305,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["enterclicked",{"_index":3294,"title":{},"body":{"components/FormInputComponent.html":{}}}],["entered",{"_index":207,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["entire",{"_index":786,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["entities",{"_index":258,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["entity",{"_index":39,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["entrycomponents",{"_index":4392,"title":{},"body":{"modules/VcdActivityReporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["enum",{"_index":27,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"components/FormCheckboxComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":4788,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":4944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eq",{"_index":3044,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":2487,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"classes/FilterBuilder.html":{}}}],["equals",{"_index":3805,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["equalto",{"_index":2982,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["equalto(value",{"_index":3019,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["equivalent",{"_index":3640,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["error",{"_index":358,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"modules/VcdErrorBannerModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["error('clarity",{"_index":2877,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["error('could",{"_index":4311,"title":{},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["error('query",{"_index":2312,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["error('the",{"_index":2486,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["error('unsubscribing",{"_index":3526,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["error(`a",{"_index":2377,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["error(`could",{"_index":647,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["error(`did",{"_index":3229,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["error(`expected",{"_index":3230,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["error/error",{"_index":4393,"title":{},"body":{"modules/VcdActivityReporterModule.html":{}}}],["errorbannercomponent",{"_index":723,"title":{"components/ErrorBannerComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdErrorBannerModule.html":{},"coverage.html":{},"overview.html":{}}}],["errorbannerwidgetobject",{"_index":2954,"title":{"classes/ErrorBannerWidgetObject.html":{}},"body":{"classes/ErrorBannerWidgetObject.html":{},"coverage.html":{}}}],["errorkeys",{"_index":857,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["errorlabels",{"_index":852,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["errormessage",{"_index":2921,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["errormessage(val",{"_index":2950,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["errormessagechange",{"_index":2929,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["errorobjectvalue",{"_index":3844,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["errors",{"_index":376,"title":{},"body":{"classes/ActivityReporter.html":{},"classes/BaseFormControl.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/SubscriptionTracker.html":{}}}],["errortext",{"_index":410,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["escape",{"_index":1953,"title":{},"body":{"injectables/CsvExporterService.html":{},"injectables/DropdownFocusHandlerService.html":{},"components/FormInputComponent.html":{}}}],["escapeclicked",{"_index":3295,"title":{},"body":{"components/FormInputComponent.html":{}}}],["escapepressed",{"_index":2704,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["etc",{"_index":570,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["evaluator",{"_index":4755,"title":{},"body":{"dependencies.html":{}}}],["even",{"_index":2644,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["event",{"_index":554,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["event('blur",{"_index":538,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["event('input",{"_index":3188,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["event.preventdefault",{"_index":2741,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["event.stoppropagation",{"_index":2656,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{}}}],["eventemitter",{"_index":1254,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["eventemitter(false",{"_index":3326,"title":{},"body":{"components/FormInputComponent.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["eventhandler",{"_index":1172,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/typealiases.html":{}}}],["eventproperties",{"_index":556,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["eventproperties[key",{"_index":578,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["events",{"_index":394,"title":{},"body":{"classes/ActivityReporter.html":{},"components/ErrorBannerComponent.html":{}}}],["eventsource",{"_index":3958,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["eventtype",{"_index":555,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["everywhere",{"_index":3965,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["ex",{"_index":3673,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["examine",{"_index":4041,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["example",{"_index":233,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/PowerTwoUnit.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/WidgetFinder.html":{}}}],["examples",{"_index":2315,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["excel",{"_index":1893,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["except",{"_index":2715,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["excluding",{"_index":1618,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["execute",{"_index":4841,"title":{},"body":{"index.html":{}}}],["executed",{"_index":104,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["executing",{"_index":2625,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/MenuItem.html":{}}}],["exist",{"_index":2379,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["existing",{"_index":1613,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"contributing.html":{}}}],["expand",{"_index":1525,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["expandable",{"_index":4926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expanded",{"_index":1522,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["expect(el.enabled()).tobetruthy",{"_index":519,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["experience",{"_index":2823,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["explain",{"_index":4553,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":26,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["export.csv",{"_index":2057,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exportalltext",{"_index":2064,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exportcolumn",{"_index":2020,"title":{"interfaces/ExportColumn.html":{}},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"coverage.html":{}}}],["exportdata",{"_index":2013,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exportdata(records",{"_index":2152,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exported",{"_index":1922,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exporter",{"_index":2044,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/ExportColumn.html":{}}}],["exporter'},{'name",{"_index":709,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["exporter.component",{"_index":4416,"title":{},"body":{"modules/VcdDataExporterModule.html":{}}}],["exporter.component.html",{"_index":2045,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exporter.component.scss",{"_index":2046,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exporter.component.ts",{"_index":2011,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["exporter.module",{"_index":4408,"title":{},"body":{"modules/VcdComponentsModule.html":{}}}],["exporter.module.ts",{"_index":4415,"title":{},"body":{"modules/VcdDataExporterModule.html":{}}}],["exporter.service",{"_index":2026,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exporter.service.ts",{"_index":1863,"title":{},"body":{"injectables/CsvExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exporter.service.ts:21",{"_index":1869,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["exporter.service.ts:30",{"_index":1887,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["exporter.service.ts:39",{"_index":1881,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["exporter.title",{"_index":2060,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exporter.wo.ts",{"_index":2184,"title":{},"body":{"classes/DataExporterWidgetObject.html":{},"coverage.html":{}}}],["exporter.wo.ts:12",{"_index":2220,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:17",{"_index":2199,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:22",{"_index":2202,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:27",{"_index":2197,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:32",{"_index":2209,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:37",{"_index":2205,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:42",{"_index":2219,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:47",{"_index":2216,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:52",{"_index":2213,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:57",{"_index":2211,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:63",{"_index":2226,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter/csv",{"_index":1862,"title":{},"body":{"injectables/CsvExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exporter/data",{"_index":2010,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/ExportColumn.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["exports",{"_index":2762,"title":{},"body":{"modules/DropdownModule.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}],["exportstage",{"_index":2113,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exporttext",{"_index":2068,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["expose",{"_index":3146,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["exposed",{"_index":1327,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["expresses",{"_index":371,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["expression",{"_index":2995,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["expressionchangedafterithasbeencheckederror",{"_index":1721,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["expressions",{"_index":2969,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["extend",{"_index":938,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["extended",{"_index":2233,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["extends",{"_index":168,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["extension",{"_index":134,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["extra",{"_index":1698,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["extract",{"_index":3716,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["extracting",{"_index":3614,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["extremely",{"_index":4848,"title":{},"body":{"index.html":{}}}],["fa",{"_index":4877,"title":{},"body":{"index.html":{}}}],["fails",{"_index":4582,"title":{},"body":{"contributing.html":{}}}],["failure",{"_index":356,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["false",{"_index":101,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BaseFormControl.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"miscellaneous/variables.html":{}}}],["falsy",{"_index":2477,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["fast",{"_index":4567,"title":{},"body":{"contributing.html":{}}}],["fb",{"_index":2470,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"classes/FilterBuilder.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["fb.result",{"_index":3048,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["feature",{"_index":4576,"title":{},"body":{"contributing.html":{}}}],["featurebe",{"_index":4594,"title":{},"body":{"contributing.html":{}}}],["featured",{"_index":120,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["featuredcount",{"_index":142,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["featureif",{"_index":4591,"title":{},"body":{"contributing.html":{}}}],["features",{"_index":1360,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["featureupdating",{"_index":4581,"title":{},"body":{"contributing.html":{}}}],["female",{"_index":3610,"title":{},"body":{"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":2012,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"contributing.html":{}}}],["fetched",{"_index":237,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["fetching",{"_index":1395,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["field",{"_index":867,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["field:after",{"_index":3353,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["fieldcolumnrendererspec",{"_index":1248,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["fieldgroup",{"_index":4462,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["fieldname",{"_index":1249,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["fieldnamemap",{"_index":2111,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["fieldrenderer",{"_index":1250,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["fields",{"_index":1874,"title":{},"body":{"injectables/CsvExporterService.html":{},"components/FormInputComponent.html":{}}}],["fieldtype",{"_index":3415,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["filed",{"_index":1711,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["filename",{"_index":1880,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["files",{"_index":3160,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"index.html":{}}}],["fills",{"_index":1463,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["filter",{"_index":1279,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["filter'},{'name",{"_index":715,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["filter((action",{"_index":289,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["filter(formcontrol",{"_index":2383,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["filter.component",{"_index":4429,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["filter.component.html",{"_index":2325,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["filter.component.scss",{"_index":2394,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["filter.component.ts",{"_index":2318,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["filter.component.ts:101",{"_index":2329,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{}}}],["filter.component.ts:102",{"_index":2474,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{}}}],["filter.component.ts:105",{"_index":2338,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:115",{"_index":2330,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{}}}],["filter.component.ts:120",{"_index":2406,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:122",{"_index":2331,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{}}}],["filter.component.ts:128",{"_index":2404,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:129",{"_index":2332,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{}}}],["filter.component.ts:132",{"_index":2407,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:32",{"_index":2503,"title":{},"body":{"components/DatagridStringFilterComponent.html":{}}}],["filter.component.ts:36",{"_index":2496,"title":{},"body":{"components/DatagridStringFilterComponent.html":{}}}],["filter.component.ts:40",{"_index":2419,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:42",{"_index":2417,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["filter.component.ts:43",{"_index":2421,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:48",{"_index":2414,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["filter.component.ts:49",{"_index":2403,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:55",{"_index":2423,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:57",{"_index":2504,"title":{},"body":{"components/DatagridStringFilterComponent.html":{}}}],["filter.component.ts:58",{"_index":2476,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{}}}],["filter.component.ts:62",{"_index":2412,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:63",{"_index":2402,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{}}}],["filter.component.ts:64",{"_index":2500,"title":{},"body":{"components/DatagridStringFilterComponent.html":{}}}],["filter.component.ts:67",{"_index":2471,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{}}}],["filter.component.ts:69",{"_index":2326,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{}}}],["filter.component.ts:70",{"_index":2426,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:73",{"_index":2405,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:76",{"_index":2472,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["filter.component.ts:77",{"_index":2349,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{}}}],["filter.component.ts:78",{"_index":2401,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:79",{"_index":2328,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{}}}],["filter.component.ts:80",{"_index":2475,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{}}}],["filter.component.ts:84",{"_index":2409,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:87",{"_index":2334,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{}}}],["filter.component.ts:89",{"_index":2411,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{}}}],["filter.component.ts:98",{"_index":2473,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{}}}],["filter.getvalue",{"_index":1640,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["filter.ts",{"_index":2232,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter.ts:107",{"_index":2271,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:112",{"_index":2258,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:117",{"_index":2277,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:122",{"_index":2262,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:127",{"_index":2265,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:132",{"_index":2268,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:137",{"_index":2256,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:147",{"_index":2284,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:59",{"_index":2255,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:60",{"_index":2248,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:71",{"_index":2250,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:72",{"_index":2279,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:80",{"_index":2281,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:87",{"_index":2253,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:89",{"_index":2269,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:99",{"_index":2260,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter_toggle",{"_index":4938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filterable/sortable",{"_index":1743,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["filterbuilder",{"_index":2357,"title":{"classes/FilterBuilder.html":{}},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"classes/FilterBuilder.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filterbuilder().any(...selectedfilters).getstring",{"_index":2387,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["filterbuilder().is('').and(...builders",{"_index":3079,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["filterbuilder().is(this.queryfield",{"_index":2451,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["filterbuilder().is(this.queryfield).equalto(selectedoption",{"_index":2386,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["filterbuilder().is(this.result).condition(operators.ge",{"_index":3077,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["filterbuilder().is(this.result).condition(operators.le",{"_index":3078,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["filterbuilder(this",{"_index":3047,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["filterbuilder.betweennumbers([from",{"_index":2456,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["filterbuilder.equalto(value).getstring",{"_index":2491,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["filterbuilder.greaterthan(from).getstring",{"_index":2454,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["filterbuilder.lessthan(to).getstring",{"_index":2455,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["filtercolumn",{"_index":3087,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["filtercomponentrendererspec",{"_index":2319,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"coverage.html":{}}}],["filtercomponentrendererspec(componentrendererspec",{"_index":2317,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["filtercomponentrendererspec({type",{"_index":2314,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["filterconfig",{"_index":1729,"title":{"interfaces/FilterConfig.html":{}},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"coverage.html":{}}}],["filtercontainer",{"_index":2249,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["filtercontainer.setfilter(this",{"_index":2295,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["filtered",{"_index":2293,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["filtering",{"_index":1341,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["filtering/sorting/paging",{"_index":1537,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["filterrendererspec",{"_index":1730,"title":{"interfaces/FilterRendererSpec.html":{}},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"coverage.html":{}}}],["filters",{"_index":1370,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filters/datagrid",{"_index":1278,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"modules/VcdDatagridModule.html":{}}}],["filterselect",{"_index":2482,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["filtertesthostcomponent",{"_index":725,"title":{"components/FilterTestHostComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"coverage.html":{}}}],["filtertesthostcomponent.filtercolumn",{"_index":3093,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["filtertext",{"_index":2511,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["filtertype",{"_index":3092,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["find",{"_index":438,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["find((item",{"_index":3928,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["find(params",{"_index":4502,"title":{},"body":{"classes/WidgetFinder.html":{}}}],["find(widgetconstructor",{"_index":626,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["find>(params",{"_index":3224,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["findablewidget",{"_index":486,"title":{"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{}},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{}}}],["findbestunit",{"_index":3645,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["findbestunit(value",{"_index":3656,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["findclrdatagrid",{"_index":4437,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["findcolumnindex(col",{"_index":1573,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["findcypresswidget",{"_index":4720,"title":{},"body":{"coverage.html":{}}}],["findelement",{"_index":761,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["findelement(selector",{"_index":791,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["findelements",{"_index":762,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetObject.html":{}}}],["findelements(selector",{"_index":794,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["finder",{"_index":484,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["finder.detectchanges",{"_index":3128,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["finder.find(clrdatagridwidgetobject",{"_index":3121,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["finder.hostcomponent.setfilter(filtertype",{"_index":3122,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["finder.ts",{"_index":608,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/CypressWidgetObjectFinder.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["finder.ts:21",{"_index":614,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["finder.ts:26",{"_index":612,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["finder.ts:32",{"_index":2003,"title":{},"body":{"classes/CypressWidgetObjectFinder.html":{}}}],["finder.ts:47",{"_index":628,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["finder.ts:72",{"_index":624,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["finding",{"_index":3708,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["findparams",{"_index":3129,"title":{"interfaces/FindParams.html":{}},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{}}}],["findparams).woconstructor",{"_index":3232,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["findparent",{"_index":443,"title":{},"body":{"classes/AngularLocatorDriver.html":{}}}],["findparent(cssselector",{"_index":453,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["findparents",{"_index":4318,"title":{},"body":{"classes/TestElement.html":{}}}],["findparents(debugel",{"_index":592,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["findrow.item",{"_index":1423,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["finds",{"_index":245,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["findwidget",{"_index":444,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{}}}],["findwidget(widget",{"_index":465,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/LocatorDriver.html":{}}}],["findwidgets",{"_index":3212,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["findwidgets(params",{"_index":4504,"title":{},"body":{"classes/WidgetFinder.html":{}}}],["finished",{"_index":2019,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["fiql",{"_index":1367,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["fired",{"_index":103,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"miscellaneous/variables.html":{}}}],["fires",{"_index":2100,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["firetiptransitionendfortests",{"_index":4692,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["first",{"_index":35,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"index.html":{}}}],["first.buildpartial",{"_index":3060,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["first.clear",{"_index":3066,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["firstitem",{"_index":1373,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["fix",{"_index":1414,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["fixes",{"_index":4561,"title":{},"body":{"contributing.html":{}}}],["fixture",{"_index":523,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["fixture's",{"_index":3133,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["fixture.componentinstance",{"_index":771,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["fixture.debugelement",{"_index":3173,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["fixup",{"_index":4592,"title":{},"body":{"contributing.html":{}}}],["flag",{"_index":4019,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["flat",{"_index":4047,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["flatactionlist",{"_index":299,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["flatactionlist.concat(this.getflatlistofavailableactions(currentaction.children",{"_index":300,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["flatactionlist.push",{"_index":305,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["flatlistofavailableactions",{"_index":175,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["flex",{"_index":3361,"title":{},"body":{"components/FormInputComponent.html":{},"components/LoadingIndicatorComponent.html":{}}}],["float",{"_index":1794,"title":{},"body":{"classes/CommonUtil.html":{}}}],["floating",{"_index":1792,"title":{},"body":{"classes/CommonUtil.html":{}}}],["flow",{"_index":4531,"title":{},"body":{"contributing.html":{}}}],["focus",{"_index":2544,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"interfaces/MenuItem.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["focusable",{"_index":2608,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["focused",{"_index":2701,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"miscellaneous/variables.html":{}}}],["focushandlerservice",{"_index":2572,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["folder",{"_index":4849,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1415,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"contributing.html":{}}}],["followed",{"_index":4817,"title":{},"body":{"index.html":{}}}],["following",{"_index":1211,"title":{},"body":{"interfaces/CliptextConfig.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"directives/ShowClippedTextDirective.html":{},"contributing.html":{},"index.html":{}}}],["font",{"_index":1006,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{}}}],["footer",{"_index":1332,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["footer').offsetheight",{"_index":1678,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["footerheight",{"_index":1676,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["force",{"_index":4579,"title":{},"body":{"contributing.html":{}}}],["forcedropdownopen",{"_index":2099,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["fork",{"_index":4543,"title":{},"body":{"contributing.html":{}}}],["form",{"_index":727,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["form.scss",{"_index":3325,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["form.scss,./form",{"_index":3285,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["form/form.module",{"_index":4410,"title":{},"body":{"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdFormlyModule.html":{}}}],["form/number",{"_index":3464,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["form/validators",{"_index":3683,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["format",{"_index":2031,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"injectables/UnitFormatter.html":{},"contributing.html":{}}}],["format(1000",{"_index":4371,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["format(value",{"_index":4368,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["formats",{"_index":4075,"title":{},"body":{"classes/Percent.html":{}}}],["formatted",{"_index":1368,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"injectables/UnitFormatter.html":{}}}],["formatter",{"_index":3685,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/VcdFormModule.html":{}}}],["formatter.ts",{"_index":4356,"title":{},"body":{"injectables/UnitFormatter.html":{},"coverage.html":{}}}],["formatter.ts:15",{"_index":4359,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["formatter.ts:29",{"_index":4370,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["formatter.ts:46",{"_index":4361,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["formatting",{"_index":2492,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"contributing.html":{}}}],["formbuilder",{"_index":2428,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["formcheckboxcomponent",{"_index":726,"title":{"components/FormCheckboxComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"modules/PipesModule.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdFormModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["formcontrol",{"_index":855,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/ExportColumn.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["formcontrol(false",{"_index":2373,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["formcontrol(null",{"_index":2441,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["formcontrol(true",{"_index":2116,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["formcontrol.value",{"_index":3279,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["formcontrol.value:min.tostring():max",{"_index":3352,"title":{},"body":{"components/FormInputComponent.html":{}}}],["formcontrolname",{"_index":863,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["formcontrolnamedirective",{"_index":843,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["formfields",{"_index":2430,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"miscellaneous/enumerations.html":{}}}],["formfields.from",{"_index":2440,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["formfields.to",{"_index":2442,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["formgroup",{"_index":2024,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["formgroup(controls",{"_index":2148,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["forminputcomponent",{"_index":729,"title":{"components/FormInputComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/PipesModule.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdFormModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["forminputcomponent.enterclicked",{"_index":3418,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["forminputcomponent.errorlabels",{"_index":3435,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["forminputcomponent.escapeclicked",{"_index":3420,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["forminputcomponent.hintposition",{"_index":3432,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["forminputcomponent.max",{"_index":3426,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["forminputcomponent.min",{"_index":3423,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["forminputcomponent.type",{"_index":3429,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["formly",{"_index":732,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{}}}],["formly.config",{"_index":4491,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["formly.config.ts",{"_index":4459,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["formly.module.ts",{"_index":4482,"title":{},"body":{"modules/VcdFormlyModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formly.module.ts:37",{"_index":4485,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["formly/core",{"_index":3437,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"dependencies.html":{}}}],["formly/core/select",{"_index":4490,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["formly_config",{"_index":4488,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["formlyfieldconfig",{"_index":4461,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["formlyform.fields",{"_index":4460,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["formlyinputcomponent",{"_index":731,"title":{"components/FormlyInputComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["formlymodule",{"_index":4487,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["formlymodule.forchild(vcd_formly_config",{"_index":4493,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["formlynumberwithunitinputcomponent",{"_index":733,"title":{"components/FormlyNumberWithUnitInputComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["formlyselectcomponent",{"_index":735,"title":{"components/FormlySelectComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["formlyselectmodule",{"_index":4489,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["formlytemplateoptions",{"_index":4467,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["formselectcomponent",{"_index":737,"title":{"components/FormSelectComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/PipesModule.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdFormModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["formsmodule",{"_index":4118,"title":{},"body":{"modules/QuickSearchModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdFormModule.html":{}}}],["formvalidators",{"_index":3386,"title":{"classes/FormValidators.html":{}},"body":{"classes/FormValidators.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"coverage.html":{}}}],["formvalidators.createnullsafevalidator((control",{"_index":3409,"title":{},"body":{"classes/FormValidators.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["forroot",{"_index":4483,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["forroot(configoption",{"_index":4484,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["forward",{"_index":4568,"title":{},"body":{"contributing.html":{}}}],["found",{"_index":642,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"injectables/QuickSearchService.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["four",{"_index":4801,"title":{},"body":{"index.html":{}}}],["friendly",{"_index":2074,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/ExportColumn.html":{}}}],["friendlyfieldscontrol",{"_index":2131,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["friendlynames",{"_index":2034,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"miscellaneous/enumerations.html":{}}}],["friendlynamescheckboxlabel",{"_index":2076,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["friendlynameshint",{"_index":2081,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["friendlynamesinfomessage",{"_index":2078,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["frmctrl",{"_index":2378,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["frominput",{"_index":2397,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["full",{"_index":1186,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"contributing.html":{}}}],["function",{"_index":52,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functionality",{"_index":250,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["functionrenderer",{"_index":1251,"title":{"interfaces/FunctionRenderer.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["functionrendererpipe",{"_index":3479,"title":{"pipes/FunctionRendererPipe.html":{}},"body":{"pipes/FunctionRendererPipe.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":3111,"title":{},"body":{"components/FilterTestHostComponent.html":{},"pipes/FunctionRendererPipe.html":{}}}],["functions/getters",{"_index":972,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"miscellaneous/typealiases.html":{}}}],["further",{"_index":4809,"title":{},"body":{"index.html":{}}}],["furthur",{"_index":2906,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["gave",{"_index":362,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["gb",{"_index":4367,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["ge",{"_index":3041,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["gender",{"_index":3603,"title":{},"body":{"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["generate",{"_index":328,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/IdGenerator.html":{},"interfaces/ObjectAndResponse.html":{},"contributing.html":{},"index.html":{}}}],["generated",{"_index":866,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"index.html":{}}}],["generates",{"_index":354,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/IdGenerator.html":{},"interfaces/ObjectAndResponse.html":{},"index.html":{}}}],["generator",{"_index":914,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/CypressWidgetObjectFinder.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["generator.ts",{"_index":3532,"title":{},"body":{"classes/IdGenerator.html":{},"coverage.html":{}}}],["generator.ts:10",{"_index":3537,"title":{},"body":{"classes/IdGenerator.html":{}}}],["generator.ts:15",{"_index":3538,"title":{},"body":{"classes/IdGenerator.html":{}}}],["generator.ts:17",{"_index":3535,"title":{},"body":{"classes/IdGenerator.html":{}}}],["generator/id",{"_index":913,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/CypressWidgetObjectFinder.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/FilterTestHostComponent.html":{},"classes/IdGenerator.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"coverage.html":{}}}],["generic",{"_index":1967,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["generics",{"_index":1778,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["get(cssselector",{"_index":470,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{}}}],["getactions",{"_index":182,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["getactions(searchcriteria",{"_index":221,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["getallunittypes",{"_index":3856,"title":{},"body":{"classes/NumberUnit.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["getariarole",{"_index":2958,"title":{},"body":{"classes/ErrorBannerWidgetObject.html":{}}}],["getbase",{"_index":1971,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["getbasevalue",{"_index":3648,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["getbasevalue(value",{"_index":3664,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["getbytext",{"_index":445,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/LocatorDriver.html":{}}}],["getbytext(cssselector",{"_index":472,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{}}}],["getcancelbutton",{"_index":2186,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["getcolumnbubbles",{"_index":2187,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["getcolumncheckbox",{"_index":2195,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["getcolumncheckbox(index",{"_index":2225,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["getcolumncheckboxes",{"_index":2188,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["getcolumndropdown",{"_index":2189,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["getcolumnsconfig(columns",{"_index":1702,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["getcomponentinstance",{"_index":588,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["getconfig",{"_index":2280,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["getcontextualactions",{"_index":1559,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["getdebouncetimems",{"_index":2242,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["getdeepcopyofactionitems",{"_index":4612,"title":{},"body":{"coverage.html":{}}}],["getdefaultactiondisplayconfig",{"_index":4614,"title":{},"body":{"coverage.html":{}}}],["getdetailpanerenderspec(record",{"_index":1591,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["getdetailrowrenderspec",{"_index":1584,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["getdisplaynameforcolumn(col",{"_index":2178,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["getdisplaynameforfield(fieldname",{"_index":2174,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["getdisplayvalue",{"_index":3899,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getdropdownitemelement",{"_index":2561,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["getdropdownitemelement(item",{"_index":2576,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["geterrorkeys",{"_index":907,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["geterrorlabels",{"_index":3433,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{}}}],["geterrortext",{"_index":817,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["geterrortranslationparams(errorobjectvalue",{"_index":3843,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["getexportbutton",{"_index":2190,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["getfilter",{"_index":4709,"title":{},"body":{"coverage.html":{}}}],["getfilter(element",{"_index":3103,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["getfilter(grid.clrdatagrid",{"_index":3125,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["getflatlistofavailableactions",{"_index":183,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["getflatlistofavailableactions(actions",{"_index":226,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["getformatteddatevalue",{"_index":4675,"title":{},"body":{"coverage.html":{}}}],["getformatteddatevalue(value",{"_index":3335,"title":{},"body":{"components/FormInputComponent.html":{}}}],["getformcontrol",{"_index":902,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getheader",{"_index":4436,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["gethintposition",{"_index":3430,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{}}}],["getinjector",{"_index":590,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["getischeckbox",{"_index":3272,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["getistooltipvisible",{"_index":4240,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["getisunitdropdowndisplayed",{"_index":3912,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getloadingtext",{"_index":821,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["getmax",{"_index":3424,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{}}}],["getmin",{"_index":3421,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{}}}],["getmultiplier",{"_index":3649,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["getnativeelement",{"_index":3879,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getnativeelement(cssselector",{"_index":3892,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getnestedmenutrigger",{"_index":2615,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["getnodetext",{"_index":763,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetObject.html":{}}}],["getnodetext(el",{"_index":797,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["getokbutton",{"_index":943,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["getokbuttoncontainer",{"_index":946,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["getoutputvalue",{"_index":3650,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["getoutputvalue(value",{"_index":3667,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["getpagesize",{"_index":1660,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["getpagesizeoptions",{"_index":1663,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["getpaginationtranslation(paginationdata",{"_index":1655,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["getpositionleft",{"_index":2841,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["getpositiontop",{"_index":2839,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["getprogress",{"_index":2191,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["getqueryfield",{"_index":2283,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["getreadonlytext",{"_index":3901,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getregisteredproviders",{"_index":4150,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["getrootmenutrigger",{"_index":2613,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["getrunning",{"_index":815,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["gets",{"_index":117,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/DataExporterWidgetObject.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"contributing.html":{}}}],["getselectedoption",{"_index":3373,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["getselectedunit",{"_index":3799,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["getselectedunitdisplayvalue",{"_index":3910,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getselectoptions",{"_index":3472,"title":{},"body":{"components/FormlySelectComponent.html":{}}}],["getshowerrors",{"_index":905,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["getshowunlimitedoption",{"_index":3458,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["getsingleunitdisplaytext",{"_index":3914,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getsize",{"_index":3576,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["getspinner",{"_index":4304,"title":{},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["getstring",{"_index":2983,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["getstylepropertyvalue",{"_index":4319,"title":{},"body":{"classes/TestElement.html":{}}}],["getstylepropertyvalue(key",{"_index":585,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["getsucesstext",{"_index":819,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["getter",{"_index":3539,"title":{},"body":{"classes/IdGenerator.html":{}}}],["gettext",{"_index":764,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["gettext(cssselector",{"_index":799,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["gettexts",{"_index":765,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetObject.html":{}}}],["gettexts(cssselector",{"_index":803,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["getting",{"_index":2263,"title":{"contributing.html":{},"index.html":{}},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MenuItem.html":{}}}],["gettogglefriendlynames",{"_index":2192,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["gettogglesanitize",{"_index":2193,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["gettoggleselectall",{"_index":2194,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["gettooltip",{"_index":4252,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["gettooltipcontent",{"_index":4250,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["gettooltipcount",{"_index":4246,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["gettooltipposition",{"_index":4244,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["gettooltipsize",{"_index":4238,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["gettooltiptext",{"_index":4242,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["gettooltipvisibility",{"_index":4248,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["gettype",{"_index":3427,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["getunit",{"_index":2425,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["getunitformcontrol",{"_index":3908,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getunitmultiplier",{"_index":3857,"title":{},"body":{"classes/NumberUnit.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["getunitname",{"_index":3651,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["getunitnametranslationkey",{"_index":3646,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["getunitoptions",{"_index":2422,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["getunlimitedformcontrol",{"_index":3904,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getunlimitedvalue",{"_index":3461,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["getusernamefield",{"_index":941,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["getvalue",{"_index":2243,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["getvalueformcontrol",{"_index":3906,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getvaluewithunittranslationkey",{"_index":3647,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["getvcddatagrid",{"_index":4443,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["getwrapcharacter(inputposition",{"_index":2519,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["getwrapcharacter(position",{"_index":2516,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["gfm",{"_index":4601,"title":{},"body":{"contributing.html":{}}}],["ghpages",{"_index":4758,"title":{},"body":{"dependencies.html":{}}}],["ghz",{"_index":3675,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["git",{"_index":4574,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["git@github.com:vmware/vmware",{"_index":4882,"title":{},"body":{"index.html":{}}}],["github",{"_index":4596,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["given",{"_index":364,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["gives",{"_index":524,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":29,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["go",{"_index":1358,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["goes",{"_index":1357,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/typealiases.html":{}}}],["going",{"_index":1760,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["good",{"_index":2822,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["greater",{"_index":3010,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["greaterthan",{"_index":2984,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["greaterthan(value",{"_index":3023,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["greaterthanorequalto",{"_index":2985,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["greaterthanorequalto(value",{"_index":3025,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["grid",{"_index":1307,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/VcdDatagridWidgetObject.html":{},"miscellaneous/enumerations.html":{}}}],["grid's",{"_index":3114,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["grid.clrdatagrid.fixture.detectchanges",{"_index":3123,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["grid.getfiltertoggle().click",{"_index":3124,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["grid.parentnode.clientheight",{"_index":1672,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["grid.queryselector('.datagrid",{"_index":1674,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["grid.queryselector('.vcd",{"_index":1683,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["grid.queryselector('clr",{"_index":1677,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["gridcolumn",{"_index":989,"title":{"interfaces/GridColumn.html":{}},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["gridcolumn.filter",{"_index":2235,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["gridcolumn.filterrendererspec",{"_index":2316,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["gridcolumn.renderer",{"_index":1246,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["gridcolumnhideable",{"_index":1282,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["gridcolumnhideable.never",{"_index":1650,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["griddata",{"_index":3088,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["griddata(result",{"_index":1396,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["griddatafetchresult",{"_index":1315,"title":{"interfaces/GridDataFetchResult.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["gridheight",{"_index":1671,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["gridrefresh",{"_index":1539,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["grids",{"_index":1759,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["gridselectiontype",{"_index":1308,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["gridselectiontype.multi",{"_index":1481,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["gridselectiontype.none",{"_index":1527,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["gridselectiontype.single",{"_index":1479,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["gridstate",{"_index":1366,"title":{"interfaces/GridState.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["gridstatechanged(state",{"_index":1632,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["group",{"_index":3358,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["group.hide",{"_index":3363,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["grouped",{"_index":121,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["groups",{"_index":130,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["grow",{"_index":3362,"title":{},"body":{"components/FormInputComponent.html":{}}}],["gt",{"_index":3040,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["guidelines",{"_index":4887,"title":{},"body":{"index.html":{}}}],["h",{"_index":618,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["handle",{"_index":3314,"title":{},"body":{"components/FormInputComponent.html":{}}}],["handled",{"_index":4071,"title":{},"body":{"classes/Percent.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{}}}],["handleitem(item",{"_index":4057,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["handler",{"_index":67,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["handler.directive",{"_index":2725,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{}}}],["handler.directive.ts",{"_index":2545,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["handler.directive.ts:118",{"_index":2580,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:129",{"_index":2600,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:137",{"_index":2598,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:143",{"_index":2599,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:150",{"_index":2592,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:164",{"_index":2577,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:171",{"_index":2578,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:193",{"_index":2602,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:197",{"_index":2614,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:204",{"_index":2616,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:212",{"_index":2579,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:66",{"_index":2574,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:78",{"_index":2607,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:82",{"_index":2609,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:83",{"_index":2604,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:84",{"_index":2603,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:85",{"_index":2606,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:86",{"_index":2611,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:87",{"_index":2610,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:88",{"_index":2612,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:94",{"_index":2593,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.service",{"_index":2618,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["handler.service.ts",{"_index":2697,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:106",{"_index":2710,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["handler.service.ts:16",{"_index":2724,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["handler.service.ts:17",{"_index":2709,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["handler.service.ts:21",{"_index":2723,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["handler.service.ts:28",{"_index":2720,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["handler.service.ts:51",{"_index":2722,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["handler.service.ts:72",{"_index":2714,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["handlerdata",{"_index":56,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["handlers",{"_index":2586,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["happen",{"_index":3501,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["happens",{"_index":3993,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["hasdgstringfilter",{"_index":3116,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["hasfinder",{"_index":3237,"title":{"interfaces/HasFinder.html":{}},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{}}}],["haspartialresult(searchsection",{"_index":4067,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["haspotentialinjection",{"_index":1866,"title":{},"body":{"injectables/CsvExporterService.html":{},"coverage.html":{}}}],["haspotentialinjection(row",{"_index":1923,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["haspotentialinjection(rows",{"_index":1886,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["hasstaticactions",{"_index":1433,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["head",{"_index":4875,"title":{},"body":{"index.html":{}}}],["header",{"_index":1294,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/SortedColumn.html":{},"classes/VcdDatagridWidgetObject.html":{},"miscellaneous/variables.html":{}}}],["header').offsetheight",{"_index":1675,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["header.offsetheight",{"_index":1684,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["headerheight",{"_index":1673,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["heading",{"_index":1737,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["headless",{"_index":4943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["height",{"_index":1139,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["height(height",{"_index":1464,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["heightcssvalue",{"_index":1466,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["help",{"_index":1892,"title":{},"body":{"injectables/CsvExporterService.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["helper.ts",{"_index":4199,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"coverage.html":{}}}],["helper.ts:102",{"_index":4249,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:106",{"_index":4224,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:110",{"_index":4251,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:114",{"_index":4253,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:126",{"_index":4290,"title":{},"body":{"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["helper.ts:127",{"_index":4292,"title":{},"body":{"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["helper.ts:128",{"_index":4293,"title":{},"body":{"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["helper.ts:13",{"_index":4216,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:130",{"_index":4294,"title":{},"body":{"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["helper.ts:131",{"_index":4295,"title":{},"body":{"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["helper.ts:132",{"_index":4291,"title":{},"body":{"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["helper.ts:16",{"_index":4217,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:18",{"_index":4219,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:20",{"_index":4221,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:22",{"_index":4223,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:24",{"_index":4231,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:28",{"_index":4233,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:44",{"_index":4235,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:49",{"_index":4237,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:54",{"_index":4239,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:58",{"_index":4227,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:62",{"_index":4228,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:66",{"_index":4229,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:70",{"_index":4225,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:74",{"_index":4226,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:78",{"_index":4241,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:82",{"_index":4243,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:86",{"_index":4245,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:98",{"_index":4247,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helps",{"_index":1511,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["hence",{"_index":3980,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["here",{"_index":1340,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["here;(created=lt=datetime,uptime=gt=3600000",{"_index":2978,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["hertz",{"_index":4725,"title":{},"body":{"coverage.html":{}}}],["hidden",{"_index":102,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["hidden_column",{"_index":4920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hide",{"_index":1041,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{}}}],["hideable",{"_index":1739,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["hidedelay",{"_index":4201,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["hides",{"_index":4299,"title":{},"body":{"components/SpinnerActivityReporterComponent.html":{}}}],["hidetimeout",{"_index":1072,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["hidetooltip(delay",{"_index":1117,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["hiding",{"_index":1071,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["hint",{"_index":2080,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["hintposition",{"_index":3290,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["hook",{"_index":2645,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"components/FormInputComponent.html":{},"interfaces/MenuItem.html":{}}}],["host",{"_index":623,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/CliptextConfig.html":{},"directives/ComponentRendererOutletDirective.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["host(.site",{"_index":3385,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["hostbinding",{"_index":1255,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["hostbinding('class.fill",{"_index":1470,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["hostcomponent",{"_index":610,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["hostelement",{"_index":1202,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["hostlistener",{"_index":2844,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["hostlisteners",{"_index":2807,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["hostposition",{"_index":4208,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["hostposition(quadrant",{"_index":4256,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["hosttext",{"_index":4209,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["hosttext(text",{"_index":4262,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["hostvcddropdown",{"_index":2571,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["hover",{"_index":1086,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["href",{"_index":1581,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["html",{"_index":699,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"dependencies.html":{}}}],["htmlbaseelement",{"_index":3179,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["htmlelement",{"_index":573,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/CliptextConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/MenuItem.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/TestElement.html":{},"miscellaneous/variables.html":{}}}],["htmlelements",{"_index":3147,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["htmlinputelement",{"_index":3183,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["htmltextareaelement",{"_index":3184,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["http://localhost:4200",{"_index":4821,"title":{},"body":{"index.html":{}}}],["https://github.com/vmware/clarity/issues/2265",{"_index":1405,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["https://github.com/vmware/clarity/issues/4806",{"_index":1416,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["https://github.com/vmware/vmware",{"_index":4847,"title":{},"body":{"index.html":{}}}],["https://jira.eng.vmware.com/browse/vducc",{"_index":1762,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"miscellaneous/variables.html":{}}}],["https://stackoverflow.com/questions/59055154/typescript",{"_index":1777,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["i.e",{"_index":3945,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["i18n",{"_index":70,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["i18nmodule",{"_index":2786,"title":{},"body":{"modules/DropdownModule.html":{},"modules/QuickSearchModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["icon",{"_index":119,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"components/FormCheckboxComponent.html":{},"miscellaneous/enumerations.html":{}}}],["icon_and_text",{"_index":4798,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["iconshape",{"_index":3243,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["id",{"_index":844,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/CypressWidgetObjectFinder.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"classes/DomUtil.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/IdGenerator.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"injectables/QuickSearchService.html":{},"miscellaneous/variables.html":{}}}],["idcounter",{"_index":3533,"title":{},"body":{"classes/IdGenerator.html":{}}}],["identifier",{"_index":1580,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"interfaces/SortedColumn.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"coverage.html":{}}}],["identifiers",{"_index":2027,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["identify",{"_index":1750,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["identifying",{"_index":4472,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["idgenerator",{"_index":911,"title":{"classes/IdGenerator.html":{}},"body":{"classes/BaseFormControl.html":{},"classes/CypressWidgetObjectFinder.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/FilterTestHostComponent.html":{},"classes/IdGenerator.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["idgenerator#id",{"_index":3542,"title":{},"body":{"classes/IdGenerator.html":{}}}],["idgenerator('base",{"_index":918,"title":{},"body":{"classes/BaseFormControl.html":{},"miscellaneous/variables.html":{}}}],["idgenerator('cy",{"_index":2004,"title":{},"body":{"classes/CypressWidgetObjectFinder.html":{},"miscellaneous/variables.html":{}}}],["idgenerator('vcd",{"_index":2365,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"miscellaneous/variables.html":{}}}],["idgenerator.generate",{"_index":921,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/CypressWidgetObjectFinder.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["idgenerator.idcounter",{"_index":3541,"title":{},"body":{"classes/IdGenerator.html":{}}}],["ids",{"_index":2363,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"classes/IdGenerator.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["ie",{"_index":1909,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["ignore",{"_index":3196,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["ignored",{"_index":2257,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["ime",{"_index":3322,"title":{},"body":{"components/FormInputComponent.html":{}}}],["immediately",{"_index":783,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["implement",{"_index":1021,"title":{},"body":{"interfaces/CanBeReadOnly.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["implementation",{"_index":3134,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["implementations",{"_index":3161,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["implemented",{"_index":1800,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{}}}],["implements",{"_index":170,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormInputComponent.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{}}}],["implies",{"_index":1022,"title":{},"body":{"interfaces/CanBeReadOnly.html":{}}}],["import",{"_index":259,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["imports",{"_index":2772,"title":{},"body":{"modules/DropdownModule.html":{},"components/FilterTestHostComponent.html":{},"modules/QuickSearchModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["impossible",{"_index":3835,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["inc",{"_index":2776,"title":{},"body":{"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["include",{"_index":3590,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"contributing.html":{}}}],["included",{"_index":3012,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["including",{"_index":4830,"title":{},"body":{"index.html":{}}}],["indeterminate",{"_index":2038,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexofsubscription",{"_index":3524,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["indicate",{"_index":2021,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["indicates",{"_index":97,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["indicating",{"_index":2036,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"contributing.html":{}}}],["indicator",{"_index":681,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["indicator'},{'name",{"_index":739,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["indicator.component",{"_index":4498,"title":{},"body":{"modules/VcdLoadingIndicatorModule.html":{}}}],["indicator.component.html",{"_index":3548,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.scss",{"_index":3547,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.ts",{"_index":3544,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["indicator.component.ts:27",{"_index":3575,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.ts:38",{"_index":3561,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.ts:43",{"_index":3553,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.ts:49",{"_index":3555,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.ts:55",{"_index":3554,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.ts:62",{"_index":3558,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.ts:73",{"_index":3577,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.module",{"_index":4396,"title":{},"body":{"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{}}}],["indicator.module.ts",{"_index":4497,"title":{},"body":{"modules/VcdLoadingIndicatorModule.html":{}}}],["indicators",{"_index":1324,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["indicatortype",{"_index":1517,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["infer",{"_index":976,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["inference",{"_index":1775,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["information",{"_index":1032,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"index.html":{}}}],["inheritdoc",{"_index":487,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/CypressLocatorDriver.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"classes/TestElement.html":{}}}],["inherited",{"_index":217,"title":{},"body":{"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/ThousandsUnit.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["initial",{"_index":869,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["initialize",{"_index":2259,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["initialized",{"_index":202,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["initializing",{"_index":1806,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{}}}],["initially",{"_index":2294,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["initialselection",{"_index":1502,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["initialvalue",{"_index":845,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["initialvalueunit",{"_index":3712,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["initiate",{"_index":2016,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["inject",{"_index":691,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"directives/DynamicDropdownPositionDirective.html":{},"pipes/NestedPropertyPipe.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["inject(activitypromiseresolver",{"_index":692,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["inject(document",{"_index":2878,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["injectable",{"_index":1858,"title":{"injectables/CsvExporterService.html":{},"injectables/DropdownFocusHandlerService.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"injectables/UnitFormatter.html":{}},"body":{"injectables/CsvExporterService.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"injectables/UnitFormatter.html":{},"coverage.html":{}}}],["injectables",{"_index":1860,"title":{},"body":{"injectables/CsvExporterService.html":{},"injectables/DropdownFocusHandlerService.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"injectables/UnitFormatter.html":{},"overview.html":{}}}],["injection",{"_index":1878,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["injector",{"_index":477,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/TestElement.html":{}}}],["inline",{"_index":153,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"components/LoadingIndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["inner",{"_index":1068,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["innerheight",{"_index":1158,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["innervalue",{"_index":1941,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["innervalue.replace(/\"/g",{"_index":1948,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["innerwidth",{"_index":1157,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":109,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["input'},{'name",{"_index":730,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["input('vcdshowclippedtext",{"_index":1190,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["input.component",{"_index":3466,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["input.component.html",{"_index":3287,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["input.component.scss",{"_index":3286,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["input.component.ts",{"_index":3281,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["input.component.ts:104",{"_index":3320,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:121",{"_index":3318,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:127",{"_index":3317,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:37",{"_index":3422,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["input.component.ts:39",{"_index":3451,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["input.component.ts:40",{"_index":3309,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:43",{"_index":3425,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["input.component.ts:45",{"_index":3453,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["input.component.ts:46",{"_index":3307,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:460",{"_index":3939,"title":{},"body":{"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["input.component.ts:463",{"_index":3940,"title":{},"body":{"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["input.component.ts:49",{"_index":3428,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["input.component.ts:490",{"_index":3653,"title":{},"body":{"classes/NoUnit.html":{}}}],["input.component.ts:491",{"_index":3658,"title":{},"body":{"classes/NoUnit.html":{}}}],["input.component.ts:495",{"_index":3659,"title":{},"body":{"classes/NoUnit.html":{}}}],["input.component.ts:499",{"_index":3660,"title":{},"body":{"classes/NoUnit.html":{}}}],["input.component.ts:51",{"_index":3455,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["input.component.ts:52",{"_index":3301,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:55",{"_index":3431,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["input.component.ts:57",{"_index":3311,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{}}}],["input.component.ts:61",{"_index":3434,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["input.component.ts:62",{"_index":3310,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:63",{"_index":3459,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["input.component.ts:67",{"_index":3303,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormlyInputComponent.html":{}}}],["input.component.ts:72",{"_index":3299,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{}}}],["input.component.ts:75",{"_index":3419,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["input.component.ts:77",{"_index":3297,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:82",{"_index":3324,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:88",{"_index":3312,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:93",{"_index":3296,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.setvalue(null",{"_index":3756,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["input.setvalue(this.bestvalue",{"_index":3776,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["input.setvalue(this.lastrealvalue",{"_index":3757,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["input.value",{"_index":3755,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["input.widget",{"_index":3878,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{},"coverage.html":{}}}],["input/form",{"_index":3280,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/VcdFormModule.html":{},"coverage.html":{}}}],["input/formly",{"_index":3448,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"coverage.html":{}}}],["input/number",{"_index":3465,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/VcdFormModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["input`).unwrap",{"_index":2230,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["inputchanged",{"_index":3289,"title":{},"body":{"components/FormInputComponent.html":{}}}],["inputposition",{"_index":2521,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["inputs",{"_index":666,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{}}}],["inputs/input/formly",{"_index":4468,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["inputs/number",{"_index":4469,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["inputs/select/formly",{"_index":4470,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["inputunit",{"_index":3823,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"injectables/UnitFormatter.html":{}}}],["inputunit.findbestunit(value",{"_index":4376,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["inputvalueunit",{"_index":3693,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["insert",{"_index":4167,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["insertindex",{"_index":4163,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["inside",{"_index":983,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["inspect",{"_index":517,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["inspired",{"_index":3960,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["install",{"_index":4815,"title":{},"body":{"index.html":{}}}],["installed",{"_index":4831,"title":{},"body":{"index.html":{}}}],["instance",{"_index":773,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["instancecount",{"_index":1189,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["instanceof",{"_index":1706,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"pipes/NestedPropertyPipe.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["instances",{"_index":643,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/CliptextConfig.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"directives/ShowClippedTextDirective.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["instancetype",{"_index":3213,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["instantiate",{"_index":2350,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["instantiated",{"_index":936,"title":{},"body":{"classes/BaseWidgetObject.html":{},"directives/ComponentRendererOutletDirective.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["instantiating",{"_index":3164,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["instead",{"_index":894,"title":{},"body":{"classes/BaseFormControl.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["insures",{"_index":4003,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["intellij",{"_index":3966,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["interact",{"_index":3167,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ActivityResponse.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"interfaces/SortedColumn.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ActivityResponse.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"interfaces/SortedColumn.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"overview.html":{}}}],["interfaces/can",{"_index":915,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["interfaces/component",{"_index":998,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["interfaces/datagrid",{"_index":1002,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["internal",{"_index":2873,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["internalization",{"_index":4810,"title":{},"body":{"index.html":{}}}],["internally",{"_index":2361,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["internals",{"_index":3140,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["interrupt",{"_index":2164,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["introduced",{"_index":3833,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["invoked",{"_index":2588,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["invoking",{"_index":3616,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["irrespective",{"_index":32,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["is(\"isvapptemplate\").equalto(true",{"_index":2970,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["is(\"vcd\").equalto(vcdid",{"_index":2971,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["is(property",{"_index":3027,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["isactionavailable",{"_index":184,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["isactionavailable(action",{"_index":228,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["isactiondisabled",{"_index":185,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["isactiondisabled(action",{"_index":230,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["isactive",{"_index":2244,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["ischeckbox",{"_index":3245,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["iscolumnhideable(column",{"_index":1648,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["isdisabled",{"_index":882,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["isdropdownopen",{"_index":2119,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["isexportenabled",{"_index":2133,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["isfindparamsobject",{"_index":4713,"title":{},"body":{"coverage.html":{}}}],["isfindparamsobject(params",{"_index":3215,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["isfinite(control.value",{"_index":3412,"title":{},"body":{"classes/FormValidators.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["isfirstdropdowntrigger",{"_index":2894,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["isfunction",{"_index":1783,"title":{},"body":{"classes/CommonUtil.html":{}}}],["isfunction(value",{"_index":1785,"title":{},"body":{"classes/CommonUtil.html":{}}}],["isinrange",{"_index":3937,"title":{},"body":{"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["isinrange(min",{"_index":3850,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["isinsidemodal",{"_index":2804,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["isloading",{"_index":1535,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["ismouseover",{"_index":1077,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["isn't",{"_index":1602,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["isnan(number(control.value",{"_index":3851,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["isnan(parsefloat(control.value",{"_index":3411,"title":{},"body":{"classes/FormValidators.html":{}}}],["isnullorundefined",{"_index":4631,"title":{},"body":{"coverage.html":{}}}],["isnullorundefined(item[property",{"_index":3635,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["isnullorundefined(value",{"_index":3632,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["isnullorundefined(value[nestedprop",{"_index":3633,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["isnumber",{"_index":3410,"title":{},"body":{"classes/FormValidators.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["isnumberinrange",{"_index":3391,"title":{},"body":{"classes/FormValidators.html":{}}}],["isnumberinrange(min",{"_index":3399,"title":{},"body":{"classes/FormValidators.html":{}}}],["isodatevalue",{"_index":3341,"title":{},"body":{"components/FormInputComponent.html":{}}}],["isoverflowing",{"_index":1229,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["isreadonly",{"_index":853,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/CanBeReadOnly.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["isreadytosearchpromise",{"_index":176,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["isrequestpending",{"_index":2106,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["isroot",{"_index":1973,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["isrootdropdown",{"_index":2556,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["isrowexpanded",{"_index":1523,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["isseparator",{"_index":131,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["isspinnerspinning",{"_index":4305,"title":{},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["issue",{"_index":4563,"title":{},"body":{"contributing.html":{}}}],["issues",{"_index":4604,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["istanbul",{"_index":3202,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["istooltipvisible",{"_index":4210,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["istranslatable",{"_index":126,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/SelectOption.html":{}}}],["isubscriptiontracker",{"_index":3488,"title":{"interfaces/ISubscriptionTracker.html":{}},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{},"coverage.html":{}}}],["isunitdropdowndisplayed",{"_index":3889,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["isvapptemplate==true;vcd==some",{"_index":2976,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["it's",{"_index":1164,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["item",{"_index":64,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityReporter.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"pipes/NestedPropertyPipe.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["item.displaytext",{"_index":4061,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["item.element",{"_index":2738,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["item.element.focus",{"_index":2740,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["item.getmultiplier",{"_index":3929,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["item.handler",{"_index":4063,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["item.interface",{"_index":1272,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["item.interface.ts",{"_index":7,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["item.matches(activatablemenuitemtype.button",{"_index":2673,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["item.object",{"_index":426,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["item.queryselector(nested_dropdown_trigger",{"_index":2674,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["item.response.error",{"_index":428,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["item:nth",{"_index":2228,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["item[property",{"_index":3636,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["itemclicked(item",{"_index":4008,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["itemdisplaytext",{"_index":3956,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["itemindex",{"_index":1625,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["items",{"_index":286,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"components/FilterTestHostComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["itemsperpage",{"_index":1331,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["iterable",{"_index":520,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["iterator",{"_index":603,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["itself",{"_index":2533,"title":{},"body":{"classes/DomUtil.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["jan",{"_index":1906,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["jasmine",{"_index":4200,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["job",{"_index":4870,"title":{},"body":{"index.html":{}}}],["js",{"_index":4750,"title":{},"body":{"dependencies.html":{}}}],["js/ts",{"_index":3157,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["json",{"_index":2028,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"index.html":{}}}],["json.stringify(cellvalue",{"_index":1945,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["justify",{"_index":3593,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["karma",{"_index":4764,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["keep",{"_index":4886,"title":{},"body":{"index.html":{}}}],["key",{"_index":71,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["keyboard",{"_index":553,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["keyboardevent",{"_index":3959,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["keyboardevent(eventtype",{"_index":574,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["keydown",{"_index":567,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["keydown.arrowdown",{"_index":2746,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["keydown.arrowleft",{"_index":2750,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["keydown.arrowright",{"_index":2655,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["keydown.arrowup",{"_index":2748,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["keyof",{"_index":974,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{}}}],["keypress",{"_index":568,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["keys",{"_index":895,"title":{},"body":{"classes/BaseFormControl.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/MenuItem.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"miscellaneous/enumerations.html":{}}}],["keyup",{"_index":566,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["kinds",{"_index":1700,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["know",{"_index":327,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularWidgetObjectFinder.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["known",{"_index":1403,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["knows",{"_index":437,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/LocatorDriver.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{}}}],["label",{"_index":146,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BaseFormControl.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/ExportColumn.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"miscellaneous/variables.html":{}}}],["label:first",{"_index":3382,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["labels",{"_index":893,"title":{},"body":{"classes/BaseFormControl.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["lap",{"_index":2908,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["last",{"_index":1073,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["lastitem",{"_index":1374,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["lastrealvalue",{"_index":3727,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["later",{"_index":3330,"title":{},"body":{"components/FormInputComponent.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["latest",{"_index":4029,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["lazy",{"_index":3976,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["lazystring",{"_index":670,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/typealiases.html":{}}}],["le",{"_index":3043,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["leading_control_char",{"_index":1921,"title":{},"body":{"injectables/CsvExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["leading_control_char.test(encodevalue(cell",{"_index":1925,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["leading_control_char.test(value",{"_index":1959,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["leaks",{"_index":3154,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["leaky",{"_index":3235,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["lease",{"_index":4580,"title":{},"body":{"contributing.html":{}}}],["leave",{"_index":2794,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["left",{"_index":1050,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":698,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}],["length",{"_index":542,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["lengthy",{"_index":2040,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["less",{"_index":1232,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/FilterBuilder.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["lessthan",{"_index":2986,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["lessthan(value",{"_index":3029,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["lessthanorequalto",{"_index":2987,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["lessthanorequalto(value",{"_index":3031,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["level",{"_index":1758,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/FilterBuilder.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["lg",{"_index":1060,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"components/LoadingIndicatorComponent.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{}}}],["lg(large",{"_index":3573,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["lib/directives/show",{"_index":1275,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"modules/DropdownModule.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{}}}],["library",{"_index":323,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/ObjectAndResponse.html":{},"index.html":{}}}],["license",{"_index":2778,"title":{},"body":{"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["life",{"_index":3337,"title":{},"body":{"components/FormInputComponent.html":{}}}],["limit",{"_index":139,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/FilterBuilder.html":{}}}],["limited",{"_index":3744,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["limitedinput",{"_index":3733,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["limitedinputshowerrors",{"_index":3771,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["line",{"_index":3199,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["line:triple",{"_index":3804,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["lines",{"_index":1951,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["link",{"_index":50,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["link.click",{"_index":1919,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["link.setattribute('download",{"_index":1916,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["link.setattribute('href",{"_index":1915,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["link.style.visibility",{"_index":1917,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["linked",{"_index":2546,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["linkmenuitems",{"_index":2562,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["links",{"_index":2596,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["linkvertical",{"_index":2563,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["lint",{"_index":2682,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["list",{"_index":20,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{}}}],["listed",{"_index":1316,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["listen",{"_index":1563,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["listeners",{"_index":1387,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["listening",{"_index":2699,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["listentoarrowkeys",{"_index":2705,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["listentoarrowkeys(menucontainer",{"_index":2713,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["listentorightarrowkeypressonnestedtrigger",{"_index":2564,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["lit",{"_index":4766,"title":{},"body":{"dependencies.html":{}}}],["literal",{"_index":17,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/MockRecord.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["live",{"_index":3983,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"dependencies.html":{},"index.html":{}}}],["load",{"_index":1755,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["loaded",{"_index":1553,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"index.html":{}}}],["loading",{"_index":374,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["loading/loading",{"_index":4395,"title":{},"body":{"modules/VcdActivityReporterModule.html":{}}}],["loadingindicatorcomponent",{"_index":738,"title":{"components/LoadingIndicatorComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdLoadingIndicatorModule.html":{},"coverage.html":{},"overview.html":{}}}],["loadingmessage",{"_index":667,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["loadingtext",{"_index":769,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["loadingtextkey",{"_index":3551,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["local",{"_index":3284,"title":{},"body":{"components/FormInputComponent.html":{}}}],["locale_id",{"_index":3623,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["localeid",{"_index":3627,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["localized",{"_index":4357,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["locator",{"_index":959,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["locatordriver",{"_index":442,"title":{"interfaces/LocatorDriver.html":{}},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"coverage.html":{}}}],["locatorforancestors",{"_index":949,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["locatorforcssselectors",{"_index":950,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["locatorfortext",{"_index":951,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["logic",{"_index":1243,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["logical",{"_index":4539,"title":{},"body":{"contributing.html":{}}}],["loginwidgetobject",{"_index":940,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["long",{"_index":1082,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["longer",{"_index":1187,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["look",{"_index":3982,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["looks",{"_index":455,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{},"contributing.html":{}}}],["loop",{"_index":516,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["lower",{"_index":3009,"title":{},"body":{"classes/FilterBuilder.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["lt",{"_index":3042,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["ma",{"_index":2322,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"miscellaneous/variables.html":{}}}],["mac",{"_index":3962,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["made",{"_index":1020,"title":{},"body":{"interfaces/CanBeReadOnly.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"index.html":{}}}],["magic",{"_index":1342,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["magically",{"_index":1718,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["main",{"_index":41,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["make",{"_index":838,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{}}}],["makes",{"_index":1774,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"index.html":{}}}],["making",{"_index":1770,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["male",{"_index":3608,"title":{},"body":{"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["managed",{"_index":775,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["manipulate",{"_index":622,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["manual",{"_index":4558,"title":{},"body":{"contributing.html":{}}}],["manually",{"_index":697,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["many",{"_index":136,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/TestElement.html":{},"injectables/UnitFormatter.html":{}}}],["map",{"_index":2112,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["map((action",{"_index":291,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["map((child",{"_index":2679,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["map(cols.map((col",{"_index":2182,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["map(selectedoption",{"_index":2385,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["mapped",{"_index":1616,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["mapselectedrecords(currentselection",{"_index":1620,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["margin",{"_index":2463,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FormInputComponent.html":{}}}],["marginleft",{"_index":2901,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["mark",{"_index":124,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"injectables/CsvExporterService.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["marked",{"_index":2853,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["marks",{"_index":2931,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["massachusetts",{"_index":2323,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["master",{"_index":4578,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["match",{"_index":246,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/BaseWidgetObject.html":{},"classes/FilterBuilder.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["matchcase",{"_index":1996,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["matches",{"_index":460,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{}}}],["matching",{"_index":160,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this.hostelement.getboundingclientrect().width",{"_index":1234,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["math.floor(availableheight",{"_index":1687,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["math.max(contextualfeaturedactions.length",{"_index":1501,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["math.max(default_size",{"_index":1689,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["matter",{"_index":3095,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["max",{"_index":1497,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormInputComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["max_header_height",{"_index":1297,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maxfeaturedactionsonrow",{"_index":1488,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["maximum",{"_index":1292,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":3291,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["maxnumberlength",{"_index":2398,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["mb",{"_index":3674,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["md",{"_index":1058,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/LoadingIndicatorComponent.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{}}}],["md(medium",{"_index":3569,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["mean",{"_index":349,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["means",{"_index":978,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchService.html":{}}}],["measure",{"_index":3571,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["measures",{"_index":3567,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["medium",{"_index":3570,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["members",{"_index":4548,"title":{},"body":{"contributing.html":{}}}],["menu",{"_index":42,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["menu'},{'name",{"_index":703,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["menu.component",{"_index":1270,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"modules/VcdActionMenuModule.html":{}}}],["menu.component.ts",{"_index":4609,"title":{},"body":{"coverage.html":{}}}],["menu.module",{"_index":4424,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["menu.module.ts",{"_index":4382,"title":{},"body":{"modules/VcdActionMenuModule.html":{}}}],["menu/action",{"_index":1269,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{}}}],["menu/index",{"_index":4404,"title":{},"body":{"modules/VcdComponentsModule.html":{}}}],["menu_buffer_space",{"_index":2851,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["menuchildren",{"_index":2675,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["menucontainer",{"_index":2718,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["menuitem",{"_index":2594,"title":{"interfaces/MenuItem.html":{}},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{},"coverage.html":{}}}],["menuitem.up",{"_index":2692,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["menuitems",{"_index":2557,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["menus",{"_index":1491,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["menutrigger",{"_index":2558,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["menutrigger.closemenu",{"_index":2690,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["merge",{"_index":4565,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["message",{"_index":321,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"contributing.html":{}}}],["messageformat",{"_index":4768,"title":{},"body":{"dependencies.html":{}}}],["messages",{"_index":4541,"title":{},"body":{"contributing.html":{}}}],["messaging",{"_index":3404,"title":{},"body":{"classes/FormValidators.html":{}}}],["metadata",{"_index":658,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"directives/ComponentRendererOutletDirective.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"pipes/FunctionRendererPipe.html":{},"components/LoadingIndicatorComponent.html":{},"pipes/NestedPropertyPipe.html":{},"directives/ShowClippedTextDirective.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["method",{"_index":234,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"pipes/NestedPropertyPipe.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":181,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"interfaces/LocatorDriver.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["mhz",{"_index":3676,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["milliseconds",{"_index":2288,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"miscellaneous/variables.html":{}}}],["mimetype",{"_index":1903,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["min",{"_index":3292,"title":{},"body":{"components/FormInputComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["minimum",{"_index":3308,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["miscellaneou",{"_index":4939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":4787,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mixin",{"_index":3588,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["mockdata",{"_index":3604,"title":{},"body":{"interfaces/MockRecord.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockrecord",{"_index":992,"title":{"interfaces/MockRecord.html":{}},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/MockRecord.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocktranslationservice",{"_index":3098,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["modal",{"_index":2848,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"components/LoadingIndicatorComponent.html":{}}}],["mode",{"_index":897,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["modifiers(eg",{"_index":1562,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["modify",{"_index":1564,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["module",{"_index":2755,"title":{"modules/DropdownModule.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}},"body":{"modules/DropdownModule.html":{},"components/FilterTestHostComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}],["modules",{"_index":2757,"title":{"modules.html":{}},"body":{"modules/DropdownModule.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":4486,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["monitor",{"_index":393,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["monitoredit",{"_index":381,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["monitoredit(activityresolutionpromise",{"_index":396,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["monitorget",{"_index":382,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["monitorget(activityresolutionpromise",{"_index":401,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["monitorgetall",{"_index":383,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["monitorgetall(activityresolutionpromises",{"_index":403,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["monitors",{"_index":398,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["monorepo",{"_index":4800,"title":{},"body":{"index.html":{}}}],["more",{"_index":3692,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["morevalues",{"_index":3017,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["morevalues.foreach(val",{"_index":3081,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["morevalues.length",{"_index":3080,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["mouse",{"_index":1040,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["mouseevent",{"_index":1174,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{}}}],["mouseevent('mouseenter",{"_index":4266,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["mouseevent('mouseleave",{"_index":4269,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["mousein",{"_index":1176,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["mouseout",{"_index":1084,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["mouseoutdelay",{"_index":1036,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["mousetrap",{"_index":4770,"title":{},"body":{"dependencies.html":{}}}],["move",{"_index":2551,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["moved",{"_index":2712,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["movefocus",{"_index":2706,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["movefocus(direction",{"_index":2719,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["movefocusto",{"_index":2707,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["movefocusto(item",{"_index":2721,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["movefocustofirstitem",{"_index":2565,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["movemouseoffhost",{"_index":4203,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["movemouseofftooltip",{"_index":4204,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["movemouseoverhost",{"_index":4205,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["movemouseoversecondhost",{"_index":4206,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["movemouseovertooltip",{"_index":4207,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["moves",{"_index":2597,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{}}}],["moving",{"_index":2752,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["msgkey",{"_index":3838,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["multi",{"_index":1311,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"modules/VcdFormlyModule.html":{},"miscellaneous/enumerations.html":{}}}],["multiple",{"_index":91,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularWidgetObjectFinder.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["multiplier",{"_index":3862,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["multiply",{"_index":3865,"title":{},"body":{"classes/NumberUnit.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["multiselect",{"_index":714,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["multiselectoption",{"_index":2360,"title":{"interfaces/MultiSelectOption.html":{}},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"coverage.html":{}}}],["multiselectoptioninternal",{"_index":2348,"title":{"interfaces/MultiSelectOptionInternal.html":{}},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"coverage.html":{}}}],["name",{"_index":198,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["named",{"_index":3162,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["names",{"_index":1873,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/ExportColumn.html":{}}}],["native",{"_index":563,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["nativeelement",{"_index":3178,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["nativeelement.click",{"_index":3181,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["nativeelement.dispatchevent(event",{"_index":3182,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["nativeelement.dispatchevent(new",{"_index":3187,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["nativeelement.value",{"_index":3185,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["navigate",{"_index":4820,"title":{},"body":{"index.html":{}}}],["navigating",{"_index":2623,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["navigator.mssaveblob",{"_index":1910,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["navigator.mssaveblob(blob",{"_index":1911,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["nbsp",{"_index":919,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["nc",{"_index":2324,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["nearest",{"_index":2541,"title":{},"body":{"classes/DomUtil.html":{}}}],["need",{"_index":619,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["needed",{"_index":1188,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{}}}],["needs",{"_index":1832,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/UnitFormatter.html":{},"contributing.html":{}}}],["negative",{"_index":4166,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["neighboring",{"_index":2631,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["neighbors",{"_index":2547,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["neq",{"_index":3045,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["ness",{"_index":836,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["nested",{"_index":244,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/MenuItem.html":{},"pipes/NestedPropertyPipe.html":{},"modules/PipesModule.html":{}}}],["nested_dropdown_trigger",{"_index":2628,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nested_dropdown_trigger_selector",{"_index":4667,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nested_menu_hide_delay",{"_index":4668,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nested_vcd_dropdown",{"_index":2627,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["nestedmenutrigger",{"_index":2568,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["nestedprop",{"_index":3631,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["nestedproperty",{"_index":3617,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["nestedpropertypipe",{"_index":3611,"title":{"pipes/NestedPropertyPipe.html":{}},"body":{"pipes/NestedPropertyPipe.html":{},"modules/PipesModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["never",{"_index":1733,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"miscellaneous/enumerations.html":{}}}],["new",{"_index":281,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newly",{"_index":1617,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["newrecords",{"_index":1621,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["newrecords.find",{"_index":1624,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["next",{"_index":606,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseFormControl.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/PowerTwoUnit.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nextdisabled",{"_index":1195,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["nextelements",{"_index":489,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["nextelements.filter((el",{"_index":498,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["nextselection",{"_index":1607,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["ng",{"_index":2460,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"index.html":{}}}],["ngaftercontentchecked",{"_index":3767,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["ngaftercontentinit",{"_index":2805,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["ngafterviewinit",{"_index":1716,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["ngcontrol",{"_index":859,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["ngcontrol.valueaccessor",{"_index":922,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["ngmodule",{"_index":2783,"title":{},"body":{"modules/DropdownModule.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["ngonchanges(changes",{"_index":3766,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["ngondestroy",{"_index":1220,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"injectables/QuickSearchRegistrarService.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{}}}],["ngoninit",{"_index":1204,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{}}}],["ngx",{"_index":3436,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"dependencies.html":{}}}],["nightly",{"_index":4859,"title":{},"body":{"index.html":{}}}],["no_scrolling_classname",{"_index":2847,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":787,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["nodes",{"_index":805,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["non",{"_index":100,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BaseFormControl.html":{},"directives/DropdownFocusHandlerDirective.html":{},"components/ErrorBannerComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["none",{"_index":1313,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["normal",{"_index":3384,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["normally",{"_index":1321,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["notation",{"_index":3689,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["note",{"_index":1773,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["notequalto",{"_index":2988,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["notequalto(value",{"_index":3033,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["notext",{"_index":2072,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["notification",{"_index":4597,"title":{},"body":{"contributing.html":{}}}],["notifications",{"_index":1386,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["nounit",{"_index":3641,"title":{"classes/NoUnit.html":{}},"body":{"classes/NoUnit.html":{},"coverage.html":{}}}],["nounit(1",{"_index":3652,"title":{},"body":{"classes/NoUnit.html":{}}}],["nounit.instance",{"_index":3793,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["now",{"_index":3832,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["nowrap",{"_index":1218,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["npm",{"_index":4814,"title":{},"body":{"index.html":{}}}],["npm's",{"_index":4857,"title":{},"body":{"index.html":{}}}],["null",{"_index":272,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"classes/FilterBuilder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["num",{"_index":3351,"title":{},"body":{"components/FormInputComponent.html":{}}}],["number",{"_index":140,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["number(math.round(number(value",{"_index":1797,"title":{},"body":{"classes/CommonUtil.html":{}}}],["number.max_safe_integer",{"_index":3300,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["number.max_safe_integer.tostring().length",{"_index":2418,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["number.min_safe_integer",{"_index":3306,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormlyInputComponent.html":{}}}],["number_with_unit_input",{"_index":4473,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{}}}],["numbers",{"_index":1795,"title":{},"body":{"classes/CommonUtil.html":{},"classes/FilterBuilder.html":{}}}],["numberunit",{"_index":3852,"title":{"classes/NumberUnit.html":{}},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"coverage.html":{}}}],["numberunit:105",{"_index":4104,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:11",{"_index":4100,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:112",{"_index":4105,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:12",{"_index":4101,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:24",{"_index":4108,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:28",{"_index":4110,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:37",{"_index":4109,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:45",{"_index":4107,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:54",{"_index":4112,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:61",{"_index":4111,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:71",{"_index":4106,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:89",{"_index":4103,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberwithunitforminputcomponent",{"_index":740,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/PipesModule.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdFormModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["numberwithunitforminputcomponent.errorlabels",{"_index":3452,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["numberwithunitforminputcomponent.hintposition",{"_index":3457,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["numberwithunitforminputcomponent.max",{"_index":3456,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["numberwithunitforminputcomponent.min",{"_index":3454,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["numberwithunitforminputcomponent.showunlimitedoption",{"_index":3460,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["numberwithunitforminputcomponent.unlimitedvalue",{"_index":3462,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["numberwithunitforminputwidgetobject",{"_index":3877,"title":{"classes/NumberWithUnitFormInputWidgetObject.html":{}},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{},"coverage.html":{}}}],["numberwithunitsformvalidatorsfactory",{"_index":3849,"title":{"injectables/NumberWithUnitsFormValidatorsFactory.html":{}},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"coverage.html":{}}}],["numeric",{"_index":717,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["numerical",{"_index":3688,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["obj",{"_index":3615,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["object",{"_index":361,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["object.assign(defaults",{"_index":4258,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["object.assign(el.style",{"_index":1184,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["object.assign(this.host.style",{"_index":4259,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["object.defineproperty",{"_index":559,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["object.defineproperty(event",{"_index":577,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["object.defineproperty(this.limitedinput",{"_index":3769,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["object.is(item.element.innertext",{"_index":2688,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["object.is(this.currentfocuseditem.element",{"_index":2737,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["object.keys(eventproperties).foreach((key",{"_index":576,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["object.keys(rec).map((key",{"_index":2158,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["object.keys(records[0]).map((fieldname",{"_index":2154,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["object.keys(sizes).indexof(size",{"_index":3580,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["object.keys(this.elements[0].classes",{"_index":581,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["object.keys(this.formcontrol.errors",{"_index":930,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["object.keys(this.formgroup.controls).foreach(control",{"_index":2369,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["object.keys(this.formgroup.getrawvalue",{"_index":2382,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["object.keys(this.formgroup.getrawvalue()).filter(frmctrl",{"_index":2388,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["object.keys(tooltipposition",{"_index":4275,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["object.ts",{"_index":436,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["object.ts:102",{"_index":4338,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:109",{"_index":4340,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:114",{"_index":4515,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:116",{"_index":4329,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:123",{"_index":4327,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:128",{"_index":4512,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:131",{"_index":4324,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:136",{"_index":4513,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:139",{"_index":4326,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:140",{"_index":4511,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:147",{"_index":4334,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:15",{"_index":3891,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:154",{"_index":4328,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:16",{"_index":452,"title":{},"body":{"classes/AngularLocatorDriver.html":{}}}],["object.ts:161",{"_index":4339,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:17",{"_index":3898,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:172",{"_index":4337,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:185",{"_index":4325,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:187",{"_index":4500,"title":{},"body":{"classes/WidgetFinder.html":{}}}],["object.ts:192",{"_index":4499,"title":{},"body":{"classes/WidgetFinder.html":{}}}],["object.ts:193",{"_index":4333,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:20",{"_index":1975,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["object.ts:200",{"_index":4331,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:206",{"_index":4505,"title":{},"body":{"classes/WidgetFinder.html":{}}}],["object.ts:207",{"_index":4332,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:21",{"_index":3900,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:214",{"_index":4330,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:22",{"_index":471,"title":{},"body":{"classes/AngularLocatorDriver.html":{}}}],["object.ts:224",{"_index":4335,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:231",{"_index":4503,"title":{},"body":{"classes/WidgetFinder.html":{}}}],["object.ts:232",{"_index":4336,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:239",{"_index":4341,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:243",{"_index":4501,"title":{},"body":{"classes/WidgetFinder.html":{}}}],["object.ts:26",{"_index":1978,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["object.ts:27",{"_index":4506,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:28",{"_index":3902,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:30",{"_index":953,"title":{},"body":{"classes/BaseWidgetObject.html":{}}}],["object.ts:31",{"_index":473,"title":{},"body":{"classes/AngularLocatorDriver.html":{}}}],["object.ts:32",{"_index":3905,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:34",{"_index":1983,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["object.ts:36",{"_index":3907,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:38",{"_index":961,"title":{},"body":{"classes/BaseWidgetObject.html":{}}}],["object.ts:40",{"_index":3909,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:42",{"_index":4507,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:43",{"_index":475,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/CypressLocatorDriver.html":{}}}],["object.ts:44",{"_index":3894,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:45",{"_index":958,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/WidgetObject.html":{}}}],["object.ts:48",{"_index":3896,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:51",{"_index":1984,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["object.ts:52",{"_index":964,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:54",{"_index":4509,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:56",{"_index":3911,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:57",{"_index":454,"title":{},"body":{"classes/AngularLocatorDriver.html":{}}}],["object.ts:58",{"_index":1977,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["object.ts:62",{"_index":4510,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:64",{"_index":3596,"title":{},"body":{"interfaces/LocatorDriver.html":{}}}],["object.ts:65",{"_index":3897,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:69",{"_index":3597,"title":{},"body":{"interfaces/LocatorDriver.html":{}}}],["object.ts:70",{"_index":476,"title":{},"body":{"classes/AngularLocatorDriver.html":{}}}],["object.ts:72",{"_index":1979,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:73",{"_index":4508,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:74",{"_index":3598,"title":{},"body":{"interfaces/LocatorDriver.html":{}}}],["object.ts:77",{"_index":467,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:79",{"_index":3595,"title":{},"body":{"interfaces/LocatorDriver.html":{}}}],["object.ts:81",{"_index":3913,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:87",{"_index":3599,"title":{},"body":{"interfaces/LocatorDriver.html":{}}}],["object.ts:88",{"_index":3915,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:90",{"_index":4514,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:96",{"_index":4322,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:97",{"_index":4323,"title":{},"body":{"classes/TestElement.html":{}}}],["object/angular",{"_index":434,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/FilterTestHostComponent.html":{},"classes/TestElement.html":{},"coverage.html":{}}}],["object/cypress",{"_index":1961,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["object/find",{"_index":4718,"title":{},"body":{"coverage.html":{}}}],["object/widget",{"_index":934,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/VcdDatagridWidgetObject.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["object_property_separator",{"_index":3624,"title":{},"body":{"pipes/NestedPropertyPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["objectandresponse",{"_index":329,"title":{"interfaces/ObjectAndResponse.html":{}},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{},"coverage.html":{}}}],["objects",{"_index":609,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["objet",{"_index":1355,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["obs",{"_index":2302,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["observable",{"_index":1267,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["observable.subscribe(tosubscriber(observerornext",{"_index":3521,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["observables",{"_index":3493,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["observerornext",{"_index":3496,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["obtained",{"_index":2643,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["of(this.to.options",{"_index":3475,"title":{},"body":{"components/FormlySelectComponent.html":{}}}],["official",{"_index":4854,"title":{},"body":{"index.html":{}}}],["ok').parent('.button",{"_index":947,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["ok').unwrap",{"_index":945,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["old",{"_index":3208,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["onalertclosedchange",{"_index":2925,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["onalertclosedchange(closed",{"_index":2943,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["onarrowdown(event",{"_index":4010,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["onarrowup(event",{"_index":4012,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["onbeforesetconfig",{"_index":2245,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["onbeforesetconfig(config",{"_index":2270,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["once",{"_index":2018,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["onchange",{"_index":846,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["onchanges",{"_index":3680,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["onclickexport",{"_index":2120,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["ondestroy",{"_index":1045,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{}}}],["ondestroy.ngondestroy",{"_index":3515,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["one",{"_index":378,"title":{},"body":{"classes/ActivityReporter.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["onenterclicked",{"_index":3416,"title":{},"body":{"components/FormlyInputComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["onenterkey(event",{"_index":4014,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["onerrorclosed",{"_index":663,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["ones",{"_index":4053,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["onescapeclicked",{"_index":3417,"title":{},"body":{"components/FormlyInputComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["oninit",{"_index":1046,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormCheckboxComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{}}}],["only.interface",{"_index":917,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["only.interface.ts",{"_index":1019,"title":{},"body":{"interfaces/CanBeReadOnly.html":{},"coverage.html":{}}}],["onmouseenter",{"_index":1112,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["onmousein",{"_index":1224,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["onmouseleave",{"_index":1114,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["onmouseout",{"_index":1228,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["onsuccessclosed",{"_index":664,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["ontop",{"_index":1516,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["ontouch",{"_index":847,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["ontouched",{"_index":879,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["ontransitionend",{"_index":1238,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["ontransitionend(e",{"_index":1125,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["opacity",{"_index":1099,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":1894,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/MenuItem.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"contributing.html":{}}}],["open(open",{"_index":3990,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["open(value",{"_index":2095,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["open/close",{"_index":2207,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["openchange",{"_index":2101,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["opened",{"_index":2051,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/MenuItem.html":{}}}],["opening",{"_index":2590,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"contributing.html":{}}}],["opens",{"_index":2671,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"components/FilterTestHostComponent.html":{},"interfaces/MenuItem.html":{}}}],["operation",{"_index":89,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["operator",{"_index":2998,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["operators",{"_index":3039,"title":{},"body":{"classes/FilterBuilder.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["operators.and",{"_index":3058,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["operators.or",{"_index":3053,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["opposite",{"_index":1151,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["option",{"_index":1346,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormSelectComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SelectOption.html":{},"interfaces/SortedColumn.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["option.display",{"_index":2392,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/FormSelectComponent.html":{}}}],["option.istranslatable",{"_index":2391,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/FormSelectComponent.html":{}}}],["option.ts",{"_index":4176,"title":{},"body":{"interfaces/SelectOption.html":{},"coverage.html":{}}}],["option.value",{"_index":2485,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/FormSelectComponent.html":{}}}],["option.value.tostring",{"_index":3378,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["optional",{"_index":14,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":152,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BaseWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindableWidget-1.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SelectOption.html":{},"interfaces/SortedColumn.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{}}}],["options).unwrap",{"_index":957,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["options.indexof(this.pagesize",{"_index":1665,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["options.push(this.pagesize",{"_index":1666,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["options.sort((a",{"_index":1667,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["optionsformgroup",{"_index":2114,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["or(...conditions",{"_index":3064,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["or(conditions",{"_index":3035,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["order",{"_index":179,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/HasFinder.html":{},"classes/NumberUnit.html":{},"interfaces/PartialResult.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/ThousandsUnit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["origin",{"_index":4525,"title":{},"body":{"contributing.html":{}}}],["originalondestroy",{"_index":3517,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["originalondestroy.call(destroyable",{"_index":3520,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["osx",{"_index":3963,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["otherwise",{"_index":2518,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"contributing.html":{}}}],["out",{"_index":2620,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"modules/DropdownModule.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"overview.html":{}}}],["outlet",{"_index":1830,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["outlet.directive",{"_index":4428,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["outlet.directive.ts",{"_index":1810,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{},"coverage.html":{}}}],["outlet.directive.ts:29",{"_index":1837,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["outlet.directive.ts:30",{"_index":1828,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["outlet.directive.ts:40",{"_index":1829,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["outlet.directive.ts:52",{"_index":1835,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["outlet.directive.ts:63",{"_index":1834,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["outlet.directive.ts:70",{"_index":1836,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["outline",{"_index":4533,"title":{},"body":{"contributing.html":{}}}],["output",{"_index":1256,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["outputnumber",{"_index":3875,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["outputs",{"_index":1377,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["outputunit",{"_index":3668,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["outputunit.multiplier",{"_index":3871,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["outputunit.unitname",{"_index":4362,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["outside",{"_index":2278,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["over",{"_index":1076,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/DataExportRequestEvent.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["overflow",{"_index":1216,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["overflowing",{"_index":1214,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["overflows",{"_index":1230,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["overlay",{"_index":3556,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["override",{"_index":324,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"classes/CypressLocatorDriver.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["overrides",{"_index":2335,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["overview",{"_index":4891,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwriting",{"_index":1513,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["p",{"_index":973,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["p:first",{"_index":3366,"title":{},"body":{"components/FormInputComponent.html":{}}}],["package",{"_index":4736,"title":{"dependencies.html":{}},"body":{}}],["package.json",{"_index":4833,"title":{},"body":{"index.html":{}}}],["pad",{"_index":4676,"title":{},"body":{"coverage.html":{}}}],["pad(date.getdate",{"_index":3347,"title":{},"body":{"components/FormInputComponent.html":{}}}],["pad(date.gethours",{"_index":3348,"title":{},"body":{"components/FormInputComponent.html":{}}}],["pad(date.getminutes",{"_index":3349,"title":{},"body":{"components/FormInputComponent.html":{}}}],["pad(date.getmonth",{"_index":3346,"title":{},"body":{"components/FormInputComponent.html":{}}}],["pad(num",{"_index":3350,"title":{},"body":{"components/FormInputComponent.html":{}}}],["padding",{"_index":3356,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["page",{"_index":1285,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["page(they",{"_index":1338,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["page_size",{"_index":4930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pagenumber",{"_index":1329,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["pages",{"_index":1336,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["pagesize",{"_index":1344,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/SortedColumn.html":{}}}],["pagesizeoptions",{"_index":1334,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["pagination",{"_index":1303,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["pagination(pagination",{"_index":1455,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["pagination_description",{"_index":4929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pagination_next",{"_index":4931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paginationcallback",{"_index":1372,"title":{"interfaces/PaginationCallback.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["paginationcomponent",{"_index":1542,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["paginationconfiguration",{"_index":1333,"title":{"interfaces/PaginationConfiguration.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["paginationdata.firstitem",{"_index":1657,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["paginationdata.lastitem",{"_index":1658,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["paginationdata.totalitems",{"_index":1659,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["paginationdropdowntext",{"_index":1530,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["paginationtranslationkey",{"_index":1548,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["pagionation",{"_index":1326,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["pagionationinformation",{"_index":1328,"title":{"interfaces/PagionationInformation.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["palo",{"_index":3606,"title":{},"body":{"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["pane",{"_index":1353,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":85,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"injectables/CsvExporterService.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["parameter",{"_index":347,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/ObjectAndResponse.html":{}}}],["parameters",{"_index":197,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/CommonUtil.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["params",{"_index":1538,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["params.tagname",{"_index":3227,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["params.woconstructor.tagname",{"_index":3226,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["parent",{"_index":459,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["parent.query(by.css(cssselector)).nativeelement",{"_index":3180,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["parent.query(query",{"_index":3176,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["parent.queryall(query",{"_index":3177,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["parentdropdown",{"_index":2815,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["parentdropdownmenurect",{"_index":2912,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["parentdropdownmenurect.left",{"_index":2916,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["parentdropdownmenurect.right",{"_index":2915,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["parentdropdownwidth",{"_index":2914,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["parentfocushandler",{"_index":2570,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["parents",{"_index":446,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{}}}],["parents(cssselector",{"_index":474,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{}}}],["parentvcddropdown",{"_index":2575,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["parseint(triggercomputedstyles.marginleft",{"_index":2903,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["part",{"_index":1363,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["partial",{"_index":1183,"title":{},"body":{"interfaces/CliptextConfig.html":{},"classes/FilterBuilder.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{}}}],["partialobserver",{"_index":3497,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["partialresult",{"_index":3941,"title":{"interfaces/PartialResult.html":{}},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"coverage.html":{}}}],["pased",{"_index":3195,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["pass",{"_index":785,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{}}}],["passed",{"_index":66,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["passes",{"_index":3500,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["passing",{"_index":2037,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"modules/VcdFormlyModule.html":{}}}],["patch",{"_index":1413,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"contributing.html":{}}}],["pattern",{"_index":3135,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["pause",{"_index":186,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["paused",{"_index":235,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["peer",{"_index":4785,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["per",{"_index":1337,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"index.html":{}}}],["percent",{"_index":3916,"title":{"classes/Percent.html":{}},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/Percent.html":{},"coverage.html":{}}}],["percent(0.01",{"_index":4087,"title":{},"body":{"classes/Percent.html":{}}}],["percent(1",{"_index":4085,"title":{},"body":{"classes/Percent.html":{}}}],["percent.zero_to_1",{"_index":3931,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["percent.zero_to_100",{"_index":3930,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["perfect",{"_index":3836,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["perform",{"_index":2274,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["performed",{"_index":68,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["performer",{"_index":391,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["performer.resolveactivities(activityresolutionpromises",{"_index":423,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["performer.resolveactivity(activityresolutionpromise",{"_index":418,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["permanently",{"_index":1981,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["person",{"_index":3605,"title":{},"body":{"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":3478,"title":{"pipes/FunctionRendererPipe.html":{},"pipes/NestedPropertyPipe.html":{}},"body":{"pipes/FunctionRendererPipe.html":{},"pipes/NestedPropertyPipe.html":{},"coverage.html":{}}}],["pipeline",{"_index":4852,"title":{},"body":{"index.html":{}}}],["pipes",{"_index":3480,"title":{},"body":{"pipes/FunctionRendererPipe.html":{},"pipes/NestedPropertyPipe.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["pipes/function",{"_index":4430,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["pipesmodule",{"_index":4093,"title":{"modules/PipesModule.html":{}},"body":{"modules/PipesModule.html":{},"modules/VcdDatagridModule.html":{},"modules.html":{},"overview.html":{}}}],["pipetransform",{"_index":3486,"title":{},"body":{"pipes/FunctionRendererPipe.html":{},"pipes/NestedPropertyPipe.html":{}}}],["pixels",{"_index":1296,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["placed",{"_index":1529,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["placeholder",{"_index":3293,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":1236,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["plugin",{"_index":4806,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":135,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["point",{"_index":1793,"title":{},"body":{"classes/CommonUtil.html":{}}}],["popup",{"_index":1065,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["position",{"_index":837,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/CliptextConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/LoadingIndicatorComponent.html":{},"injectables/QuickSearchService.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["position.directive",{"_index":2788,"title":{},"body":{"modules/DropdownModule.html":{}}}],["position.directive.ts",{"_index":2790,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["position.directive.ts:101",{"_index":2840,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:134",{"_index":2842,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:188",{"_index":2826,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:198",{"_index":2817,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:57",{"_index":2830,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:58",{"_index":2834,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:59",{"_index":2831,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:60",{"_index":2835,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:61",{"_index":2833,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:63",{"_index":2836,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:66",{"_index":2838,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:84",{"_index":2816,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:94",{"_index":2824,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["positional",{"_index":3837,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["positionleft",{"_index":2811,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["positiontop",{"_index":2810,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["possible",{"_index":156,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"injectables/CsvExporterService.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/enumerations.html":{}}}],["possibly",{"_index":617,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["posts",{"_index":399,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["potential",{"_index":3151,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["potentially",{"_index":2039,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["powertwounit",{"_index":4099,"title":{"classes/PowerTwoUnit.html":{}},"body":{"classes/PowerTwoUnit.html":{},"coverage.html":{}}}],["pr",{"_index":1970,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"contributing.html":{},"index.html":{}}}],["pr](https://github.com/vmware/vmware",{"_index":1988,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["pre",{"_index":3860,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["precision",{"_index":4369,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["predefined",{"_index":3826,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["prefer",{"_index":3166,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["prefix",{"_index":3536,"title":{},"body":{"classes/IdGenerator.html":{}}}],["prefixed",{"_index":1938,"title":{},"body":{"injectables/CsvExporterService.html":{},"classes/IdGenerator.html":{}}}],["prefixing",{"_index":1956,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["preid=dev",{"_index":4862,"title":{},"body":{"index.html":{}}}],["prerelease",{"_index":4861,"title":{},"body":{"index.html":{}}}],["present",{"_index":1619,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["preserved",{"_index":1552,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["preserveselection",{"_index":1554,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["preserving",{"_index":1512,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["pressed",{"_index":2582,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["presses",{"_index":2700,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{}}}],["pressing",{"_index":2589,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["prevent",{"_index":1877,"title":{},"body":{"injectables/CsvExporterService.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["prevents",{"_index":1955,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["previousvalue",{"_index":2146,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["previousvalue[currentvalue.fieldname",{"_index":2145,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["primitives",{"_index":3016,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/typealiases.html":{}}}],["prismjs",{"_index":4772,"title":{},"body":{"dependencies.html":{}}}],["private",{"_index":172,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["process",{"_index":325,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/ObjectAndResponse.html":{}}}],["processes",{"_index":330,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["processrow",{"_index":4636,"title":{},"body":{"coverage.html":{}}}],["processrow(row",{"_index":1900,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["produce",{"_index":2975,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["produces",{"_index":3619,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["programmatically",{"_index":3749,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["progress",{"_index":2022,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["project",{"_index":4518,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["projects",{"_index":4802,"title":{},"body":{"index.html":{}}}],["projects/.../action",{"_index":4789,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../base",{"_index":4915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../component",{"_index":4898,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../csv",{"_index":4916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../cypress",{"_index":4909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../data",{"_index":4796,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../datagrid",{"_index":4793,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../datagrid.component.ts",{"_index":4791,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/.../datagrid.module.ts",{"_index":4913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../datagrid.wo.ts",{"_index":4908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../dropdown",{"_index":4790,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/.../dropdown.component.ts",{"_index":4914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../dynamic",{"_index":4907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../filter",{"_index":4901,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../form",{"_index":4792,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../form.module.ts",{"_index":4911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../loading",{"_index":4794,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../mock",{"_index":4917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../nested",{"_index":4910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../number",{"_index":4918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../pipes.module.ts",{"_index":4912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../quick",{"_index":4902,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../show",{"_index":4795,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../types.ts",{"_index":4900,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../vcd",{"_index":4797,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/.../widget",{"_index":4899,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects//package.json",{"_index":4864,"title":{},"body":{"index.html":{}}}],["projects/components",{"_index":4803,"title":{},"body":{"index.html":{}}}],["projects/components/src/action",{"_index":164,"title":{},"body":{"classes/ActionSearchProvider.html":{},"modules/VcdActionMenuModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/common/activity",{"_index":314,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdActivityReporterModule.html":{},"coverage.html":{}}}],["projects/components/src/common/error/error",{"_index":2919,"title":{},"body":{"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"coverage.html":{}}}],["projects/components/src/common/interfaces/action",{"_index":6,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["projects/components/src/common/interfaces/select",{"_index":4175,"title":{},"body":{"interfaces/SelectOption.html":{},"coverage.html":{}}}],["projects/components/src/common/loading/loading",{"_index":3543,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"modules/VcdLoadingIndicatorModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["projects/components/src/common/pipes/nested",{"_index":3612,"title":{},"body":{"pipes/NestedPropertyPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/common/pipes/pipes.module.ts",{"_index":4097,"title":{},"body":{"modules/PipesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/common/subscription/subscription",{"_index":3489,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{},"coverage.html":{}}}],["projects/components/src/components.module.ts",{"_index":4403,"title":{},"body":{"modules/VcdComponentsModule.html":{}}}],["projects/components/src/data",{"_index":1861,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/ExportColumn.html":{},"modules/VcdDataExporterModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/datagrid/datagrid.component.ts",{"_index":1241,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/datagrid/datagrid.module.ts",{"_index":4421,"title":{},"body":{"modules/VcdDatagridModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/datagrid/directives/component",{"_index":1809,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{},"coverage.html":{}}}],["projects/components/src/datagrid/filters/datagrid",{"_index":2231,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/datagrid/interfaces/component",{"_index":1798,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["projects/components/src/datagrid/interfaces/datagrid",{"_index":1726,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/components/src/datagrid/mock",{"_index":3600,"title":{},"body":{"interfaces/MockRecord.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/datagrid/pipes/function",{"_index":3481,"title":{},"body":{"pipes/FunctionRendererPipe.html":{},"coverage.html":{}}}],["projects/components/src/datagrid/renderers/bold",{"_index":979,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"coverage.html":{}}}],["projects/components/src/dropdown/dropdown",{"_index":2543,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/dropdown/dropdown.component.ts",{"_index":4662,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/dropdown/dropdown.module.ts",{"_index":2771,"title":{},"body":{"modules/DropdownModule.html":{}}}],["projects/components/src/dropdown/dynamic",{"_index":2789,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/form/base",{"_index":830,"title":{},"body":{"classes/BaseFormControl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/form/form",{"_index":3239,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/components/src/form/form.module.ts",{"_index":4455,"title":{},"body":{"modules/VcdFormModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/form/interfaces/can",{"_index":1018,"title":{},"body":{"interfaces/CanBeReadOnly.html":{},"coverage.html":{}}}],["projects/components/src/form/number",{"_index":3642,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/form/validators.ts",{"_index":3387,"title":{},"body":{"classes/FormValidators.html":{},"coverage.html":{}}}],["projects/components/src/form/validators.ts:17",{"_index":3393,"title":{},"body":{"classes/FormValidators.html":{}}}],["projects/components/src/form/validators.ts:32",{"_index":3401,"title":{},"body":{"classes/FormValidators.html":{}}}],["projects/components/src/formly/vcd/inputs/input/formly",{"_index":3414,"title":{},"body":{"components/FormlyInputComponent.html":{},"coverage.html":{}}}],["projects/components/src/formly/vcd/inputs/number",{"_index":3447,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{},"coverage.html":{}}}],["projects/components/src/formly/vcd/inputs/select/formly",{"_index":3469,"title":{},"body":{"components/FormlySelectComponent.html":{},"coverage.html":{}}}],["projects/components/src/formly/vcd/vcd",{"_index":4458,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/lib/directives/show",{"_index":1029,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/quick",{"_index":3942,"title":{},"body":{"interfaces/PartialResult.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["projects/components/src/utils/common",{"_index":1781,"title":{},"body":{"classes/CommonUtil.html":{},"coverage.html":{}}}],["projects/components/src/utils/dom",{"_index":2524,"title":{},"body":{"classes/DomUtil.html":{},"coverage.html":{}}}],["projects/components/src/utils/filter",{"_index":2964,"title":{},"body":{"classes/FilterBuilder.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/utils/id",{"_index":3531,"title":{},"body":{"classes/IdGenerator.html":{},"coverage.html":{}}}],["projects/components/src/utils/test/activity",{"_index":757,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"coverage.html":{}}}],["projects/components/src/utils/test/datagrid/datagrid.wo.ts",{"_index":4704,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/utils/test/datagrid/filter",{"_index":3084,"title":{},"body":{"components/FilterTestHostComponent.html":{},"coverage.html":{}}}],["projects/components/src/utils/test/datagrid/vcd",{"_index":4434,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{},"coverage.html":{}}}],["projects/components/src/utils/test/widget",{"_index":433,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/utils/types.ts",{"_index":4903,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/components/src/utils/unit/unit",{"_index":4355,"title":{},"body":{"injectables/UnitFormatter.html":{},"coverage.html":{}}}],["projects/components/src/utils/unit/unit.ts",{"_index":3853,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"coverage.html":{}}}],["projects/components/src/utils/unit/unit.ts:105",{"_index":3863,"title":{},"body":{"classes/NumberUnit.html":{}}}],["projects/components/src/utils/unit/unit.ts:11",{"_index":4347,"title":{},"body":{"classes/Unit.html":{}}}],["projects/components/src/utils/unit/unit.ts:112",{"_index":3864,"title":{},"body":{"classes/NumberUnit.html":{}}}],["projects/components/src/utils/unit/unit.ts:119",{"_index":4343,"title":{},"body":{"classes/ThousandsUnit.html":{}}}],["projects/components/src/utils/unit/unit.ts:12",{"_index":4346,"title":{},"body":{"classes/Unit.html":{}}}],["projects/components/src/utils/unit/unit.ts:128",{"_index":4102,"title":{},"body":{"classes/PowerTwoUnit.html":{}}}],["projects/components/src/utils/unit/unit.ts:187",{"_index":4084,"title":{},"body":{"classes/Percent.html":{}}}],["projects/components/src/utils/unit/unit.ts:188",{"_index":4081,"title":{},"body":{"classes/Percent.html":{}}}],["projects/components/src/utils/unit/unit.ts:196",{"_index":4086,"title":{},"body":{"classes/Percent.html":{}}}],["projects/components/src/utils/unit/unit.ts:197",{"_index":4088,"title":{},"body":{"classes/Percent.html":{}}}],["projects/components/src/utils/unit/unit.ts:199",{"_index":4092,"title":{},"body":{"classes/Percent.html":{}}}],["projects/components/src/utils/unit/unit.ts:203",{"_index":4091,"title":{},"body":{"classes/Percent.html":{}}}],["projects/components/src/utils/unit/unit.ts:213",{"_index":4090,"title":{},"body":{"classes/Percent.html":{}}}],["projects/components/src/utils/unit/unit.ts:24",{"_index":4350,"title":{},"body":{"classes/Unit.html":{}}}],["projects/components/src/utils/unit/unit.ts:28",{"_index":4352,"title":{},"body":{"classes/Unit.html":{}}}],["projects/components/src/utils/unit/unit.ts:37",{"_index":4351,"title":{},"body":{"classes/Unit.html":{}}}],["projects/components/src/utils/unit/unit.ts:45",{"_index":4349,"title":{},"body":{"classes/Unit.html":{}}}],["projects/components/src/utils/unit/unit.ts:54",{"_index":4354,"title":{},"body":{"classes/Unit.html":{}}}],["projects/components/src/utils/unit/unit.ts:61",{"_index":4353,"title":{},"body":{"classes/Unit.html":{}}}],["projects/components/src/utils/unit/unit.ts:71",{"_index":4348,"title":{},"body":{"classes/Unit.html":{}}}],["projects/components/src/utils/unit/unit.ts:89",{"_index":3858,"title":{},"body":{"classes/NumberUnit.html":{}}}],["projects/examples",{"_index":4812,"title":{},"body":{"index.html":{}}}],["projects/i18n",{"_index":4811,"title":{},"body":{"index.html":{}}}],["projects/route",{"_index":4825,"title":{},"body":{"index.html":{}}}],["promise",{"_index":58,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"components/SpinnerActivityReporterComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["promise((resolve",{"_index":282,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["promiseresolver",{"_index":395,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["propagating",{"_index":2583,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["proper",{"_index":3403,"title":{},"body":{"classes/FormValidators.html":{},"contributing.html":{}}}],["properties",{"_index":13,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"dependencies.html":{}}}],["property",{"_index":583,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["property.pipe",{"_index":4098,"title":{},"body":{"modules/PipesModule.html":{}}}],["property.pipe.ts",{"_index":3613,"title":{},"body":{"pipes/NestedPropertyPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["property.pipe.ts:32",{"_index":3620,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["property.split(object_property_separator",{"_index":3629,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["protected",{"_index":760,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/PowerTwoUnit.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/ThousandsUnit.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["protractor",{"_index":4844,"title":{},"body":{"index.html":{}}}],["prov.order",{"_index":4168,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["provide",{"_index":408,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":807,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"classes/DomUtil.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["providedin",{"_index":1889,"title":{},"body":{"injectables/CsvExporterService.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"injectables/QuickSearchService.html":{}}}],["provider",{"_index":3954,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"miscellaneous/variables.html":{}}}],["provider.order",{"_index":4162,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["provider/action",{"_index":166,"title":{},"body":{"classes/ActionSearchProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":2761,"title":{},"body":{"modules/DropdownModule.html":{},"components/FilterTestHostComponent.html":{},"interfaces/PartialResult.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}],["provides",{"_index":2042,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["providing",{"_index":1807,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"injectables/QuickSearchService.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["prs",{"_index":4569,"title":{},"body":{"contributing.html":{}}}],["public",{"_index":522,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"injectables/CsvExporterService.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["public/exported",{"_index":4547,"title":{},"body":{"contributing.html":{}}}],["publish",{"_index":4872,"title":{},"body":{"index.html":{}}}],["published",{"_index":4876,"title":{},"body":{"index.html":{}}}],["publishing",{"_index":4850,"title":{},"body":{"index.html":{}}}],["pull",{"_index":4545,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["pure",{"_index":3483,"title":{},"body":{"pipes/FunctionRendererPipe.html":{},"pipes/NestedPropertyPipe.html":{}}}],["purpose",{"_index":3139,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["push",{"_index":4542,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["pushed",{"_index":2917,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["pushes",{"_index":1385,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["put",{"_index":3252,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["px",{"_index":1135,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["quad",{"_index":1167,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["quadrant",{"_index":1152,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/variables.html":{}}}],["queries",{"_index":935,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["query",{"_index":598,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["querydirective",{"_index":4320,"title":{},"body":{"classes/TestElement.html":{}}}],["querydirective(type",{"_index":600,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["queryfield",{"_index":2237,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["queryfieldname",{"_index":1747,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["querying",{"_index":1746,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["querylist",{"_index":1257,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["queryoptions",{"_index":1995,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["quick",{"_index":263,"title":{},"body":{"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PartialResult.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdComponentsModule.html":{},"miscellaneous/typealiases.html":{}}}],["quicksearchcomponent",{"_index":208,"title":{},"body":{"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PartialResult.html":{},"modules/QuickSearchModule.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quicksearchcomponent#haspartialresult",{"_index":3947,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["quicksearchmodule",{"_index":4113,"title":{"modules/QuickSearchModule.html":{}},"body":{"modules/QuickSearchModule.html":{},"modules/VcdComponentsModule.html":{},"modules.html":{},"overview.html":{}}}],["quicksearchprovider",{"_index":171,"title":{"interfaces/QuickSearchProvider.html":{}},"body":{"classes/ActionSearchProvider.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"coverage.html":{}}}],["quicksearchproviderdefaults",{"_index":169,"title":{"classes/QuickSearchProviderDefaults.html":{}},"body":{"classes/ActionSearchProvider.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"coverage.html":{}}}],["quicksearchproviderdefaults:37",{"_index":220,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["quicksearchproviderdefaults:38",{"_index":219,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["quicksearchproviderdefaults:39",{"_index":218,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["quicksearchproviderdefaults:40",{"_index":252,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["quicksearchprovider}quicksearchprovider",{"_index":3975,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["quicksearchregistrarservice",{"_index":4134,"title":{"injectables/QuickSearchRegistrarService.html":{}},"body":{"injectables/QuickSearchRegistrarService.html":{},"coverage.html":{}}}],["quicksearchresultitem",{"_index":225,"title":{"interfaces/QuickSearchResultItem.html":{}},"body":{"classes/ActionSearchProvider.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"coverage.html":{}}}],["quicksearchresults",{"_index":262,"title":{"interfaces/QuickSearchResults.html":{}},"body":{"classes/ActionSearchProvider.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["quicksearchresultstype",{"_index":253,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"miscellaneous/typealiases.html":{}}}],["quicksearchservice",{"_index":3951,"title":{"injectables/QuickSearchService.html":{}},"body":{"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"coverage.html":{}}}],["quicksearchservice}quicksearchservice",{"_index":3973,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["quite",{"_index":3834,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["quotes",{"_index":1936,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["r",{"_index":55,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/LocatorDriver.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/typealiases.html":{}}}],["radio",{"_index":4937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["radio_wrapper",{"_index":4936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["range",{"_index":3402,"title":{},"body":{"classes/FormValidators.html":{}}}],["rbradford",{"_index":4775,"title":{},"body":{"dependencies.html":{}}}],["re",{"_index":3172,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["reactiveformsmodule",{"_index":2784,"title":{},"body":{"modules/DropdownModule.html":{},"modules/QuickSearchModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{}}}],["read",{"_index":916,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"contributing.html":{},"coverage.html":{}}}],["readme",{"_index":4808,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":835,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["readonlytext",{"_index":3884,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["reads",{"_index":3903,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["ready",{"_index":2102,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/MenuItem.html":{},"contributing.html":{}}}],["readytosearchpromisefactory",{"_index":187,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["real",{"_index":3722,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["really",{"_index":4028,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["reasons",{"_index":1968,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["rebase",{"_index":4577,"title":{},"body":{"contributing.html":{}}}],["rec[key",{"_index":2159,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["recalculate",{"_index":2819,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["recalculateunitminmax",{"_index":3810,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["recalculating",{"_index":1690,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["receive",{"_index":788,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["receiving",{"_index":1201,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["recent",{"_index":4588,"title":{},"body":{"contributing.html":{}}}],["recommended",{"_index":3159,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["record",{"_index":90,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["record.name",{"_index":993,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{}}}],["records",{"_index":86,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["records.map((rec",{"_index":2157,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["rect",{"_index":1132,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["rect.height",{"_index":1140,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["rect.left",{"_index":1136,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["rect.top",{"_index":1134,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["rect.width",{"_index":1138,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["rectcenter",{"_index":1160,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["rectcenter.x",{"_index":1165,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["rectcenter.y",{"_index":1166,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["red",{"_index":3355,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["reduce",{"_index":2966,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["redundant",{"_index":1842,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["references",{"_index":4600,"title":{},"body":{"contributing.html":{}}}],["referencing",{"_index":4603,"title":{},"body":{"contributing.html":{}}}],["reflects",{"_index":1752,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["refs/tags",{"_index":4884,"title":{},"body":{"index.html":{}}}],["register",{"_index":3974,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["register(provider",{"_index":4140,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["registered",{"_index":3979,"title":{},"body":{"interfaces/PartialResult.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["registeronchange",{"_index":848,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["registeronchange(onchange",{"_index":874,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["registerontouched",{"_index":849,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["registerontouched(ontouched",{"_index":877,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["registerprovider",{"_index":4151,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["registerprovider(provider",{"_index":4154,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["registerrootmenucontainer",{"_index":2566,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["registrar.service.ts",{"_index":4135,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{},"coverage.html":{}}}],["registrar.service.ts:16",{"_index":4138,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["registrar.service.ts:19",{"_index":4142,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["registrar.service.ts:21",{"_index":4141,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["registrar.service.ts:26",{"_index":4139,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["registration",{"_index":4158,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["registrations",{"_index":4149,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["regprovider",{"_index":4172,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["regular",{"_index":3204,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["reject",{"_index":283,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["related",{"_index":4587,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["relative",{"_index":1596,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["relatively",{"_index":2827,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["release",{"_index":4863,"title":{},"body":{"index.html":{}}}],["released",{"_index":3313,"title":{},"body":{"components/FormInputComponent.html":{}}}],["releases",{"_index":4855,"title":{},"body":{"index.html":{}}}],["relevant",{"_index":3713,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["reload",{"_index":4822,"title":{},"body":{"index.html":{}}}],["remember",{"_index":3748,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["remote",{"_index":4865,"title":{},"body":{"index.html":{}}}],["remove",{"_index":1237,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["removecolumn",{"_index":1509,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["removecolumn(col",{"_index":1571,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["removed",{"_index":1027,"title":{},"body":{"interfaces/CanBeReadOnly.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["render",{"_index":1351,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["rendered",{"_index":1519,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["renderer",{"_index":991,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{}}}],["renderer'},{'name",{"_index":707,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["renderer(item",{"_index":3487,"title":{},"body":{"pipes/FunctionRendererPipe.html":{}}}],["renderer.component",{"_index":1016,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{},"modules/VcdDatagridModule.html":{}}}],["renderer.component.ts",{"_index":980,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"coverage.html":{}}}],["renderer.component.ts:41",{"_index":997,"title":{},"body":{"components/BoldTextRendererComponent.html":{}}}],["renderer.context",{"_index":1848,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["renderer.interface",{"_index":999,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["renderer.interface.ts",{"_index":1799,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["renderer.pipe",{"_index":4431,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["renderer.pipe.ts",{"_index":3482,"title":{},"body":{"pipes/FunctionRendererPipe.html":{},"coverage.html":{}}}],["renderer.pipe.ts:17",{"_index":3485,"title":{},"body":{"pipes/FunctionRendererPipe.html":{}}}],["renderer.rendererspec.type",{"_index":1841,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["renderer.wo.ts",{"_index":1012,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{},"coverage.html":{}}}],["renderer.wo.ts:13",{"_index":1013,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{}}}],["renderer.wo.ts:15",{"_index":1014,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{}}}],["renderer2",{"_index":2573,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/variables.html":{}}}],["renderers",{"_index":1701,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["renderers/bold",{"_index":4432,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["rendererspec",{"_index":987,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["rendering",{"_index":982,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["reopen",{"_index":1424,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["repeat",{"_index":4564,"title":{},"body":{"contributing.html":{}}}],["replace",{"_index":1561,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["repo",{"_index":4799,"title":{},"body":{"index.html":{}}}],["repo(vmware/vmware",{"_index":4881,"title":{},"body":{"index.html":{}}}],["reported",{"_index":2856,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["reporter",{"_index":390,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["reporter'},{'name",{"_index":704,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["reporter.component",{"_index":4397,"title":{},"body":{"modules/VcdActivityReporterModule.html":{}}}],["reporter.component.html",{"_index":661,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["reporter.component.ts",{"_index":655,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"coverage.html":{}}}],["reporter.component.ts:20",{"_index":689,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["reporter.component.ts:21",{"_index":688,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["reporter.component.ts:22",{"_index":690,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["reporter.component.ts:27",{"_index":4297,"title":{},"body":{"components/SpinnerActivityReporterComponent.html":{}}}],["reporter.component.ts:28",{"_index":669,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["reporter.component.ts:36",{"_index":4301,"title":{},"body":{"components/SpinnerActivityReporterComponent.html":{}}}],["reporter.component.ts:40",{"_index":678,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["reporter.component.ts:44",{"_index":4298,"title":{},"body":{"components/SpinnerActivityReporterComponent.html":{}}}],["reporter.component.ts:49",{"_index":675,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["reporter.component.ts:52",{"_index":4300,"title":{},"body":{"components/SpinnerActivityReporterComponent.html":{}}}],["reporter.component.ts:57",{"_index":676,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["reporter.component.ts:67",{"_index":672,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["reporter.component.ts:74",{"_index":674,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["reporter.component.ts:83",{"_index":677,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["reporter.module",{"_index":4405,"title":{},"body":{"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{}}}],["reporter.module.ts",{"_index":4391,"title":{},"body":{"modules/VcdActivityReporterModule.html":{}}}],["reporter.ts",{"_index":370,"title":{},"body":{"classes/ActivityReporter.html":{},"coverage.html":{}}}],["reporter.ts:13",{"_index":388,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["reporter.ts:21",{"_index":414,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["reporter.ts:27",{"_index":407,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["reporter.ts:33",{"_index":413,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["reporter.ts:38",{"_index":402,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["reporter.ts:53",{"_index":404,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["reporter.ts:73",{"_index":397,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["reporter.wo.ts",{"_index":758,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"coverage.html":{}}}],["reporter.wo.ts:10",{"_index":770,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["reporter.wo.ts:11",{"_index":4306,"title":{},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["reporter.wo.ts:12",{"_index":816,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["reporter.wo.ts:13",{"_index":4308,"title":{},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["reporter.wo.ts:16",{"_index":818,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["reporter.wo.ts:17",{"_index":4309,"title":{},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["reporter.wo.ts:20",{"_index":820,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["reporter.wo.ts:24",{"_index":822,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["reporter.wo.ts:33",{"_index":4307,"title":{},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["reporter/activity",{"_index":315,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{}}}],["reporter/banner",{"_index":654,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"coverage.html":{}}}],["reporter/spinner",{"_index":4296,"title":{},"body":{"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"coverage.html":{}}}],["reporterror",{"_index":384,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["reporterror(errortext",{"_index":406,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["reporting",{"_index":375,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"contributing.html":{}}}],["reportsuccess",{"_index":385,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["reportsuccess(successmessage",{"_index":412,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["reposition",{"_index":2821,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["repositions",{"_index":2791,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["repository",{"_index":4526,"title":{},"body":{"contributing.html":{}}}],["represent",{"_index":657,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"classes/Percent.html":{}}}],["representation",{"_index":1314,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["represented",{"_index":4074,"title":{},"body":{"classes/Percent.html":{}}}],["representing",{"_index":3022,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["represents",{"_index":3205,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["request",{"_index":2055,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"contributing.html":{},"index.html":{}}}],["requested",{"_index":1080,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["requests",{"_index":4556,"title":{},"body":{"contributing.html":{}}}],["require",{"_index":106,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["required",{"_index":61,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["requirements",{"_index":4546,"title":{},"body":{"contributing.html":{}}}],["requires",{"_index":3171,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"classes/FormValidators.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["res",{"_index":3406,"title":{},"body":{"classes/FormValidators.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["reset",{"_index":665,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"modules/DropdownModule.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}],["resetposition",{"_index":2806,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["resetposition(element",{"_index":2825,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["resets",{"_index":1651,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["resettopageone",{"_index":1652,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["resize",{"_index":2818,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["resolve",{"_index":284,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["resolve(csvfile",{"_index":2172,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["resolveactivities",{"_index":331,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["resolveactivities(activityresolutionpromises",{"_index":333,"title":{},"body":{"classes/ActivityPromiseResolver.html":{}}}],["resolveactivity",{"_index":332,"title":{},"body":{"classes/ActivityPromiseResolver.html":{}}}],["resolveactivity(activityresolutionpromise",{"_index":350,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["resolveisreadytosearch",{"_index":177,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["resolver",{"_index":353,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["resolver.ts",{"_index":316,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{},"coverage.html":{}}}],["resolver.ts:51",{"_index":351,"title":{},"body":{"classes/ActivityPromiseResolver.html":{}}}],["resolver.ts:71",{"_index":335,"title":{},"body":{"classes/ActivityPromiseResolver.html":{}}}],["resource",{"_index":431,"title":{},"body":{"interfaces/ActivityResponse.html":{}}}],["response",{"_index":320,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{},"injectables/UnitFormatter.html":{}}}],["response.length",{"_index":427,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["response.map(item",{"_index":425,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["response.object",{"_index":422,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["response.response.error",{"_index":419,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["responsible",{"_index":1804,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/DropdownFocusHandlerService.html":{}}}],["rest",{"_index":1719,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["restitem",{"_index":1808,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{}}}],["result",{"_index":159,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.items",{"_index":1399,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["result.search(/[\",\\n]/g",{"_index":1952,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["result.totalitems",{"_index":1401,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["result.ts",{"_index":4147,"title":{},"body":{"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["result[0",{"_index":368,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["resultactivated",{"_index":3994,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["resultactivatedevent",{"_index":3955,"title":{"interfaces/ResultActivatedEvent.html":{}},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"coverage.html":{}}}],["resulting",{"_index":969,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["resultitem.displaytext",{"_index":4060,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["results",{"_index":161,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":249,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["retrieve",{"_index":802,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["return",{"_index":280,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":363,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"classes/IdGenerator.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["returns",{"_index":224,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["returnvalue",{"_index":424,"title":{},"body":{"classes/ActivityReporter.html":{},"pipes/NestedPropertyPipe.html":{}}}],["reusable",{"_index":4805,"title":{},"body":{"index.html":{}}}],["reused",{"_index":3138,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["reverse",{"_index":1323,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["reversed",{"_index":1322,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["review",{"_index":4584,"title":{},"body":{"contributing.html":{}}}],["rgba(250",{"_index":3583,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["rgba(255",{"_index":3586,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["right",{"_index":1052,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"components/FormCheckboxComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["rightlabel",{"_index":3244,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["risk",{"_index":1888,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["role",{"_index":2961,"title":{},"body":{"classes/ErrorBannerWidgetObject.html":{}}}],["root",{"_index":635,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"injectables/QuickSearchService.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["root.componentinstance",{"_index":3223,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["rootelement",{"_index":450,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["rootmenucontainer",{"_index":2660,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["rootmenutrigger",{"_index":2567,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["rough",{"_index":4532,"title":{},"body":{"contributing.html":{}}}],["roughly",{"_index":4606,"title":{},"body":{"contributing.html":{}}}],["rounds",{"_index":1791,"title":{},"body":{"classes/CommonUtil.html":{}}}],["roundto",{"_index":1784,"title":{},"body":{"classes/CommonUtil.html":{}}}],["roundto(value",{"_index":1788,"title":{},"body":{"classes/CommonUtil.html":{}}}],["route",{"_index":4823,"title":{},"body":{"index.html":{}}}],["routermodule",{"_index":4422,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["routes",{"_index":4829,"title":{},"body":{"index.html":{}}}],["row",{"_index":1284,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["row.detailbutton",{"_index":1427,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["row.map((cell",{"_index":1928,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["row.some((cell",{"_index":1924,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["row_action_container",{"_index":4934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["row_button_container",{"_index":4933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["row_height",{"_index":1300,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rowheight",{"_index":1345,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["rows",{"_index":1310,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["rows.map((row",{"_index":1899,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["rows.some(haspotentialinjection",{"_index":1902,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["rules",{"_index":3144,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["run",{"_index":3397,"title":{},"body":{"classes/FormValidators.html":{},"index.html":{}}}],["running",{"_index":662,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/FormValidators.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"index.html":{}}}],["runs",{"_index":544,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/TestElement.html":{}}}],["rxjs",{"_index":1268,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"dependencies.html":{}}}],["rxjs/internal",{"_index":3510,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["rxjs/operators",{"_index":2287,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["safety",{"_index":1768,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"miscellaneous/typealiases.html":{}}}],["same",{"_index":796,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["sanitization",{"_index":2217,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["sanitize",{"_index":2035,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"miscellaneous/enumerations.html":{}}}],["sanitizecheckboxhint",{"_index":2085,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["sanitizecheckboxlabel",{"_index":2083,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["sanitizecontrol",{"_index":2129,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["sanitizeinfomessage",{"_index":2087,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["sanitizestring",{"_index":4637,"title":{},"body":{"coverage.html":{}}}],["sanitizestring(result",{"_index":1954,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["sanitizestring(value",{"_index":1958,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["satisfy",{"_index":977,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["saving",{"_index":1375,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["scaffolding",{"_index":4834,"title":{},"body":{"index.html":{}}}],["scenario",{"_index":4125,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["scope",{"_index":1982,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["screen",{"_index":23,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["scroll",{"_index":2531,"title":{},"body":{"classes/DomUtil.html":{},"directives/DynamicDropdownPositionDirective.html":{}}}],["scrolling",{"_index":2742,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"miscellaneous/variables.html":{}}}],["scrolls",{"_index":2529,"title":{},"body":{"classes/DomUtil.html":{}}}],["scrolltoelement",{"_index":2525,"title":{},"body":{"classes/DomUtil.html":{}}}],["scrolltoelement(elref",{"_index":2526,"title":{},"body":{"classes/DomUtil.html":{}}}],["scrollwidth",{"_index":1233,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["search",{"_index":165,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["search'},{'name",{"_index":741,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["search(criteria",{"_index":240,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["search.as(id",{"_index":2007,"title":{},"body":{"classes/CypressWidgetObjectFinder.html":{}}}],["search.component",{"_index":4119,"title":{},"body":{"modules/QuickSearchModule.html":{}}}],["search.component.html",{"_index":3985,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["search.component.scss",{"_index":3986,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["search.component.ts",{"_index":3944,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"coverage.html":{}}}],["search.module",{"_index":4411,"title":{},"body":{"modules/VcdComponentsModule.html":{}}}],["search.module.ts",{"_index":4117,"title":{},"body":{"modules/QuickSearchModule.html":{}}}],["search.provider",{"_index":3950,"title":{},"body":{"interfaces/PartialResult.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["search.provider.ts",{"_index":167,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["search.provider.ts:114",{"_index":229,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:122",{"_index":231,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:19",{"_index":255,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:23",{"_index":257,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:26",{"_index":196,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:31",{"_index":211,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:33",{"_index":4120,"title":{},"body":{"interfaces/QuickSearchProvider.html":{}}}],["search.provider.ts:36",{"_index":201,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:37",{"_index":4132,"title":{},"body":{"classes/QuickSearchProviderDefaults.html":{}}}],["search.provider.ts:38",{"_index":4131,"title":{},"body":{"classes/QuickSearchProviderDefaults.html":{}}}],["search.provider.ts:39",{"_index":4130,"title":{},"body":{"classes/QuickSearchProviderDefaults.html":{}}}],["search.provider.ts:40",{"_index":4133,"title":{},"body":{"classes/QuickSearchProviderDefaults.html":{}}}],["search.provider.ts:41",{"_index":209,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:43",{"_index":214,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:44",{"_index":213,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:45",{"_index":215,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:51",{"_index":232,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:59",{"_index":248,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:65",{"_index":239,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:75",{"_index":241,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:90",{"_index":222,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:99",{"_index":227,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.service",{"_index":3952,"title":{},"body":{"interfaces/PartialResult.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["search.service.ts",{"_index":4148,"title":{},"body":{"injectables/QuickSearchService.html":{},"coverage.html":{}}}],["search.service.ts:13",{"_index":4161,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["search.service.ts:19",{"_index":4155,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["search.service.ts:51",{"_index":4157,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["search.service.ts:62",{"_index":4153,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["search/quick",{"_index":3943,"title":{},"body":{"interfaces/PartialResult.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"modules/VcdComponentsModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["searchcriteria",{"_index":223,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchcriteria(value",{"_index":3997,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searches",{"_index":242,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["searchid",{"_index":4002,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searching",{"_index":205,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["searchinput",{"_index":4001,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchresult",{"_index":4023,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchsection",{"_index":3953,"title":{"interfaces/SearchSection.html":{}},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"coverage.html":{}}}],["searchsection.isloading",{"_index":4021,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchsection.provider.search(this.searchcriteria",{"_index":4025,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchsection.provider.sectionname",{"_index":4062,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchsection.result",{"_index":4030,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchsection.result.items.length",{"_index":4070,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchsection.result?.items?.length",{"_index":4069,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchsection.result?.total",{"_index":4068,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchsections",{"_index":4006,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchservice",{"_index":3995,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["secondhost",{"_index":4202,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["section",{"_index":43,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["section.isloading",{"_index":4042,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["section.result?.items.some((resultitem",{"_index":4059,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["section.result?.items[0",{"_index":4044,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["sectionname",{"_index":180,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["sections",{"_index":3978,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["sectiontitle",{"_index":3957,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["see",{"_index":2309,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"contributing.html":{},"index.html":{}}}],["seen",{"_index":1969,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["select",{"_index":719,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["select'},{'name",{"_index":736,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["select.component",{"_index":3686,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["select.component.html",{"_index":3370,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["select.component.scss",{"_index":3369,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["select.component.ts",{"_index":3368,"title":{},"body":{"components/FormSelectComponent.html":{},"components/FormlySelectComponent.html":{},"coverage.html":{}}}],["select.component.ts:23",{"_index":3372,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["select.component.ts:27",{"_index":3471,"title":{},"body":{"components/FormlySelectComponent.html":{}}}],["select.component.ts:29",{"_index":3374,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["select.component.ts:31",{"_index":3473,"title":{},"body":{"components/FormlySelectComponent.html":{}}}],["select/form",{"_index":3367,"title":{},"body":{"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/VcdFormModule.html":{},"coverage.html":{}}}],["selectall",{"_index":2033,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"miscellaneous/enumerations.html":{}}}],["selectallcontrol",{"_index":2127,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["selectcolumn(column",{"_index":2141,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["selectcolumnstext",{"_index":2066,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["selected",{"_index":40,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["selectedcolumns",{"_index":2014,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["selectedcombounit",{"_index":3801,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["selectedentities",{"_index":54,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["selectedentities(entities",{"_index":273,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["selectedfilters",{"_index":2381,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["selectedindex",{"_index":1623,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["selecteditem",{"_index":4007,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["selecteditemindex",{"_index":4051,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["selectedoption",{"_index":3371,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["selectedoption.display",{"_index":3381,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["selectedoption.istranslatable",{"_index":3380,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["selectedunit",{"_index":3808,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["selectedunit(value",{"_index":3728,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["selectedunitdisplayvalue",{"_index":3888,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["selectfirst(ensurefirstsectionisloaded",{"_index":4035,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["selecting",{"_index":1309,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["selection",{"_index":93,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["selection[0",{"_index":1480,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["selectionchanged",{"_index":1505,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["selectiontype",{"_index":1265,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["selectiontype(selectiontype",{"_index":1429,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["selectnext(down",{"_index":4045,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["selectoption",{"_index":2355,"title":{"interfaces/SelectOption.html":{}},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/FormSelectComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/SelectOption.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"coverage.html":{}}}],["selectoption.display",{"_index":4177,"title":{},"body":{"interfaces/SelectOption.html":{}}}],["selectoptions",{"_index":3470,"title":{},"body":{"components/FormlySelectComponent.html":{}}}],["selector",{"_index":461,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["selects",{"_index":1524,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/SortedColumn.html":{}}}],["selectunit",{"_index":3880,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["selectunit(unit",{"_index":3893,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["self",{"_index":3274,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["semantic",{"_index":4856,"title":{},"body":{"index.html":{}}}],["send",{"_index":552,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["sending",{"_index":2054,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["sendkeyboardevent",{"_index":766,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["sendkeyboardevent(eventtype",{"_index":571,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetObject.html":{}}}],["separate",{"_index":4129,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"index.html":{}}}],["separated",{"_index":1749,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["separator",{"_index":2622,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["separators",{"_index":128,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["server",{"_index":1335,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"index.html":{}}}],["serves",{"_index":1814,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["service",{"_index":2698,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["set",{"_index":36,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["setactions(actions",{"_index":254,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["setconfig(config",{"_index":4192,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["setconfig(val",{"_index":2282,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["setdisabled(disabled",{"_index":4234,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["setdisabledstate",{"_index":850,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":880,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["setdropdownmenu(dropdown",{"_index":2837,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["seterrormessage(val",{"_index":2947,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["setfilter",{"_index":3089,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["setfilter(filtertype",{"_index":3090,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["sethostposition(quadrant",{"_index":4232,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["sethosttext(text",{"_index":4236,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["setinputvalue",{"_index":767,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetObject.html":{}}}],["setinputvalue(value",{"_index":811,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["setinputvalueunit",{"_index":3881,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["setinputvalueunit(unit",{"_index":3895,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["sets",{"_index":813,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["setselectedentities(entities",{"_index":256,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["setsize(size",{"_index":3578,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["setstyle",{"_index":4689,"title":{},"body":{"coverage.html":{}}}],["setstyle(el",{"_index":1182,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["setstyle(this.hostelement",{"_index":1215,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["setstyle(tip.container",{"_index":1095,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["setstyle(tip.content",{"_index":1143,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["setter",{"_index":2272,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/LoadingIndicatorComponent.html":{}}}],["settimeout",{"_index":1070,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["setting",{"_index":557,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["setunit(val",{"_index":2427,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["setunitoptions(val",{"_index":2424,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["setunitoptionstonone",{"_index":3882,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["setunitoptionstopercent",{"_index":3883,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["setvalue",{"_index":2236,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["setvalue(value",{"_index":2276,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["setvalue(values",{"_index":2337,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["setvcdcomponentrendereroutlet(renderer",{"_index":1838,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["setwidth(width",{"_index":4230,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["shape",{"_index":3250,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["share",{"_index":3233,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["shared",{"_index":1066,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["shift",{"_index":2849,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["shift+shift",{"_index":3967,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["shoulddisplaycontextualactionsinrow",{"_index":1486,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["shoulddisplaycontextualactionsontop",{"_index":1482,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["shouldfillparent",{"_index":1471,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["shouldsanitize",{"_index":1868,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["shouldsanitize)).join",{"_index":1930,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["shouldsanitize)).join('\\n",{"_index":1901,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["shouldshowactionbarontop",{"_index":1450,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["shouldshowbubbles",{"_index":2137,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["shouldshowpagenumberinput",{"_index":1348,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["shouldshowpagesizeselector",{"_index":1347,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["shouldwait",{"_index":178,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["show",{"_index":680,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"classes/BaseFormControl.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"miscellaneous/variables.html":{}}}],["show/hide",{"_index":1647,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["showasterisk",{"_index":854,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["showcases",{"_index":4813,"title":{},"body":{"index.html":{}}}],["showclippedtextdirective",{"_index":753,"title":{"directives/ShowClippedTextDirective.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/CliptextConfig.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["showclippedtextdirective.instancecount",{"_index":1206,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["showclippedtextdirectivemodule",{"_index":2769,"title":{"modules/ShowClippedTextDirectiveModule.html":{}},"body":{"modules/DropdownModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{},"modules.html":{},"overview.html":{}}}],["showclippedtextdirectivetesthelper",{"_index":4197,"title":{"classes/ShowClippedTextDirectiveTestHelper.html":{}},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"coverage.html":{}}}],["showclippedtextdirectivetesthostcomponent",{"_index":742,"title":{"components/ShowClippedTextDirectiveTestHostComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"coverage.html":{}}}],["showerrors",{"_index":856,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["showing",{"_index":1754,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["shown",{"_index":141,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SelectOption.html":{},"interfaces/SortedColumn.html":{},"injectables/UnitFormatter.html":{},"miscellaneous/enumerations.html":{}}}],["shows",{"_index":21,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["showsectiontitle(searchsection",{"_index":4065,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["showspinner",{"_index":3552,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["showunlimitedoption",{"_index":3449,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["sibling",{"_index":2584,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["side",{"_index":1882,"title":{},"body":{"injectables/CsvExporterService.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["signature",{"_index":3477,"title":{},"body":{"interfaces/FunctionRenderer.html":{},"interfaces/PaginationCallback.html":{},"contributing.html":{}}}],["signed",{"_index":4527,"title":{},"body":{"contributing.html":{}}}],["signpost",{"_index":3298,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["simplechanges",{"_index":3681,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["simplifying",{"_index":1242,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["simply",{"_index":4589,"title":{},"body":{"contributing.html":{}}}],["single",{"_index":87,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularWidgetObjectFinder.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressWidgetObjectFinder.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["singleton",{"_index":1062,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["singleunitdisplaytext",{"_index":3890,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["sit",{"_index":1515,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["site",{"_index":1776,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["sixty",{"_index":2468,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["size",{"_index":1037,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["size(size",{"_index":3579,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["sized",{"_index":3559,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["sizes",{"_index":3564,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["sizes.md",{"_index":3574,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["sizing",{"_index":3566,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["skip",{"_index":4040,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["skipself",{"_index":2617,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/variables.html":{}}}],["sm",{"_index":1056,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/LoadingIndicatorComponent.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{}}}],["sm(small",{"_index":3565,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["smaller",{"_index":1339,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["smooth",{"_index":2542,"title":{},"body":{"classes/DomUtil.html":{}}}],["somerecord.property",{"_index":1738,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["something",{"_index":3170,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["sometimes",{"_index":2581,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{}}}],["sortable",{"_index":1765,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["sortcolumn",{"_index":1371,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["sorted",{"_index":1319,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NumberUnit.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["sortedcolumn",{"_index":1320,"title":{"interfaces/SortedColumn.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["sorting",{"_index":1361,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["sorting/filtering",{"_index":1742,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["sound",{"_index":1518,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"index.html":{}}}],["space",{"_index":891,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["spaces",{"_index":1935,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["spdx",{"_index":2777,"title":{},"body":{"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["spec",{"_index":1583,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["special",{"_index":1957,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["specific",{"_index":326,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["specification",{"_index":1728,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["specifications",{"_index":2313,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["specified",{"_index":584,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormInputComponent.html":{},"components/LoadingIndicatorComponent.html":{},"classes/TestElement.html":{}}}],["specifies",{"_index":1521,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["specify",{"_index":3687,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"miscellaneous/variables.html":{}}}],["specs",{"_index":3211,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["spinner",{"_index":744,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"modules/VcdActivityReporterModule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["spinneractivityreportercomponent",{"_index":743,"title":{"components/SpinnerActivityReporterComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"modules/VcdActivityReporterModule.html":{},"coverage.html":{},"overview.html":{}}}],["spinneractivityreporterwidgetobject",{"_index":4303,"title":{"classes/SpinnerActivityReporterWidgetObject.html":{}},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{},"coverage.html":{}}}],["spinners",{"_index":3562,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["spinnersize",{"_index":3557,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"miscellaneous/typealiases.html":{}}}],["splitproperty",{"_index":3628,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["splitproperty.length",{"_index":3630,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["spotlight",{"_index":3961,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["squash",{"_index":4586,"title":{},"body":{"contributing.html":{}}}],["stackblitz/sdk",{"_index":4745,"title":{},"body":{"dependencies.html":{}}}],["stale",{"_index":1615,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["start",{"_index":793,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["startactivity",{"_index":386,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["started",{"_index":4516,"title":{"contributing.html":{},"index.html":{}},"body":{}}],["starting",{"_index":415,"title":{},"body":{"classes/ActivityReporter.html":{},"injectables/CsvExporterService.html":{}}}],["starts",{"_index":1937,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["start}${input}${end",{"_index":2517,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["state",{"_index":133,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["state.filters",{"_index":1637,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["state.filters.map((filter",{"_index":1639,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["state.page",{"_index":1634,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["state.page.current",{"_index":1635,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["state.page.size",{"_index":1636,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["state.sort",{"_index":1641,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["state.sort.by",{"_index":1643,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["state.sort.reverse",{"_index":1645,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["statements",{"_index":4608,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":25,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormInputComponent.html":{},"classes/FormValidators.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/IdGenerator.html":{},"interfaces/LocatorDriver.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/enumerations.html":{}}}],["static/featured",{"_index":11,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["static_featured",{"_index":37,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"miscellaneous/enumerations.html":{}}}],["staticactionstyling",{"_index":16,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["statically",{"_index":4827,"title":{},"body":{"index.html":{}}}],["status",{"_index":339,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["staying",{"_index":4570,"title":{},"body":{"contributing.html":{}}}],["steps",{"_index":4557,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["still",{"_index":3198,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["store",{"_index":868,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["stored",{"_index":3327,"title":{},"body":{"components/FormInputComponent.html":{},"index.html":{}}}],["strictmetadataemit",{"_index":2855,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["strictnullchecks",{"_index":3200,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["string",{"_index":73,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["string(value",{"_index":3186,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["strings",{"_index":2200,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["striving",{"_index":4551,"title":{},"body":{"contributing.html":{}}}],["structure",{"_index":1064,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":582,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/CliptextConfig.html":{},"classes/DomUtil.html":{},"directives/ShowClippedTextDirective.html":{},"classes/TestElement.html":{},"contributing.html":{}}}],["styles",{"_index":1212,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"directives/ShowClippedTextDirective.html":{}}}],["styleurls",{"_index":1381,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["styling",{"_index":144,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"components/FormCheckboxComponent.html":{}}}],["sub",{"_index":45,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularLocatorDriver.html":{},"classes/BaseFormControl.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"classes/TestElement.html":{}}}],["subclass",{"_index":3143,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["subclasses",{"_index":3145,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["subject",{"_index":2252,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["submit",{"_index":4544,"title":{},"body":{"contributing.html":{}}}],["subscribable",{"_index":3508,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["subscribe",{"_index":3491,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["subscribe(observable",{"_index":3495,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["subscribes",{"_index":3499,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["subscription",{"_index":3502,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["subscription.unsubscribe",{"_index":3523,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["subscriptions",{"_index":3507,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["subscriptiontracker",{"_index":1273,"title":{"classes/SubscriptionTracker.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"coverage.html":{}}}],["subscriptiontracker(this",{"_index":1550,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["substracting",{"_index":1680,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["subtext",{"_index":2462,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["subtracker",{"_index":1549,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["succeeded",{"_index":345,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["succeeds",{"_index":343,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["success",{"_index":342,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["successmessage",{"_index":334,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["sucesss",{"_index":355,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["sucesstext",{"_index":768,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["such",{"_index":2907,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":276,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["super(controldirective",{"_index":3278,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["super(filtercontainer",{"_index":2366,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["super(ngcontrol",{"_index":3375,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["super(promiseresolver",{"_index":693,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["supply",{"_index":1454,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["support",{"_index":1745,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"modules.html":{}}}],["supported",{"_index":380,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["supports",{"_index":3282,"title":{},"body":{"components/FormInputComponent.html":{}}}],["suppress",{"_index":2854,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["sure",{"_index":1771,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{}}}],["svg",{"_index":4889,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":2214,"title":{},"body":{"classes/DataExporterWidgetObject.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"components/FormCheckboxComponent.html":{},"miscellaneous/enumerations.html":{}}}],["symbol.iterator",{"_index":602,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["sync",{"_index":4571,"title":{},"body":{"contributing.html":{}}}],["syntax",{"_index":4602,"title":{},"body":{"contributing.html":{}}}],["t",{"_index":57,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/LocatorDriver.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["t[p",{"_index":975,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["tab",{"_index":1939,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["table",{"_index":4735,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":4734,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":4873,"title":{},"body":{"index.html":{}}}],["tag(npm",{"_index":4871,"title":{},"body":{"index.html":{}}}],["tagname",{"_index":632,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["tagname`on",{"_index":3203,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["tagnameon",{"_index":3238,"title":{},"body":{"interfaces/FindableWidget.html":{}}}],["take",{"_index":318,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["takes",{"_index":336,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["task",{"_index":2165,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["team",{"_index":4519,"title":{},"body":{"contributing.html":{}}}],["technically",{"_index":3194,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["template",{"_index":652,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"pipes/NestedPropertyPipe.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["templateoptions",{"_index":4463,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["templateref",{"_index":1751,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["templates",{"_index":4471,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["templateurl",{"_index":660,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["test",{"_index":3113,"title":{},"body":{"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["test:components",{"_index":4839,"title":{},"body":{"index.html":{}}}],["test:i18n",{"_index":4840,"title":{},"body":{"index.html":{}}}],["testbed",{"_index":633,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["testbed.configuretestingmodule",{"_index":3106,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["testbed.createcomponent(arg",{"_index":638,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["testbed.createcomponent(componentconstructor",{"_index":3210,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["testelement",{"_index":449,"title":{"classes/TestElement.html":{}},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/FilterTestHostComponent.html":{},"classes/TestElement.html":{},"coverage.html":{}}}],["testelement([el",{"_index":550,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["testelement([root",{"_index":649,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["testelement([this.elements[counter",{"_index":607,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["testelement(nextelements",{"_index":493,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["testelement(result",{"_index":597,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["testelements",{"_index":440,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["testhostcomponent",{"_index":3086,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["testing",{"_index":2185,"title":{},"body":{"classes/DataExporterWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{}}}],["testinput",{"_index":3119,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["tests",{"_index":2310,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tests's",{"_index":636,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["text",{"_index":247,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["text').length",{"_index":4278,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["text.directive",{"_index":1276,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{}}}],["text.directive.module",{"_index":2787,"title":{},"body":{"modules/DropdownModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{}}}],["text.directive.module.ts",{"_index":4196,"title":{},"body":{"modules/ShowClippedTextDirectiveModule.html":{}}}],["text.directive.test",{"_index":4198,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"coverage.html":{}}}],["text.directive.ts",{"_index":1031,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["text.directive.ts:224",{"_index":4187,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:227",{"_index":4180,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:246",{"_index":4188,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:247",{"_index":4191,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:248",{"_index":4186,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:253",{"_index":4179,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:257",{"_index":4185,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:263",{"_index":4181,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:276",{"_index":4184,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:282",{"_index":4182,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:290",{"_index":4189,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:301",{"_index":4190,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:305",{"_index":4183,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text/csv;charset=utf",{"_index":1904,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["text2",{"_index":4283,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["textarea",{"_index":814,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["textcontent",{"_index":3193,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["textextractor",{"_index":1008,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{}}}],["textextractor(record",{"_index":1010,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{}}}],["texticon",{"_index":151,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"miscellaneous/enumerations.html":{}}}],["texting",{"_index":4289,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["textinput",{"_index":3288,"title":{},"body":{"components/FormInputComponent.html":{}}}],["textkey",{"_index":76,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{}}}],["textoverflow",{"_index":1219,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["then(result",{"_index":365,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["thing",{"_index":1950,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["thirty",{"_index":2466,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["this._actions",{"_index":270,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._columns",{"_index":1390,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._columns.push(col",{"_index":1570,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._columns.splice(colindex",{"_index":1572,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._columns[colindex",{"_index":1569,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._config",{"_index":2299,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this._config.queryfield",{"_index":2311,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this._config.value",{"_index":2300,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this._errormessage",{"_index":2949,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["this._height",{"_index":1465,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._isrequestpending",{"_index":2107,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this._multiplier",{"_index":3868,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["this._open",{"_index":2096,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this._pagination",{"_index":1456,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._pagination.pagesizeoptions",{"_index":1457,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._pagination.shouldshowpagenumberinput",{"_index":1459,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._pagination.shouldshowpagesizeselector",{"_index":1458,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._progress",{"_index":2109,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this._searchcriteria",{"_index":3996,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this._selectedentities",{"_index":274,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this._selectiontype",{"_index":1430,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._size",{"_index":3581,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["this._unit",{"_index":2439,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["this._unitname",{"_index":3869,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["this._unitoptions",{"_index":2433,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this._unitoptions.foreach((unitoption",{"_index":3700,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this._unitoptions.length",{"_index":3695,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this._unitoptions[0",{"_index":3697,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.actionreporter",{"_index":1440,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.actionreporter.monitorget(actionhandlerresponse",{"_index":1441,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.actions.filter",{"_index":1560,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.actions.length",{"_index":1451,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.actions.some",{"_index":1443,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.activate",{"_index":1198,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["this.addwildcard(value",{"_index":2515,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["this.alias",{"_index":1994,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["this.assignvalue(renderer.rendererspec.config",{"_index":1847,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.attachrenderer",{"_index":1846,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.bestunit",{"_index":3737,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.bestunit.getmultiplier",{"_index":3747,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.bestvalue",{"_index":3738,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.buildpartial",{"_index":3049,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.calculatepagesize",{"_index":1662,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.cfr.resolvecomponentfactory(this.componenttype",{"_index":1851,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.chainable",{"_index":1999,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["this.changedetectorref.detectchanges",{"_index":1411,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["this.changes.next",{"_index":2307,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this.clearselectioninformation",{"_index":1431,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.closed",{"_index":2951,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["this.closevcddropdown",{"_index":2686,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.clrdropdownmenuel",{"_index":2640,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.column.filter",{"_index":3127,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["this.columns",{"_index":2135,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.columns.filter((col",{"_index":2139,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.columns.findindex((column",{"_index":1574,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.columns.reduce((previousvalue",{"_index":2143,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.columnsconfig",{"_index":1578,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.columnsupdated.emit",{"_index":1393,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.combooptions",{"_index":3699,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.combooptions.find",{"_index":3802,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.combooptions.push(combooption",{"_index":3706,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.combooptionunitmap.clear",{"_index":3698,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.combooptionunitmap.get(displaycombounit",{"_index":3830,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.combooptionunitmap.get(selectedcombounit",{"_index":3809,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.combooptionunitmap.get(this.unitdropdown.selectedoption",{"_index":3824,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.combooptionunitmap.set(combooption",{"_index":3704,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.component.displayvalue",{"_index":3918,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.component.errortext",{"_index":825,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["this.component.formcontrol",{"_index":3917,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.component.formgroup.get('combounitoptions",{"_index":3922,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.component.formgroup.get('combounitoptions').value",{"_index":3926,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.component.formgroup.get('limited",{"_index":3921,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.component.formgroup.get('unlimited",{"_index":3920,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.component.inputvalueunit",{"_index":3925,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.component.running",{"_index":824,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["this.component.selectedunit",{"_index":3923,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.component.successmessage",{"_index":826,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["this.component.unitoptions",{"_index":3927,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.componentinstance.directive.mouseoutdelay",{"_index":4218,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.componentinstance.disabled",{"_index":4261,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.componentinstance.div.nativeelement",{"_index":4220,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.componentinstance.div2.nativeelement",{"_index":4222,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.componentinstance.text",{"_index":4263,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.componentref",{"_index":1845,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.componentref.instance",{"_index":1853,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.componentref.instance.config",{"_index":1854,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.componenttype",{"_index":1840,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.computebestunitandvalue(this.initialvalue",{"_index":3740,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.computebestunitandvalue(value",{"_index":3775,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.condition(operators.eq",{"_index":3068,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.condition(operators.ge",{"_index":3073,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.condition(operators.gt",{"_index":3072,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.condition(operators.le",{"_index":3071,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.condition(operators.lt",{"_index":3070,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.condition(operators.neq",{"_index":3069,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.config",{"_index":2513,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["this.config.customfiql",{"_index":2489,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["this.config.options.find(option",{"_index":2484,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["this.config.wildcardposition",{"_index":2514,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["this.contentareaelement",{"_index":2881,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.contentareaelement.getboundingclientrect",{"_index":2892,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.contextualactionposition",{"_index":1483,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.contextualactions",{"_index":1447,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.contextualactions.length",{"_index":1452,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.createformgroup",{"_index":2254,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this.csvexporterservice.createcsv(data",{"_index":2169,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.csvexporterservice.downloadcsvfile(csvfile",{"_index":2170,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.currentdetailrowconfig",{"_index":1585,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.currentdetailrowconfig.count",{"_index":1588,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.currentdetailrowconfig.index",{"_index":1587,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.currentdetailrowconfig.record",{"_index":1586,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.currentdetailrowrenderspec",{"_index":1589,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.currentfocuseditem",{"_index":2735,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.currentfocuseditem.element.blur",{"_index":2739,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.currentfocuseditem.left",{"_index":2751,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.currentfocuseditem.left.closemenu",{"_index":2753,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.currentoperator",{"_index":3052,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.currentpanespec",{"_index":1593,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.currentpanespecrecord",{"_index":1592,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.dataexportrequest.emit",{"_index":2123,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.datagrid",{"_index":1629,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.detailservice.close",{"_index":1428,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.detailservice.isopen",{"_index":1420,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.detailservice.open(row.item",{"_index":1426,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.detailservice.state",{"_index":1419,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.items.change.subscribe",{"_index":1723,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.items.displayed.length",{"_index":1724,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.rows",{"_index":1611,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.rows.find((findrow",{"_index":1421,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.rows.notifyonchanges",{"_index":1612,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.selected",{"_index":1630,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.selection.clearselection",{"_index":1605,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.selection.current",{"_index":1475,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.selection.current.length",{"_index":1476,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.selection.currentsingle",{"_index":1474,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.selection.setselected(found",{"_index":1606,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.selection.updatecurrent(nextselection",{"_index":1610,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.singleselected",{"_index":1631,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagridselection",{"_index":1717,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagridselection.length",{"_index":1485,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagridselectionchange",{"_index":1506,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.deactivate",{"_index":1197,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["this.defaultspinnersize",{"_index":3560,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["this.detachrenderer",{"_index":1849,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.detailcomponent",{"_index":1590,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.detailpane.component",{"_index":1594,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.detectchanges",{"_index":580,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.disabled",{"_index":933,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/CliptextConfig.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"directives/ShowClippedTextDirective.html":{}}}],["this.dismissed.next",{"_index":2953,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["this.document.body.classlist.contains(no_scrolling_classname",{"_index":2880,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.document.body.queryselector(content_area_selector",{"_index":2882,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.dosearch",{"_index":3998,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.downloaddata(rows",{"_index":2160,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.downloadingmessage",{"_index":2122,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.driver.getbytext('button",{"_index":944,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["this.dropdownmenuelement",{"_index":2864,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.dropdownmenuelement.getboundingclientrect",{"_index":2869,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.dropdownmenurect",{"_index":2868,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.dropdowntriggerel",{"_index":2635,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.dropdowntriggerel.innertext",{"_index":2689,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.dropdowntriggerelement",{"_index":2862,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.dropdowntriggerelement.getboundingclientrect",{"_index":2867,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.dropdowntriggerelement.queryselector('button.first",{"_index":2895,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.dropdowntriggerelement.queryselector('clr",{"_index":2865,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.dropdowntriggerrect",{"_index":2866,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.elements.length",{"_index":543,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elements.map((el",{"_index":536,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elements.map((element",{"_index":531,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elements[0].componentinstance",{"_index":589,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elements[0].injector",{"_index":591,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elements[0].nativeelement",{"_index":572,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elements[0].nativeelement.disabled",{"_index":528,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elements[0].nativeelement.style.getpropertyvalue(key",{"_index":586,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elements[0].nativeelement.textcontent.trim",{"_index":525,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elements[0].nativeelement.value",{"_index":526,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elements[0].query(by.directive(type)).componentinstance",{"_index":601,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elref.nativeelement",{"_index":2863,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.errorlabels",{"_index":929,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["this.errorlabels.length",{"_index":928,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.errorlabels.reduce",{"_index":3839,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.errormessagechange.emit",{"_index":2952,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["this.errors",{"_index":3773,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.errortext",{"_index":696,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["this.exportdata.bind(this",{"_index":2124,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.exportstage",{"_index":2121,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.fb.group",{"_index":2483,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.fieldnamemap",{"_index":2181,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.fieldnamemap.get(fieldname",{"_index":2176,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.fieldnamemap.has(fieldname",{"_index":2175,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.filename",{"_index":2171,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.filter",{"_index":3117,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["this.filtercontainer.open",{"_index":2458,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["this.findcolumnindex(col",{"_index":1568,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.findelement('.spinner",{"_index":4310,"title":{},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["this.findelement('clr",{"_index":827,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{}}}],["this.findelement('strong').nativeelement.textcontent",{"_index":1017,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{}}}],["this.findelement(cssselector",{"_index":3189,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.findelement(cssselector).nativeelement",{"_index":3933,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.findelements(cssselector).map((el",{"_index":3191,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.findparent(cssselector",{"_index":501,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.findparents(debugel.parent",{"_index":595,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.findparents(this.elements[0].parent",{"_index":596,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.findwidgets(params",{"_index":3225,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.fixture",{"_index":551,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.fixture.componentinstance",{"_index":640,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.fixture.debugelement",{"_index":3214,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.fixture.debugelement).query(by.css(query",{"_index":645,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["this.fixture.destroy",{"_index":4280,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.fixture.detectchanges",{"_index":533,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.flatlistofavailableactions",{"_index":271,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.focushandlerservice.listentoarrowkeys(rootmenucontainer",{"_index":2661,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.focushandlerservice.movefocus(direction.down",{"_index":2668,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.focushandlerservice.movefocus(direction.right",{"_index":2667,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.focushandlerservice.movefocusto(this.menutrigger",{"_index":2662,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.focushandlerservice.unlistenfuncs.foreach((unlisten",{"_index":2657,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.forcedropdownopen",{"_index":2151,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.format(value",{"_index":4375,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["this.formcontrol.enabled",{"_index":925,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["this.formcontrol.errors",{"_index":3842,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formcontrol.pristine",{"_index":926,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["this.formcontrol.valid",{"_index":927,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["this.formcontrol.value",{"_index":3376,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["this.formcontrol.value.tostring",{"_index":3379,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["this.formcontrolnamedirective",{"_index":923,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["this.formcontrolnamedirective.control",{"_index":924,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["this.formgroup",{"_index":2147,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.addcontrol(option.value",{"_index":2372,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["this.formgroup.controls[col.fieldname].value",{"_index":2140,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.formgroup.controls[column.fieldname].setvalue(selected",{"_index":2142,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.formgroup.controls[column.fieldname].setvalue(true",{"_index":2150,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.formgroup.controls[column.fieldname].value",{"_index":2136,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.formgroup.get('combounitoptions').disable",{"_index":3785,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('combounitoptions').enable",{"_index":3789,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('combounitoptions').setvalue(value",{"_index":3729,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('combounitoptions').value",{"_index":3800,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('filterselect').value",{"_index":2490,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["this.formgroup.get('filtertext').value",{"_index":2512,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["this.formgroup.get('limited",{"_index":3753,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('limited').disable",{"_index":3787,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('limited').enable",{"_index":3790,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('limited').value",{"_index":3797,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('unlimited",{"_index":3819,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('unlimited').setvalue(false",{"_index":3774,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('unlimited').setvalue(value",{"_index":3778,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('unlimited').value",{"_index":3820,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('unlimited')?.disable",{"_index":3788,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('unlimited')?.enable",{"_index":3791,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('unlimited')?.value",{"_index":3796,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get(formcontrol).value",{"_index":2384,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["this.formgroup.get(formfields.from).setvalue(null",{"_index":2447,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["this.formgroup.get(formfields.from).setvalue(values[0",{"_index":2446,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["this.formgroup.get(formfields.from).value",{"_index":2452,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["this.formgroup.get(formfields.to).setvalue(null",{"_index":2450,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["this.formgroup.get(formfields.to).setvalue(values[1",{"_index":2449,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["this.formgroup.get(formfields.to).value",{"_index":2453,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["this.formgroup.get(frmctrl",{"_index":2376,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["this.formgroup.get(frmctrl).value).length",{"_index":2389,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["this.formgroup.removecontrol(control",{"_index":2370,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["this.formgroup.setvalue",{"_index":2488,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["this.formgroup.valuechanges",{"_index":2305,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this.formgroup.valuechanges.pipe(debouncetime(this.getdebouncetimems",{"_index":2304,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this.friendlyfieldscontrol.value",{"_index":2155,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.getactions(criteria.tolowercase",{"_index":288,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.getallunittypes",{"_index":3859,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["this.getbase",{"_index":1992,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["this.getbasevalue(value",{"_index":3870,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["this.getcolumnsconfig(this.columns",{"_index":1579,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.getcontextualactions",{"_index":1448,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.getdebouncetimems",{"_index":2303,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this.getdisplaynameforcolumn(exportcolumn",{"_index":2177,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.getdisplaynameforfield(fieldname",{"_index":2156,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.getdropdownitemelement(child",{"_index":2680,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.getflatlistofavailableactions(this._actions",{"_index":287,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.getnativeelement('.combo",{"_index":3934,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.getnativeelement('.single",{"_index":3935,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.getnodetext(el",{"_index":3192,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.getnodetext(element",{"_index":3190,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.getpagesize",{"_index":1693,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.getpagesizeoptions",{"_index":1695,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.getselectedunit",{"_index":3811,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.getselectedunit().getoutputvalue(value",{"_index":3798,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.getspinner",{"_index":4312,"title":{},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["this.gettext('.readonly",{"_index":3919,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.getunitmultiplier",{"_index":3873,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["this.getvalue",{"_index":3846,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.gridrefresh.emit(vcddgstate",{"_index":1646,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.handleitem(item",{"_index":4009,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.handleitem(this.selecteditem",{"_index":4016,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.handleopen(open",{"_index":3991,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.hasstaticactions",{"_index":1442,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.height",{"_index":1467,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.height}px",{"_index":1468,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.host.dispatchevent(new",{"_index":4265,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.host.nativeelement",{"_index":1203,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["this.host.style.position",{"_index":4257,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.host.style.width",{"_index":4255,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.hostcomponent",{"_index":639,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.hostvcddropdown._dropdowntriggerel",{"_index":2636,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.hostvcddropdown.clrdropdown.toggleservice.open",{"_index":2601,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.id",{"_index":920,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["this.initialselection",{"_index":1478,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.initialvalue",{"_index":3331,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.initialvalueunit",{"_index":3736,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.inputvalueunit",{"_index":3696,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.inputvalueunit.findbestunit(value",{"_index":3794,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.inputvalueunit.getoutputvalue(this.initialvalue",{"_index":3739,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.inputvalueunit.getoutputvalue(this.max",{"_index":3816,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.inputvalueunit.getoutputvalue(this.min",{"_index":3813,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.inputvalueunit.getoutputvalue(value",{"_index":3795,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.isactionavailable(currentaction",{"_index":301,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.isactiondisabled(action",{"_index":309,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.isdropdownopen",{"_index":2052,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.isinsidemodal",{"_index":2879,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.isloading",{"_index":1397,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.isoverflowing",{"_index":1225,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["this.isreadonly",{"_index":3827,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.isreadytosearchpromise",{"_index":279,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.isrequestpending",{"_index":2134,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.isroot",{"_index":2001,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["this.isrootdropdown",{"_index":2647,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.items",{"_index":1398,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.items).filter((item",{"_index":1609,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.items)[0",{"_index":1604,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.lastrealvalue",{"_index":3750,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.limitedinput",{"_index":3768,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.limitedinputshowerrors",{"_index":3770,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.linkmenuitems",{"_index":2651,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.linkvertical",{"_index":2681,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.listentorightarrowkeypressonnestedtrigger",{"_index":2637,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.locatordriver",{"_index":965,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["this.locatordriver.findwidget(clrdatagridwidgetobject",{"_index":4445,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["this.locatordriver.get(`.dropdown",{"_index":2227,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.locatordriver.get(cssselector",{"_index":960,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["this.locatordriver.getbytext(cssselector",{"_index":963,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["this.locatordriver.parents(cssselector",{"_index":956,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["this.locatordriver.unwrap",{"_index":4446,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["this.locatorforchild('.username",{"_index":942,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["this.locatorforcssselectors('.cancel",{"_index":2196,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.locatorforcssselectors('.column",{"_index":2198,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.locatorforcssselectors('.dropdown",{"_index":2204,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.locatorforcssselectors('.export",{"_index":2218,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.locatorforcssselectors('.friendly",{"_index":2212,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.locatorforcssselectors('.sanitize",{"_index":2215,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.locatorforcssselectors('h3",{"_index":4439,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["this.locatorforcssselectors('li",{"_index":2201,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.locatorforcssselectors('progress",{"_index":2210,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.locatorfortext('button",{"_index":2208,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.mapselectedrecords([current",{"_index":1603,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.mapselectedrecords(current",{"_index":1608,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.max",{"_index":3817,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.max.tostring",{"_index":3848,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.maxfeaturedactionsonrow",{"_index":1496,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.menuitems",{"_index":2659,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.menuitems.foreach((menuitem",{"_index":2691,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.menuitems[0",{"_index":2684,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.menuitems[0].up",{"_index":2694,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.menuitems[index",{"_index":2693,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.menuitems[this.menuitems.length",{"_index":2695,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.menutrigger",{"_index":2646,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.menutrigger.down",{"_index":2683,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.menutrigger.right",{"_index":2685,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.min",{"_index":3814,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.min.tostring",{"_index":3847,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.mouseoutdelay",{"_index":1193,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["this.movefocus(direction.down",{"_index":2747,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.movefocus(direction.left",{"_index":2754,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.movefocus(direction.up",{"_index":2749,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.movefocusto(this.currentfocuseditem.down",{"_index":2728,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.movefocusto(this.currentfocuseditem.left",{"_index":2730,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.movefocusto(this.currentfocuseditem.right",{"_index":2734,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.movefocusto(this.currentfocuseditem.up",{"_index":2732,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.movefocustofirstitem",{"_index":2652,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.multiplier",{"_index":3872,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["this.nestedmenutrigger",{"_index":2649,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.node.nativeelement",{"_index":1670,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.node.nativeelement.style.setproperty",{"_index":1469,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.onbeforesetconfig(val",{"_index":2298,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this.onchange",{"_index":931,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["this.onchange(isodatevalue",{"_index":3343,"title":{},"body":{"components/FormInputComponent.html":{}}}],["this.onchange(parsefloat(value",{"_index":3340,"title":{},"body":{"components/FormInputComponent.html":{}}}],["this.onchange(this.getvalue",{"_index":3763,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.onchange(value",{"_index":3339,"title":{},"body":{"components/FormInputComponent.html":{}}}],["this.onmousein",{"_index":1209,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["this.onmouseout",{"_index":1210,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["this.ontouch",{"_index":932,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["this.ontransitionend",{"_index":1111,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["this.open",{"_index":2153,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.openchange.emit(this._open",{"_index":4056,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.openchange.emit(value",{"_index":2097,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.options",{"_index":2367,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/FormSelectComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["this.options.find((option",{"_index":3377,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["this.optionsformgroup.get(useroptions.friendlynames",{"_index":2132,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.optionsformgroup.get(useroptions.sanitize",{"_index":2130,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.optionsformgroup.get(useroptions.selectall",{"_index":2128,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.pagesize",{"_index":1692,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.pagesizeoptions",{"_index":1694,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.pagination.pagesize",{"_index":1661,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.pagination.pagesizeoptions.map((size",{"_index":1664,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.pagination.rowheight",{"_index":1679,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.paginationcomponent.currentpage",{"_index":1653,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.parent",{"_index":3046,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.parent.buildpartial()}${this.result",{"_index":3083,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.parent.clear",{"_index":3082,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.parent.currentoperator",{"_index":3054,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.parent.result",{"_index":3055,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.parentdropdown",{"_index":2911,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.parentdropdown.dropdownmenuelement.getboundingclientrect",{"_index":2913,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.parentfocushandler.menuitems.find((item",{"_index":2687,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.parentvcddropdown",{"_index":2605,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.positionleft",{"_index":2872,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.positiontop",{"_index":2871,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.prefix",{"_index":3540,"title":{},"body":{"classes/IdGenerator.html":{}}}],["this.preserveselection",{"_index":1600,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.promiseresolver",{"_index":417,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["this.providers",{"_index":4145,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["this.providers.push(provider",{"_index":4143,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["this.quicksearchservice.registerprovider(provider",{"_index":4144,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["this.quicksearchservice.unregisterprovider(provider",{"_index":4146,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["this.readytosearchpromisefactory",{"_index":212,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.recalculateunitminmax",{"_index":3762,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.registerrootmenucontainer",{"_index":2650,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.registrations",{"_index":4174,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["this.registrations.findindex((prov",{"_index":4165,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["this.registrations.findindex((regprovider",{"_index":4171,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["this.registrations.push(provider",{"_index":4170,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["this.registrations.splice(index",{"_index":4173,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["this.registrations.splice(insertindex",{"_index":4169,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["this.renderer.listen",{"_index":2654,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.renderer.listen(menucontainer",{"_index":2745,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.reporterror(item.response.error",{"_index":429,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["this.reporterror(response.response.error",{"_index":420,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["this.reportsuccess(response.response.success",{"_index":421,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["this.reportsuccess(response[0].response.success",{"_index":430,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["this.reset",{"_index":2639,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.resetposition(this.dropdownmenuelement",{"_index":2870,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.resolveisreadytosearch",{"_index":278,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.result",{"_index":3056,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.resultactivated.emit(resultactivatedevent",{"_index":4064,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.root",{"_index":789,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.rootelement",{"_index":495,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.rootmenutrigger",{"_index":2648,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.running",{"_index":694,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["this.sanitizecontrol.value",{"_index":2161,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.searchcriteria",{"_index":4024,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.searchid",{"_index":4018,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.searchinput.nativeelement.focus",{"_index":4054,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.searchinput.nativeelement.select",{"_index":4055,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.searchsections",{"_index":4036,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.searchsections.find",{"_index":4058,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.searchsections.foreach((searchsection",{"_index":4020,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.searchsections.foreach(async",{"_index":4022,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.searchsections.reduce((acc",{"_index":4049,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.secondhost.dispatchevent(new",{"_index":4267,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.selectallcontrol.value",{"_index":2138,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.selectedcolumns",{"_index":2126,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.selecteditem",{"_index":4015,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.selectedunit",{"_index":3777,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.selectfirst(false",{"_index":4046,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.selectfirst(true",{"_index":4031,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.selectnext(false",{"_index":4013,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.selectnext(true",{"_index":4011,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.setvalue(this._config.value",{"_index":2301,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this.shoulddisplaycontextualactionsontop",{"_index":1453,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.shouldshowactionbarontop",{"_index":1685,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.shouldwait",{"_index":277,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.showerrors",{"_index":3772,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.showunlimitedoption",{"_index":3743,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.startactivity",{"_index":416,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["this.styling",{"_index":3276,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["this.subscriptions",{"_index":3530,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["this.subscriptions.foreach(subscription",{"_index":3529,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["this.subscriptions.indexof(subscription",{"_index":3525,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["this.subscriptions.push(subscription",{"_index":3522,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["this.subscriptions.splice(indexofsubscription",{"_index":3528,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["this.subscriptiontracker.subscribe(columndropdown.toggleservice.openchange",{"_index":2050,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.subscriptiontracker.subscribe(obs",{"_index":2306,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this.subscriptiontracker.subscribe(this.hostvcddropdown.dropdownmenuupdated",{"_index":2638,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.subscriptiontracker.subscribe(this.selectallcontrol.valuechanges",{"_index":2149,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.successmessage",{"_index":695,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["this.testelement",{"_index":505,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.testelement.elements",{"_index":488,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.testelement.elements.map((el",{"_index":500,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.testelement.fixture",{"_index":494,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.textinput",{"_index":3332,"title":{},"body":{"components/FormInputComponent.html":{}}}],["this.textinput.nativeelement.value",{"_index":3336,"title":{},"body":{"components/FormInputComponent.html":{}}}],["this.timeoutid",{"_index":2666,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.to.errorlabels",{"_index":3442,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{}}}],["this.to.hintposition",{"_index":3441,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{}}}],["this.to.max",{"_index":3439,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{}}}],["this.to.min",{"_index":3438,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{}}}],["this.to.onenterclicked",{"_index":3443,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["this.to.onenterclicked(this.field",{"_index":3444,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["this.to.onescapeclicked",{"_index":3445,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["this.to.onescapeclicked(this.field",{"_index":3446,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["this.to.options",{"_index":3474,"title":{},"body":{"components/FormlySelectComponent.html":{}}}],["this.to.showunlimitedoption",{"_index":3467,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["this.to.type",{"_index":3440,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["this.to.unlimitedvalue",{"_index":3468,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["this.tooltip",{"_index":4270,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.tooltip.dispatchevent(new",{"_index":4268,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.tooltip.queryselector('.tooltip",{"_index":4281,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.tooltip.style.opacity",{"_index":4271,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.tooltipcontent.classlist",{"_index":4273,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.tooltipcontent.innertext",{"_index":4272,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.tooltipcontent.offsetwidth",{"_index":4264,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.tooltipcontent.style.visibility",{"_index":4279,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.tooltipsize",{"_index":1145,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["this.totalitems",{"_index":1400,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.trackby(index",{"_index":1422,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.trackby(itemindex",{"_index":1626,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.trackby(selectedindex",{"_index":1627,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.tracker.subscribe(this.formgroup.get('combounitoptions').valuechanges",{"_index":3759,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.tracker.subscribe(this.formgroup.get('limited').valuechanges",{"_index":3764,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.tracker.subscribe(this.formgroup.get('unlimited').valuechanges",{"_index":3751,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.tracker.unsubscribeall",{"_index":3734,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.translationservice.translate('vcd.cc.unlimited",{"_index":3821,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.translationservice.translate(outputunit.getvaluewithunittranslationkey",{"_index":4373,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["this.translationservice.translateasync('vcd.cc.cancel",{"_index":2063,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.data",{"_index":2059,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.export",{"_index":2069,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.export.all",{"_index":2065,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.exporter.downloading",{"_index":2091,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.exporter.writing",{"_index":2094,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.friendly.names.hint",{"_index":2082,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.friendly.names.info",{"_index":2079,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.friendly.names.question",{"_index":2077,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.loading",{"_index":671,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["this.translationservice.translateasync('vcd.cc.no",{"_index":2073,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.sanitize.hint",{"_index":2086,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.sanitize.info",{"_index":2088,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.sanitize.question",{"_index":2084,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.select.columns",{"_index":2067,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.yes",{"_index":2071,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync(this.paginationtranslationkey",{"_index":1656,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.ts.translate(currentaction.textkey",{"_index":304,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.type",{"_index":3334,"title":{},"body":{"components/FormInputComponent.html":{}}}],["this.unit",{"_index":2434,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["this.unitdropdown",{"_index":3822,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.unitformatter.bestformat(value",{"_index":3825,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.unitformcontrol.setvalue(this.component.unitoptions[0].getmultiplier",{"_index":3932,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.unitmax",{"_index":3815,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.unitmin",{"_index":3812,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.unitoptions",{"_index":2435,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.unitoptions.length",{"_index":2436,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.unitoptions[0",{"_index":2437,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.unlimitedvalue",{"_index":3745,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.unlistenfuncs.foreach((unlisten",{"_index":2726,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.unlistenfuncs.push",{"_index":2744,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.unlistenrightarrowkeypress",{"_index":2653,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.unsubscribeall",{"_index":3519,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["this.updatecolumnsconfig",{"_index":1392,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.updatedisabledstate(isdisabled",{"_index":3779,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.updatedisabledstate(this.formgroup?.get('unlimited')?.value",{"_index":3781,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.updatedisabledstate(true",{"_index":3765,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.updatefieldnamemap(cols",{"_index":2056,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.updatepagination",{"_index":1460,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.updateprogress.bind(this",{"_index":2125,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.updateselecteditems",{"_index":1412,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.updateunlimiteddisabledstate",{"_index":3758,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.viewcontainerref.createcomponent(componentfactory",{"_index":1852,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.viewcontainerref.remove",{"_index":1856,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.viewinitted",{"_index":1410,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.wrap",{"_index":3057,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.writevalue(this.initialvalue",{"_index":3338,"title":{},"body":{"components/FormInputComponent.html":{}}}],["this.writingmessage",{"_index":2163,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["those",{"_index":2234,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["thousandsunit",{"_index":4342,"title":{"classes/ThousandsUnit.html":{}},"body":{"classes/ThousandsUnit.html":{},"coverage.html":{}}}],["three",{"_index":3563,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["through",{"_index":243,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["throughout",{"_index":4123,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["throw",{"_index":646,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["thrown",{"_index":2105,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["throws",{"_index":641,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["till",{"_index":2642,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["time",{"_index":1038,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{}}}],["timeoutid",{"_index":2559,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["timer",{"_index":1069,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["times",{"_index":2736,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["tip",{"_index":1063,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tip.clearhidetimeout",{"_index":1113,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.container",{"_index":1090,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.container.appendchild(tip.content",{"_index":1100,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.container.classlist.add('tooltip",{"_index":1092,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.container.style.opacity",{"_index":1121,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.container.style.visibility",{"_index":1126,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.content",{"_index":1093,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.content.addeventlistener('transitionend",{"_index":1105,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.content.classlist.add('tooltip",{"_index":1094,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.content.classlist.add(tip.calculateposition(rect",{"_index":1147,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.content.classlist.remove(tl",{"_index":1146,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.content.innerhtml",{"_index":1148,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.content.removeeventlistener('transitionend",{"_index":1110,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.content.style.opacity",{"_index":1122,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.content.style.visibility",{"_index":1127,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.create",{"_index":1207,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["tip.currentdirective",{"_index":1115,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.currentdirective.hostelement",{"_index":1079,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.currentdirective.mouseoutdelay",{"_index":1088,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.currentdirective.tooltipsize",{"_index":1081,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.currenthost",{"_index":1131,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.destroy",{"_index":1223,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["tip.hidetimeout",{"_index":1118,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.hidetooltip(this.mouseoutdelay",{"_index":1227,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["tip.hidetooltip(tip.mouseoutdelay",{"_index":1116,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.ismouseover",{"_index":1120,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.onmouseenter",{"_index":1103,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.onmouseleave",{"_index":1104,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.ontransitionend",{"_index":1106,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.ontransitionend(event",{"_index":1239,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.update",{"_index":1226,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["title",{"_index":145,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["tl",{"_index":1048,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["to]).getstring",{"_index":2457,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["toarray",{"_index":549,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["todo",{"_index":1744,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"injectables/UnitFormatter.html":{},"miscellaneous/variables.html":{}}}],["together",{"_index":3968,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["toggle",{"_index":1731,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/FormCheckboxComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["toggled",{"_index":3726,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["toggler",{"_index":1740,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["toggles",{"_index":3723,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["toggleswitch",{"_index":3275,"title":{},"body":{"components/FormCheckboxComponent.html":{},"miscellaneous/enumerations.html":{}}}],["toggling",{"_index":1736,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["toinput",{"_index":2399,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["tooltip",{"_index":1043,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["tooltipcontent",{"_index":4214,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["tooltipcount",{"_index":4212,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["tooltipposition",{"_index":1047,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["tooltipposition.bl",{"_index":1169,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/variables.html":{}}}],["tooltipposition.br",{"_index":1171,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/variables.html":{}}}],["tooltipposition.tl",{"_index":1168,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/variables.html":{}}}],["tooltipposition.tr",{"_index":1170,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/variables.html":{}}}],["tooltipposition[key",{"_index":4276,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["tooltipsize",{"_index":1042,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["tooltipsize.md",{"_index":1200,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["tooltiptext",{"_index":4211,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["tooltipvisibility",{"_index":4213,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["top",{"_index":1049,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/FilterBuilder.html":{},"components/FormInputComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["top_positioned_button",{"_index":4932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["topic",{"_index":4536,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["topmost",{"_index":4034,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["tosubscriber",{"_index":3509,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["total",{"_index":1317,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["totalitems",{"_index":1318,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["touch",{"_index":873,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["touched",{"_index":3761,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["tr",{"_index":1051,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["trackby",{"_index":1406,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["trackbyfunction",{"_index":1258,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["tracker",{"_index":3514,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/SubscriptionTracker.html":{}}}],["tracker.ts",{"_index":3490,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{},"coverage.html":{}}}],["tracker.ts:18",{"_index":3498,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{}}}],["tracker.ts:28",{"_index":3504,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{}}}],["tracker.ts:33",{"_index":3506,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{}}}],["tracker.ts:40",{"_index":4313,"title":{},"body":{"classes/SubscriptionTracker.html":{}}}],["tracker.ts:53",{"_index":4315,"title":{},"body":{"classes/SubscriptionTracker.html":{}}}],["tracker.ts:64",{"_index":4316,"title":{},"body":{"classes/SubscriptionTracker.html":{}}}],["tracker.ts:74",{"_index":4317,"title":{},"body":{"classes/SubscriptionTracker.html":{}}}],["transform",{"_index":2828,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"pipes/FunctionRendererPipe.html":{},"pipes/NestedPropertyPipe.html":{}}}],["transform(item",{"_index":3484,"title":{},"body":{"pipes/FunctionRendererPipe.html":{},"pipes/NestedPropertyPipe.html":{}}}],["transformed",{"_index":1734,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["transitionend",{"_index":4945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translate",{"_index":2393,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/LoadingIndicatorComponent.html":{}}}],["translated",{"_index":72,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"components/BannerActivityReporterComponent.html":{}}}],["translatex/y",{"_index":2829,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["translating",{"_index":1547,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["translation",{"_index":1302,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/FormValidators.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SelectOption.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["translationkey",{"_index":3400,"title":{},"body":{"classes/FormValidators.html":{}}}],["translationservice",{"_index":194,"title":{},"body":{"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"injectables/UnitFormatter.html":{}}}],["translationservice.translate",{"_index":4904,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["translationservice.translateasync",{"_index":4905,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tree",{"_index":653,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["tried",{"_index":2166,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["tries",{"_index":1601,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["trigger",{"_index":809,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["triggercomputedstyles",{"_index":2902,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["triggered",{"_index":810,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["triggers",{"_index":2585,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["true",{"_index":99,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BaseFormControl.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/TestElement.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["try",{"_index":1753,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"contributing.html":{}}}],["trying",{"_index":3854,"title":{},"body":{"classes/NumberUnit.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["ts",{"_index":199,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["tsdoc",{"_index":4550,"title":{},"body":{"contributing.html":{}}}],["tsickle",{"_index":4779,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":4781,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":3803,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["turn",{"_index":319,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["turned",{"_index":1926,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["turns",{"_index":337,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"interfaces/ObjectAndResponse.html":{}}}],["twice",{"_index":3724,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["two",{"_index":2937,"title":{},"body":{"components/ErrorBannerComponent.html":{},"classes/FilterBuilder.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["type",{"_index":18,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type(${index",{"_index":2229,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["typealiases",{"_index":4896,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1642,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"injectables/CsvExporterService.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/FilterBuilder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"pipes/NestedPropertyPipe.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"injectables/QuickSearchService.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["types",{"_index":1247,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/Unit.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":3220,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["typically",{"_index":3165,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"index.html":{}}}],["typing",{"_index":4122,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["u00a0",{"_index":886,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["ufeff",{"_index":1898,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["ui",{"_index":373,"title":{},"body":{"classes/ActivityReporter.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["un",{"_index":4159,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["unamed",{"_index":3476,"title":{},"body":{"interfaces/FunctionRenderer.html":{},"interfaces/PaginationCallback.html":{}}}],["undefined",{"_index":344,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"pipes/NestedPropertyPipe.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"injectables/QuickSearchService.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{}}}],["under",{"_index":122,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["underlying",{"_index":2670,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["underneath",{"_index":2743,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{}}}],["understand",{"_index":1005,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{}}}],["understands",{"_index":317,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["unique",{"_index":79,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"classes/IdGenerator.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["unit",{"_index":734,"title":{"classes/Unit.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["unit(val",{"_index":2438,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["unit.gb",{"_index":4366,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["unit.getmultiplier",{"_index":3924,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["unit.kb",{"_index":4364,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["unit.mb",{"_index":4365,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["unit:11",{"_index":3654,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["unit:12",{"_index":3655,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["unit:24",{"_index":3666,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["unit:28",{"_index":3670,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["unit:37",{"_index":3669,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["unit:45",{"_index":3665,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["unit:54",{"_index":3677,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["unit:61",{"_index":3671,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["unit:71",{"_index":3661,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["unitdropdown",{"_index":3731,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["unitformatter",{"_index":3684,"title":{"injectables/UnitFormatter.html":{}},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"injectables/UnitFormatter.html":{},"modules/VcdFormModule.html":{},"coverage.html":{},"overview.html":{}}}],["unitformcontrol",{"_index":3887,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["unitlist",{"_index":4089,"title":{},"body":{"classes/Percent.html":{}}}],["unitmax",{"_index":3721,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["unitmin",{"_index":3720,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["unitname",{"_index":3672,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["unitoption",{"_index":3705,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["unitoption.getmultiplier",{"_index":3703,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["unitoption.getunitname",{"_index":3702,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["unitoptions",{"_index":2400,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["unitoptions(unitoptions",{"_index":3694,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["unitoptions(val",{"_index":2432,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["units",{"_index":2413,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"contributing.html":{}}}],["unittranslationkey",{"_index":4078,"title":{},"body":{"classes/Percent.html":{}}}],["unittypes",{"_index":3876,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["unknown",{"_index":216,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"pipes/NestedPropertyPipe.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["unless",{"_index":1408,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["unlimited",{"_index":3463,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unlimitedchecked",{"_index":3752,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["unlimitedformcontrol",{"_index":3885,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["unlimitedvalue",{"_index":3450,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["unlisten",{"_index":2658,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{}}}],["unlistenfuncs",{"_index":2703,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["unlistenrightarrowkeypress",{"_index":2560,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["unpause",{"_index":189,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["unregister",{"_index":4136,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{}}}],["unregistered",{"_index":4160,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["unregisterprovider",{"_index":4152,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["unregisterprovider(provider",{"_index":4156,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["unset",{"_index":149,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["unspecificed",{"_index":1462,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["unsubscribe",{"_index":3492,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["unsubscribe(subscription",{"_index":3503,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["unsubscribeall",{"_index":3494,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["unsubscribes",{"_index":3505,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["until",{"_index":236,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/TestElement.html":{}}}],["untracked",{"_index":3527,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["unwatchevents",{"_index":4690,"title":{},"body":{"coverage.html":{}}}],["unwatchevents(el",{"_index":1179,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["unwatchevents(this.hostelement",{"_index":1222,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["unwatchevents(tip.container",{"_index":1109,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["unwrap",{"_index":447,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{}}}],["unwraps",{"_index":968,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["up",{"_index":22,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularLocatorDriver.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/enumerations.html":{}}}],["update",{"_index":1128,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["updatecolumnsconfig",{"_index":1577,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["updated",{"_index":784,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["updatedisabledstate(isdisabled",{"_index":3782,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["updatefieldnamemap(cols",{"_index":2180,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["updatepagination",{"_index":1691,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["updateprogress",{"_index":2015,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["updateprogress(progress",{"_index":2173,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["updates",{"_index":1383,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["updateselecteditems",{"_index":1599,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["updateunlimitedcheckbox",{"_index":3783,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["updateunlimiteddisabledstate",{"_index":3780,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["updating",{"_index":1409,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["upgrade",{"_index":1417,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["upon",{"_index":1394,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"index.html":{}}}],["upper",{"_index":3011,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["upstream",{"_index":4572,"title":{},"body":{"contributing.html":{}}}],["url",{"_index":1913,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["url.createobjecturl(blob",{"_index":1914,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["urn",{"_index":2977,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["usage",{"_index":986,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["use",{"_index":392,"title":{},"body":{"classes/ActivityReporter.html":{},"classes/AngularWidgetObjectFinder.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":3107,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["used",{"_index":115,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":4940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useful",{"_index":3707,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["user",{"_index":108,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"miscellaneous/variables.html":{}}}],["useroptions",{"_index":2032,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"miscellaneous/enumerations.html":{}}}],["useroptions.friendlynames",{"_index":2117,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["useroptions.sanitize",{"_index":2118,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["useroptions.selectall",{"_index":2115,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["users",{"_index":2795,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["uses",{"_index":1803,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["usevalue",{"_index":3108,"title":{},"body":{"components/FilterTestHostComponent.html":{},"modules/VcdFormlyModule.html":{}}}],["using",{"_index":111,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["utf",{"_index":1895,"title":{},"body":{"injectables/CsvExporterService.html":{},"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["util",{"_index":3949,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"injectables/UnitFormatter.html":{}}}],["util.ts",{"_index":1782,"title":{},"body":{"classes/CommonUtil.html":{},"classes/DomUtil.html":{},"coverage.html":{}}}],["util.ts:12",{"_index":1790,"title":{},"body":{"classes/CommonUtil.html":{}}}],["util.ts:19",{"_index":2528,"title":{},"body":{"classes/DomUtil.html":{}}}],["util.ts:22",{"_index":1786,"title":{},"body":{"classes/CommonUtil.html":{}}}],["utility",{"_index":1767,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"pipes/NestedPropertyPipe.html":{}}}],["utils",{"_index":265,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["utils.ts",{"_index":3085,"title":{},"body":{"components/FilterTestHostComponent.html":{},"coverage.html":{}}}],["utils.ts:113",{"_index":3096,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["utils.ts:121",{"_index":3094,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["utils.ts:123",{"_index":3097,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["utils.ts:130",{"_index":3091,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["utils/dom",{"_index":3948,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["utils/filter",{"_index":2358,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["utils/id",{"_index":912,"title":{},"body":{"classes/BaseFormControl.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["utils/test/widget",{"_index":1015,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["utils/unit/unit",{"_index":2429,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["ux",{"_index":833,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["v",{"_index":1772,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["v.result?.items",{"_index":4050,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["v[0",{"_index":4878,"title":{},"body":{"index.html":{}}}],["val",{"_index":885,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/DatagridFilter.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/ErrorBannerComponent.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"pipes/FunctionRendererPipe.html":{}}}],["validates",{"_index":3394,"title":{},"body":{"classes/FormValidators.html":{}}}],["validation",{"_index":909,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["validationerrors",{"_index":3682,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["validations",{"_index":3389,"title":{},"body":{"classes/FormValidators.html":{}}}],["validator",{"_index":3396,"title":{},"body":{"classes/FormValidators.html":{}}}],["validator(control",{"_index":3408,"title":{},"body":{"classes/FormValidators.html":{}}}],["validatorfn",{"_index":3398,"title":{},"body":{"classes/FormValidators.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["validators",{"_index":3388,"title":{},"body":{"classes/FormValidators.html":{}}}],["validators.required(control",{"_index":3407,"title":{},"body":{"classes/FormValidators.html":{}}}],["value",{"_index":200,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["value.tostring",{"_index":3831,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["value.tostring(10",{"_index":3333,"title":{},"body":{"components/FormInputComponent.html":{}}}],["value[nestedprop",{"_index":3634,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["valueformcontrol",{"_index":3886,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["values",{"_index":2264,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"pipes/FunctionRendererPipe.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["values.foreach(frmctrl",{"_index":2374,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["values[0",{"_index":2445,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"classes/FilterBuilder.html":{}}}],["values[1",{"_index":2448,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"classes/FilterBuilder.html":{}}}],["valuewithunittranslationkey",{"_index":4079,"title":{},"body":{"classes/Percent.html":{}}}],["var",{"_index":700,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["variable",{"_index":3328,"title":{},"body":{"components/FormInputComponent.html":{},"coverage.html":{}}}],["variables",{"_index":4906,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1359,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["vcd",{"_index":659,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["vcd.cc.action.provider.section.title",{"_index":268,"title":{},"body":{"classes/ActionSearchProvider.html":{},"miscellaneous/variables.html":{}}}],["vcd.cc.display.percent",{"_index":4083,"title":{},"body":{"classes/Percent.html":{}}}],["vcd.cc.grid.default.pagination",{"_index":1306,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["vcd.cc.units.percent",{"_index":4082,"title":{},"body":{"classes/Percent.html":{}}}],["vcd.cc.warning.numrange",{"_index":3405,"title":{},"body":{"classes/FormValidators.html":{}}}],["vcd/i18n",{"_index":260,"title":{},"body":{"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"modules/DropdownModule.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"modules/QuickSearchModule.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["vcd/route",{"_index":4826,"title":{},"body":{"index.html":{}}}],["vcd/ui",{"_index":4804,"title":{},"body":{"index.html":{}}}],["vcd_formly_config",{"_index":4474,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["vcd_formly_input_components",{"_index":4492,"title":{},"body":{"modules/VcdFormlyModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["vcdactionmenumodule",{"_index":4377,"title":{"modules/VcdActionMenuModule.html":{}},"body":{"modules/VcdActionMenuModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{},"modules.html":{},"overview.html":{}}}],["vcdactivityreportermodule",{"_index":4384,"title":{"modules/VcdActivityReporterModule.html":{}},"body":{"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{},"modules.html":{},"overview.html":{}}}],["vcdcomponentrendereroutlet",{"_index":1818,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["vcdcomponentrendereroutlet(renderer",{"_index":1839,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["vcdcomponentrendereroutlet]'},{'name",{"_index":747,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["vcdcomponentsmodule",{"_index":4398,"title":{"modules/VcdComponentsModule.html":{}},"body":{"modules/VcdComponentsModule.html":{},"modules.html":{},"overview.html":{}}}],["vcddataexportermodule",{"_index":4401,"title":{"modules/VcdDataExporterModule.html":{}},"body":{"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules.html":{},"overview.html":{}}}],["vcddatagrid",{"_index":4438,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["vcddatagridmodule",{"_index":3099,"title":{"modules/VcdDatagridModule.html":{}},"body":{"components/FilterTestHostComponent.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{},"modules.html":{},"overview.html":{}}}],["vcddatagridwidgetobject",{"_index":4433,"title":{"classes/VcdDatagridWidgetObject.html":{}},"body":{"classes/VcdDatagridWidgetObject.html":{},"coverage.html":{}}}],["vcddgstate",{"_index":1633,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["vcddgstate.filters",{"_index":1638,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["vcddgstate.sortcolumn",{"_index":1644,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["vcderrorbannermodule",{"_index":4389,"title":{"modules/VcdErrorBannerModule.html":{}},"body":{"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules.html":{},"overview.html":{}}}],["vcdformlyfieldconfig",{"_index":4457,"title":{"interfaces/VcdFormlyFieldConfig.html":{}},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"coverage.html":{}}}],["vcdformlyinputtypes",{"_index":4465,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{}}}],["vcdformlyinputtypes.input",{"_index":4475,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/variables.html":{}}}],["vcdformlyinputtypes.number_with_unit_input",{"_index":4477,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/variables.html":{}}}],["vcdformlyinputtypes.select",{"_index":4476,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/variables.html":{}}}],["vcdformlymodule",{"_index":4478,"title":{"modules/VcdFormlyModule.html":{}},"body":{"modules/VcdFormlyModule.html":{},"modules.html":{},"overview.html":{}}}],["vcdformlytemplateoptions",{"_index":4464,"title":{"interfaces/VcdFormlyTemplateOptions.html":{}},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"coverage.html":{}}}],["vcdformmodule",{"_index":4402,"title":{"modules/VcdFormModule.html":{}},"body":{"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules.html":{},"overview.html":{}}}],["vcdloadingindicatormodule",{"_index":4390,"title":{"modules/VcdLoadingIndicatorModule.html":{}},"body":{"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"modules.html":{},"overview.html":{}}}],["vcdshowclippedtext",{"_index":754,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/CliptextConfig.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"directives/ShowClippedTextDirective.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["verbosity",{"_index":2967,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["verifies",{"_index":1787,"title":{},"body":{"classes/CommonUtil.html":{}}}],["verify",{"_index":4027,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["version",{"_index":1418,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"index.html":{}}}],["versioning",{"_index":4853,"title":{},"body":{"index.html":{}}}],["via",{"_index":4842,"title":{},"body":{"index.html":{}}}],["view",{"_index":1378,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["view's",{"_index":2535,"title":{},"body":{"classes/DomUtil.html":{}}}],["viewable",{"_index":2030,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["viewchild",{"_index":1259,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{}}}],["viewchild('actionreporter",{"_index":1544,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["viewchild('div",{"_index":4285,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["viewchild('div2",{"_index":4287,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["viewchild('from",{"_index":2416,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["viewchild('limitedinput",{"_index":3732,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["viewchild('searchinput",{"_index":4000,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["viewchild('textinput",{"_index":3323,"title":{},"body":{"components/FormInputComponent.html":{}}}],["viewchild('to",{"_index":2420,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["viewchild('unitdropdown",{"_index":3730,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["viewchild(clrdatagrid",{"_index":1540,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["viewchild(clrdatagridpagination",{"_index":1541,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["viewchild(clrdropdown",{"_index":2047,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["viewchild(showclippedtextdirective",{"_index":4284,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["viewchildren",{"_index":1260,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["viewchildren('actionmenuinrow",{"_index":1492,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["viewcontainerref",{"_index":1825,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["viewinitted",{"_index":1546,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["viewport",{"_index":2530,"title":{},"body":{"classes/DomUtil.html":{}}}],["visibility",{"_index":1144,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/FormSelectComponent.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["visible",{"_index":38,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DomUtil.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["visual",{"_index":3972,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["vm.actions",{"_index":2797,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["vmw/ng",{"_index":4747,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["vmw/plain",{"_index":4749,"title":{},"body":{"dependencies.html":{}}}],["vmware",{"_index":2775,"title":{},"body":{"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"index.html":{}}}],["vmware/master",{"_index":4573,"title":{},"body":{"contributing.html":{}}}],["vmware/vmware",{"_index":4866,"title":{},"body":{"index.html":{}}}],["void",{"_index":59,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["vs",{"_index":4566,"title":{},"body":{"contributing.html":{}}}],["w",{"_index":468,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["wait",{"_index":1083,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":138,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{}}}],["warning",{"_index":2934,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["watchevents",{"_index":4691,"title":{},"body":{"coverage.html":{}}}],["watchevents(el",{"_index":1175,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["watchevents(this.hostelement",{"_index":1208,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["watchevents(tip.container",{"_index":1102,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["way",{"_index":2665,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["ways",{"_index":157,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"miscellaneous/enumerations.html":{}}}],["we're",{"_index":1235,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["webcomponents/webcomponentsjs",{"_index":4752,"title":{},"body":{"dependencies.html":{}}}],["welcomes",{"_index":4520,"title":{},"body":{"contributing.html":{}}}],["well",{"_index":2591,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["wessberg/ts",{"_index":4754,"title":{},"body":{"dependencies.html":{}}}],["whenever",{"_index":776,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["whether",{"_index":83,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BaseFormControl.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["white",{"_index":3383,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["whitespace",{"_index":1217,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["whole",{"_index":1949,"title":{},"body":{"injectables/CsvExporterService.html":{},"directives/DynamicDropdownPositionDirective.html":{}}}],["whose",{"_index":3663,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["widget",{"_index":435,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormInputComponent.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["widget.ts",{"_index":4719,"title":{},"body":{"coverage.html":{}}}],["widgetconstructor",{"_index":629,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["widgetconstructor(new",{"_index":648,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["widgetconstructor.tagname",{"_index":644,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["widgetfinder",{"_index":3130,"title":{"classes/WidgetFinder.html":{}},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{}}}],["widgetfinder#find",{"_index":3207,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["widgetfinder#findwidgets",{"_index":3206,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["widgetobject",{"_index":759,"title":{"classes/WidgetObject.html":{}},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{}}}],["widgetobject:114",{"_index":812,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["widgetobject:128",{"_index":800,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["widgetobject:136",{"_index":804,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["widgetobject:140",{"_index":798,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["widgetobject:42",{"_index":772,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["widgetobject:45",{"_index":790,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["widgetobject:54",{"_index":792,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["widgetobject:62",{"_index":795,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["widgetobject:73",{"_index":780,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["widgetobject:90",{"_index":806,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["widgets",{"_index":3137,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["widgets.length",{"_index":3228,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["widgets[0",{"_index":3231,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["width",{"_index":1137,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["width(width",{"_index":4254,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["wildcardcharacter",{"_index":2499,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["wildcardposition",{"_index":2498,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"components/FilterTestHostComponent.html":{},"miscellaneous/enumerations.html":{}}}],["wildcardposition.end",{"_index":2508,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"components/FilterTestHostComponent.html":{}}}],["wildcardposition.start",{"_index":2507,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["window",{"_index":1159,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["window.cleartimeout(this.timeoutid",{"_index":2669,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["window.innerheight",{"_index":2890,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["window.requestanimationframe",{"_index":2167,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["window.settimeout",{"_index":1119,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["window:resize",{"_index":2808,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["wired",{"_index":1379,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["within",{"_index":81,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressWidgetObjectFinder.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"classes/FormValidators.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["without",{"_index":359,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["wo.ts",{"_index":3163,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["woconstructor",{"_index":3132,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["woconstructor(this.fixture",{"_index":3222,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["woconstructor.tagname",{"_index":3216,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["wordbreak",{"_index":1141,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["work",{"_index":1757,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{}}}],["worked",{"_index":1761,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["workflow",{"_index":4535,"title":{},"body":{"contributing.html":{}}}],["working",{"_index":4523,"title":{},"body":{"contributing.html":{}}}],["works",{"_index":3977,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["wouldn't",{"_index":2664,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["wrap",{"_index":2506,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"classes/FilterBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["wrapcharacter",{"_index":2502,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["wrapped",{"_index":3158,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["wrapper",{"_index":507,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseFormControl.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["wrapping",{"_index":2630,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["wraps",{"_index":2501,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["write",{"_index":4599,"title":{},"body":{"contributing.html":{}}}],["writevalue",{"_index":851,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["writevalue(val",{"_index":883,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["writevalue(value",{"_index":3319,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["writing",{"_index":2092,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["writingmessage",{"_index":2093,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["written",{"_index":4554,"title":{},"body":{"contributing.html":{}}}],["wrote",{"_index":4529,"title":{},"body":{"contributing.html":{}}}],["x",{"_index":1161,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["y",{"_index":1163,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":341,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DomUtil.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/LocatorDriver.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"injectables/UnitFormatter.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["yestext",{"_index":2070,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["you'll",{"_index":4585,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["z",{"_index":3591,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["zero_to_1",{"_index":4077,"title":{},"body":{"classes/Percent.html":{}}}],["zero_to_100",{"_index":4076,"title":{},"body":{"classes/Percent.html":{}}}],["zindex",{"_index":1097,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["zone.js",{"_index":4783,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":2770,"title":{},"body":{"modules/DropdownModule.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionDisplayConfig.html":{"url":"interfaces/ActionDisplayConfig.html","title":"interface - ActionDisplayConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionDisplayConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/interfaces/action-item.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration of actions that are not static/featured\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        contextual\n                                \n                                \n                                            Optional\n                                        staticActionStyling\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contextual\n                                    \n                                \n                                \n                                    \n                                        contextual:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    How the contextual actions list shows up on the screen\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        staticActionStyling\n                                    \n                                \n                                \n                                    \n                                        staticActionStyling:         ActionStyling\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionStyling\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    How the static actions list shows up on the screen\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export enum ActionType {\n    /**\n     * Global actions that are displayed always irrespective of the context. These display as the first set of actions\n     */\n    STATIC_FEATURED = 'STATIC_FEATURED',\n    /**\n     * Actions that are visible when an entity is selected. These display in the main menu section\n     */\n    CONTEXTUAL_FEATURED = 'CONTEXTUAL_FEATURED',\n    /**\n     * Actions that are visible when an entity is selected. These display in a sub menu\n     */\n    CONTEXTUAL = 'CONTEXTUAL',\n    /**\n     * Actions that are not context dependent. These display after the above 3 buckets of actions\n     */\n    STATIC = 'STATIC',\n}\n\n/**\n * Type of {@link ActionItem.handler} function\n */\nexport type ActionHandlerType = (selectedEntities?: R[], handlerData?: T) => Promise | void;\n\n/**\n * Data required for displaying an action item in a menu.\n * T is the type of custom data passed to action handler\n * R is the type of selected entity on which the action will be performed\n */\nexport interface ActionItem {\n    /**\n     * The i18n key or a translated string for contents of a action button\n     */\n    textKey?: string;\n    /**\n     * The css class the button should have.\n     *\n     * Must be unique among all added actions within an action list\n     */\n    class?: string;\n    /**\n     * Condition whether or not the action is available.\n     * @param records Single item in case of an operation on single record and multiple in case of an operation on batch\n     * selection\n     */\n    availability?: (records?: R[], additionalData?: any) => boolean;\n    /**\n     * Indicates if an action that is available should be disabled. If true, a non available action is disabled.\n     * If false, a non-available action is hidden\n     */\n    disabled?: (records?: R[]) => boolean | boolean;\n    /**\n     * The key that will be fired with the action.\n     */\n    action?: string;\n    /**\n     * The function to be executed when the button is clicked.\n     *\n     * Actions that require additional user input can collect it using handlerData which will be passed as an argument\n     * to the handler call\n     */\n    handler?: ActionHandlerType;\n    /**\n     * Custom data that will be passed when handler is called\n     */\n    handlerData?: any;\n    /**\n     * Used for determining where in the action menu this action gets displayed\n     */\n    actionType?: ActionType;\n    /**\n     * The Clarity icon of the contextual button that is displayed if the button is featured.\n     */\n    icon?: string;\n    /**\n     * List of actions that will be grouped under this action\n     */\n    children?: ActionItem[];\n    /**\n     * To mark if the {@link #ActionItem.textKey} has to be translated or not\n     */\n    isTranslatable?: boolean;\n    /**\n     * To add separators between groups of actions\n     */\n    isSeparator?: boolean;\n    /**\n     * Busy state for the menu item. Used by extension actions of plugins\n     */\n    busy?: boolean;\n}\n\n/**\n * Configuration of actions that are not static/featured\n */\nexport interface ActionDisplayConfig {\n    /**\n     * How the contextual actions list shows up on the screen\n     */\n    contextual?: {\n        /**\n         * How many buttons should display on the featured section.\n         *\n         * Used when you want to set a limit on the number of featured buttons shown.\n         *\n         * If featuredCount is not set, it will default to all featured actions.\n         */\n        featuredCount: number;\n        /**\n         * How the featured actions should be displayed\n         */\n        styling: ActionStyling;\n        /**\n         * If the title should be the button label, icon, or both\n         * Defaults to ICON if unset.\n         */\n        buttonContents: TextIcon;\n    };\n\n    /**\n     * How the static actions list shows up on the screen\n     */\n    staticActionStyling?: ActionStyling;\n}\n\n/**\n * Display options for action menu\n */\nexport enum ActionStyling {\n    INLINE = 'INLINE',\n    DROPDOWN = 'DROPDOWN',\n}\n\n/**\n * An enum that describes the possible ways to display the button title.\n */\nexport enum TextIcon {\n    ICON = 1 \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionItem.html":{"url":"interfaces/ActionItem.html","title":"interface - ActionItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/interfaces/action-item.interface.ts\n        \n\n            \n                Description\n            \n            \n                Data required for displaying an action item in a menu.\nT is the type of custom data passed to action handler\nR is the type of selected entity on which the action will be performed\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        action\n                                \n                                \n                                            Optional\n                                        actionType\n                                \n                                \n                                            Optional\n                                        availability\n                                \n                                \n                                            Optional\n                                        busy\n                                \n                                \n                                            Optional\n                                        children\n                                \n                                \n                                            Optional\n                                        class\n                                \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        handler\n                                \n                                \n                                            Optional\n                                        handlerData\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        isSeparator\n                                \n                                \n                                            Optional\n                                        isTranslatable\n                                \n                                \n                                            Optional\n                                        textKey\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The key that will be fired with the action.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        actionType\n                                    \n                                \n                                \n                                    \n                                        actionType:         ActionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used for determining where in the action menu this action gets displayed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        availability\n                                    \n                                \n                                \n                                    \n                                        availability:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Condition whether or not the action is available.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        busy\n                                    \n                                \n                                \n                                    \n                                        busy:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Busy state for the menu item. Used by extension actions of plugins\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:         ActionItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionItem[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of actions that will be grouped under this action\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The css class the button should have.\nMust be unique among all added actions within an action list\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Indicates if an action that is available should be disabled. If true, a non available action is disabled.\nIf false, a non-available action is hidden\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handler\n                                    \n                                \n                                \n                                    \n                                        handler:         ActionHandlerType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionHandlerType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The function to be executed when the button is clicked.\nActions that require additional user input can collect it using handlerData which will be passed as an argument\nto the handler call\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handlerData\n                                    \n                                \n                                \n                                    \n                                        handlerData:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom data that will be passed when handler is called\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Clarity icon of the contextual button that is displayed if the button is featured.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSeparator\n                                    \n                                \n                                \n                                    \n                                        isSeparator:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    To add separators between groups of actions\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isTranslatable\n                                    \n                                \n                                \n                                    \n                                        isTranslatable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    To mark if the #ActionItem.textKey has to be translated or not\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textKey\n                                    \n                                \n                                \n                                    \n                                        textKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The i18n key or a translated string for contents of a action button\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export enum ActionType {\n    /**\n     * Global actions that are displayed always irrespective of the context. These display as the first set of actions\n     */\n    STATIC_FEATURED = 'STATIC_FEATURED',\n    /**\n     * Actions that are visible when an entity is selected. These display in the main menu section\n     */\n    CONTEXTUAL_FEATURED = 'CONTEXTUAL_FEATURED',\n    /**\n     * Actions that are visible when an entity is selected. These display in a sub menu\n     */\n    CONTEXTUAL = 'CONTEXTUAL',\n    /**\n     * Actions that are not context dependent. These display after the above 3 buckets of actions\n     */\n    STATIC = 'STATIC',\n}\n\n/**\n * Type of {@link ActionItem.handler} function\n */\nexport type ActionHandlerType = (selectedEntities?: R[], handlerData?: T) => Promise | void;\n\n/**\n * Data required for displaying an action item in a menu.\n * T is the type of custom data passed to action handler\n * R is the type of selected entity on which the action will be performed\n */\nexport interface ActionItem {\n    /**\n     * The i18n key or a translated string for contents of a action button\n     */\n    textKey?: string;\n    /**\n     * The css class the button should have.\n     *\n     * Must be unique among all added actions within an action list\n     */\n    class?: string;\n    /**\n     * Condition whether or not the action is available.\n     * @param records Single item in case of an operation on single record and multiple in case of an operation on batch\n     * selection\n     */\n    availability?: (records?: R[], additionalData?: any) => boolean;\n    /**\n     * Indicates if an action that is available should be disabled. If true, a non available action is disabled.\n     * If false, a non-available action is hidden\n     */\n    disabled?: (records?: R[]) => boolean | boolean;\n    /**\n     * The key that will be fired with the action.\n     */\n    action?: string;\n    /**\n     * The function to be executed when the button is clicked.\n     *\n     * Actions that require additional user input can collect it using handlerData which will be passed as an argument\n     * to the handler call\n     */\n    handler?: ActionHandlerType;\n    /**\n     * Custom data that will be passed when handler is called\n     */\n    handlerData?: any;\n    /**\n     * Used for determining where in the action menu this action gets displayed\n     */\n    actionType?: ActionType;\n    /**\n     * The Clarity icon of the contextual button that is displayed if the button is featured.\n     */\n    icon?: string;\n    /**\n     * List of actions that will be grouped under this action\n     */\n    children?: ActionItem[];\n    /**\n     * To mark if the {@link #ActionItem.textKey} has to be translated or not\n     */\n    isTranslatable?: boolean;\n    /**\n     * To add separators between groups of actions\n     */\n    isSeparator?: boolean;\n    /**\n     * Busy state for the menu item. Used by extension actions of plugins\n     */\n    busy?: boolean;\n}\n\n/**\n * Configuration of actions that are not static/featured\n */\nexport interface ActionDisplayConfig {\n    /**\n     * How the contextual actions list shows up on the screen\n     */\n    contextual?: {\n        /**\n         * How many buttons should display on the featured section.\n         *\n         * Used when you want to set a limit on the number of featured buttons shown.\n         *\n         * If featuredCount is not set, it will default to all featured actions.\n         */\n        featuredCount: number;\n        /**\n         * How the featured actions should be displayed\n         */\n        styling: ActionStyling;\n        /**\n         * If the title should be the button label, icon, or both\n         * Defaults to ICON if unset.\n         */\n        buttonContents: TextIcon;\n    };\n\n    /**\n     * How the static actions list shows up on the screen\n     */\n    staticActionStyling?: ActionStyling;\n}\n\n/**\n * Display options for action menu\n */\nexport enum ActionStyling {\n    INLINE = 'INLINE',\n    DROPDOWN = 'DROPDOWN',\n}\n\n/**\n * An enum that describes the possible ways to display the button title.\n */\nexport enum TextIcon {\n    ICON = 1 \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionSearchProvider.html":{"url":"classes/ActionSearchProvider.html","title":"class - ActionSearchProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionSearchProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/action-search-provider/action-search.provider.ts\n        \n\n\n            \n                Extends\n            \n            \n                        QuickSearchProviderDefaults\n            \n\n            \n                Implements\n            \n            \n                            QuickSearchProvider\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _actions\n                            \n                            \n                                    Private\n                                _selectedEntities\n                            \n                            \n                                    Private\n                                flatListOfAvailableActions\n                            \n                            \n                                    Private\n                                isReadyToSearchPromise\n                            \n                            \n                                    Private\n                                resolveIsReadyToSearch\n                            \n                            \n                                    Private\n                                shouldWait\n                            \n                            \n                                data\n                            \n                            \n                                order\n                            \n                            \n                                sectionName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getActions\n                            \n                            \n                                    Private\n                                getFlatListOfAvailableActions\n                            \n                            \n                                    Private\n                                isActionAvailable\n                            \n                            \n                                    Private\n                                isActionDisabled\n                            \n                            \n                                pause\n                            \n                            \n                                    Private\n                                readyToSearchPromiseFactory\n                            \n                            \n                                    Async\n                                search\n                            \n                            \n                                unPause\n                            \n                            \n                                    Abstract\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    actions\n                                \n                                \n                                    selectedEntities\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/action-search-provider/action-search.provider.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                    TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:36\n                            \n                        \n\n                \n                    \n                        Initialized by the calling component and is used for searching of the search criteria entered in QuickSearchComponent\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _selectedEntities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     R[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:41\n                            \n                        \n\n                \n                    \n                        Used in isActionDisabled to calculate disabled state of actions  and also in action handler\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            flatListOfAvailableActions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isReadyToSearchPromise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                    \n                        \n                            Default value : this.readyToSearchPromiseFactory()\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resolveIsReadyToSearch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            shouldWait\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     unknown\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuickSearchProviderDefaults\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuickSearchProviderDefaults:39\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            order\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     -1\n\n                        \n                    \n                    \n                        \n                            Default value : -1\n                        \n                    \n                            \n                                \n                                    Inherited from         QuickSearchProviderDefaults\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuickSearchProviderDefaults:38\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sectionName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from         QuickSearchProviderDefaults\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuickSearchProviderDefaults:37\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getActions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getActions(searchCriteria: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchCriteria\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QuickSearchResultItem[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFlatListOfAvailableActions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFlatListOfAvailableActions(actions: ActionItem[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    actions\n                                    \n                                                ActionItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionItem[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isActionAvailable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isActionAvailable(action: ActionItem)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                ActionItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isActionDisabled\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isActionDisabled(action: ActionItem)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                ActionItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pause\n                        \n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:51\n                \n            \n\n\n            \n                \n                    Pause searching for actions. For example, Call this method when searching for actions has to be paused until\nsome data has to be fetched asynchronously\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            readyToSearchPromiseFactory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    readyToSearchPromiseFactory()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(criteria: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:75\n                \n            \n\n\n            \n                \n                    Searches through nested actions and finds all the actions that match with entered search text on the\nQuickSearchComponent\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    criteria\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unPause\n                        \n                        \n                    \n                \n            \n            \n                \nunPause()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:59\n                \n            \n\n\n            \n                \n                    Resume searching for actions. To unpause searching for actions functionality that might have been paused earlier\nusing pause method above\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(criteria: string)\n                \n            \n\n\n            \n                \n                    Inherited from         QuickSearchProviderDefaults\n\n                \n            \n            \n                \n                        Defined in         QuickSearchProviderDefaults:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    criteria\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QuickSearchResultsType\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        actions\n                    \n                \n\n\n                \n                    \n                        setactions(actions: [])\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:19\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            actions\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedEntities\n                    \n                \n\n\n                \n                    \n                        setselectedEntities(entities: [])\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:23\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            entities\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { TranslationService } from '@vcd/i18n';\nimport { ActionItem } from '../common/interfaces';\nimport {\n    QuickSearchProvider,\n    QuickSearchProviderDefaults,\n    QuickSearchResultItem,\n    QuickSearchResults,\n} from '../quick-search';\nimport { CommonUtil } from '../utils';\n\nexport const DEFAULT_ACTION_SEARCH_SECTION_HEADER_PREFIX = 'vcd.cc.action.provider.section.title';\n\nexport class ActionSearchProvider extends QuickSearchProviderDefaults implements QuickSearchProvider {\n    set actions(actions: ActionItem[]) {\n        this._actions = actions;\n        this.flatListOfAvailableActions = null;\n    }\n    set selectedEntities(entities: R[]) {\n        this._selectedEntities = entities;\n        this.flatListOfAvailableActions = null;\n    }\n\n    constructor(private ts: TranslationService) {\n        super();\n    }\n    private flatListOfAvailableActions: ActionItem[];\n\n    /**\n     * Initialized by the calling component and is used for searching of the search criteria entered in {@link QuickSearchComponent}\n     */\n    private _actions: ActionItem[] = [];\n\n    /**\n     * Used in {@link isActionDisabled} to calculate disabled state of actions  and also in action handler\n     */\n    private _selectedEntities: R[] = [];\n\n    private resolveIsReadyToSearch: (value?: null) => void;\n    private isReadyToSearchPromise: Promise = this.readyToSearchPromiseFactory();\n    private shouldWait = false;\n\n    /**\n     * Pause searching for actions. For example, Call this method when searching for actions has to be paused until\n     * some data has to be fetched asynchronously\n     */\n    pause(): void {\n        this.shouldWait = true;\n    }\n\n    /**\n     * Resume searching for actions. To unpause searching for actions functionality that might have been paused earlier\n     * using pause method above\n     */\n    unPause(): void {\n        this.shouldWait = false;\n        this.resolveIsReadyToSearch();\n        this.isReadyToSearchPromise = this.readyToSearchPromiseFactory();\n    }\n\n    private readyToSearchPromiseFactory(): Promise {\n        return new Promise((resolve, reject) => {\n            this.resolveIsReadyToSearch = resolve;\n        });\n    }\n\n    /**\n     * Searches through nested actions and finds all the actions that match with entered search text on the\n     * {@link QuickSearchComponent}\n     */\n    async search(criteria: string): Promise {\n        if (this.shouldWait) {\n            await this.isReadyToSearchPromise;\n        }\n\n        if (!criteria) {\n            return { items: [] };\n        }\n\n        if (this.flatListOfAvailableActions == null) {\n            this.flatListOfAvailableActions = this.getFlatListOfAvailableActions(this._actions);\n        }\n        return { items: this.getActions(criteria.toLowerCase()) };\n    }\n\n    private getActions(searchCriteria: string): QuickSearchResultItem[] {\n        return this.flatListOfAvailableActions\n            .filter((action) => action.textKey?.toLowerCase().includes(searchCriteria))\n            .map((action) => ({\n                displayText: action.textKey,\n                handler: () => action.handler(this._selectedEntities, action.handlerData),\n            }));\n    }\n\n    private getFlatListOfAvailableActions(actions: ActionItem[]): ActionItem[] {\n        return actions.reduce((flatActionList, currentAction) => {\n            if (currentAction?.children?.length) {\n                flatActionList = flatActionList.concat(this.getFlatListOfAvailableActions(currentAction.children));\n            } else if (this.isActionAvailable(currentAction)) {\n                const textKey =\n                    currentAction.isTranslatable === false\n                        ? currentAction.textKey\n                        : this.ts.translate(currentAction.textKey);\n                flatActionList.push({ ...currentAction, textKey });\n            }\n            return flatActionList;\n        }, []);\n    }\n\n    private isActionAvailable(action: ActionItem): boolean {\n        return (\n            !action.isSeparator &&\n            (!action.availability || action.availability(this._selectedEntities)) &&\n            !this.isActionDisabled(action)\n        );\n    }\n\n    private isActionDisabled(action: ActionItem): boolean {\n        return CommonUtil.isFunction(action.disabled) ? action.disabled(this._selectedEntities) : action.disabled;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActivityPromiseResolver.html":{"url":"classes/ActivityPromiseResolver.html","title":"class - ActivityPromiseResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActivityPromiseResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/activity-reporter/activity-promise-resolver.ts\n        \n\n            \n                Description\n            \n            \n                A class that understands how to take a promise and turn it into some response message for display.\nA client of this library will override ActivityPromiseResolver to process their specific type of promise.\nThis override will know how to generate a ObjectAndResponse from the type of promise it processes.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolveActivities\n                            \n                            \n                                resolveActivity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolveActivities\n                        \n                        \n                    \n                \n            \n            \n                \nresolveActivities(activityResolutionPromises: Promise, successMessage?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/activity-promise-resolver.ts:71\n                \n            \n\n\n            \n                \n                    Takes a Promise of many items and turns it to some activity status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    activityResolutionPromises\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    successMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The success message this method should return if the activity succeeds. If undefined is passed,\na succeeded promise will return an empty response parameter which is assumed to mean success.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolveActivity\n                        \n                        \n                    \n                \n            \n            \n                \nresolveActivity(activityResolutionPromise: Promise, successMessage?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/activity-promise-resolver.ts:51\n                \n            \n\n\n            \n                \n                    Takes a Promise and turns it to some activity status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    activityResolutionPromise\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The activity that this resolver will generate a response from. It generates\neither a sucesss or a failure condition.\n\n                                    \n                                \n                                \n                                    successMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The success message this method should return if the activity succeeds. If undefined is passed,\na succeeded promise will return an empty response parameter which is assumed to mean success.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface ActivityResponse {\n    /**\n     * The error message, if any, from the activity.\n     *\n     * A response without an error is assumed to have succeeded.\n     */\n    error?: string;\n    /**\n     * The response message, if any, from the activity.\n     */\n    success?: string;\n}\n\n/**\n * A combination of some object and the response that gave that object.\n */\nexport interface ObjectAndResponse {\n    /**\n     * The data that was returned from a given activity, if any.\n     */\n    object?: T;\n    /**\n     * The response that an activity returned.\n     */\n    response: ActivityResponse;\n}\n\n/**\n * A class that understands how to take a promise and turn it into some response message for display.\n * A client of this library will override {@link ActivityPromiseResolver} to process their specific type of promise.\n * This override will know how to generate a {@link ObjectAndResponse} from the type of promise it processes.\n *\n * @param T The type that is returned from a promise that this resolver processes.\n */\nexport class ActivityPromiseResolver {\n    /**\n     * Takes a Promise and turns it to some activity status\n     * @param activityResolutionPromise The activity that this resolver will generate a response from. It generates\n     * either a sucesss or a failure condition.\n     * @param successMessage The success message this method should return if the activity succeeds. If undefined is passed,\n     * a succeeded promise will return an empty response parameter which is assumed to mean success.\n     */\n    resolveActivity(activityResolutionPromise: Promise, successMessage?: string): Promise> {\n        return activityResolutionPromise\n            .then(result => {\n                return {\n                    object: result,\n                    response: { ...result, success: successMessage || result },\n                };\n            })\n            .catch(error => {\n                return { response: { error } };\n            });\n    }\n\n    /**\n     * Takes a Promise of many items and turns it to some activity status\n     * @param activityResolutionPromise The activity that this resolver will generate a response from. It generates\n     * either a sucesss or a failure condition. There are many entities contained in this response.\n     * @param successMessage The success message this method should return if the activity succeeds. If undefined is passed,\n     * a succeeded promise will return an empty response parameter which is assumed to mean success.\n     */\n    resolveActivities(\n        activityResolutionPromises: Promise,\n        successMessage?: string\n    ): Promise)[]> {\n        return activityResolutionPromises\n            .then(result => {\n                return [\n                    {\n                        object: result[0],\n                        response: { ...result, success: successMessage },\n                    },\n                ];\n            })\n            .catch(error => {\n                return [{ response: { error } }];\n            });\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActivityReporter.html":{"url":"classes/ActivityReporter.html","title":"class - ActivityReporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActivityReporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/activity-reporter/activity-reporter.ts\n        \n\n            \n                Description\n            \n            \n                Expresses the contract between a activity status and the UI displaying a loading message, reporting\nsuccess or errors\nCurrently, only one concurrent activity is supported.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                monitorEdit\n                            \n                            \n                                    Async\n                                monitorGet\n                            \n                            \n                                    Async\n                                monitorGetAll\n                            \n                            \n                                    Abstract\n                                reportError\n                            \n                            \n                                    Abstract\n                                reportSuccess\n                            \n                            \n                                    Abstract\n                                startActivity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(promiseResolver: ActivityPromiseResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/common/activity-reporter/activity-reporter.ts:13\n                            \n                        \n\n                \n                    \n                            Creates this reporter with the performer that it will use to monitor events.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        promiseResolver\n                                                  \n                                                        \n                                                                        ActivityPromiseResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            monitorEdit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    monitorEdit(activityResolutionPromise: Promise, successMessage?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/activity-reporter.ts:73\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Monitors a promise that returns an entity and posts a successMessage using ActivityPromiseResolver.monitorActivity.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityResolutionPromise\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    successMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            monitorGet\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    monitorGet(activityResolutionPromise: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/activity-reporter.ts:38\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Monitors a promise that returns an entity using ActivityPromiseResolver.monitorActivity.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityResolutionPromise\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            monitorGetAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    monitorGetAll(activityResolutionPromises: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/activity-reporter.ts:53\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Monitors a promise that returns many entities using ActivityPromiseResolver.monitorActivities.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityResolutionPromises\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            reportError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reportError(errorText: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/activity-reporter.ts:27\n                \n            \n\n\n            \n                \n                    Override this method to provide custom error reporting behavior.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    errorText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text to display in the error alert.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            reportSuccess\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reportSuccess(successMessage: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/activity-reporter.ts:33\n                \n            \n\n\n            \n                \n                    Override this method to provide custom success reporting behavior.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    successMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A message to display to the user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            startActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startActivity()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/activity-reporter.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ActivityPromiseResolver } from './activity-promise-resolver';\n\n/**\n * Expresses the contract between a activity status and the UI displaying a loading message, reporting\n * success or errors\n * Currently, only one concurrent activity is supported.\n */\nexport abstract class ActivityReporter {\n    /**\n     * Creates this reporter with the performer that it will use to monitor events.\n     */\n    constructor(private promiseResolver: ActivityPromiseResolver) {}\n    /*\n     * Override this method to provide custom error activity starting behavior.\n     */\n    abstract startActivity(): void;\n    /**\n     * Override this method to provide custom error reporting behavior.\n     *\n     *  @param errorText The text to display in the error alert.\n     */\n    abstract reportError(errorText: string): void;\n    /**\n     * Override this method to provide custom success reporting behavior.\n     *\n     * @param successMessage A message to display to the user.\n     */\n    abstract reportSuccess(successMessage: string): void;\n\n    /**\n     * Monitors a promise that returns an entity using {@link ActivityPromiseResolver.monitorActivity}.\n     */\n    async monitorGet(activityResolutionPromise: Promise): Promise {\n        this.startActivity();\n        const performer = this.promiseResolver as ActivityPromiseResolver;\n        const response = await performer.resolveActivity(activityResolutionPromise);\n        if (response.response.error) {\n            this.reportError(response.response.error);\n        } else {\n            this.reportSuccess(response.response.success);\n        }\n        return response.object;\n    }\n\n    /**\n     * Monitors a promise that returns many entities using {@link ActivityPromiseResolver.monitorActivities}.\n     */\n    async monitorGetAll(activityResolutionPromises: Promise): Promise {\n        this.startActivity();\n        const performer = this.promiseResolver as ActivityPromiseResolver;\n        const response = await performer.resolveActivities(activityResolutionPromises);\n        const returnValue = response.map(item => item.object);\n        if (response.length) {\n            for (const item of response) {\n                if (item.response.error) {\n                    this.reportError(item.response.error);\n                    return returnValue;\n                }\n            }\n            this.reportSuccess(response[0].response.success);\n        }\n        return returnValue;\n    }\n\n    /**\n     * Monitors a promise that returns an entity and posts a successMessage using {@link ActivityPromiseResolver.monitorActivity}.\n     */\n    async monitorEdit(activityResolutionPromise: Promise, successMessage?: string): Promise {\n        this.startActivity();\n        const performer = this.promiseResolver as ActivityPromiseResolver;\n        const response = await performer.resolveActivity(activityResolutionPromise, successMessage);\n        if (response.response.error) {\n            this.reportError(response.response.error);\n        } else {\n            this.reportSuccess(response.response.success);\n        }\n        return response.object;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActivityResponse.html":{"url":"interfaces/ActivityResponse.html","title":"interface - ActivityResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActivityResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/activity-reporter/activity-promise-resolver.ts\n        \n\n            \n                Description\n            \n            \n                The response that was given with some resource.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                            Optional\n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The error message, if any, from the activity.\nA response without an error is assumed to have succeeded.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The response message, if any, from the activity.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ActivityResponse {\n    /**\n     * The error message, if any, from the activity.\n     *\n     * A response without an error is assumed to have succeeded.\n     */\n    error?: string;\n    /**\n     * The response message, if any, from the activity.\n     */\n    success?: string;\n}\n\n/**\n * A combination of some object and the response that gave that object.\n */\nexport interface ObjectAndResponse {\n    /**\n     * The data that was returned from a given activity, if any.\n     */\n    object?: T;\n    /**\n     * The response that an activity returned.\n     */\n    response: ActivityResponse;\n}\n\n/**\n * A class that understands how to take a promise and turn it into some response message for display.\n * A client of this library will override {@link ActivityPromiseResolver} to process their specific type of promise.\n * This override will know how to generate a {@link ObjectAndResponse} from the type of promise it processes.\n *\n * @param T The type that is returned from a promise that this resolver processes.\n */\nexport class ActivityPromiseResolver {\n    /**\n     * Takes a Promise and turns it to some activity status\n     * @param activityResolutionPromise The activity that this resolver will generate a response from. It generates\n     * either a sucesss or a failure condition.\n     * @param successMessage The success message this method should return if the activity succeeds. If undefined is passed,\n     * a succeeded promise will return an empty response parameter which is assumed to mean success.\n     */\n    resolveActivity(activityResolutionPromise: Promise, successMessage?: string): Promise> {\n        return activityResolutionPromise\n            .then(result => {\n                return {\n                    object: result,\n                    response: { ...result, success: successMessage || result },\n                };\n            })\n            .catch(error => {\n                return { response: { error } };\n            });\n    }\n\n    /**\n     * Takes a Promise of many items and turns it to some activity status\n     * @param activityResolutionPromise The activity that this resolver will generate a response from. It generates\n     * either a sucesss or a failure condition. There are many entities contained in this response.\n     * @param successMessage The success message this method should return if the activity succeeds. If undefined is passed,\n     * a succeeded promise will return an empty response parameter which is assumed to mean success.\n     */\n    resolveActivities(\n        activityResolutionPromises: Promise,\n        successMessage?: string\n    ): Promise)[]> {\n        return activityResolutionPromises\n            .then(result => {\n                return [\n                    {\n                        object: result[0],\n                        response: { ...result, success: successMessage },\n                    },\n                ];\n            })\n            .catch(error => {\n                return [{ response: { error } }];\n            });\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AngularLocatorDriver.html":{"url":"classes/AngularLocatorDriver.html","title":"class - AngularLocatorDriver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AngularLocatorDriver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object/angular-widget-object.ts\n        \n\n            \n                Description\n            \n            \n                Knows how to find Angular TestElements in the DOM.\n\n            \n\n\n            \n                Implements\n            \n            \n                            LocatorDriver\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                findParent\n                            \n                            \n                                findWidget\n                            \n                            \n                                get\n                            \n                            \n                                getByText\n                            \n                            \n                                parents\n                            \n                            \n                                unwrap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(testElement: TestElement, rootElement: DebugElement)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        testElement\n                                                  \n                                                        \n                                                                        TestElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rootElement\n                                                  \n                                                        \n                                                                        DebugElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            findParent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findParent(cssSelector: string, debugElement: DebugElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:57\n                \n            \n\n\n            \n                \n                    Looks up the chain of debug elements until it finds a parent that matches the CSS selector.\nChecks the given element.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    debugElement\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DebugElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findWidget\n                        \n                        \n                    \n                \n            \n            \n                \nfindWidget(widget: C, cssSelector?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:77\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        W\n                        C\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    widget\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CorrectReturnTypes, TestElement>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AngularLocatorDriver\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByText\n                        \n                        \n                    \n                \n            \n            \n                \ngetByText(cssSelector: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AngularLocatorDriver\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parents\n                        \n                        \n                    \n                \n            \n            \n                \nparents(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AngularLocatorDriver\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unwrap\n                        \n                        \n                    \n                \n            \n            \n                \nunwrap()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         TestElement\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DebugElement, Injector, Type } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport { AngularWidgetObjectFinder } from './angular-widget-finder';\nimport { BaseWidgetObject, FindableWidget } from './widget-object';\nimport { CorrectReturnTypes, LocatorDriver } from './widget-object';\n\n/**\n * Knows how to find Angular TestElements in the DOM.\n */\nexport class AngularLocatorDriver implements LocatorDriver {\n    constructor(private testElement: TestElement, private rootElement: DebugElement) {}\n\n    /**\n     * @inheritdoc\n     */\n    get(cssSelector: string): AngularLocatorDriver {\n        const elements = this.testElement.elements;\n        const nextElements = [].concat(...elements.map((element) => element.queryAll(By.css(cssSelector))));\n        return new AngularLocatorDriver(new TestElement(nextElements, this.testElement.fixture), this.rootElement);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getByText(cssSelector: string, value: string): AngularLocatorDriver {\n        const elements = this.testElement.elements;\n        let nextElements: DebugElement[] = [].concat(\n            ...elements.map((element) => element.queryAll(By.css(cssSelector)))\n        );\n        nextElements = nextElements.filter((el) => el.nativeElement.textContent.includes(value));\n        return new AngularLocatorDriver(new TestElement(nextElements, this.testElement.fixture), this.rootElement);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    parents(cssSelector: string): AngularLocatorDriver {\n        return new AngularLocatorDriver(\n            new TestElement(\n                this.testElement.elements.map((el) => this.findParent(cssSelector, el.parent)),\n                this.testElement.fixture\n            ),\n            this.rootElement\n        );\n    }\n\n    /**\n     * Looks up the chain of debug elements until it finds a parent that matches the CSS selector.\n     * Checks the given element.\n     */\n    private findParent(cssSelector: string, debugElement: DebugElement): DebugElement {\n        if (!debugElement) {\n            return undefined;\n        } else if (debugElement.nativeElement.matches(cssSelector)) {\n            return debugElement;\n        } else {\n            return this.findParent(cssSelector, debugElement.parent);\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    unwrap(): TestElement {\n        return this.testElement;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    findWidget, C extends FindableWidget>(\n        widget: C,\n        cssSelector?: string\n    ): CorrectReturnTypes, TestElement> {\n        return new AngularWidgetObjectFinder(this.testElement.fixture).find(widget, this.rootElement, cssSelector);\n    }\n}\n\n/**\n * A wrapper around an array of DebugElements that adds convenience methods.\n * Avoid accessing the debug elements at all costs.\n *\n * Can be used in a `for ... of ...` loop to inspect all the sub elements within this TestElement.\n *\n * @example\n * for (const el of testElement) {\n *     expect(el.enabled()).toBeTruthy()\n * }\n */\nexport class TestElement implements Iterable {\n    constructor(public elements: DebugElement[], public fixture: ComponentFixture) {}\n\n    /**\n     * Gives the text of the first element.\n     */\n    text(): string {\n        return this.elements[0].nativeElement.textContent.trim();\n    }\n\n    /**\n     * Gives the value of the first element.\n     */\n    value(): string {\n        return this.elements[0].nativeElement.value;\n    }\n\n    /**\n     * Says if this element is enabled.\n     */\n    enabled(): boolean {\n        return !this.elements[0].nativeElement.disabled;\n    }\n\n    /**\n     * Clicks all of the elements contained.\n     */\n    click(): void {\n        this.elements.map((element) => element.nativeElement.click());\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Blurs all the contained elements.\n     */\n    blur(): void {\n        this.elements.map((el) => el.nativeElement.dispatchEvent(new Event('blur')));\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Clears the input on all the contained elements.\n     */\n    clear(): void {\n        this.elements.map((el) => (el.nativeElement.value = ''));\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Says how many elements are contained in this TestElement.\n     */\n    length(): number {\n        return this.elements.length;\n    }\n\n    /**\n     * Runs change detection with the component fixture.\n     */\n    detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Gives the elements contained within this TestElement where each element is its own TestElement\n     */\n    toArray(): TestElement[] {\n        return this.elements.map((el) => new TestElement([el], this.fixture));\n    }\n\n    /**\n     * Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on this element.\n     * Setting the event properties is done with `Object.defineProperty` on the created event. This allows setting\n     * properties like `which` that is deprecated and cannot be set with the native approach of creating keyboard event.\n     * @param eventType The keyboard event type like 'keyup', 'keydown', 'keypress'\n     * @param eventProperties properties of the event like `code`, `key` etc.\n     */\n    sendKeyboardEvent(eventType: string, eventProperties: { [name: string]: unknown }): void {\n        const element = this.elements[0].nativeElement as HTMLElement;\n        const event = new KeyboardEvent(eventType, { bubbles: true });\n        Object.keys(eventProperties).forEach((key) => {\n            Object.defineProperty(event, key, { value: eventProperties[key] });\n        });\n        element.dispatchEvent(event);\n        this.detectChanges();\n    }\n\n    /**\n     * Returns classes of first element as a string array\n     */\n    classes(): string[] {\n        return Object.keys(this.elements[0].classes);\n    }\n\n    /**\n     * Returns style property value of the first element\n     * @param key specified CSS property\n     */\n    getStylePropertyValue(key: string): string {\n        return this.elements[0].nativeElement.style.getPropertyValue(key);\n    }\n\n    /**\n     * Returns componentInstance of the first element\n     */\n    getComponentInstance(): any {\n        return this.elements[0].componentInstance;\n    }\n\n    /**\n     * Returns injector of the first element\n     */\n    getInjector(): Injector {\n        return this.elements[0].injector;\n    }\n\n    /**\n     * Finds the first parent element that matches the CSS selector\n     */\n    private findParents(debugEl: DebugElement, cssSelector: string): DebugElement {\n        if (!debugEl) {\n            return null;\n        }\n        return debugEl.nativeElement.matches(cssSelector) ? debugEl : this.findParents(debugEl.parent, cssSelector);\n    }\n\n    /**\n     * Returns the first parent element that matches css selector\n     */\n    parents(cssSelector: string): TestElement {\n        const result = this.findParents(this.elements[0].parent, cssSelector);\n        return new TestElement(result ? [result] : [], this.fixture);\n    }\n\n    /**\n     * Returns componentInstance after query directive\n     */\n    queryDirective(type: Type): any {\n        return this.elements[0].query(By.directive(type)).componentInstance;\n    }\n\n    /**\n     * Allows a TestElement to be used in a `for ... of ...` loop.\n     */\n    [Symbol.iterator](): Iterator {\n        let counter = 0;\n        return {\n            next: () => {\n                counter += 1;\n                return {\n                    done: counter === this.elements.length,\n                    value: new TestElement([this.elements[counter]], this.fixture),\n                };\n            },\n        };\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AngularWidgetObjectFinder.html":{"url":"classes/AngularWidgetObjectFinder.html","title":"class - AngularWidgetObjectFinder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AngularWidgetObjectFinder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object/angular-widget-finder.ts\n        \n\n            \n                Description\n            \n            \n                Knows how to find Angular objects in the DOM.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fixture\n                            \n                            \n                                    Public\n                                hostComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                detectChanges\n                            \n                            \n                                    Public\n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(arg: Type | ComponentFixture)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/test/widget-object/angular-widget-finder.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        arg\n                                                  \n                                                        \n                                                                    Type | ComponentFixture\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fixture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentFixture\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object/angular-widget-finder.ts:21\n                            \n                        \n\n                \n                    \n                        We don't care or could possibly know the type of fixture\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hostComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     H\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object/angular-widget-finder.ts:26\n                            \n                        \n\n                \n                    \n                        If you need direct access to manipulate the host\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    detectChanges()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-finder.ts:72\n                \n            \n\n\n            \n                \n                    Runs a change detection cycle.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(widgetConstructor: C, ancestor?: DebugElement, cssSelector?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-finder.ts:47\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        W\n                        C\n                    \n                \n            \n\n            \n                \n                    Finds a single widget object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    widgetConstructor\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe constructor of the widget to use\n\n\n                                    \n                                \n                                \n                                    ancestor\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nThe parent DebugElement to begin the search from\n\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nThe cssSelector to append to the tagName for the search\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CorrectReturnTypes, TestElement>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DebugElement, Type } from '@angular/core';\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport { AngularLocatorDriver, TestElement } from './angular-widget-object';\nimport { BaseWidgetObject, FindableWidget } from './widget-object';\nimport { CorrectReturnTypes } from './widget-object';\n\n/**\n * Knows how to find Angular objects in the DOM.\n */\n\nexport class AngularWidgetObjectFinder {\n    /**\n     * We don't care or could possibly know the type of fixture\n     */\n    private fixture: ComponentFixture;\n\n    /**\n     * If you need direct access to manipulate the host\n     */\n    public hostComponent: H;\n\n    /**\n     * @param componentConstructor The host component to be created as the root of the tests's fixture\n     */\n    constructor(arg: Type | ComponentFixture) {\n        this.fixture = (arg as ComponentFixture).componentRef\n            ? (arg as ComponentFixture)\n            : TestBed.createComponent(arg as Type);\n        this.hostComponent = this.fixture.componentInstance;\n    }\n\n    /**\n     * Finds a single widget object\n     *\n     * @param widgetConstructor - The constructor of the widget to use\n     * @param ancestor - The parent DebugElement to begin the search from\n     * @param cssSelector - The cssSelector to append to the tagName for the search\n     *\n     * @throws An error if the widget is not found or if there are multiple instances\n     */\n    public find, C extends FindableWidget>(\n        widgetConstructor: C,\n        ancestor?: DebugElement,\n        cssSelector?: string\n    ): CorrectReturnTypes, TestElement> {\n        let query = widgetConstructor.tagName;\n        if (cssSelector) {\n            query += `${cssSelector}`;\n        }\n        if (ancestor) {\n            query = query;\n        }\n\n        const root = (ancestor ? ancestor : this.fixture.debugElement).query(By.css(query));\n        if (!root) {\n            throw new Error(`Could not find the widget using the query ${query}`);\n        }\n\n        const widget = new widgetConstructor(new AngularLocatorDriver(new TestElement([root], this.fixture), root));\n        return (widget as any) as CorrectReturnTypes, TestElement>;\n    }\n\n    /**\n     * Runs a change detection cycle.\n     */\n    public detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BannerActivityReporterComponent.html":{"url":"components/BannerActivityReporterComponent.html","title":"component - BannerActivityReporterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BannerActivityReporterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts\n\n\n    \n        Description\n    \n    \n        Shows a banner to the user to represent the state of an activity.\n\n    \n\n    \n        Extends\n    \n    \n                ActivityReporter\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-banner-activity-reporter\n            \n\n\n\n\n            \n                templateUrl\n                ./banner-activity-reporter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorText\n                            \n                            \n                                running\n                            \n                            \n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onErrorClosed\n                            \n                            \n                                onSuccessClosed\n                            \n                            \n                                reportError\n                            \n                            \n                                reportSuccess\n                            \n                            \n                                reset\n                            \n                            \n                                startActivity\n                            \n                            \n                                    Async\n                                monitorEdit\n                            \n                            \n                                    Async\n                                monitorGet\n                            \n                            \n                                    Async\n                                monitorGetAll\n                            \n                            \n                                    Abstract\n                                reportError\n                            \n                            \n                                    Abstract\n                                reportSuccess\n                            \n                            \n                                    Abstract\n                                startActivity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                loadingMessage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translationService: TranslationService, promiseResolver: ActivityPromiseResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                    TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        promiseResolver\n                                                  \n                                                        \n                                                                        ActivityPromiseResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        loadingMessage\n                    \n                \n                \n                    \n                        Type :         LazyString\n\n                    \n                \n                \n                    \n                        Default value : this.translationService.translateAsync('vcd.cc.loading')\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:28\n                            \n                        \n                \n                    \n                        The translated message that is displayed to the user while loading.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onErrorClosed\n                        \n                        \n                    \n                \n            \n            \n                \nonErrorClosed()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:67\n                \n            \n\n\n            \n                \n                    Closes the error message if displayed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSuccessClosed\n                        \n                        \n                    \n                \n            \n            \n                \nonSuccessClosed()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:74\n                \n            \n\n\n            \n                \n                    Closes the success message if displayed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reportError\n                        \n                        \n                    \n                \n            \n            \n                \nreportError(errorText: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:49\n                \n            \n\n\n            \n                \n                    Shows the given {@param errorText} to the user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reportSuccess\n                        \n                        \n                    \n                \n            \n            \n                \nreportSuccess(successMessage: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:57\n                \n            \n\n\n            \n                \n                    Shows the given {@param successMessage} to the user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    successMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startActivity\n                        \n                        \n                    \n                \n            \n            \n                \nstartActivity()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:40\n                \n            \n\n\n            \n                \n                    Begins to show the banner with a loading indicator.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            monitorEdit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    monitorEdit(activityResolutionPromise: Promise, successMessage?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:73\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Monitors a promise that returns an entity and posts a successMessage using ActivityPromiseResolver.monitorActivity.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityResolutionPromise\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    successMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            monitorGet\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    monitorGet(activityResolutionPromise: Promise)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:38\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Monitors a promise that returns an entity using ActivityPromiseResolver.monitorActivity.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityResolutionPromise\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            monitorGetAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    monitorGetAll(activityResolutionPromises: Promise)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:53\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Monitors a promise that returns many entities using ActivityPromiseResolver.monitorActivities.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityResolutionPromises\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            reportError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reportError(errorText: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:27\n\n                \n            \n\n\n            \n                \n                    Override this method to provide custom error reporting behavior.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    errorText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text to display in the error alert.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            reportSuccess\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reportSuccess(successMessage: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:33\n\n                \n            \n\n\n            \n                \n                    Override this method to provide custom success reporting behavior.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    successMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A message to display to the user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            startActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startActivity()\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            running\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            successMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, Input } from '@angular/core';\nimport { TranslationService } from '@vcd/i18n';\nimport { LazyString } from '@vcd/i18n';\nimport { ActivityPromiseResolver } from './activity-promise-resolver';\nimport { ActivityReporter } from './activity-reporter';\n\n/**\n * Shows a banner to the user to represent the state of an activity.\n */\n@Component({\n    selector: 'vcd-banner-activity-reporter',\n    templateUrl: './banner-activity-reporter.component.html',\n})\nexport class BannerActivityReporterComponent extends ActivityReporter {\n    running = false;\n    errorText: string;\n    successMessage: string;\n\n    /**\n     * The translated message that is displayed to the user while loading.\n     */\n    @Input()\n    loadingMessage: LazyString = this.translationService.translateAsync('vcd.cc.loading');\n\n    constructor(\n        private translationService: TranslationService,\n        @Inject(ActivityPromiseResolver) promiseResolver: ActivityPromiseResolver\n    ) {\n        super(promiseResolver);\n    }\n\n    /**\n     * Begins to show the banner with a loading indicator.\n     */\n    startActivity(): void {\n        this.running = true;\n        this.successMessage = null;\n        this.errorText = null;\n    }\n\n    /**\n     * Shows the given {@param errorText} to the user.\n     */\n    reportError(errorText: string): void {\n        this.errorText = errorText;\n        this.running = false;\n    }\n\n    /**\n     * Shows the given {@param successMessage} to the user.\n     */\n    reportSuccess(successMessage: string): void {\n        if (successMessage) {\n            this.successMessage = successMessage;\n        }\n        this.running = false;\n    }\n\n    /**\n     * Closes the error message if displayed.\n     */\n    onErrorClosed(): void {\n        this.errorText = null;\n    }\n\n    /**\n     * Closes the success message if displayed.\n     */\n    onSuccessClosed(): void {\n        this.successMessage = null;\n    }\n\n    /*\n     * Reset the banner activity state manually.\n     *\n     * Call it when banner should be reset to its default state.\n     */\n    reset(): void {\n        this.running = false;\n        this.errorText = null;\n        this.successMessage = null;\n    }\n}\n\n    \n\n    \n        \n    {{ loadingMessage | lazyString }}\n\n\n\n    \n        \n            {{ errorText }}\n        \n    \n\n\n\n    \n        \n            {{ successMessage }}\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ loadingMessage | lazyString }}                        {{ errorText }}                                    {{ successMessage }}            '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'BannerActivityReporterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BannerActivityReporterWidgetObject.html":{"url":"classes/BannerActivityReporterWidgetObject.html","title":"class - BannerActivityReporterWidgetObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BannerActivityReporterWidgetObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/activity-reporter/banner-activity-reporter.wo.ts\n        \n\n\n            \n                Extends\n            \n            \n                        WidgetObject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                tagName\n                            \n                            \n                                    Public\n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                click\n                            \n                            \n                                detectChanges\n                            \n                            \n                                    Protected\n                                findElement\n                            \n                            \n                                    Protected\n                                findElements\n                            \n                            \n                                    Protected\n                                getNodeText\n                            \n                            \n                                    Protected\n                                getText\n                            \n                            \n                                    Protected\n                                getTexts\n                            \n                            \n                                    Protected\n                                sendKeyboardEvent\n                            \n                            \n                                    Protected\n                                setInputValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    running\n                                \n                                \n                                    errorText\n                                \n                                \n                                    sucessText\n                                \n                                \n                                    loadingText\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tagName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd-banner-activity-reporter'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/activity-reporter/banner-activity-reporter.wo.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : fixture.componentInstance\n                        \n                    \n                            \n                                \n                                    Inherited from         WidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         WidgetObject:42\n\n                            \n                        \n\n                \n                    \n                        The component instance being managed. Whenever possible, we should access the component's API.\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    click(cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:73\n\n                \n            \n\n\n            \n                \n                    Clicks an element and detects changes so the DOM is immediately updated\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to click a specific element. If not passed in, the entire node will\nreceive the click event\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \ndetectChanges()\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElement(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:54\n\n                \n            \n\n\n            \n                \n                    Finds first element within this widget matching the given selector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        What to search for\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DebugElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElements\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElements(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:62\n\n                \n            \n\n\n            \n                \n                    Same as findElement but returns all elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DebugElement[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getNodeText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeText(el: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:140\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getText(cssSelector: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:128\n\n                \n            \n\n\n            \n                \n                    Returns text content of this widget\nIf the element cannot be found, gives empty string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to retrieve text for a specific element within this widget.\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getTexts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTexts(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:136\n\n                \n            \n\n\n            \n                \n                    Same as getText but return the text for all matching nodes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            sendKeyboardEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendKeyboardEvent(eventType, eventProperties: literal type, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:90\n\n                \n            \n\n\n            \n                \n                    Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\nfound by the {@param cssSelector} within the provided {@param parent} or the current root element.\nSetting the event properties is done with Object.defineProperty on the created event. This allows setting\nproperties like which that is deprecated and cannot be set with the native approach of creating keyboard event.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    eventType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The keyboard event type like 'keyup', 'keydown', 'keypress'\n\n                                    \n                                \n                                \n                                    eventProperties\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        properties of the event like code, key etc.\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setInputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setInputValue(value: string | number, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:114\n\n                \n            \n\n\n            \n                \n                    Sets the value of an input element or textarea element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        the value that the element should display\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        running\n                    \n                \n\n                \n                    \n                        getrunning()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/utils/test/activity-reporter/banner-activity-reporter.wo.ts:12\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errorText\n                    \n                \n\n                \n                    \n                        geterrorText()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/utils/test/activity-reporter/banner-activity-reporter.wo.ts:16\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        sucessText\n                    \n                \n\n                \n                    \n                        getsucessText()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/utils/test/activity-reporter/banner-activity-reporter.wo.ts:20\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loadingText\n                    \n                \n\n                \n                    \n                        getloadingText()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/utils/test/activity-reporter/banner-activity-reporter.wo.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { BannerActivityReporterComponent } from '../../../common/activity-reporter';\nimport { WidgetObject } from '../widget-object';\n\nexport class BannerActivityReporterWidgetObject extends WidgetObject {\n    static tagName = 'vcd-banner-activity-reporter';\n\n    get running(): boolean {\n        return this.component.running;\n    }\n\n    get errorText(): string {\n        return this.component.errorText;\n    }\n\n    get sucessText(): string {\n        return this.component.successMessage;\n    }\n\n    get loadingText(): string {\n        return this.findElement('clr-alert').nativeElement.textContent;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseFormControl.html":{"url":"classes/BaseFormControl.html","title":"class - BaseFormControl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseFormControl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/form/base-form-control.ts\n        \n\n            \n                Description\n            \n            \n                Wrapper to enforce UX decisions like readonly-ness, label position and error displaying. And also to make\nthe form control backing a form control name directive available to sub classes.\n\n            \n\n\n            \n                Implements\n            \n            \n                            ControlValueAccessor\n                            CanBeReadOnly\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formControlNameDirective\n                            \n                            \n                                id\n                            \n                            \n                                    Protected\n                                initialValue\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                errorLabels\n                            \n                            \n                                isReadOnly\n                            \n                            \n                                label\n                            \n                            \n                                showAsterisk\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    formControl\n                                \n                                \n                                    showErrors\n                                \n                                \n                                    errorKeys\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/form/base-form-control.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:36\n                            \n                        \n\n                \n                    \n                        Whether the control is disabled.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControlNameDirective\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:67\n                            \n                        \n\n                \n                    \n                        FormControlName directive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:21\n                            \n                        \n\n                \n                    \n                        Auto generated ID for the input field.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initialValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number | string | boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:72\n                            \n                        \n\n                \n                    \n                        To store the initial value of the input form control.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:26\n                            \n                        \n\n                \n                    \n                        Change callback.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTouch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:31\n                            \n                        \n\n                \n                    \n                        Touch callback.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: (args: unknown[]) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/base-form-control.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onChange\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: (args: unknown[]) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/base-form-control.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onTouched\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/base-form-control.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(val: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/base-form-control.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '\\u00A0'\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:52\n                            \n                        \n                \n                    \n                        The description that appears below the control\n\\u00A0 is   (non-breaking space)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorLabels\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:62\n                            \n                        \n                \n                    \n                        Error labels to be used instead of NgControl error keys\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isReadOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:57\n                            \n                        \n                \n                    \n                        Whether this component is in readonly mode\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:46\n                            \n                        \n                \n                    \n                        The label that appears before the control\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showAsterisk\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:41\n                            \n                        \n                \n                    \n                        Show the asterisk next to the control when true\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                \n\n                \n                    \n                        getformControl()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/base-form-control.ts:85\n                                \n                            \n                    \n                        \n                                The FormControl associated with the FormControlName directive\n\n\n                                \n                                    Returns :         FormControl\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        showErrors\n                    \n                \n\n                \n                    \n                        getshowErrors()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/base-form-control.ts:91\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errorKeys\n                    \n                \n\n                \n                    \n                        geterrorKeys()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/base-form-control.ts:98\n                                \n                            \n                    \n                        \n                                Errors from the form control validation\n\n\n                                \n                                    Returns :     string[]\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Input, Type } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NgControl } from '@angular/forms';\nimport { IdGenerator } from '../utils/id-generator/id-generator';\nimport { CanBeReadOnly } from './interfaces/can-be-read-only.interface';\n\nconst idGenerator = new IdGenerator('base-form-control-id');\n\n/**\n * Wrapper to enforce UX decisions like readonly-ness, label position and error displaying. And also to make\n * the form control backing a form control name directive available to sub classes.\n */\nexport class BaseFormControl implements ControlValueAccessor, CanBeReadOnly {\n    /**\n     * Auto generated ID for the input field.\n     */\n    id: string;\n\n    /**\n     * Change callback.\n     */\n    onChange: (...args: unknown[]) => unknown;\n\n    /**\n     * Touch callback.\n     */\n    onTouch: (...args: unknown[]) => unknown;\n\n    /**\n     * Whether the control is disabled.\n     */\n    disabled = false;\n\n    /**\n     * Show the asterisk next to the control when true\n     */\n    @Input() showAsterisk = false;\n\n    /**\n     * The label that appears before the control\n     */\n    @Input() label: string;\n\n    /**\n     * The description that appears below the control\n     * \\u00A0 is &nbsp; (non-breaking space)\n     */\n    @Input() description = '\\u00A0';\n\n    /**\n     * Whether this component is in readonly mode\n     */\n    @Input() isReadOnly = false;\n\n    /**\n     * Error labels to be used instead of NgControl error keys\n     */\n    @Input() errorLabels: string[] = [];\n\n    /**\n     * FormControlName directive\n     */\n    formControlNameDirective: NgControl;\n\n    /**\n     * To store the initial value of the input form control.\n     */\n    protected initialValue: number | string | boolean;\n\n    constructor(ngControl: NgControl) {\n        this.id = idGenerator.generate();\n        if (ngControl) {\n            ngControl.valueAccessor = this;\n            this.formControlNameDirective = ngControl;\n        }\n    }\n\n    /**\n     * The FormControl associated with the FormControlName directive\n     */\n    get formControl(): FormControl {\n        return this.formControlNameDirective\n            ? (this.formControlNameDirective.control as FormControl)\n            : new FormControl('');\n    }\n\n    get showErrors(): boolean {\n        return this.formControl.enabled && !this.formControl.pristine && !this.formControl.valid;\n    }\n\n    /**\n     * Errors from the form control validation\n     */\n    get errorKeys(): string[] {\n        if (this.errorLabels.length) {\n            return this.errorLabels;\n        }\n        return Object.keys(this.formControl.errors || {});\n    }\n\n    registerOnChange(onChange: (...args: unknown[]) => unknown): void {\n        this.onChange = onChange;\n    }\n\n    registerOnTouched(onTouched: (...args: unknown[]) => unknown): void {\n        this.onTouch = onTouched;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    writeValue(val: any): void {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseWidgetObject.html":{"url":"classes/BaseWidgetObject.html","title":"class - BaseWidgetObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseWidgetObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object/widget-object.ts\n        \n\n            \n                Description\n            \n            \n                A class that is able to make queries to the DOM and be instantiated by a widget finder.\nWidget objects should be used only to find elements in the DOM. You should not attempt to take\nactions on these elements in a given widget object.\nAll widget objects should extend this base class.\n\n            \n\n\n\n            \n                Example\n            \n            \n                        \n                            class LoginWidgetObject extends BaseWidgetObject {\n      getUsernameField = this.locatorForChild('.username');\n\n      getOkButton(): T {\n          return this.driver.getByText('button', 'Ok').unwrap();\n      }\n\n      getOkButtonContainer(): T {\n          return this.driver.getByText('button', 'Ok').parent('.button-container').unwrap();\n      }\n}\n                        \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Optional\n                                locatorDriver\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorForAncestors\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorForCssSelectors\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorForText\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(driver: LocatorDriver)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/test/widget-object/widget-object.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        driver\n                                                  \n                                                        \n                                                                        LocatorDriver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorDriver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LocatorDriver\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object/widget-object.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorForAncestors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.parents(cssSelector, options).unwrap();\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object/widget-object.ts:45\n                            \n                        \n\n                \n                    \n                        Returns an element locator that will find a parent with the given cssSelector when called.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorForCssSelectors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.get(cssSelector, options).unwrap();\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object/widget-object.ts:38\n                            \n                        \n\n                \n                    \n                        Returns an element locator that will find a child with the given cssSelector when called.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorForText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         (cssSelector: string, text: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.getByText(cssSelector, text, options).unwrap();\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object/widget-object.ts:52\n                            \n                        \n\n                \n                    \n                        Returns an element locator that will find a child with the given cssSelector and text when called.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        type ElementLocator = (options?: unknown) => T;\n\n/**\n * A class that is able to make queries to the DOM and be instantiated by a widget finder.\n * Widget objects should be used only to find elements in the DOM. You should not attempt to take\n * actions on these elements in a given widget object.\n *\n * All widget objects should extend this base class.\n *\n * @example\n *\n * class LoginWidgetObject extends BaseWidgetObject {\n *      getUsernameField = this.locatorForChild('.username');\n *\n *      getOkButton(): T {\n *          return this.driver.getByText('button', 'Ok').unwrap();\n *      }\n *\n *      getOkButtonContainer(): T {\n *          return this.driver.getByText('button', 'Ok').parent('.button-container').unwrap();\n *      }\n * }\n */\nexport class BaseWidgetObject {\n    protected locatorDriver?: LocatorDriver;\n    constructor(driver: LocatorDriver) {\n        this.locatorDriver = driver;\n    }\n\n    /**\n     * Returns an element locator that will find a child with the given cssSelector when called.\n     */\n    protected locatorForCssSelectors? = (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.get(cssSelector, options).unwrap();\n    };\n\n    /**\n     * Returns an element locator that will find a parent with the given cssSelector when called.\n     */\n    protected locatorForAncestors? = (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.parents(cssSelector, options).unwrap();\n    };\n\n    /**\n     * Returns an element locator that will find a child with the given cssSelector and text when called.\n     */\n    protected locatorForText? = (cssSelector: string, text: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.getByText(cssSelector, text, options).unwrap();\n    };\n}\n\n/**\n * Knows how to find elements of a given type T in the DOM.\n */\nexport interface LocatorDriver {\n    /**\n     * Finds all child elements that match the given cssSelector.\n     */\n    get(cssSelector: string, options?: unknown): LocatorDriver;\n\n    /**\n     * Finds all child elements that match the given cssSelector and have text that contains the given value.\n     */\n    getByText(cssSelector: string, value: string, options?: unknown): LocatorDriver;\n\n    /**\n     * Finds the closest parent that matches the given cssSelector.\n     */\n    parents(cssSelector: string, options?: unknown): LocatorDriver;\n\n    /**\n     * Returns an instance of the given widget within this widget object.\n     */\n    findWidget, C extends FindableWidget>(\n        widget: C,\n        cssSelector?: string\n    ): CorrectReturnTypes, T>;\n\n    /**\n     * Unwraps the value from this query and turns it into the resulting object type.\n     */\n    unwrap(): T;\n}\n\ntype ConvertGenericOnly = unknown extends CR ? R : CorrectReturnTypes;\n\n/**\n * Changes the class so that all functions/getters return R.\n */\nexport type CorrectReturnTypes = {\n    [P in keyof T]: T[P] extends (...args: any[]) => infer CR\n        ? (...args: Parameters) => ConvertGenericOnly\n        : ConvertGenericOnly;\n};\n\n/**\n * The interface that all WidgetObject classes must satisfy. This means that they must extend BaseWidgetObject and\n * have a static tagName.\n */\nexport interface FindableWidget> {\n    new (driver: LocatorDriver): W;\n    tagName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoldTextRendererComponent.html":{"url":"components/BoldTextRendererComponent.html","title":"component - BoldTextRendererComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BoldTextRendererComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/datagrid/renderers/bold-text-renderer.component.ts\n\n\n    \n        Description\n    \n    \n        A ComponentRenderer component that is used for rendering a bold text inside a column cell template\n\n    \n\n\n    \n        Implements\n    \n    \n                    ComponentRenderer\n    \n\n    \n        Example\n    \n    \n                \n                    Example usage with RendererSpec:\ncolumns: GridColumn[] = [\n{\ndisplayName: 'Component Renderer',\nrenderer: RendererSpec(\n  BoldTextRendererComponent,\n  (record: MockRecord) => ({text: record.name})\n)\n}\n];\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-bold-text-renderer\n            \n\n\n\n            \n                template\n                {{ config.text }}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         BoldTextRendererConfig\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/datagrid/renderers/bold-text-renderer.component.ts:41\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ComponentRenderer } from '../interfaces/component-renderer.interface';\nimport { ColumnComponentRendererSpec, ColumnRendererSpec } from '../interfaces/datagrid-column.interface';\n/**\n * {@link ComponentRenderer.config} type that the {@link BoldTextRendererComponent} can understand\n */\nexport interface BoldTextRendererConfig {\n    /**\n     * Text to be displayed in bold font\n     */\n    text: string;\n}\n\n/**\n * A {@link ComponentRenderer} component that is used for rendering a bold text inside a column cell template\n *\n * @example Example usage with RendererSpec:\n *     columns: GridColumn[] = [\n *       {\n *         displayName: 'Component Renderer',\n *         renderer: RendererSpec(\n *           BoldTextRendererComponent,\n *           (record: MockRecord) => ({text: record.name})\n *         )\n *       }\n *     ];\n */\n@Component({\n    selector: 'vcd-bold-text-renderer',\n    template: `\n        {{ config.text }}\n    `,\n})\nexport class BoldTextRendererComponent implements ComponentRenderer {\n    @Input()\n    config: BoldTextRendererConfig;\n}\n\n/**\n * Creates a {@link ColumnRendererSpec} for rendering bold text in a column.\n */\nexport function BoldTextRenderer(\n    textExtractor: (record: R) => string\n): ColumnRendererSpec {\n    return ColumnComponentRendererSpec({\n        type: BoldTextRendererComponent,\n        config(record): BoldTextRendererConfig {\n            return {\n                text: textExtractor(record),\n            };\n        },\n    });\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ config.text }}'\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'BoldTextRendererComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BoldTextRendererConfig.html":{"url":"interfaces/BoldTextRendererConfig.html","title":"interface - BoldTextRendererConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BoldTextRendererConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/renderers/bold-text-renderer.component.ts\n        \n\n            \n                Description\n            \n            \n                ComponentRenderer.config type that the BoldTextRendererComponent can understand\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Text to be displayed in bold font\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ComponentRenderer } from '../interfaces/component-renderer.interface';\nimport { ColumnComponentRendererSpec, ColumnRendererSpec } from '../interfaces/datagrid-column.interface';\n/**\n * {@link ComponentRenderer.config} type that the {@link BoldTextRendererComponent} can understand\n */\nexport interface BoldTextRendererConfig {\n    /**\n     * Text to be displayed in bold font\n     */\n    text: string;\n}\n\n/**\n * A {@link ComponentRenderer} component that is used for rendering a bold text inside a column cell template\n *\n * @example Example usage with RendererSpec:\n *     columns: GridColumn[] = [\n *       {\n *         displayName: 'Component Renderer',\n *         renderer: RendererSpec(\n *           BoldTextRendererComponent,\n *           (record: MockRecord) => ({text: record.name})\n *         )\n *       }\n *     ];\n */\n@Component({\n    selector: 'vcd-bold-text-renderer',\n    template: `\n        {{ config.text }}\n    `,\n})\nexport class BoldTextRendererComponent implements ComponentRenderer {\n    @Input()\n    config: BoldTextRendererConfig;\n}\n\n/**\n * Creates a {@link ColumnRendererSpec} for rendering bold text in a column.\n */\nexport function BoldTextRenderer(\n    textExtractor: (record: R) => string\n): ColumnRendererSpec {\n    return ColumnComponentRendererSpec({\n        type: BoldTextRendererComponent,\n        config(record): BoldTextRendererConfig {\n            return {\n                text: textExtractor(record),\n            };\n        },\n    });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BoldTextRendererWidgetObject.html":{"url":"classes/BoldTextRendererWidgetObject.html","title":"class - BoldTextRendererWidgetObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BoldTextRendererWidgetObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/renderers/bold-text-renderer.wo.ts\n        \n\n            \n                Description\n            \n            \n                Widget Object for the bold text renderer.\n\n            \n\n            \n                Extends\n            \n            \n                        WidgetObject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                tagName\n                            \n                            \n                                    Public\n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                click\n                            \n                            \n                                detectChanges\n                            \n                            \n                                    Protected\n                                findElement\n                            \n                            \n                                    Protected\n                                findElements\n                            \n                            \n                                    Protected\n                                getNodeText\n                            \n                            \n                                    Protected\n                                getText\n                            \n                            \n                                    Protected\n                                getTexts\n                            \n                            \n                                    Protected\n                                sendKeyboardEvent\n                            \n                            \n                                    Protected\n                                setInputValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    text\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tagName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd-bold-text-renderer'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/renderers/bold-text-renderer.wo.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : fixture.componentInstance\n                        \n                    \n                            \n                                \n                                    Inherited from         WidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         WidgetObject:42\n\n                            \n                        \n\n                \n                    \n                        The component instance being managed. Whenever possible, we should access the component's API.\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    click(cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:73\n\n                \n            \n\n\n            \n                \n                    Clicks an element and detects changes so the DOM is immediately updated\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to click a specific element. If not passed in, the entire node will\nreceive the click event\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \ndetectChanges()\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElement(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:54\n\n                \n            \n\n\n            \n                \n                    Finds first element within this widget matching the given selector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        What to search for\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DebugElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElements\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElements(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:62\n\n                \n            \n\n\n            \n                \n                    Same as findElement but returns all elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DebugElement[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getNodeText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeText(el: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:140\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getText(cssSelector: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:128\n\n                \n            \n\n\n            \n                \n                    Returns text content of this widget\nIf the element cannot be found, gives empty string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to retrieve text for a specific element within this widget.\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getTexts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTexts(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:136\n\n                \n            \n\n\n            \n                \n                    Same as getText but return the text for all matching nodes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            sendKeyboardEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendKeyboardEvent(eventType, eventProperties: literal type, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:90\n\n                \n            \n\n\n            \n                \n                    Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\nfound by the {@param cssSelector} within the provided {@param parent} or the current root element.\nSetting the event properties is done with Object.defineProperty on the created event. This allows setting\nproperties like which that is deprecated and cannot be set with the native approach of creating keyboard event.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    eventType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The keyboard event type like 'keyup', 'keydown', 'keypress'\n\n                                    \n                                \n                                \n                                    eventProperties\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        properties of the event like code, key etc.\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setInputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setInputValue(value: string | number, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:114\n\n                \n            \n\n\n            \n                \n                    Sets the value of an input element or textarea element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        the value that the element should display\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n\n                \n                    \n                        gettext()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/datagrid/renderers/bold-text-renderer.wo.ts:15\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { WidgetObject } from '../../utils/test/widget-object';\nimport { BoldTextRendererComponent } from './bold-text-renderer.component';\n\n/**\n * Widget Object for the bold text renderer.\n */\nexport class BoldTextRendererWidgetObject extends WidgetObject {\n    static tagName = 'vcd-bold-text-renderer';\n\n    get text(): string {\n        return this.findElement('strong').nativeElement.textContent;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CanBeReadOnly.html":{"url":"interfaces/CanBeReadOnly.html","title":"interface - CanBeReadOnly","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CanBeReadOnly\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/form/interfaces/can-be-read-only.interface.ts\n        \n\n            \n                Description\n            \n            \n                Components that can be made readonly should implement this interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isReadOnly\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isReadOnly\n                                    \n                                \n                                \n                                    \n                                        isReadOnly:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This being true implies that any controls that may edit data will not allow editing or be removed\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface CanBeReadOnly {\n    /**\n     * This being true implies that any controls that may edit data will not allow editing or be removed\n     */\n    isReadOnly: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CliptextConfig.html":{"url":"interfaces/CliptextConfig.html","title":"interface - CliptextConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CliptextConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/lib/directives/show-clipped-text.directive.ts\n        \n\n            \n                Description\n            \n            \n                The configuration information for the cliptext within the cells of the datagrid.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        mouseoutDelay\n                                \n                                \n                                            Optional\n                                        size\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the cliptext should be disabled.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mouseoutDelay\n                                    \n                                \n                                \n                                    \n                                        mouseoutDelay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The time delay from mouse off to hide the cliptext.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         TooltipSize\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TooltipSize\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The size of the tooltip to be displayed in the cell.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\n\nexport enum TooltipPosition {\n    tl = 'tooltip-top-left',\n    tr = 'tooltip-top-right',\n    br = 'tooltip-bottom-right',\n    bl = 'tooltip-bottom-left',\n}\n\nexport enum TooltipSize {\n    sm = '100px',\n    md = '200px',\n    lg = '400px',\n}\n\n/**\n * The configuration information for the cliptext within the cells of the datagrid.\n */\nexport interface CliptextConfig {\n    /**\n     * The size of the tooltip to be displayed in the cell.\n     */\n    size?: TooltipSize;\n    /**\n     * The time delay from mouse off to hide the cliptext.\n     */\n    mouseoutDelay?: number;\n    /**\n     * If the cliptext should be disabled.\n     */\n    disabled?: boolean;\n}\n\n/**\n * Singleton tooltip created by directive\n */\nconst tip = {\n    /** A single DOM node structure for the popup is created and shared with all instances (the .tooltip)  */\n    container: null as HTMLElement,\n\n    /** The inner node (the .tooltip-content) */\n    content: null as HTMLElement,\n\n    /** Timer for setTimeout used when hiding */\n    hideTimeout: null as number,\n\n    /** The directive that last caused the tooltip to be displayed */\n    currentDirective: null as ShowClippedTextDirective,\n\n    /** Whether the mouse is currently over a host or the tooltip */\n    isMouseOver: false,\n\n    /**\n     * The host element that last caused the tooltip to be displayed\n     */\n    get currentHost(): HTMLElement {\n        return tip.currentDirective.hostElement;\n    },\n\n    /**\n     * The tooltip size requested for the last directive that caused the tooltip to be displayed\n     */\n    get tooltipSize(): TooltipSize {\n        return tip.currentDirective.tooltipSize;\n    },\n\n    /**\n     * How long to wait before hiding the tooltip after a mouseout. This gives the user a chance to hover over the\n     * tooltip so they can copy/paste its contents\n     */\n    get mouseoutDelay(): number {\n        return tip.currentDirective.mouseoutDelay;\n    },\n\n    create(): void {\n        if (tip.container) {\n            return;\n        }\n        tip.container = document.createElement('div');\n        tip.container.classList.add('tooltip', 'vcd-show-clipped-text');\n        tip.content = document.createElement('div');\n        tip.content.classList.add('tooltip-content');\n        setStyle(tip.container, {\n            position: 'absolute',\n            zIndex: '1000',\n            opacity: '0',\n        });\n        tip.container.appendChild(tip.content);\n        document.body.appendChild(tip.container);\n        watchEvents(tip.container, tip.onMouseEnter, tip.onMouseLeave);\n        tip.content.addEventListener('transitionend', tip.onTransitionEnd);\n    },\n\n    destroy(): void {\n        document.body.removeChild(tip.container);\n        unwatchEvents(tip.container, tip.onMouseEnter, tip.onMouseLeave);\n        tip.content.removeEventListener('transitionend', this.onTransitionEnd);\n        tip.container = null;\n        tip.content = null;\n    },\n\n    onMouseEnter(): void {\n        tip.clearHideTimeout();\n    },\n\n    onMouseLeave(): void {\n        if (tip.currentDirective) {\n            tip.hideTooltip(tip.mouseoutDelay);\n        }\n    },\n\n    hideTooltip(delay: number): void {\n        tip.clearHideTimeout();\n        tip.hideTimeout = window.setTimeout(() => {\n            tip.isMouseOver = false;\n            tip.container.style.opacity = '0';\n            tip.content.style.opacity = '0';\n            tip.hideTimeout = null;\n            tip.currentDirective = null;\n        }, delay);\n    },\n\n    clearHideTimeout(): void {\n        if (tip.hideTimeout) {\n            clearTimeout(tip.hideTimeout);\n            tip.hideTimeout = null;\n        }\n    },\n\n    onTransitionEnd(e: Event): void {\n        if (tip.container.style.opacity === '0') {\n            tip.container.style.visibility = 'hidden';\n            tip.content.style.visibility = 'hidden';\n        }\n    },\n\n    /**\n     * Update the tooltip based on the content/dimensions of {@link tip.currentDirective}\n     */\n    update(): void {\n        const el = tip.currentHost;\n        const rect = el.getBoundingClientRect();\n        setStyle(tip.container, {\n            top: rect.top + 'px',\n            left: rect.left + 'px',\n            width: rect.width + 'px',\n            height: rect.height + 'px',\n            opacity: '1',\n            wordBreak: 'break-all',\n        });\n        setStyle(tip.content, {\n            visibility: 'visible',\n            opacity: '1',\n            width: this.tooltipSize,\n        });\n        const { tl, tr, bl, br } = TooltipPosition;\n        tip.content.classList.remove(tl, tr, bl, br);\n        tip.content.classList.add(tip.calculatePosition(rect));\n        tip.content.innerHTML = el.innerHTML;\n    },\n\n    /**\n     *  Tooltip direction should be the opposite quadrant of where the center of the clipped element is\n     *     TL -> BR        TR -> BL\n     *     BL -> TR        BR -> TL\n     * @param rect THe dimensions of the clipped element\n     */\n    calculatePosition(rect: ClientRect): TooltipPosition {\n        const { innerWidth, innerHeight } = window;\n        const rectCenter = { x: rect.left + rect.width / 2, y: rect.top + rect.height / 2 };\n\n        // It's on the right\n        if (rectCenter.x > innerWidth / 2) {\n            if (rectCenter.y > innerHeight / 2) {\n                // Bottom right quad\n                return TooltipPosition.tl;\n            } else {\n                // Top right quad\n                return TooltipPosition.bl;\n            }\n        }\n\n        // It's on the left\n        if (rectCenter.y > innerHeight / 2) {\n            // Bottom left quad\n            return TooltipPosition.tr;\n        } else {\n            // Top left quad\n            return TooltipPosition.br;\n        }\n    },\n};\n\ntype EventHandler = (e: MouseEvent) => void;\n\nfunction watchEvents(el: HTMLElement, mouseIn: EventHandler, mouseOut: EventHandler): void {\n    el.addEventListener('mouseenter', mouseIn);\n    el.addEventListener('mouseleave', mouseOut);\n}\n\nfunction unwatchEvents(el: HTMLElement, mouseIn: EventHandler, mouseOut: EventHandler): void {\n    el.removeEventListener('mouseenter', mouseIn);\n    el.removeEventListener('mouseleave', mouseOut);\n}\n\nfunction setStyle(el: HTMLElement, style: Partial): void {\n    Object.assign(el.style, style);\n}\n\n/**\n * Displays a clarity tooltip with the full contents of a host element on hover but only if\n * the elements is clipped.\n */\n@Directive({\n    selector: '[vcdShowClippedText]',\n})\nexport class ShowClippedTextDirective implements OnDestroy, OnInit {\n    /** To destroy the tooltip when no longer needed */\n    static instanceCount = 0;\n\n    @Input('vcdShowClippedText')\n    set config(config: CliptextConfig) {\n        if (config && config.mouseoutDelay) {\n            this.mouseoutDelay = config.mouseoutDelay;\n        }\n        if (config && config.size) {\n            this.tooltipSize = config.size;\n        }\n        const nextDisabled = config !== undefined && config.disabled;\n        if (this.disabled === nextDisabled) {\n            return;\n        }\n        this.disabled = nextDisabled;\n        if (this.disabled) {\n            this.deactivate();\n        } else {\n            this.activate();\n        }\n    }\n\n    mouseoutDelay = 500;\n    tooltipSize = TooltipSize.md;\n    disabled = false;\n\n    /**\n     * The HTML element receiving the directive\n     */\n    public hostElement: HTMLElement = this.host.nativeElement;\n\n    constructor(private host: ElementRef) {}\n\n    ngOnInit(): void {\n        if (!this.disabled) {\n            this.activate();\n        }\n    }\n\n    activate(): void {\n        ShowClippedTextDirective.instanceCount++;\n        tip.create();\n        watchEvents(this.hostElement, this.onMouseIn, this.onMouseOut);\n\n        // A host must have the following styles to show text ellipsis when overflowing\n        setStyle(this.hostElement, {\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n        });\n    }\n\n    ngOnDestroy(): void {\n        if (!this.disabled) {\n            this.deactivate();\n        }\n    }\n\n    deactivate(): void {\n        ShowClippedTextDirective.instanceCount--;\n        unwatchEvents(this.hostElement, this.onMouseIn, this.onMouseOut);\n        if (ShowClippedTextDirective.instanceCount === 0) {\n            tip.destroy();\n        }\n    }\n\n    private onMouseIn = (e: MouseEvent) => {\n        tip.clearHideTimeout();\n        tip.isMouseOver = true;\n        if (this.isOverflowing()) {\n            tip.currentDirective = this;\n            tip.update();\n        } else {\n            tip.hideTooltip(this.mouseoutDelay);\n        }\n    };\n\n    private onMouseOut = () => {\n        tip.hideTooltip(this.mouseoutDelay);\n    };\n\n    private isOverflowing(): boolean {\n        // Text overflows when the content element's width is less than its scrollWidth.\n        return Math.ceil(this.hostElement.getBoundingClientRect().width)  {\n    // Since we're at it, please remove the param from onTransitionEnd since we don't use it\n    tip.onTransitionEnd(event);\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColumnConfigInternal.html":{"url":"interfaces/ColumnConfigInternal.html","title":"interface - ColumnConfigInternal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColumnConfigInternal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                For simplifying logic inside the HTML template to differentiate between different GridColumn.renderer\ntypes.\n\n            \n\n            \n                Extends\n            \n            \n                        GridColumn\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fieldColumnRendererSpec\n                                \n                                \n                                            Optional\n                                        fieldName\n                                \n                                \n                                            Optional\n                                        fieldRenderer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fieldColumnRendererSpec\n                                    \n                                \n                                \n                                    \n                                        fieldColumnRendererSpec:         ColumnRendererSpec\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColumnRendererSpec\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldName\n                                    \n                                \n                                \n                                    \n                                        fieldName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldRenderer\n                                    \n                                \n                                \n                                    \n                                        fieldRenderer:         FunctionRenderer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FunctionRenderer\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColumnRendererSpec.html":{"url":"interfaces/ColumnRendererSpec.html","title":"interface - ColumnRendererSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColumnRendererSpec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/interfaces/datagrid-column.interface.ts\n        \n\n            \n                Description\n            \n            \n                Renderer specification of a column that contains component type to be rendered in the cell and configuration for that\ncomponent. used by the ComponentRendererOutletDirective\n\n            \n\n            \n                Extends\n            \n            \n                        ComponentRendererSpec\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A function that creates a config object required for the configuration of component that will be rendered in the column\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { TextIcon } from '../../common/interfaces/action-item.interface';\nimport { CliptextConfig } from '../../lib/directives/show-clipped-text.directive';\nimport { FilterConfig, FilterRendererSpec } from '../filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './component-renderer.interface';\n\nexport enum GridColumnHideable {\n    /**\n     * Does not show up in column toggle box\n     */\n    Never = 'NEVER',\n    /**\n     * Shows up in column toggle box, column is visible\n     */\n    Shown = 'SHOWN',\n    /**\n     * Shows up in column toggle box, column is hidden\n     */\n    Hidden = 'HIDDEN',\n}\n\n/**\n * Column renderer as a function. Defined in calling component when the cell value is calculated from different\n * properties.\n * @param record The record for the row being rendered\n * @return The string to be displayed for that cell\n */\nexport interface FunctionRenderer {\n    (record: T): string;\n}\n\n/**\n * Renderer specification of a column that contains component type to be rendered in the cell and configuration for that\n * component. used by the {@link ComponentRendererOutletDirective}\n */\nexport interface ColumnRendererSpec extends ComponentRendererSpec {\n    /**\n     * A function that creates a config object required for the configuration of component that will be rendered in the column\n     * @param record An object to be transformed into {@link ComponentRenderer#config}. It's passed in by the calling\n     * component\n     */\n    config: (record?: R) => C;\n}\n\n/**\n * Configuration object defined in the caller. This contains properties for the column header (text, filtering,\n * sorting, toggling etc.,) and content for row cells.\n *\n * Example:\n * const gridColumn: GridColumn = {\n *   displayName: \"Column Heading\",\n *   renderer: \"someRecord.property\",\n *   hideable: \"NEVER\"\n * }\n *\n * The above column is rendered with \"Column Heading\" text in it's heading and it is not shown in the column toggler.\n * The value of the property \"someRecord.property\" is rendered in cells corresponding to the column.\n */\nexport interface GridColumn {\n    /**\n     * Header text for the column\n     */\n    displayName: string;\n\n    /**\n     * Used for sorting/filtering. Not needed for columns not filterable/sortable\n     * TODO: do we need to support array type for querying across multiple columns?\n     */\n    queryFieldName?: string;\n\n    /**\n     * If the renderer passed in is a\n     * - string: Used as default renderer. Can be a dot separated string to identify a nested property of the item\n     * - {@link FunctionRenderer}: When you want to create a calculated column, but don't need custom HTML\n     * - TemplateRef: When custom HTML is needed and when it has to be passed in as a inline HTML\n     * - {@link ColumnRendererSpec}: When HTML is needed and when the HTML is provided as a component\n     */\n    renderer: string | FunctionRenderer | ColumnRendererSpec;\n\n    /**\n     * Whether the column shows up in the column toggler and if the column shows up, it reflects the toggle state\n     */\n    hideable?: GridColumnHideable;\n\n    /**\n     * When there is no data, show this message.\n     *\n     * Try to avoid showing this before initial load.\n     */\n    emptyColumnPlaceholder?: string;\n\n    /**\n     * TODO: Should this be made to work with top level search on grids across all columns?\n     *  The above to-do is going to be worked on as part of https://jira.eng.vmware.com/browse/VDUCC-27 and\n     */\n    filter?: FilterRendererSpec>;\n\n    /**\n     * The configuration for the cliptext in the datagrid.\n     * Defaults to size: 'lg', mouseoutDelay: undefined.\n     * If null, will disable cliptext\n     */\n    cliptextConfig?: CliptextConfig;\n\n    /**\n     * Whether to show the column as sortable. Defaults to true\n     */\n    sortable?: boolean;\n\n    /**\n     * The class of the column header.\n     */\n    clrDgColumnClassName?: string;\n}\n\n/**\n * Utility function to enforce type safety on config object of components of {@link ComponentRenderer} type. Used for creating\n * component renderer specification of {@link ColumnRendererSpec} type\n *\n * Example usage:\n * const gridColumn = {\n *   renderer: ColumnComponentRendererSpec({type: BoldTextRendererComponent, config: record => ({text: ''})\n * }\n *\n * In the above example this method helps in making sure that:\n * - Value \"v\" returned by the config function is of BoldTextRendererConfig type for gridColumn.renderer\n *\n * #Note: 'C & {}' below makes the inference site for C be the constructor type from the first argument.\n * {@link https://stackoverflow.com/questions/59055154/typescript-generics-infer-type-from-the-type-of-function-arguments}\n */\nexport function ColumnComponentRendererSpec(componentRendererSpec: {\n    type: ComponentRendererConstructor;\n    config: (record?: R) => C & {};\n}): ColumnRendererSpec {\n    return componentRendererSpec;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonUtil.html":{"url":"classes/CommonUtil.html","title":"class - CommonUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/common-util.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                isFunction\n                            \n                            \n                                    Static\n                                roundTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            isFunction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isFunction(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/common-util.ts:22\n                \n            \n\n\n            \n                \n                    Verifies if the passed value is of type Function\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            roundTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    roundTo(value: number, digits: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/common-util.ts:12\n                \n            \n\n\n            \n                \n                    Rounds number to given floating point, 2 by default.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        number from float data type\n\n                                    \n                                \n                                \n                                    digits\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        2\n                                    \n\n                                    \n                                        how many numbers will be shown after decimal point\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class CommonUtil {\n    /**\n     * Rounds number to given floating point, 2 by default.\n     * @param value number from float data type\n     * @param digits how many numbers will be shown after decimal point\n     */\n    static roundTo(value: number, digits: number = 2): number {\n        if (!value) {\n            value = 0;\n        }\n        return Number(Math.round(Number(value + 'e' + digits)) + 'e-' + digits);\n    }\n\n    /**\n     * Verifies if the passed value is of type Function\n     */\n    static isFunction(value: any): value is (...args: unknown[]) => unknown {\n        return typeof value === 'function';\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentRenderer.html":{"url":"interfaces/ComponentRenderer.html","title":"interface - ComponentRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ComponentRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/interfaces/component-renderer.interface.ts\n        \n\n            \n                Description\n            \n            \n                Implemented by all the component renderers. The components that have to be rendered dynamically.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Object used by the component renderers inside their HTML template\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type } from '@angular/core';\n\n/**\n * Implemented by all the component renderers. The components that have to be rendered dynamically.\n */\nexport interface ComponentRenderer {\n    /**\n     * Object used by the component renderers inside their HTML template\n     */\n    config: T;\n}\n\n/**\n * Used for the type safety of {@link ColumnRendererSpec#type}\n */\nexport type ComponentRendererConstructor = Type>;\n\n/**\n * An object that contains the constructor of a component of {@link ComponentRenderer} type that has to be rendered dynamically.\n *\n * {@link ComponentRendererOutletDirective} uses this object to render the component. It is responsible for setting the\n * component's configuration{@link ComponentRenderer#config} after dynamically initializing it. But the caller is responsible\n * for providing a config\n */\nexport interface ComponentRendererSpec {\n    /**\n     * Constructor of a specific type of component to be rendered\n     */\n    type: ComponentRendererConstructor;\n    /**\n     * {@link ComponentRenderer.config}. In the case of a {@link ColumnRendererSpec} it is a function that takes a rest\n     * item as input and returns an object of {@link ComponentRenderer.config}\n     */\n    config: C | ((restItem: unknown) => C);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ComponentRendererOutletDirective.html":{"url":"directives/ComponentRendererOutletDirective.html","title":"directive - ComponentRendererOutletDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ComponentRendererOutletDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts\n        \n\n            \n                Description\n            \n            \n                Component that acts as a host element for dynamic rendering of component constructors.\nIt takes ComponentRendererSpec and also 'context' as input in case of a ColumnRendererSpec that serves as argument for\nColumnRendererSpec.config method. Attaches the component to be rendered to the view container of host element\nand updates it's configuration whenever changed.\nExample usage:\n\n\n\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [vcdComponentRendererOutlet]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                componentRef\n                            \n                            \n                                    Private\n                                componentType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                assignValue\n                            \n                            \n                                    Private\n                                attachRenderer\n                            \n                            \n                                    Private\n                                detachRenderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                vcdComponentRendererOutlet\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    vcdComponentRendererOutlet\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef, cfr: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cfr\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        vcdComponentRendererOutlet\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts:40\n                            \n                        \n                \n                    \n                        Sets the component that this outlet should render. Where rendererSpec is the\nComponentRendererSpec that details how to render the component and context\nis any information that the component needs to render.\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            assignValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assignValue(config:  | T, context: R)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts:63\n                \n            \n\n\n            \n                \n                    Updates the configuration of instantiated component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                             | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            R\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            attachRenderer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attachRenderer()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts:52\n                \n            \n\n\n            \n                \n                    Attaches the passed component type to the view of this directive host\n\n\n                    \n                        Returns :         ComponentRef>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            detachRenderer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    detachRenderer()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            componentRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ComponentRef>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            componentType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ComponentRendererConstructor\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts:30\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        vcdComponentRendererOutlet\n                    \n                \n\n\n                \n                    \n                        setvcdComponentRendererOutlet(renderer: literal type)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts:40\n                                \n                            \n                    \n                        \n                                Sets the component that this outlet should render. Where rendererSpec is the\nComponentRendererSpec that details how to render the component and context\nis any information that the component needs to render.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            renderer\n                                                    \n                                                            \n                                                                        literal type\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { ComponentFactoryResolver, ComponentRef, Directive, Input, ViewContainerRef } from '@angular/core';\nimport {\n    ComponentRenderer,\n    ComponentRendererConstructor,\n    ComponentRendererSpec,\n} from '../interfaces/component-renderer.interface';\n\n/**\n * Component that acts as a host element for dynamic rendering of component constructors.\n * It takes {@link ComponentRendererSpec} and also 'context' as input in case of a {@link ColumnRendererSpec} that serves as argument for\n * {@link ColumnRendererSpec.config} method. Attaches the component to be rendered to the view container of host element\n * and updates it's configuration whenever changed.\n *\n * Example usage:\n * \n *\n */\n@Directive({\n    selector: '[vcdComponentRendererOutlet]',\n})\nexport class ComponentRendererOutletDirective {\n    private componentRef: ComponentRef>;\n    private componentType: ComponentRendererConstructor;\n\n    constructor(private viewContainerRef: ViewContainerRef, private cfr: ComponentFactoryResolver) {}\n\n    /**\n     * Sets the component that this outlet should render. Where rendererSpec is the\n     * {@link ComponentRendererSpec} that details how to render the component and context\n     * is any information that the component needs to render.\n     */\n    @Input()\n    set vcdComponentRendererOutlet(renderer: { rendererSpec: ComponentRendererSpec; context?: R }) {\n        if (this.componentType !== renderer.rendererSpec.type) {\n            // Cache the componentType to avoid redundant detaching and attaching of component to this host\n            this.componentType = renderer.rendererSpec.type;\n            this.componentRef = this.attachRenderer();\n        }\n        this.assignValue(renderer.rendererSpec.config, renderer.context);\n    }\n\n    /**\n     * Attaches the passed component type to the view of this directive host\n     */\n    private attachRenderer(): ComponentRef> {\n        if (this.componentRef) {\n            this.detachRenderer();\n        }\n        const componentFactory = this.cfr.resolveComponentFactory(this.componentType);\n        return this.viewContainerRef.createComponent(componentFactory);\n    }\n\n    /**\n     * Updates the configuration of instantiated component\n     */\n    private assignValue(config: ((r: R) => T) | T, context: R): void {\n        if (!this.componentRef || !this.componentRef.instance) {\n            return;\n        }\n        this.componentRef.instance.config = config instanceof Function ? config(context) : config;\n    }\n\n    private detachRenderer(): void {\n        this.viewContainerRef.remove();\n        this.componentRef = null;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentRendererSpec.html":{"url":"interfaces/ComponentRendererSpec.html","title":"interface - ComponentRendererSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ComponentRendererSpec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/interfaces/component-renderer.interface.ts\n        \n\n            \n                Description\n            \n            \n                An object that contains the constructor of a component of ComponentRenderer type that has to be rendered dynamically.\nComponentRendererOutletDirective uses this object to render the component. It is responsible for setting the\ncomponent's configurationComponentRenderer after dynamically initializing it. But the caller is responsible\nfor providing a config\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     C | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     C | \n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ComponentRenderer.config. In the case of a ColumnRendererSpec it is a function that takes a rest\nitem as input and returns an object of ComponentRenderer.config\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         ComponentRendererConstructor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentRendererConstructor\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Constructor of a specific type of component to be rendered\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type } from '@angular/core';\n\n/**\n * Implemented by all the component renderers. The components that have to be rendered dynamically.\n */\nexport interface ComponentRenderer {\n    /**\n     * Object used by the component renderers inside their HTML template\n     */\n    config: T;\n}\n\n/**\n * Used for the type safety of {@link ColumnRendererSpec#type}\n */\nexport type ComponentRendererConstructor = Type>;\n\n/**\n * An object that contains the constructor of a component of {@link ComponentRenderer} type that has to be rendered dynamically.\n *\n * {@link ComponentRendererOutletDirective} uses this object to render the component. It is responsible for setting the\n * component's configuration{@link ComponentRenderer#config} after dynamically initializing it. But the caller is responsible\n * for providing a config\n */\nexport interface ComponentRendererSpec {\n    /**\n     * Constructor of a specific type of component to be rendered\n     */\n    type: ComponentRendererConstructor;\n    /**\n     * {@link ComponentRenderer.config}. In the case of a {@link ColumnRendererSpec} it is a function that takes a rest\n     * item as input and returns an object of {@link ComponentRenderer.config}\n     */\n    config: C | ((restItem: unknown) => C);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CsvExporterService.html":{"url":"injectables/CsvExporterService.html","title":"injectable - CsvExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CsvExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/data-exporter/csv-exporter.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createCsv\n                            \n                            \n                                    Public\n                                downloadCsvFile\n                            \n                            \n                                    Public\n                                hasPotentialInjection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createCsv\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCsv(rows: any[][], shouldSanitize)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/data-exporter/csv-exporter.service.ts:21\n                \n            \n\n\n            \n                \n                    Creates a string that can be used to create a Blob for a CSV\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    rows\n                                    \n                                            any[][]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        2D array of data. First row is the names for the fields\n\n                                    \n                                \n                                \n                                    shouldSanitize\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        If a cell starting with a control character should be edited to prevent\npossible code injection\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            downloadCsvFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    downloadCsvFile(csvFile: string, filename: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/data-exporter/csv-exporter.service.ts:39\n                \n            \n\n\n            \n                \n                    Does a client side download\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    csvFile\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The string contents of a CSV file to be downloaded\n\n                                    \n                                \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the file to be downloaded\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasPotentialInjection\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasPotentialInjection(rows: any[][])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/data-exporter/csv-exporter.service.ts:30\n                \n            \n\n\n            \n                \n                    Whether the CSV that would result from the export is at risk of code injection\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rows\n                                    \n                                            any[][]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        2D array of data. First row is the names for the fields\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root',\n})\n/**\n * Encodes a data set to be downloaded as a CSV\n */\nexport class CsvExporterService {\n    /**\n     * Creates a string that can be used to create a Blob for a CSV\n     * @param rows 2D array of data. First row is the names for the fields\n     * @param shouldSanitize If a cell starting with a control character should be edited to prevent\n     * possible code injection\n     */\n    public createCsv(rows: any[][], shouldSanitize = false): string {\n        // BOM Mark to help Excel open the CSV when it contains UTF-8 characters\n        return '\\ufeff' + rows.map((row) => processRow(row, shouldSanitize)).join('\\n');\n    }\n\n    /**\n     * Whether the CSV that would result from the export is at risk of code injection\n     * @param rows 2D array of data. First row is the names for the fields\n     */\n    public hasPotentialInjection(rows: any[][]): boolean {\n        return rows.some(hasPotentialInjection);\n    }\n\n    /**\n     * Does a client side download\n     * @param csvFile The string contents of a CSV file to be downloaded\n     * @param filename The name of the file to be downloaded\n     */\n    public downloadCsvFile(csvFile: string, filename: string): void {\n        const mimeType = 'text/csv;charset=utf-8;';\n        const blob = new Blob([csvFile], { type: mimeType });\n        // Jan 1, 2020 - Chrome and IE support this\n        if (navigator.msSaveBlob) {\n            navigator.msSaveBlob(blob, filename);\n        } else {\n            const link = document.createElement('a');\n            const url = URL.createObjectURL(blob);\n            link.setAttribute('href', url);\n            link.setAttribute('download', filename);\n            link.style.visibility = 'hidden';\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n    }\n}\n\nconst LEADING_CONTROL_CHAR = /^[-+=@]/;\n\n/**\n * Whether the given row data is at risk of code injection when exported to CSV.\n */\nfunction hasPotentialInjection(row: unknown[]): boolean {\n    return row.some((cell) => LEADING_CONTROL_CHAR.test(encodeValue(cell, false)));\n}\n\n/**\n * Returns a string\n * @param row A list of cells to be turned into a CSV string, separated by commas\n * @param shouldSanitize If a cell starting with a control character should be edited to prevent\n * possible code injection\n */\nfunction processRow(row: unknown[], shouldSanitize: boolean): string {\n    return row.map((cell) => encodeValue(cell, shouldSanitize)).join(',');\n}\n\n/**\n * Returns a cell's cellValue encoded against spaces, quotes, and CSV injection character\n * @param cellValue Cell cellValue to be encoded\n * @param shouldSanitize If this cellValue starts with a control should it be\n * prefixed with the tab character\n */\nfunction encodeValue(cellValue: unknown, shouldSanitize: boolean): string {\n    let innerValue = cellValue == null ? '' : cellValue.toString();\n    if (cellValue instanceof Date) {\n        innerValue = cellValue.toLocaleString();\n    } else if (cellValue && typeof cellValue === 'object') {\n        innerValue = JSON.stringify(cellValue);\n    }\n    // Double quotes are doubled\n    let result = innerValue.replace(/\"/g, '\"\"');\n\n    // Add quotes around the whole thing if it contains new lines\n    if (result.search(/[\",\\n]/g) >= 0) {\n        result = `\"${result}\"`;\n    }\n    // Escape against\n    if (shouldSanitize) {\n        return sanitizeString(result);\n    }\n    return result;\n}\n\n/**\n * Prevents CSV injection by prefixing with a tab character if the string contains a\n * special character.\n */\nfunction sanitizeString(value: string): string {\n    if (LEADING_CONTROL_CHAR.test(value)) {\n        return '\\t' + value;\n    }\n    return value;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CypressLocatorDriver.html":{"url":"classes/CypressLocatorDriver.html","title":"class - CypressLocatorDriver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CypressLocatorDriver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object/cypress-widget-object.ts\n        \n\n            \n                Description\n            \n            \n                Knows how to find Cypress chainables in the DOM.\nT is the type of data that this will output when you call unwrap.\nIn almost all cases, this should be a Cypress.Chainable.\nWe chose to provide this as a generic because for reasons seen in\nthis PR\nwe could not load the Cypress types in our library.\n\n            \n\n\n            \n                Implements\n            \n            \n                            LocatorDriver\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findWidget\n                            \n                            \n                                get\n                            \n                            \n                                    Private\n                                getBase\n                            \n                            \n                                getByText\n                            \n                            \n                                parents\n                            \n                            \n                                unwrap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(chainable: T, isRoot: boolean, alias: string)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/test/widget-object/cypress-widget-object.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chainable\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isRoot\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findWidget\n                        \n                        \n                    \n                \n            \n            \n                \nfindWidget(widget: C, cssSelector?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/cypress-widget-object.ts:58\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        W\n                        C\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    widget\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CorrectReturnTypes, T>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(cssSelector: string, options?: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/cypress-widget-object.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CypressLocatorDriver\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getBase\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBase()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/cypress-widget-object.ts:72\n                \n            \n\n\n            \n                \n                    Gives the correct base for this current query.\nThis is to override the behavior where calls to .find will permanently change the scope of the query.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByText\n                        \n                        \n                    \n                \n            \n            \n                \ngetByText(cssSelector: string, value: string, options?: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/cypress-widget-object.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CypressLocatorDriver\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parents\n                        \n                        \n                    \n                \n            \n            \n                \nparents(cssSelector: string, options?: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/cypress-widget-object.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CypressLocatorDriver\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unwrap\n                        \n                        \n                    \n                \n            \n            \n                \nunwrap()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/cypress-widget-object.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CypressWidgetObjectFinder } from './cypress-widget-finder';\nimport { BaseWidgetObject, CorrectReturnTypes, FindableWidget, LocatorDriver } from './widget-object';\n\ndeclare const cy;\n\n/**\n * Knows how to find Cypress chainables in the DOM.\n *\n * T is the type of data that this will output when you call `unwrap`.\n * In almost all cases, this should be a `Cypress.Chainable`.\n * We chose to provide this as a generic because for reasons seen in\n * [this PR](https://github.com/vmware/vmware-cloud-director-ui-components/pull/248)\n * we could not load the Cypress types in our library.\n */\nexport class CypressLocatorDriver implements LocatorDriver {\n    constructor(private chainable: T, private isRoot: boolean, private alias: string) {}\n\n    /**\n     * @inheritdoc\n     */\n    get(cssSelector: string, options?: unknown): CypressLocatorDriver {\n        const root = this.getBase();\n        return new CypressLocatorDriver(root.find(cssSelector, options), false, this.alias);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getByText(cssSelector: string, value: string, options?: unknown): CypressLocatorDriver {\n        const root = this.getBase();\n        const queryOptions = { matchCase: false, ...(options ? (options as object) : {}) };\n        return new CypressLocatorDriver(root.contains(cssSelector, value, queryOptions), false, this.alias);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    parents(cssSelector: string, options?: unknown): CypressLocatorDriver {\n        const root = this.getBase();\n        return new CypressLocatorDriver(root.parents(cssSelector, options), false, this.alias);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    unwrap(): T {\n        return this.chainable;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    findWidget, C extends FindableWidget>(\n        widget: C,\n        cssSelector?: string\n    ): CorrectReturnTypes, T> {\n        return new CypressWidgetObjectFinder().find(widget, '@' + this.alias, cssSelector) as CorrectReturnTypes,\n            T\n        >;\n    }\n\n    /**\n     * Gives the correct base for this current query.\n     * This is to override the behavior where calls to .find will permanently change the scope of the query.\n     */\n    private getBase(): any {\n        if (this.isRoot) {\n            return cy.get('@' + this.alias);\n        } else {\n            return this.chainable;\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CypressWidgetObjectFinder.html":{"url":"classes/CypressWidgetObjectFinder.html","title":"class - CypressWidgetObjectFinder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CypressWidgetObjectFinder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object/cypress-widget-finder.ts\n        \n\n            \n                Description\n            \n            \n                Knows how to find Cypress widget objects within the DOM.\nT is the type of data that this will output when you call unwrap.\nIn almost all cases, this should be a Cypress.Chainable.\nWe chose to provide this as a generic because for reasons seen in\nthis PR\nwe could not load the Cypress types in our library.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(widgetConstructor: C, ancestor?: string, cssSelector?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/cypress-widget-finder.ts:32\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        W\n                        C\n                    \n                \n            \n\n            \n                \n                    Finds a single widget object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    widgetConstructor\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe constructor of the widget to use\n\n\n                                    \n                                \n                                \n                                    ancestor\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nThe CSS query or alias of the parent to begin the search from.\nthis will be passed to cy.get and is a global search.\n\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nThe cssSelector to append to the tagName for the search\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CorrectReturnTypes, T>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IdGenerator } from '../../id-generator/id-generator';\nimport { CypressLocatorDriver } from './cypress-widget-object';\nimport { BaseWidgetObject, CorrectReturnTypes, FindableWidget } from './widget-object';\n\ndeclare const cy;\nconst idGenerator = new IdGenerator('cy-id');\n\n/**\n * Knows how to find Cypress widget objects within the DOM.\n *\n * T is the type of data that this will output when you call `unwrap`.\n * In almost all cases, this should be a `Cypress.Chainable`.\n * We chose to provide this as a generic because for reasons seen in\n * [this PR](https://github.com/vmware/vmware-cloud-director-ui-components/pull/248)\n * we could not load the Cypress types in our library.\n */\nexport class CypressWidgetObjectFinder {\n    /**\n     * Finds a single widget object\n     *\n     * @param widgetConstructor - The constructor of the widget to use\n     * @param ancestor - The CSS query or alias of the parent to begin the search from.\n     *                 this will be passed to `cy.get` and is a global search.\n     * @param cssSelector - The cssSelector to append to the tagName for the search\n     *\n     */\n    public find, C extends FindableWidget>(\n        widgetConstructor: C,\n        ancestor?: string,\n        cssSelector?: string\n    ): CorrectReturnTypes, T> {\n        let tagName = widgetConstructor.tagName;\n        if (cssSelector) {\n            tagName += `${cssSelector}`;\n        }\n        const id = idGenerator.generate();\n        const search = ancestor ? cy.get(ancestor).find(tagName) : cy.get(tagName);\n        const root = search.as(id);\n        const widget = new widgetConstructor(new CypressLocatorDriver(root, true, id));\n        return (widget as any) as CorrectReturnTypes, T>;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataExportRequestEvent.html":{"url":"interfaces/DataExportRequestEvent.html","title":"interface - DataExportRequestEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataExportRequestEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/data-exporter/data-exporter.component.ts\n        \n\n            \n                Description\n            \n            \n                Information passed to the caller so they can fetch the data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        exportData\n                                \n                                \n                                        selectedColumns\n                                \n                                \n                                        updateProgress\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exportData\n                                    \n                                \n                                \n                                    \n                                        exportData:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Call this when all records have been fetched to initiate the CSV creation.\nThis should only be called once after all data fetching is finished\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedColumns\n                                    \n                                \n                                \n                                    \n                                        selectedColumns:         ExportColumn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExportColumn[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Columns selected by the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateProgress\n                                    \n                                \n                                \n                                    \n                                        updateProgress:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Call this to indicate a new value to be displayed in the progress indicator.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup } from '@angular/forms';\nimport { ClrDropdown } from '@clr/angular';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { CsvExporterService } from './csv-exporter.service';\n\n/**\n * Identifiers for each column that user is allowed to select\n */\nexport interface ExportColumn {\n    /**\n     * Displayed in the list of columns. If there is no displayName, the default value is fieldName\n     */\n    displayName?: string;\n    /**\n     * The name of the field in the JSON that is returned and converted to a viewable format\n     */\n    fieldName: string;\n}\n\nexport enum UserOptions {\n    selectAll = 'selectAll',\n    friendlyNames = 'friendlyNames',\n    sanitize = 'sanitize',\n}\n\n/**\n * Information passed to the caller so they can fetch the data\n */\nexport interface DataExportRequestEvent {\n    /**\n     * Call this to indicate a new value to be displayed in the progress indicator.\n     * @param progress A number from 0 to 1 indicating download progress. Passing -1 will make it an indeterminate\n     */\n    updateProgress: (progress: number) => void;\n\n    /**\n     * Call this when all records have been fetched to initiate the CSV creation.\n     * This should only be called once after all data fetching is finished\n     * @param records Records to be converted into a csv file\n     * @return a promise of the resulting CSV to indicate when this potentially lengthy process is over\n     */\n    exportData: (records: object[]) => Promise;\n\n    /**\n     * Columns selected by the user.\n     */\n    selectedColumns: ExportColumn[];\n}\n\n/**\n * A dialog to export data\n *\n *  - Allows the UI to select columns to be exported\n *  - Provides a progress indicator\n *  - Converts the data that is fetched by the caller into a CSV\n */\n@Component({\n    selector: 'vcd-data-exporter',\n    templateUrl: 'data-exporter.component.html',\n    styleUrls: ['./data-exporter.component.scss'],\n})\nexport class DataExporterComponent implements OnInit, OnDestroy {\n    constructor(private csvExporterService: CsvExporterService, private translationService: TranslationService) {}\n\n    @ViewChild(ClrDropdown) set columnDropdown(columnDropdown: ClrDropdown) {\n        if (!columnDropdown) {\n            return;\n        }\n        this.subscriptionTracker.subscribe(columnDropdown.toggleService.openChange, (opened) => {\n            this.isDropdownOpen = opened;\n        });\n    }\n\n    _columns: ExportColumn[] = [];\n\n    /**\n     * List of columns that can be exported, user may deselect some before sending the download request.\n     * Display name defaults to field name if there is no displayName\n     */\n    @Input()\n    set columns(cols: ExportColumn[]) {\n        this._columns = cols;\n        this.updateFieldNameMap(cols);\n    }\n\n    get columns(): ExportColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * The name of the file to be downloaded\n     */\n    @Input() fileName = 'data-export.csv';\n\n    /**\n     * Text for the Dialog Header\n     */\n    @Input()\n    dialogHeader: LazyString = this.translationService.translateAsync('vcd.cc.data-exporter.title');\n\n    /**\n     * Text for the cancel button.\n     */\n    @Input()\n    cancelText: LazyString = this.translationService.translateAsync('vcd.cc.cancel');\n\n    /**\n     * Text for the export all button.\n     */\n    @Input()\n    exportAllText: LazyString = this.translationService.translateAsync('vcd.cc.export.all');\n\n    /**\n     * Text for the select columns dropdown button.\n     */\n    @Input()\n    selectColumnsText: LazyString = this.translationService.translateAsync('vcd.cc.select.columns');\n\n    /**\n     * Text for the export button.\n     */\n    @Input()\n    exportText: LazyString = this.translationService.translateAsync('vcd.cc.export');\n\n    /**\n     * Text for the yes button.\n     */\n    @Input()\n    yesText: LazyString = this.translationService.translateAsync('vcd.cc.yes');\n\n    /**\n     * Text for the yes button.\n     */\n    @Input()\n    noText: LazyString = this.translationService.translateAsync('vcd.cc.no');\n\n    /**\n     * Text label that is next to the friendly field names checkbox.\n     */\n    @Input()\n    friendlyNamesCheckboxLabel: LazyString = this.translationService.translateAsync('vcd.cc.friendly.names.question');\n\n    /**\n     * Text the info message next to the friendly field names checkbox.\n     */\n    @Input()\n    friendlyNamesInfoMessage: LazyString = this.translationService.translateAsync('vcd.cc.friendly.names.info');\n\n    /**\n     * Text the hint message below the friendly field names checkbox.\n     */\n    @Input()\n    friendlyNamesHint: LazyString = this.translationService.translateAsync('vcd.cc.friendly.names.hint');\n\n    /**\n     * Text label that is next to the sanitize checkbox.\n     */\n    @Input()\n    sanitizeCheckboxLabel: LazyString = this.translationService.translateAsync('vcd.cc.sanitize.question');\n\n    /**\n     * Hint message that is below the sanitize checkbox.\n     */\n    @Input()\n    sanitizeCheckboxHint: LazyString = this.translationService.translateAsync('vcd.cc.sanitize.hint');\n\n    /**\n     * Text the info message next to the sanitize checkbox.\n     */\n    @Input()\n    sanitizeInfoMessage: LazyString = this.translationService.translateAsync('vcd.cc.sanitize.info');\n\n    /**\n     * The message that is displayed while the data is downloading.\n     */\n    @Input()\n    downloadingMessage: LazyString = this.translationService.translateAsync('vcd.cc.exporter.downloading');\n\n    /**\n     * The message that is displayed while the data is writing to file.\n     */\n    @Input()\n    writingMessage: LazyString = this.translationService.translateAsync('vcd.cc.exporter.writing');\n\n    /**\n     * Whether the dialog is open\n     */\n    @Input()\n    set open(value: boolean) {\n        this._open = value;\n        this.openChange.emit(value);\n    }\n    get open(): boolean {\n        return this._open;\n    }\n\n    private _open = false;\n    private subscriptionTracker = new SubscriptionTracker(this);\n\n    forceDropdownOpen = false;\n\n    /**\n     * Fires when {@link _open} changes. Its parameter indicates the new state.\n     */\n    @Output() openChange = new EventEmitter();\n\n    /**\n     * Called when the export is ready to be created\n     */\n    @Output() dataExportRequest = new EventEmitter();\n\n    /**\n     * True between the time {@link dataExportRequest} fires and {@link DataExportRequestEvent.exportData} is called\n     * or an error is thrown\n     */\n    get isRequestPending(): boolean {\n        return this._isRequestPending;\n    }\n    private _isRequestPending = false;\n\n    /**\n     * Number between 0-1, used for displaying the progress bar.\n     */\n    get progress(): number {\n        return this._progress;\n    }\n    private _progress = 0;\n\n    private fieldNameMap = new Map();\n\n    formGroup: FormGroup;\n\n    exportStage: LazyString;\n\n    optionsFormGroup = new FormGroup({\n        [UserOptions.selectAll]: new FormControl(true),\n        [UserOptions.friendlyNames]: new FormControl(true),\n        [UserOptions.sanitize]: new FormControl(true),\n    });\n\n    /**\n     * Says if the column dropdown is open.\n     */\n    isDropdownOpen = false;\n\n    onClickExport(): void {\n        this.exportStage = this.downloadingMessage;\n        this._isRequestPending = true;\n        this.dataExportRequest.emit({\n            exportData: this.exportData.bind(this),\n            updateProgress: this.updateProgress.bind(this),\n            selectedColumns: this.selectedColumns,\n        });\n    }\n\n    get selectAllControl(): FormControl {\n        return this.optionsFormGroup.get(UserOptions.selectAll) as FormControl;\n    }\n\n    get sanitizeControl(): FormControl {\n        return this.optionsFormGroup.get(UserOptions.sanitize) as FormControl;\n    }\n\n    get friendlyFieldsControl(): FormControl {\n        return this.optionsFormGroup.get(UserOptions.friendlyNames) as FormControl;\n    }\n\n    get isExportEnabled(): boolean {\n        if (this.isRequestPending) {\n            return false;\n        }\n        for (const column of this.columns) {\n            if (this.formGroup.controls[column.fieldName].value) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    get shouldShowBubbles(): boolean {\n        return !this.selectAllControl.value && !this.isDropdownOpen;\n    }\n\n    /**\n     * Gives a list of all the columns that are selected.\n     */\n    get selectedColumns(): ExportColumn[] {\n        return this.columns.filter((col) => this.formGroup.controls[col.fieldName].value);\n    }\n\n    /**\n     * Sets the selected value of the given column.\n     */\n    selectColumn(column: ExportColumn, selected: boolean): void {\n        this.formGroup.controls[column.fieldName].setValue(selected);\n    }\n\n    ngOnInit(): void {\n        const controls = this.columns.reduce((previousValue, currentValue) => {\n            previousValue[currentValue.fieldName] = new FormControl(true);\n            return previousValue;\n        }, {});\n        this.formGroup = new FormGroup(controls);\n        this.subscriptionTracker.subscribe(this.selectAllControl.valueChanges, (change) => {\n            if (change) {\n                for (const column of this.columns) {\n                    this.formGroup.controls[column.fieldName].setValue(true);\n                }\n            } else {\n                this.forceDropdownOpen = true;\n                this.isDropdownOpen = true;\n            }\n        });\n    }\n\n    ngOnDestroy(): void {}\n\n    private exportData(records: object[]): Promise {\n        if (!this.open) {\n            return;\n        }\n\n        const rows = [\n            // First row is the display names\n            Object.keys(records[0]).map((fieldName) =>\n                this.friendlyFieldsControl.value ? this.getDisplayNameForField(fieldName) : fieldName\n            ),\n            // Then the data\n            ...records.map((rec) => Object.keys(rec).map((key) => rec[key])),\n        ];\n        return this.downloadData(rows, this.sanitizeControl.value);\n    }\n\n    downloadData(data: any[][], shouldSanitize: boolean = false): Promise {\n        this.exportStage = this.writingMessage;\n        return new Promise((resolve) => {\n            // We need to setTimeout because we changed how the message should be displayed\n            // but we need to interrupt the current task to get the message to display\n            // We tried to use window.requestAnimationFrame, but this didn't work so we had to use\n            // setTimeout().\n            setTimeout(() => {\n                this._isRequestPending = false;\n                const csvFile = this.csvExporterService.createCsv(data, shouldSanitize);\n                this.csvExporterService.downloadCsvFile(csvFile, this.fileName);\n                this.open = false;\n                resolve(csvFile);\n            });\n        });\n    }\n\n    private updateProgress(progress: number): void {\n        this._progress = progress;\n    }\n\n    private getDisplayNameForField(fieldName: string): string {\n        if (this.fieldNameMap.has(fieldName)) {\n            const exportColumn = this.fieldNameMap.get(fieldName);\n            return this.getDisplayNameForColumn(exportColumn);\n        } else {\n            return fieldName;\n        }\n    }\n\n    getDisplayNameForColumn(col: ExportColumn): string {\n        return col.displayName || col.fieldName;\n    }\n\n    private updateFieldNameMap(cols: ExportColumn[]): void {\n        this.fieldNameMap = new Map(cols.map((col) => [col.fieldName, col]));\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataExporterWidgetObject.html":{"url":"classes/DataExporterWidgetObject.html","title":"class - DataExporterWidgetObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataExporterWidgetObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/data-exporter/data-exporter.wo.ts\n        \n\n            \n                Description\n            \n            \n                Testing Object for DataExporterComponent\n\n            \n\n            \n                Extends\n            \n            \n                        BaseWidgetObject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getCancelButton\n                            \n                            \n                                getColumnBubbles\n                            \n                            \n                                getColumnCheckboxes\n                            \n                            \n                                getColumnDropdown\n                            \n                            \n                                getExportButton\n                            \n                            \n                                getProgress\n                            \n                            \n                                getToggleFriendlyNames\n                            \n                            \n                                getToggleSanitize\n                            \n                            \n                                getToggleSelectAll\n                            \n                            \n                                    Static\n                                tagName\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorDriver\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorForAncestors\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorForCssSelectors\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorForText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getColumnCheckbox\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCancelButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         this.locatorForCssSelectors('.cancel')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForCssSelectors('.cancel')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:27\n                            \n                        \n\n                \n                    \n                        Gets the cancel button.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getColumnBubbles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         this.locatorForCssSelectors('.column-container .column-label')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForCssSelectors('.column-container .column-label')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:17\n                            \n                        \n\n                \n                    \n                        The strings for the available column bubbles.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getColumnCheckboxes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         this.locatorForCssSelectors('li .column-checkbox')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForCssSelectors('li .column-checkbox')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:22\n                            \n                        \n\n                \n                    \n                        The strings for the available column checkboxes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getColumnDropdown\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         this.locatorForCssSelectors('.dropdown-button')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForCssSelectors('.dropdown-button')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:37\n                            \n                        \n\n                \n                    \n                        Gets the arrow to open/close the column dropdown.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getExportButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.locatorForText('button', 'export')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForText('button', 'export')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:32\n                            \n                        \n\n                \n                    \n                        Gets the export button.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getProgress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         this.locatorForCssSelectors('progress')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForCssSelectors('progress')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:57\n                            \n                        \n\n                \n                    \n                        Gets the progress bar.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToggleFriendlyNames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         this.locatorForCssSelectors('.friendly-names')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForCssSelectors('.friendly-names')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:52\n                            \n                        \n\n                \n                    \n                        Gets the friendly field names switch\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToggleSanitize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         this.locatorForCssSelectors('.sanitize-cells')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForCssSelectors('.sanitize-cells')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:47\n                            \n                        \n\n                \n                    \n                        Gets the sanitization switch\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToggleSelectAll\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         this.locatorForCssSelectors('.export-all')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForCssSelectors('.export-all')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:42\n                            \n                        \n\n                \n                    \n                        Gets the export all switch\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tagName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd-data-exporter'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorDriver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LocatorDriver\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseWidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseWidgetObject:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorForAncestors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.parents(cssSelector, options).unwrap();\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseWidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseWidgetObject:45\n\n                            \n                        \n\n                \n                    \n                        Returns an element locator that will find a parent with the given cssSelector when called.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorForCssSelectors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.get(cssSelector, options).unwrap();\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseWidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseWidgetObject:38\n\n                            \n                        \n\n                \n                    \n                        Returns an element locator that will find a child with the given cssSelector when called.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorForText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         (cssSelector: string, text: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.getByText(cssSelector, text, options).unwrap();\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseWidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseWidgetObject:52\n\n                            \n                        \n\n                \n                    \n                        Returns an element locator that will find a child with the given cssSelector and text when called.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getColumnCheckbox\n                        \n                        \n                    \n                \n            \n            \n                \ngetColumnCheckbox(index: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:63\n                \n            \n\n\n            \n                \n                    Gets the checkbox next to a given column\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Index of column, 0 based\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseWidgetObject } from '../utils/test/widget-object/widget-object';\n\n/**\n * Testing Object for {@link DataExporterComponent}\n */\nexport class DataExporterWidgetObject extends BaseWidgetObject {\n    static tagName = 'vcd-data-exporter';\n\n    /**\n     * The strings for the available column bubbles.\n     */\n    getColumnBubbles = this.locatorForCssSelectors('.column-container .column-label');\n\n    /**\n     * The strings for the available column checkboxes.\n     */\n    getColumnCheckboxes = this.locatorForCssSelectors('li .column-checkbox');\n\n    /**\n     * Gets the cancel button.\n     */\n    getCancelButton = this.locatorForCssSelectors('.cancel');\n\n    /**\n     * Gets the export button.\n     */\n    getExportButton = this.locatorForText('button', 'export');\n\n    /**\n     * Gets the arrow to open/close the column dropdown.\n     */\n    getColumnDropdown = this.locatorForCssSelectors('.dropdown-button');\n\n    /**\n     * Gets the export all switch\n     */\n    getToggleSelectAll = this.locatorForCssSelectors('.export-all');\n\n    /**\n     * Gets the sanitization switch\n     */\n    getToggleSanitize = this.locatorForCssSelectors('.sanitize-cells');\n\n    /**\n     * Gets the friendly field names switch\n     */\n    getToggleFriendlyNames = this.locatorForCssSelectors('.friendly-names');\n\n    /**\n     * Gets the progress bar.\n     */\n    getProgress = this.locatorForCssSelectors('progress');\n\n    /**\n     * Gets the checkbox next to a given column\n     * @param index Index of column, 0 based\n     */\n    getColumnCheckbox(index: number): T {\n        return this.locatorDriver.get(`.dropdown-item:nth-of-type(${index + 1})  .column-checkbox input`).unwrap();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatagridFilter.html":{"url":"classes/DatagridFilter.html","title":"class - DatagridFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatagridFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/filters/datagrid-filter.ts\n        \n\n            \n                Description\n            \n            \n                Extended by filter components used in DatagridComponent. Those components can only be used inside a\nclr-dg-filter component and are dynamically rendered by ComponentRendererOutletDirective using\nGridColumn.filter\nV is the type of filter input value that is passed into setValue method\nC extends FilterConfig is configuration of a filter that contains queryField and a value of type V\n\n            \n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n                            ClrDatagridFilterInterface\n                            ComponentRenderer\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _config\n                            \n                            \n                                changes\n                            \n                            \n                                formGroup\n                            \n                            \n                                    Private\n                                subscriptionTracker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                accepts\n                            \n                            \n                                    Abstract\n                                createFormGroup\n                            \n                            \n                                    Protected\n                                getDebounceTimeMs\n                            \n                            \n                                    Abstract\n                                getValue\n                            \n                            \n                                    Abstract\n                                isActive\n                            \n                            \n                                    Abstract\n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                onBeforeSetConfig\n                            \n                            \n                                    Abstract\n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    config\n                                \n                                \n                                    queryField\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(filterContainer: ClrDatagridFilter)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterContainer\n                                                  \n                                                        \n                                                                        ClrDatagridFilter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     C\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:71\n                            \n                        \n\n                \n                    \n                        Sets the configuration needed for a filter UI widget and also it's value.\nAssigned from ComponentRendererOutletDirective after the filter component is created.\nUsed by the getValue method in sub classes to format the FIQL string output.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:87\n                            \n                        \n\n                \n                    \n                        Emits whenever a filter form inputs changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.createFormGroup()\n\n                        \n                    \n                    \n                        \n                            Default value : this.createFormGroup()\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptionTracker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubscriptionTracker\n\n                        \n                    \n                    \n                        \n                            Default value : new SubscriptionTracker(this)\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:60\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            accepts\n                        \n                        \n                    \n                \n            \n            \n                \naccepts()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:137\n                \n            \n\n\n            \n                \n                    Required by Clarity but ignored since we don't support client side filtering\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:112\n                \n            \n\n\n            \n                \n                    To initialize the formGroup from sub classes\n\n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getDebounceTimeMs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDebounceTimeMs()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:99\n                \n            \n\n\n            \n                \n                    To override the default delay time for emission of changes\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:122\n                \n            \n\n\n            \n                \n                    For getting the filter UI widget values in FIQL formatted string\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:127\n                \n            \n\n\n            \n                \n                    Return true if the filter is currently activated (e.g. a value is provided)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            onBeforeSetConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onBeforeSetConfig(config: C)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:107\n                \n            \n\n\n            \n                \n                    Called inside setter of DatagridFilter and Defined in the derived classes to perform some logic before\nassigning the UI widget configuration and setting a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setValue(value: V)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:117\n                \n            \n\n\n            \n                \n                    Used for assigning a value to a filter from outside\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            V\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     C\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:72\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n                \n                    \n                        getconfig()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:80\n                                \n                            \n\n                \n                    \n                        setconfig(val)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:72\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        queryField\n                    \n                \n\n                \n                    \n                        getqueryField()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:147\n                                \n                            \n                    \n                        \n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { ClrDatagridFilterInterface } from '@clr/angular/data/datagrid/interfaces/filter.interface';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { SubscriptionTracker } from '../../common/subscription';\nimport {\n    ComponentRenderer,\n    ComponentRendererConstructor,\n    ComponentRendererSpec,\n} from '../interfaces/component-renderer.interface';\n\n/**\n * Number of milliseconds delayed before emitting the filter has changed observable\n */\nexport const DEBOUNCE_TIME_FOR_GRID_FILTER_CHANGES = 300;\n\n/**\n * Properties required by all the grid filters\n */\nexport interface FilterConfig {\n    /**\n     * Used as a query field for server side filtering of the grid column\n     */\n    queryField?: string;\n\n    /**\n     * Value with which grid data can be filtered before initially being rendered\n     */\n    value?: V;\n}\n\n/**\n * Renderer specification of a column that contains component type to be rendered in a filter widget and configuration for that\n * component. used by the {@link ComponentRendererOutletDirective}\n */\nexport interface FilterRendererSpec extends ComponentRendererSpec {\n    /**\n     *  Config object required for the configuration of component that will be rendered in the column filter widget\n     */\n    config: C;\n}\n\n/**\n * Extended by filter components used in {@link DatagridComponent}. Those components can only be used inside a\n * clr-dg-filter component and are dynamically rendered by {@link ComponentRendererOutletDirective} using\n * {@link GridColumn.filter}\n * V is the type of filter input value that is passed into setValue method\n * C extends FilterConfig is configuration of a filter that contains queryField and a value of type V\n */\nexport abstract class DatagridFilter>\n    implements OnInit, OnDestroy, ClrDatagridFilterInterface, ComponentRenderer {\n    formGroup = this.createFormGroup();\n    private subscriptionTracker = new SubscriptionTracker(this);\n\n    protected constructor(filterContainer: ClrDatagridFilter) {\n        filterContainer.setFilter(this);\n    }\n\n    /**\n     * Sets the configuration needed for a filter UI widget and also it's value.\n     * Assigned from {@link ComponentRendererOutletDirective#assignValue} after the filter component is created.\n     * Used by the getValue method in sub classes to format the FIQL string output.\n     */\n    protected _config: C;\n    @Input() set config(val: C) {\n        this.onBeforeSetConfig(val);\n        this._config = val;\n        if (this._config.value) {\n            this.setValue(this._config.value);\n        }\n    }\n\n    get config(): C {\n        return this._config;\n    }\n\n    /**\n     * Emits whenever a filter form inputs changes\n     */\n    changes = new Subject();\n\n    ngOnInit(): void {\n        const obs = this.getDebounceTimeMs()\n            ? this.formGroup.valueChanges.pipe(debounceTime(this.getDebounceTimeMs()))\n            : this.formGroup.valueChanges;\n        this.subscriptionTracker.subscribe(obs, () => this.changes.next());\n    }\n\n    /**\n     * To override the default delay time for emission of changes\n     */\n    protected getDebounceTimeMs(): number {\n        return DEBOUNCE_TIME_FOR_GRID_FILTER_CHANGES;\n    }\n\n    /**\n     * Called inside setter of {@link DatagridFilter#config} and Defined in the derived classes to perform some logic before\n     * assigning the UI widget configuration and setting a value\n     */\n    protected onBeforeSetConfig(config: C): void {}\n\n    /**\n     * To initialize the {@link formGroup} from sub classes\n     */\n    abstract createFormGroup(): FormGroup;\n\n    /**\n     * Used for assigning a value to a filter from outside\n     */\n    abstract setValue(value: V): void;\n\n    /**\n     * For getting the filter UI widget values in FIQL formatted string\n     */\n    abstract getValue(): string;\n\n    /**\n     * Return true if the filter is currently activated (e.g. a value is provided)\n     */\n    abstract isActive(): boolean;\n\n    /**\n     * @inheritdoc\n     */\n    abstract ngOnDestroy(): void;\n\n    /**\n     * Required by Clarity but ignored since we don't support client side filtering\n     */\n    accepts(): boolean {\n        return true;\n    }\n\n    /**\n     * @see unit tests of sub class {@link DatagridStringFilterComponent} for unit tests of following methods\n     */\n    /**\n     * Used in the {@link #getValue} method to make it part of the FIQL formatted string\n     */\n    get queryField(): string {\n        if (this._config) {\n            if (this._config.queryField) {\n                return this._config.queryField;\n            }\n            throw Error('Query field is not specified');\n        }\n    }\n}\n\n/**\n * Utility function to enforce type safety on config object of components of {@link ComponentRenderer} type. Used for creating\n * component renderer specifications of {@link FilterRendererSpec} type\n *\n * Example usage:\n * const gridColumn = {\n *   filterRendererSpec: FilterComponentRendererSpec({type: DatagridNumericFilterComponent, config: {value: [1, 2]}}),\n * }\n *\n * In the above examples these methods help in making sure that:\n * - Value \"v\" of the config property is of [number, number] type for gridColumn.filterRendererSpec\n *\n * #Note: 'C & {}' below makes the inference site for C be the constructor type from the first argument.\n * {@link https://stackoverflow.com/questions/59055154/typescript-generics-infer-type-from-the-type-of-function-arguments}\n */\nexport function FilterComponentRendererSpec(componentRendererSpec: {\n    type: ComponentRendererConstructor;\n    config: C & {};\n}): FilterRendererSpec {\n    return componentRendererSpec;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatagridMultiSelectFilterComponent.html":{"url":"components/DatagridMultiSelectFilterComponent.html","title":"component - DatagridMultiSelectFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatagridMultiSelectFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts\n\n\n    \n        Description\n    \n    \n        Used within a clarity grid column DatagridComponent to render a filter widget with list of checkboxes to select\nmultiple options\nExample usage:\ncolumns: GridColumn[] = [{\n      displayName: 'Custom Select filter',\n      renderer: 'state',\n      queryFieldName: 'state',\n      filterRendererSpec: FilterComponentRendererSpec({\n          type: DatagridMultiSelectFilterComponent,\n          config: {\n              options: [{\n                  value: 'CA',\n                  display: 'California'\n              }, {\n                  value: 'MA',\n                  display: 'Massachusetts'\n              }],\n              value: ['MA', 'NC'],\n          },\n      }),\n   }]\n\n    \n\n    \n        Extends\n    \n    \n                DatagridFilter\n    \n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-dg-multiselect-filter\n            \n\n\n\n\n            \n                templateUrl\n                ./datagrid-multiselect-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                            \n                                    Protected\n                                _config\n                            \n                            \n                                changes\n                            \n                            \n                                formGroup\n                            \n                            \n                                    Private\n                                subscriptionTracker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createFormGroup\n                            \n                            \n                                    Protected\n                                getDebounceTimeMs\n                            \n                            \n                                getValue\n                            \n                            \n                                isActive\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onBeforeSetConfig\n                            \n                            \n                                setValue\n                            \n                            \n                                accepts\n                            \n                            \n                                    Abstract\n                                createFormGroup\n                            \n                            \n                                    Protected\n                                getDebounceTimeMs\n                            \n                            \n                                    Abstract\n                                getValue\n                            \n                            \n                                    Abstract\n                                isActive\n                            \n                            \n                                    Abstract\n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                onBeforeSetConfig\n                            \n                            \n                                    Abstract\n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(filterContainer: ClrDatagridFilter)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts:69\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterContainer\n                                                  \n                                                        \n                                                                        ClrDatagridFilter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     C\n\n                    \n                \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:72\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getDebounceTimeMs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDebounceTimeMs()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBeforeSetConfig\n                        \n                        \n                    \n                \n            \n            \n                \nonBeforeSetConfig(config: DatagridMultiSelectFilterConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts:87\n                \n            \n\n\n            \n                \n                    Overrides the config property because, the formGroup controls are defined by the config set by the caller.\nValue of each option becomes a formControl name inside the formGroup.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                DatagridMultiSelectFilterConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \nsetValue(values: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            accepts\n                        \n                        \n                    \n                \n            \n            \n                \naccepts()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:137\n\n                \n            \n\n\n            \n                \n                    Required by Clarity but ignored since we don't support client side filtering\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:112\n\n                \n            \n\n\n            \n                \n                    To initialize the formGroup from sub classes\n\n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getDebounceTimeMs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDebounceTimeMs()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:99\n\n                \n            \n\n\n            \n                \n                    To override the default delay time for emission of changes\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:122\n\n                \n            \n\n\n            \n                \n                    For getting the filter UI widget values in FIQL formatted string\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:127\n\n                \n            \n\n\n            \n                \n                    Return true if the filter is currently activated (e.g. a value is provided)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:132\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:89\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            onBeforeSetConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onBeforeSetConfig(config: C)\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:107\n\n                \n            \n\n\n            \n                \n                    Called inside setter of DatagridFilter and Defined in the derived classes to perform some logic before\nassigning the UI widget configuration and setting a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setValue(value: V)\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:117\n\n                \n            \n\n\n            \n                \n                    Used for assigning a value to a filter from outside\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            V\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MultiSelectOptionInternal[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts:77\n                            \n                        \n\n                \n                    \n                        Used inside the HTML to instantiate checkbox options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     C\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:71\n\n                            \n                        \n\n                \n                    \n                        Sets the configuration needed for a filter UI widget and also it's value.\nAssigned from ComponentRendererOutletDirective after the filter component is created.\nUsed by the getValue method in sub classes to format the FIQL string output.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:87\n\n                            \n                        \n\n                \n                    \n                        Emits whenever a filter form inputs changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.createFormGroup()\n\n                        \n                    \n                    \n                        \n                            Default value : this.createFormGroup()\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:59\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptionTracker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubscriptionTracker\n\n                        \n                    \n                    \n                        \n                            Default value : new SubscriptionTracker(this)\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:60\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Host, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { SelectOption } from '../../common/interfaces/select-option';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { IdGenerator } from '../../utils/id-generator/id-generator';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\n/**\n * Same as the {@link SelectOption} but value is always a string\n */\nexport interface MultiSelectOption extends SelectOption {\n    value: string;\n}\n\nexport interface DatagridMultiSelectFilterConfig extends FilterConfig {\n    /**\n     * List of select options\n     */\n    options: MultiSelectOption[];\n}\n\n/**\n * Used internally for {@link DatagridMultiSelectFilterComponent.options} to add unique IDs to filter options. The IDs are used for\n * associating checkbox options with their labels in the HTML\n */\ninterface MultiSelectOptionInternal extends MultiSelectOption {\n    /**\n     * Unique identifier for each checkbox option instantiated in the HTML\n     */\n    id: string;\n}\n\nconst idGenerator = new IdGenerator('vcd-multiselect-filter-id');\n\n/**\n * Used within a clarity grid column {@link DatagridComponent} to render a filter widget with list of checkboxes to select\n * multiple options\n * Example usage:\n * columns: GridColumn[] = [{\n *      displayName: 'Custom Select filter',\n *      renderer: 'state',\n *      queryFieldName: 'state',\n *      filterRendererSpec: FilterComponentRendererSpec({\n *          type: DatagridMultiSelectFilterComponent,\n *          config: {\n *              options: [{\n *                  value: 'CA',\n *                  display: 'California'\n *              }, {\n *                  value: 'MA',\n *                  display: 'Massachusetts'\n *              }],\n *              value: ['MA', 'NC'],\n *          },\n *      }),\n *   }]\n */\n@Component({\n    selector: 'vcd-dg-multiselect-filter',\n    templateUrl: './datagrid-multiselect-filter.component.html',\n})\nexport class DatagridMultiSelectFilterComponent extends DatagridFilter\n    implements OnDestroy {\n    constructor(private filterContainer: ClrDatagridFilter) {\n        super(filterContainer);\n    }\n\n    /**\n     * Used inside the HTML to instantiate checkbox options\n     */\n    options: MultiSelectOptionInternal[];\n\n    createFormGroup(): FormGroup {\n        return new FormGroup({});\n    }\n\n    /**\n     * Overrides the config property because, the formGroup controls are defined by the config set by the caller.\n     * Value of each option becomes a formControl name inside the formGroup.\n     */\n    onBeforeSetConfig(config: DatagridMultiSelectFilterConfig): void {\n        this.options = config.options.map(option => ({\n            ...option,\n            id: idGenerator.generate(),\n        }));\n        // Remove all the form controls in the form before adding new controls\n        Object.keys(this.formGroup.controls).forEach(control => {\n            this.formGroup.removeControl(control);\n        });\n        config.options.forEach(option => {\n            this.formGroup.addControl(option.value, new FormControl(false));\n        });\n    }\n\n    protected getDebounceTimeMs(): number {\n        return 1000;\n    }\n\n    setValue(values: string[]): void {\n        values.forEach(frmCtrl => {\n            const correspondingFormCtrl = this.formGroup.get(frmCtrl);\n            if (!correspondingFormCtrl) {\n                throw Error(`A multi select filter option with value '${frmCtrl}' does not exist`);\n            }\n            correspondingFormCtrl.setValue(true);\n        });\n    }\n\n    getValue(): string {\n        const selectedFilters = Object.keys(this.formGroup.getRawValue())\n            .filter(formControl => this.formGroup.get(formControl).value)\n            .map(selectedOption => new FilterBuilder().is(this.queryField).equalTo(selectedOption));\n        return new FilterBuilder().any(...selectedFilters).getString();\n    }\n\n    isActive(): boolean {\n        return (\n            this.formGroup &&\n            !!Object.keys(this.formGroup.getRawValue()).filter(frmCtrl => this.formGroup.get(frmCtrl).value).length\n        );\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param options List of options for select input\n * @param value the default value that should go in this multi-select filter.\n */\nexport function DatagridMultiSelectFilter(\n    options: MultiSelectOption[],\n    value?: string[]\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridMultiSelectFilterComponent,\n        config: {\n            options,\n            value,\n        },\n    });\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                \n                    {{ option.isTranslatable ? (option.display | translate) : option.display }}\n                \n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{ option.isTranslatable ? (option.display | translate) : option.display }}                                        '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatagridMultiSelectFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatagridMultiSelectFilterConfig.html":{"url":"interfaces/DatagridMultiSelectFilterConfig.html","title":"interface - DatagridMultiSelectFilterConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatagridMultiSelectFilterConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                        FilterConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        options\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     MultiSelectOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MultiSelectOption[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of select options\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Host, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { SelectOption } from '../../common/interfaces/select-option';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { IdGenerator } from '../../utils/id-generator/id-generator';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\n/**\n * Same as the {@link SelectOption} but value is always a string\n */\nexport interface MultiSelectOption extends SelectOption {\n    value: string;\n}\n\nexport interface DatagridMultiSelectFilterConfig extends FilterConfig {\n    /**\n     * List of select options\n     */\n    options: MultiSelectOption[];\n}\n\n/**\n * Used internally for {@link DatagridMultiSelectFilterComponent.options} to add unique IDs to filter options. The IDs are used for\n * associating checkbox options with their labels in the HTML\n */\ninterface MultiSelectOptionInternal extends MultiSelectOption {\n    /**\n     * Unique identifier for each checkbox option instantiated in the HTML\n     */\n    id: string;\n}\n\nconst idGenerator = new IdGenerator('vcd-multiselect-filter-id');\n\n/**\n * Used within a clarity grid column {@link DatagridComponent} to render a filter widget with list of checkboxes to select\n * multiple options\n * Example usage:\n * columns: GridColumn[] = [{\n *      displayName: 'Custom Select filter',\n *      renderer: 'state',\n *      queryFieldName: 'state',\n *      filterRendererSpec: FilterComponentRendererSpec({\n *          type: DatagridMultiSelectFilterComponent,\n *          config: {\n *              options: [{\n *                  value: 'CA',\n *                  display: 'California'\n *              }, {\n *                  value: 'MA',\n *                  display: 'Massachusetts'\n *              }],\n *              value: ['MA', 'NC'],\n *          },\n *      }),\n *   }]\n */\n@Component({\n    selector: 'vcd-dg-multiselect-filter',\n    templateUrl: './datagrid-multiselect-filter.component.html',\n})\nexport class DatagridMultiSelectFilterComponent extends DatagridFilter\n    implements OnDestroy {\n    constructor(private filterContainer: ClrDatagridFilter) {\n        super(filterContainer);\n    }\n\n    /**\n     * Used inside the HTML to instantiate checkbox options\n     */\n    options: MultiSelectOptionInternal[];\n\n    createFormGroup(): FormGroup {\n        return new FormGroup({});\n    }\n\n    /**\n     * Overrides the config property because, the formGroup controls are defined by the config set by the caller.\n     * Value of each option becomes a formControl name inside the formGroup.\n     */\n    onBeforeSetConfig(config: DatagridMultiSelectFilterConfig): void {\n        this.options = config.options.map(option => ({\n            ...option,\n            id: idGenerator.generate(),\n        }));\n        // Remove all the form controls in the form before adding new controls\n        Object.keys(this.formGroup.controls).forEach(control => {\n            this.formGroup.removeControl(control);\n        });\n        config.options.forEach(option => {\n            this.formGroup.addControl(option.value, new FormControl(false));\n        });\n    }\n\n    protected getDebounceTimeMs(): number {\n        return 1000;\n    }\n\n    setValue(values: string[]): void {\n        values.forEach(frmCtrl => {\n            const correspondingFormCtrl = this.formGroup.get(frmCtrl);\n            if (!correspondingFormCtrl) {\n                throw Error(`A multi select filter option with value '${frmCtrl}' does not exist`);\n            }\n            correspondingFormCtrl.setValue(true);\n        });\n    }\n\n    getValue(): string {\n        const selectedFilters = Object.keys(this.formGroup.getRawValue())\n            .filter(formControl => this.formGroup.get(formControl).value)\n            .map(selectedOption => new FilterBuilder().is(this.queryField).equalTo(selectedOption));\n        return new FilterBuilder().any(...selectedFilters).getString();\n    }\n\n    isActive(): boolean {\n        return (\n            this.formGroup &&\n            !!Object.keys(this.formGroup.getRawValue()).filter(frmCtrl => this.formGroup.get(frmCtrl).value).length\n        );\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param options List of options for select input\n * @param value the default value that should go in this multi-select filter.\n */\nexport function DatagridMultiSelectFilter(\n    options: MultiSelectOption[],\n    value?: string[]\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridMultiSelectFilterComponent,\n        config: {\n            options,\n            value,\n        },\n    });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatagridNumericFilterComponent.html":{"url":"components/DatagridNumericFilterComponent.html","title":"component - DatagridNumericFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatagridNumericFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts\n\n\n\n    \n        Extends\n    \n    \n                DatagridFilter\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-dg-numeric-filter\n            \n\n            \n                styleUrls\n                datagrid-numeric-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                datagrid-numeric-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _unit\n                            \n                            \n                                    Private\n                                _unitOptions\n                            \n                            \n                                fromInput\n                            \n                            \n                                maxNumberLength\n                            \n                            \n                                toInput\n                            \n                            \n                                    Protected\n                                _config\n                            \n                            \n                                changes\n                            \n                            \n                                formGroup\n                            \n                            \n                                    Private\n                                subscriptionTracker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                createFormGroup\n                            \n                            \n                                getValue\n                            \n                            \n                                isActive\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                onBeforeSetConfig\n                            \n                            \n                                setValue\n                            \n                            \n                                accepts\n                            \n                            \n                                    Abstract\n                                createFormGroup\n                            \n                            \n                                    Protected\n                                getDebounceTimeMs\n                            \n                            \n                                    Abstract\n                                getValue\n                            \n                            \n                                    Abstract\n                                isActive\n                            \n                            \n                                    Abstract\n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                onBeforeSetConfig\n                            \n                            \n                                    Abstract\n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                unit\n                            \n                            \n                                unitOptions\n                            \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    unitOptions\n                                \n                                \n                                    unit\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(filterContainer: ClrDatagridFilter)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:78\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterContainer\n                                                  \n                                                        \n                                                                        ClrDatagridFilter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        unit\n                    \n                \n                \n                    \n                        Type :         Unit\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        unitOptions\n                    \n                \n                \n                    \n                        Type :         Unit[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     C\n\n                    \n                \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:72\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            onBeforeSetConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onBeforeSetConfig(config: DatagridNumericFilterConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                DatagridNumericFilterConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \nsetValue(values: DatagridNumericFilterValue)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                                DatagridNumericFilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            accepts\n                        \n                        \n                    \n                \n            \n            \n                \naccepts()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:137\n\n                \n            \n\n\n            \n                \n                    Required by Clarity but ignored since we don't support client side filtering\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:112\n\n                \n            \n\n\n            \n                \n                    To initialize the formGroup from sub classes\n\n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getDebounceTimeMs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDebounceTimeMs()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:99\n\n                \n            \n\n\n            \n                \n                    To override the default delay time for emission of changes\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:122\n\n                \n            \n\n\n            \n                \n                    For getting the filter UI widget values in FIQL formatted string\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:127\n\n                \n            \n\n\n            \n                \n                    Return true if the filter is currently activated (e.g. a value is provided)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:132\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:89\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            onBeforeSetConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onBeforeSetConfig(config: C)\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:107\n\n                \n            \n\n\n            \n                \n                    Called inside setter of DatagridFilter and Defined in the derived classes to perform some logic before\nassigning the UI widget configuration and setting a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setValue(value: V)\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:117\n\n                \n            \n\n\n            \n                \n                    Used for assigning a value to a filter from outside\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            V\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _unit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Unit\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:62\n                            \n                        \n\n                \n                    \n                        Base unit to which selected units are converted\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _unitOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Unit[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:48\n                            \n                        \n\n                \n                    \n                        Options for the select input of units\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fromInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NumberWithUnitFormInputComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('from')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxNumberLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Number.MAX_SAFE_INTEGER.toString().length\n\n                        \n                    \n                    \n                        \n                            Default value : Number.MAX_SAFE_INTEGER.toString().length\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NumberWithUnitFormInputComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('to')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     C\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:71\n\n                            \n                        \n\n                \n                    \n                        Sets the configuration needed for a filter UI widget and also it's value.\nAssigned from ComponentRendererOutletDirective after the filter component is created.\nUsed by the getValue method in sub classes to format the FIQL string output.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:87\n\n                            \n                        \n\n                \n                    \n                        Emits whenever a filter form inputs changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.createFormGroup()\n\n                        \n                    \n                    \n                        \n                            Default value : this.createFormGroup()\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:59\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptionTracker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubscriptionTracker\n\n                        \n                    \n                    \n                        \n                            Default value : new SubscriptionTracker(this)\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:60\n\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        unitOptions\n                    \n                \n\n                \n                    \n                        getunitOptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:55\n                                \n                            \n\n                \n                    \n                        setunitOptions(val: [])\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:49\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        unit\n                    \n                \n\n                \n                    \n                        getunit()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:70\n                                \n                            \n\n                \n                    \n                        setunit(val)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:63\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Host, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { NumberWithUnitFormInputComponent } from '../../form';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { Unit } from '../../utils/unit/unit';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\nenum FormFields {\n    from = 'from',\n    to = 'to',\n}\n\n/**\n * The type of value that goes in the {@link DatagridNumericFilterConfig}.\n */\nexport type DatagridNumericFilterValue = [number, number];\n\n/**\n * Numeric filter UI widget has only single configuration. So there are no properties in addition to FilterConfig\n */\nexport interface DatagridNumericFilterConfig extends FilterConfig {\n    unit?: Unit;\n    unitOptions?: Unit[];\n}\n\n@Component({\n    selector: 'vcd-dg-numeric-filter',\n    templateUrl: 'datagrid-numeric-filter.component.html',\n    styleUrls: ['datagrid-numeric-filter.component.scss'],\n})\nexport class DatagridNumericFilterComponent\n    extends DatagridFilter\n    implements OnInit, OnDestroy {\n    maxNumberLength = Number.MAX_SAFE_INTEGER.toString().length;\n\n    @ViewChild('from') fromInput: NumberWithUnitFormInputComponent;\n    @ViewChild('to') toInput: NumberWithUnitFormInputComponent;\n\n    /**\n     * Options for the select input of units\n     */\n    private _unitOptions: Unit[];\n    @Input() set unitOptions(val: Unit[]) {\n        this._unitOptions = val;\n        if (!this.unit && this.unitOptions && this.unitOptions.length) {\n            this.unit = this.unitOptions[0];\n        }\n    }\n    get unitOptions(): Unit[] {\n        return this._unitOptions;\n    }\n\n    /**\n     * Base unit to which selected units are converted\n     */\n    private _unit: Unit;\n    @Input() set unit(val: Unit) {\n        if (!val && this.unitOptions && this.unitOptions.length) {\n            this._unit = this.unitOptions[0];\n            return;\n        }\n        this._unit = val;\n    }\n    get unit(): Unit {\n        return this._unit;\n    }\n    createFormGroup(): FormGroup {\n        return new FormGroup({\n            [FormFields.from]: new FormControl(null),\n            [FormFields.to]: new FormControl(null),\n        });\n    }\n\n    constructor(private filterContainer: ClrDatagridFilter) {\n        super(filterContainer);\n    }\n\n    protected onBeforeSetConfig(config: DatagridNumericFilterConfig): void {\n        this.unitOptions = config.unitOptions;\n        this.unit = config.unit;\n    }\n\n    setValue(values: DatagridNumericFilterValue): void {\n        if (!values) {\n            return;\n        }\n        if (typeof values[0] === 'number') {\n            this.formGroup.get(FormFields.from).setValue(values[0]);\n        } else {\n            this.formGroup.get(FormFields.from).setValue(null);\n        }\n        if (typeof values[1] === 'number') {\n            this.formGroup.get(FormFields.to).setValue(values[1]);\n        } else {\n            this.formGroup.get(FormFields.to).setValue(null);\n        }\n    }\n\n    getValue(): string {\n        const filterBuilder = new FilterBuilder().is(this.queryField);\n        const from = this.formGroup.get(FormFields.from).value;\n        const to = this.formGroup.get(FormFields.to).value;\n        if (typeof from === 'number' && typeof to !== 'number') {\n            return filterBuilder.greaterThan(from).getString();\n        }\n        if (typeof from !== 'number' && typeof to === 'number') {\n            return filterBuilder.lessThan(to).getString();\n        }\n        if (typeof from === 'number' && typeof to === 'number') {\n            return filterBuilder.betweenNumbers([from, to]).getString();\n        }\n    }\n\n    isActive(): boolean {\n        return !!(\n            this.formGroup &&\n            (typeof this.formGroup.get(FormFields.from).value === 'number' ||\n                typeof this.formGroup.get(FormFields.to).value === 'number')\n        );\n    }\n\n    close(): void {\n        this.filterContainer.open = false;\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param value the default value that should go in this numeric filter.\n * @param unit initial value for unit input to be selected\n * @param unitOptions Select dropdown options for unit input\n */\nexport function DatagridNumericFilter(\n    value?: DatagridNumericFilterValue,\n    unitOptions?: Unit[],\n    unit?: Unit\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridNumericFilterComponent,\n        config: {\n            value,\n            unit,\n            unitOptions,\n        },\n    });\n}\n\n    \n\n    \n        \n    \n        \n        \n        \n    \n\n    \n        \n        \n        \n    \n\n\n    \n\n    \n                \n                    datagrid-numeric-filter.component.scss\n                \n                vcd-form-input {\n    & ::ng-deep .clr-form-control,\n    & ::ng-deep .clr-subtext {\n        margin-top: 0;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatagridNumericFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatagridNumericFilterConfig.html":{"url":"interfaces/DatagridNumericFilterConfig.html","title":"interface - DatagridNumericFilterConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatagridNumericFilterConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts\n        \n\n            \n                Description\n            \n            \n                Numeric filter UI widget has only single configuration. So there are no properties in addition to FilterConfig\n\n            \n\n            \n                Extends\n            \n            \n                        FilterConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        unit\n                                \n                                \n                                            Optional\n                                        unitOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        unit\n                                    \n                                \n                                \n                                    \n                                        unit:         Unit\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Unit\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unitOptions\n                                    \n                                \n                                \n                                    \n                                        unitOptions:         Unit[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Unit[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Host, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { NumberWithUnitFormInputComponent } from '../../form';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { Unit } from '../../utils/unit/unit';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\nenum FormFields {\n    from = 'from',\n    to = 'to',\n}\n\n/**\n * The type of value that goes in the {@link DatagridNumericFilterConfig}.\n */\nexport type DatagridNumericFilterValue = [number, number];\n\n/**\n * Numeric filter UI widget has only single configuration. So there are no properties in addition to FilterConfig\n */\nexport interface DatagridNumericFilterConfig extends FilterConfig {\n    unit?: Unit;\n    unitOptions?: Unit[];\n}\n\n@Component({\n    selector: 'vcd-dg-numeric-filter',\n    templateUrl: 'datagrid-numeric-filter.component.html',\n    styleUrls: ['datagrid-numeric-filter.component.scss'],\n})\nexport class DatagridNumericFilterComponent\n    extends DatagridFilter\n    implements OnInit, OnDestroy {\n    maxNumberLength = Number.MAX_SAFE_INTEGER.toString().length;\n\n    @ViewChild('from') fromInput: NumberWithUnitFormInputComponent;\n    @ViewChild('to') toInput: NumberWithUnitFormInputComponent;\n\n    /**\n     * Options for the select input of units\n     */\n    private _unitOptions: Unit[];\n    @Input() set unitOptions(val: Unit[]) {\n        this._unitOptions = val;\n        if (!this.unit && this.unitOptions && this.unitOptions.length) {\n            this.unit = this.unitOptions[0];\n        }\n    }\n    get unitOptions(): Unit[] {\n        return this._unitOptions;\n    }\n\n    /**\n     * Base unit to which selected units are converted\n     */\n    private _unit: Unit;\n    @Input() set unit(val: Unit) {\n        if (!val && this.unitOptions && this.unitOptions.length) {\n            this._unit = this.unitOptions[0];\n            return;\n        }\n        this._unit = val;\n    }\n    get unit(): Unit {\n        return this._unit;\n    }\n    createFormGroup(): FormGroup {\n        return new FormGroup({\n            [FormFields.from]: new FormControl(null),\n            [FormFields.to]: new FormControl(null),\n        });\n    }\n\n    constructor(private filterContainer: ClrDatagridFilter) {\n        super(filterContainer);\n    }\n\n    protected onBeforeSetConfig(config: DatagridNumericFilterConfig): void {\n        this.unitOptions = config.unitOptions;\n        this.unit = config.unit;\n    }\n\n    setValue(values: DatagridNumericFilterValue): void {\n        if (!values) {\n            return;\n        }\n        if (typeof values[0] === 'number') {\n            this.formGroup.get(FormFields.from).setValue(values[0]);\n        } else {\n            this.formGroup.get(FormFields.from).setValue(null);\n        }\n        if (typeof values[1] === 'number') {\n            this.formGroup.get(FormFields.to).setValue(values[1]);\n        } else {\n            this.formGroup.get(FormFields.to).setValue(null);\n        }\n    }\n\n    getValue(): string {\n        const filterBuilder = new FilterBuilder().is(this.queryField);\n        const from = this.formGroup.get(FormFields.from).value;\n        const to = this.formGroup.get(FormFields.to).value;\n        if (typeof from === 'number' && typeof to !== 'number') {\n            return filterBuilder.greaterThan(from).getString();\n        }\n        if (typeof from !== 'number' && typeof to === 'number') {\n            return filterBuilder.lessThan(to).getString();\n        }\n        if (typeof from === 'number' && typeof to === 'number') {\n            return filterBuilder.betweenNumbers([from, to]).getString();\n        }\n    }\n\n    isActive(): boolean {\n        return !!(\n            this.formGroup &&\n            (typeof this.formGroup.get(FormFields.from).value === 'number' ||\n                typeof this.formGroup.get(FormFields.to).value === 'number')\n        );\n    }\n\n    close(): void {\n        this.filterContainer.open = false;\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param value the default value that should go in this numeric filter.\n * @param unit initial value for unit input to be selected\n * @param unitOptions Select dropdown options for unit input\n */\nexport function DatagridNumericFilter(\n    value?: DatagridNumericFilterValue,\n    unitOptions?: Unit[],\n    unit?: Unit\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridNumericFilterComponent,\n        config: {\n            value,\n            unit,\n            unitOptions,\n        },\n    });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatagridSelectFilterComponent.html":{"url":"components/DatagridSelectFilterComponent.html","title":"component - DatagridSelectFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatagridSelectFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/datagrid/filters/datagrid-select-filter.component.ts\n\n\n    \n        Description\n    \n    \n        Used within a clarity grid column DatagridComponent to render a filter widget with select input\nExample usage:\ncolumns: GridColumn[] = [{\n      displayName: 'Custom Select filter',\n      renderer: 'age',\n      queryFieldName: 'age',\n      filterRendererSpec: FilterComponentRendererSpec({\n          type: DatagridSelectFilterComponent,\n          config: {\n              options: [{\n                  value: 30,\n                  display: 'Thirty'\n              }, {\n                  value: 60,\n                  display: 'sixty'\n              }],\n              value: 60,\n          },\n      }),\n   }]\n\n    \n\n    \n        Extends\n    \n    \n                DatagridFilter\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-dg-select-filter\n            \n\n\n\n\n            \n                templateUrl\n                datagrid-select-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                anyChoice\n                            \n                            \n                                    Protected\n                                _config\n                            \n                            \n                                changes\n                            \n                            \n                                formGroup\n                            \n                            \n                                    Private\n                                subscriptionTracker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createFormGroup\n                            \n                            \n                                    Protected\n                                getDebounceTimeMs\n                            \n                            \n                                getValue\n                            \n                            \n                                isActive\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                setValue\n                            \n                            \n                                accepts\n                            \n                            \n                                    Abstract\n                                createFormGroup\n                            \n                            \n                                    Protected\n                                getDebounceTimeMs\n                            \n                            \n                                    Abstract\n                                getValue\n                            \n                            \n                                    Abstract\n                                isActive\n                            \n                            \n                                    Abstract\n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                onBeforeSetConfig\n                            \n                            \n                                    Abstract\n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(filterContainer: ClrDatagridFilter, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/datagrid/filters/datagrid-select-filter.component.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterContainer\n                                                  \n                                                        \n                                                                        ClrDatagridFilter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     C\n\n                    \n                \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:72\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-select-filter.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getDebounceTimeMs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDebounceTimeMs()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-select-filter.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-select-filter.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-select-filter.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-select-filter.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \nsetValue(value: string | number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-select-filter.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            accepts\n                        \n                        \n                    \n                \n            \n            \n                \naccepts()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:137\n\n                \n            \n\n\n            \n                \n                    Required by Clarity but ignored since we don't support client side filtering\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:112\n\n                \n            \n\n\n            \n                \n                    To initialize the formGroup from sub classes\n\n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getDebounceTimeMs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDebounceTimeMs()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:99\n\n                \n            \n\n\n            \n                \n                    To override the default delay time for emission of changes\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:122\n\n                \n            \n\n\n            \n                \n                    For getting the filter UI widget values in FIQL formatted string\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:127\n\n                \n            \n\n\n            \n                \n                    Return true if the filter is currently activated (e.g. a value is provided)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:132\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:89\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            onBeforeSetConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onBeforeSetConfig(config: C)\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:107\n\n                \n            \n\n\n            \n                \n                    Called inside setter of DatagridFilter and Defined in the derived classes to perform some logic before\nassigning the UI widget configuration and setting a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setValue(value: V)\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:117\n\n                \n            \n\n\n            \n                \n                    Used for assigning a value to a filter from outside\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            V\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            anyChoice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SelectOption\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        value: '',\n        display: '',\n    }\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-select-filter.component.ts:58\n                            \n                        \n\n                \n                    \n                        Displayed as the first option with a falsy value. Selecting this option would deactivate the filter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     C\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:71\n\n                            \n                        \n\n                \n                    \n                        Sets the configuration needed for a filter UI widget and also it's value.\nAssigned from ComponentRendererOutletDirective after the filter component is created.\nUsed by the getValue method in sub classes to format the FIQL string output.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:87\n\n                            \n                        \n\n                \n                    \n                        Emits whenever a filter form inputs changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.createFormGroup()\n\n                        \n                    \n                    \n                        \n                            Default value : this.createFormGroup()\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:59\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptionTracker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubscriptionTracker\n\n                        \n                    \n                    \n                        \n                            Default value : new SubscriptionTracker(this)\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:60\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Host, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { SelectOption } from '../../common/interfaces/select-option';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\n/**\n * List of select options and initial value for the filter are passed through this\n */\nexport interface DatagridSelectFilterConfig extends FilterConfig {\n    /**\n     * List of select options\n     */\n    options: SelectOption[];\n\n    /**\n     * Switch to disable conversion of filter value to FIQL. Used by {@link DatagridSelectFilterComponent#getValue}\n     */\n    customFiql?: boolean;\n}\n\n/**\n * Used within a clarity grid column {@link DatagridComponent} to render a filter widget with select input\n * Example usage:\n * columns: GridColumn[] = [{\n *      displayName: 'Custom Select filter',\n *      renderer: 'age',\n *      queryFieldName: 'age',\n *      filterRendererSpec: FilterComponentRendererSpec({\n *          type: DatagridSelectFilterComponent,\n *          config: {\n *              options: [{\n *                  value: 30,\n *                  display: 'Thirty'\n *              }, {\n *                  value: 60,\n *                  display: 'sixty'\n *              }],\n *              value: 60,\n *          },\n *      }),\n *   }]\n */\n@Component({\n    selector: 'vcd-dg-select-filter',\n    templateUrl: 'datagrid-select-filter.component.html',\n})\nexport class DatagridSelectFilterComponent extends DatagridFilter\n    implements OnInit, OnDestroy {\n    /**\n     * Displayed as the first option with a falsy value. Selecting this option would deactivate the filter\n     */\n    anyChoice: SelectOption = {\n        value: '',\n        display: '',\n    };\n\n    createFormGroup(): FormGroup {\n        return new FormGroup({\n            filterSelect: new FormControl(''),\n        });\n    }\n\n    constructor(private filterContainer: ClrDatagridFilter, private fb: FormBuilder) {\n        super(filterContainer);\n        this.formGroup = this.fb.group({\n            filterSelect: '',\n        });\n    }\n\n    protected getDebounceTimeMs(): number {\n        return 0;\n    }\n\n    setValue(value: string | number): void {\n        if (!this.config.options.find(option => option.value === value)) {\n            throw Error('The value being set on select filter is not equal to any of the options');\n        }\n        this.formGroup.setValue({\n            filterSelect: value,\n        });\n    }\n\n    getValue(): string {\n        if (this.config.customFiql) {\n            return this.formGroup.get('filterSelect').value;\n        }\n        const filterBuilder = new FilterBuilder().is(this.queryField);\n        const value = this.formGroup.get('filterSelect').value;\n        return filterBuilder.equalTo(value).getString();\n    }\n\n    isActive(): boolean {\n        return !!this.formGroup && this.formGroup.get('filterSelect').value;\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param options List of options for select input\n * @param value the default value that should go in this select filter.\n * @param customFiql when set as true will disable any formatting by {@link DatagridSelectFilterComponent#getValue}\n */\nexport function DatagridSelectFilter(\n    options: SelectOption[],\n    value?: string | number,\n    customFiql?: boolean\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridSelectFilterComponent,\n        config: {\n            options,\n            value,\n            customFiql,\n        },\n    });\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    {{ anyChoice.display }}\n                    {{\n                        option.isTranslatable ? (option.display | translate) : option.display\n                    }}\n                \n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{ anyChoice.display }}                    {{                        option.isTranslatable ? (option.display | translate) : option.display                    }}                                        '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatagridSelectFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatagridSelectFilterConfig.html":{"url":"interfaces/DatagridSelectFilterConfig.html","title":"interface - DatagridSelectFilterConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatagridSelectFilterConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/filters/datagrid-select-filter.component.ts\n        \n\n            \n                Description\n            \n            \n                List of select options and initial value for the filter are passed through this\n\n            \n\n            \n                Extends\n            \n            \n                        FilterConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        customFiql\n                                \n                                \n                                        options\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customFiql\n                                    \n                                \n                                \n                                    \n                                        customFiql:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Switch to disable conversion of filter value to FIQL. Used by DatagridSelectFilterComponent\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         SelectOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SelectOption[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of select options\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Host, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { SelectOption } from '../../common/interfaces/select-option';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\n/**\n * List of select options and initial value for the filter are passed through this\n */\nexport interface DatagridSelectFilterConfig extends FilterConfig {\n    /**\n     * List of select options\n     */\n    options: SelectOption[];\n\n    /**\n     * Switch to disable conversion of filter value to FIQL. Used by {@link DatagridSelectFilterComponent#getValue}\n     */\n    customFiql?: boolean;\n}\n\n/**\n * Used within a clarity grid column {@link DatagridComponent} to render a filter widget with select input\n * Example usage:\n * columns: GridColumn[] = [{\n *      displayName: 'Custom Select filter',\n *      renderer: 'age',\n *      queryFieldName: 'age',\n *      filterRendererSpec: FilterComponentRendererSpec({\n *          type: DatagridSelectFilterComponent,\n *          config: {\n *              options: [{\n *                  value: 30,\n *                  display: 'Thirty'\n *              }, {\n *                  value: 60,\n *                  display: 'sixty'\n *              }],\n *              value: 60,\n *          },\n *      }),\n *   }]\n */\n@Component({\n    selector: 'vcd-dg-select-filter',\n    templateUrl: 'datagrid-select-filter.component.html',\n})\nexport class DatagridSelectFilterComponent extends DatagridFilter\n    implements OnInit, OnDestroy {\n    /**\n     * Displayed as the first option with a falsy value. Selecting this option would deactivate the filter\n     */\n    anyChoice: SelectOption = {\n        value: '',\n        display: '',\n    };\n\n    createFormGroup(): FormGroup {\n        return new FormGroup({\n            filterSelect: new FormControl(''),\n        });\n    }\n\n    constructor(private filterContainer: ClrDatagridFilter, private fb: FormBuilder) {\n        super(filterContainer);\n        this.formGroup = this.fb.group({\n            filterSelect: '',\n        });\n    }\n\n    protected getDebounceTimeMs(): number {\n        return 0;\n    }\n\n    setValue(value: string | number): void {\n        if (!this.config.options.find(option => option.value === value)) {\n            throw Error('The value being set on select filter is not equal to any of the options');\n        }\n        this.formGroup.setValue({\n            filterSelect: value,\n        });\n    }\n\n    getValue(): string {\n        if (this.config.customFiql) {\n            return this.formGroup.get('filterSelect').value;\n        }\n        const filterBuilder = new FilterBuilder().is(this.queryField);\n        const value = this.formGroup.get('filterSelect').value;\n        return filterBuilder.equalTo(value).getString();\n    }\n\n    isActive(): boolean {\n        return !!this.formGroup && this.formGroup.get('filterSelect').value;\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param options List of options for select input\n * @param value the default value that should go in this select filter.\n * @param customFiql when set as true will disable any formatting by {@link DatagridSelectFilterComponent#getValue}\n */\nexport function DatagridSelectFilter(\n    options: SelectOption[],\n    value?: string | number,\n    customFiql?: boolean\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridSelectFilterComponent,\n        config: {\n            options,\n            value,\n            customFiql,\n        },\n    });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatagridStringFilterComponent.html":{"url":"components/DatagridStringFilterComponent.html","title":"component - DatagridStringFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatagridStringFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/datagrid/filters/datagrid-string-filter.component.ts\n\n\n\n    \n        Extends\n    \n    \n                DatagridFilter\n    \n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-dg-string-filter\n            \n\n\n\n\n            \n                templateUrl\n                datagrid-string-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _config\n                            \n                            \n                                changes\n                            \n                            \n                                formGroup\n                            \n                            \n                                    Private\n                                subscriptionTracker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addWildCard\n                            \n                            \n                                createFormGroup\n                            \n                            \n                                getValue\n                            \n                            \n                                isActive\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                setValue\n                            \n                            \n                                accepts\n                            \n                            \n                                    Abstract\n                                createFormGroup\n                            \n                            \n                                    Protected\n                                getDebounceTimeMs\n                            \n                            \n                                    Abstract\n                                getValue\n                            \n                            \n                                    Abstract\n                                isActive\n                            \n                            \n                                    Abstract\n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                onBeforeSetConfig\n                            \n                            \n                                    Abstract\n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(filterContainer: ClrDatagridFilter)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/datagrid/filters/datagrid-string-filter.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterContainer\n                                                  \n                                                        \n                                                                        ClrDatagridFilter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     C\n\n                    \n                \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:72\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addWildCard\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addWildCard(input: string, position: WildCardPosition, wildcardCharacter: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-string-filter.component.ts:64\n                \n            \n\n\n            \n                \n                    Wraps a string with a wrapCharacter in given position;\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    position\n                                    \n                                                WildCardPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    wildcardCharacter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '*'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-string-filter.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-string-filter.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-string-filter.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-string-filter.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \nsetValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-string-filter.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            accepts\n                        \n                        \n                    \n                \n            \n            \n                \naccepts()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:137\n\n                \n            \n\n\n            \n                \n                    Required by Clarity but ignored since we don't support client side filtering\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:112\n\n                \n            \n\n\n            \n                \n                    To initialize the formGroup from sub classes\n\n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getDebounceTimeMs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDebounceTimeMs()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:99\n\n                \n            \n\n\n            \n                \n                    To override the default delay time for emission of changes\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:122\n\n                \n            \n\n\n            \n                \n                    For getting the filter UI widget values in FIQL formatted string\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:127\n\n                \n            \n\n\n            \n                \n                    Return true if the filter is currently activated (e.g. a value is provided)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:132\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:89\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            onBeforeSetConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onBeforeSetConfig(config: C)\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:107\n\n                \n            \n\n\n            \n                \n                    Called inside setter of DatagridFilter and Defined in the derived classes to perform some logic before\nassigning the UI widget configuration and setting a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setValue(value: V)\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:117\n\n                \n            \n\n\n            \n                \n                    Used for assigning a value to a filter from outside\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            V\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     C\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:71\n\n                            \n                        \n\n                \n                    \n                        Sets the configuration needed for a filter UI widget and also it's value.\nAssigned from ComponentRendererOutletDirective after the filter component is created.\nUsed by the getValue method in sub classes to format the FIQL string output.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:87\n\n                            \n                        \n\n                \n                    \n                        Emits whenever a filter form inputs changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.createFormGroup()\n\n                        \n                    \n                    \n                        \n                            Default value : this.createFormGroup()\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:59\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptionTracker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubscriptionTracker\n\n                        \n                    \n                    \n                        \n                            Default value : new SubscriptionTracker(this)\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:60\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Host, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\nexport enum WildCardPosition {\n    NONE = 0,\n    START = 1,\n    END = 2,\n    WRAP = WildCardPosition.START | WildCardPosition.END,\n}\n\n/**\n * Configures the '*' position in the FIQL string output\n */\nexport interface DatagridStringFilterConfig extends FilterConfig {\n    wildCardPosition?: WildCardPosition;\n}\n\n@Component({\n    selector: 'vcd-dg-string-filter',\n    templateUrl: 'datagrid-string-filter.component.html',\n})\nexport class DatagridStringFilterComponent extends DatagridFilter\n    implements OnDestroy {\n    createFormGroup(): FormGroup {\n        return new FormGroup({\n            filterText: new FormControl(''),\n        });\n    }\n\n    constructor(private filterContainer: ClrDatagridFilter) {\n        super(filterContainer);\n    }\n\n    setValue(value: string): void {\n        this.formGroup.setValue({\n            filterText: value,\n        });\n    }\n\n    getValue(): string {\n        const filterBuilder = new FilterBuilder().is(this.queryField);\n        let value = this.formGroup.get('filterText').value;\n        if (this.config && this.config.wildCardPosition) {\n            value = this.addWildCard(value, this.config.wildCardPosition);\n        }\n        return filterBuilder.equalTo(value).getString();\n    }\n\n    isActive(): boolean {\n        return !!this.formGroup && this.formGroup.get('filterText').value;\n    }\n\n    /**\n     * Wraps a string with a `wrapCharacter` in given position;\n     */\n    private addWildCard(input: string, position: WildCardPosition, wildcardCharacter = '*'): string {\n        const start = getWrapCharacter(position, WildCardPosition.START);\n        const end = getWrapCharacter(position, WildCardPosition.END);\n        return `${start}${input}${end}`;\n        /**\n         * @return `wrapCharacter` if the passed in position should show it, an empty string otherwise\n         */\n        function getWrapCharacter(inputPosition: WildCardPosition, checkPosition: WildCardPosition): string {\n            return inputPosition & checkPosition ? wildcardCharacter : '';\n        }\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param wildCardPosition where the * should go in the FIQL string output.\n * @param value the default value of the filter\n */\nexport function DatagridStringFilter(\n    wildCardPosition?: WildCardPosition,\n    value?: string\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridStringFilterComponent,\n        config: {\n            wildCardPosition,\n            value,\n        },\n    });\n}\n\n    \n\n    \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatagridStringFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatagridStringFilterConfig.html":{"url":"interfaces/DatagridStringFilterConfig.html","title":"interface - DatagridStringFilterConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatagridStringFilterConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/filters/datagrid-string-filter.component.ts\n        \n\n            \n                Description\n            \n            \n                Configures the '*' position in the FIQL string output\n\n            \n\n            \n                Extends\n            \n            \n                        FilterConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        wildCardPosition\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        wildCardPosition\n                                    \n                                \n                                \n                                    \n                                        wildCardPosition:         WildCardPosition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WildCardPosition\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Host, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\nexport enum WildCardPosition {\n    NONE = 0,\n    START = 1,\n    END = 2,\n    WRAP = WildCardPosition.START | WildCardPosition.END,\n}\n\n/**\n * Configures the '*' position in the FIQL string output\n */\nexport interface DatagridStringFilterConfig extends FilterConfig {\n    wildCardPosition?: WildCardPosition;\n}\n\n@Component({\n    selector: 'vcd-dg-string-filter',\n    templateUrl: 'datagrid-string-filter.component.html',\n})\nexport class DatagridStringFilterComponent extends DatagridFilter\n    implements OnDestroy {\n    createFormGroup(): FormGroup {\n        return new FormGroup({\n            filterText: new FormControl(''),\n        });\n    }\n\n    constructor(private filterContainer: ClrDatagridFilter) {\n        super(filterContainer);\n    }\n\n    setValue(value: string): void {\n        this.formGroup.setValue({\n            filterText: value,\n        });\n    }\n\n    getValue(): string {\n        const filterBuilder = new FilterBuilder().is(this.queryField);\n        let value = this.formGroup.get('filterText').value;\n        if (this.config && this.config.wildCardPosition) {\n            value = this.addWildCard(value, this.config.wildCardPosition);\n        }\n        return filterBuilder.equalTo(value).getString();\n    }\n\n    isActive(): boolean {\n        return !!this.formGroup && this.formGroup.get('filterText').value;\n    }\n\n    /**\n     * Wraps a string with a `wrapCharacter` in given position;\n     */\n    private addWildCard(input: string, position: WildCardPosition, wildcardCharacter = '*'): string {\n        const start = getWrapCharacter(position, WildCardPosition.START);\n        const end = getWrapCharacter(position, WildCardPosition.END);\n        return `${start}${input}${end}`;\n        /**\n         * @return `wrapCharacter` if the passed in position should show it, an empty string otherwise\n         */\n        function getWrapCharacter(inputPosition: WildCardPosition, checkPosition: WildCardPosition): string {\n            return inputPosition & checkPosition ? wildcardCharacter : '';\n        }\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param wildCardPosition where the * should go in the FIQL string output.\n * @param value the default value of the filter\n */\nexport function DatagridStringFilter(\n    wildCardPosition?: WildCardPosition,\n    value?: string\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridStringFilterComponent,\n        config: {\n            wildCardPosition,\n            value,\n        },\n    });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DetailPane.html":{"url":"interfaces/DetailPane.html","title":"interface - DetailPane","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DetailPane\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                The configuration objet used to create the detail pane on the datagrid.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        component\n                                \n                                \n                                        header\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                    \n                                \n                                \n                                    \n                                        component:         ComponentRendererConstructor>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentRendererConstructor>\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The contents that go within this detail pane.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                    \n                                \n                                \n                                    \n                                        header:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header that goes on top of this detail pane.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DetailPaneConfig.html":{"url":"interfaces/DetailPaneConfig.html","title":"interface - DetailPaneConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DetailPaneConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                The configuration object that is passed to the detail pane component.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        record\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        record\n                                    \n                                \n                                \n                                    \n                                        record:     R\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     R\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The record that this detail pane should render.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DetailRowConfig.html":{"url":"interfaces/DetailRowConfig.html","title":"interface - DetailRowConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DetailRowConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                The configuration object that is passed to the detail row component.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        index\n                                \n                                \n                                        record\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The total number of rows in the datagrid.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The index this detail row is in the datagrid.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        record\n                                    \n                                \n                                \n                                    \n                                        record:     R\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     R\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The record that this detail row should render.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DomUtil.html":{"url":"classes/DomUtil.html","title":"class - DomUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DomUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/dom-util.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                scrollToElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            scrollToElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scrollToElement(elRef: ElementRef, classSelector?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/dom-util.ts:19\n                \n            \n\n\n            \n                \n                    Scrolls view to a element so that the element becomes visible in the viewport.\nIf a css style selector is provided then the element to scroll is the html element\ndescribed by the css selector which parent is the provided element.\nId a css style selector is not provided then the element to scroll is the provided\nelement itself.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    elRef\n                                    \n                                                ElementRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the view's element.\n\n                                    \n                                \n                                \n                                    classSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        the css-style selector for the element to scroll to.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ElementRef } from '@angular/core';\n\nexport class DomUtil {\n    /**\n     * Scrolls view to a element so that the element becomes visible in the viewport.\n     * If a css style selector is provided then the element to scroll is the html element\n     * described by the css selector which parent is the provided element.\n     * Id a css style selector is not provided then the element to scroll is the provided\n     * element itself.\n     *\n     * @param elRef the view's element.\n     * @param classSelector the css-style selector for the element to scroll to.\n     */\n    public static scrollToElement(elRef: ElementRef, classSelector?: string): void {\n        if (!elRef || !elRef.nativeElement) {\n            return;\n        }\n        const el: HTMLElement = elRef.nativeElement as HTMLElement;\n        const elementToScroll = classSelector ? el.querySelector(classSelector) : el;\n\n        if (elementToScroll) {\n            elementToScroll.scrollIntoView({ block: 'nearest', behavior: 'smooth' });\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DropdownFocusHandlerDirective.html":{"url":"directives/DropdownFocusHandlerDirective.html","title":"directive - DropdownFocusHandlerDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DropdownFocusHandlerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/dropdown/dropdown-focus-handler.directive.ts\n        \n\n            \n                Description\n            \n            \n                Added on to vcd-dropdown component to link menu items of the dropdown on which this directive is added. each item is linked to its\nneighbors in the 4 directions. It then uses the DropdownFocusHandlerService to move the DOM focus between the menu items.\n\n            \n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        vcd-dropdown[vcdDropdownFocusHandler]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                closeVcdDropdown\n                            \n                            \n                                    Private\n                                clrDropdownMenuEl\n                            \n                            \n                                    Private\n                                dropdownTriggerEl\n                            \n                            \n                                    Private\n                                isRootDropdown\n                            \n                            \n                                menuItems\n                            \n                            \n                                    Private\n                                menuTrigger\n                            \n                            \n                                    Private\n                                subscriptionTracker\n                            \n                            \n                                    Private\n                                timeoutId\n                            \n                            \n                                    Private\n                                unlistenRightArrowKeyPress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getDropdownItemElement\n                            \n                            \n                                    Private\n                                linkMenuItems\n                            \n                            \n                                    Private\n                                linkVertical\n                            \n                            \n                                    Private\n                                listenToRightArrowKeyPressOnNestedTrigger\n                            \n                            \n                                    Private\n                                moveFocusToFirstItem\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                registerRootMenuContainer\n                            \n                            \n                                    Private\n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    rootMenuTrigger\n                                \n                                \n                                    nestedMenuTrigger\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parentVcdDropdown: DropdownComponent, parentFocusHandler: DropdownFocusHandlerDirective, hostVcdDropdown: DropdownComponent, focusHandlerService: DropdownFocusHandlerService, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parentVcdDropdown\n                                                  \n                                                        \n                                                                        DropdownComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parentFocusHandler\n                                                  \n                                                        \n                                                                    DropdownFocusHandlerDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hostVcdDropdown\n                                                  \n                                                        \n                                                                        DropdownComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        focusHandlerService\n                                                  \n                                                        \n                                                                        DropdownFocusHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getDropdownItemElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDropdownItemElement(item: Element)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HTMLElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            linkMenuItems\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    linkMenuItems()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            linkVertical\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    linkVertical()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            listenToRightArrowKeyPressOnNestedTrigger\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listenToRightArrowKeyPressOnNestedTrigger()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:118\n                \n            \n\n\n            \n                \n                    Sometimes when the right arrow key is pressed on a nested menu trigger, the event is propagating to sibling nested menu triggers and\nthe event handlers attached to the menu triggers by clarity to toggle the menus are being invoked. Because of this, pressing right\narrow on a nested menu is opening other sibling menus as well\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            moveFocusToFirstItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    moveFocusToFirstItem()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:94\n                \n            \n\n\n            \n                \n                    After a dropdown menu is opened, it creates MenuItem for each of the menu items along with their trigger menu item and links\nthem. It also then moves the focus to first item in the opened menu list.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerRootMenuContainer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerRootMenuContainer()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            closeVcdDropdown\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     () => {\n        this.hostVcdDropdown.clrDropdown.toggleService.open = false;\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:193\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            clrDropdownMenuEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dropdownTriggerEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isRootDropdown\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     !this.parentVcdDropdown\n\n                        \n                    \n                    \n                        \n                            Default value : !this.parentVcdDropdown\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menuItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:78\n                            \n                        \n\n                \n                    \n                        List of focusable menu items with their neighbors in 4 directions.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            menuTrigger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuItem\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:82\n                            \n                        \n\n                \n                    \n                        The menu item which can toggle this menu. This can be the root dropdown trigger or nested menu trigger\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptionTracker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubscriptionTracker\n\n                        \n                    \n                    \n                        \n                            Default value : new SubscriptionTracker(this)\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timeoutId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            unlistenRightArrowKeyPress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:88\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        rootMenuTrigger\n                    \n                \n\n                \n                    \n                        getrootMenuTrigger()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:197\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nestedMenuTrigger\n                    \n                \n\n                \n                    \n                        getnestedMenuTrigger()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:204\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, Host, OnDestroy, Optional, Renderer2, SkipSelf } from '@angular/core';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { DropdownFocusHandlerService } from './dropdown-focus-handler.service';\nimport { DropdownComponent } from './dropdown.component';\n\n/**\n * To filter out the non-activatable separator item type when creating linked menu list {@link #linkMenuItems}. Because, we don't\n * want the focus to go to separator item type when navigating using the arrow keys\n */\nenum ActivatableMenuItemType {\n    /**\n     * Menu item that results in executing of an action when clicked\n     */\n    BUTTON = 'button',\n    /**\n     * Activating this would open a nested menu\n     */\n    NESTED_VCD_DROPDOWN = 'vcd-dropdown',\n}\n\nconst NESTED_DROPDOWN_TRIGGER = 'clr-dropdown > button';\n\n/**\n * Arrow keys directions\n */\nexport enum Direction {\n    UP = 'up',\n    DOWN = 'down',\n    LEFT = 'left',\n    RIGHT = 'right',\n}\n\n/**\n * Object wrapping the focusable HTML elements of dropdown menu with the neighbors in 4 directions of each menu item.\n */\nexport interface MenuItem {\n    /**\n     * The HTML element of this dropdown menu item\n     */\n    element: HTMLElement;\n    /**\n     * Neighboring menu items in all the 4 directions\n     */\n    up?: MenuItem;\n    down?: MenuItem;\n    left?: MenuItem;\n    right?: MenuItem;\n    /**\n     * Call back to close the menu for which this menu item can be a trigger. called from {@link DropdownFocusHandlerService}\n     */\n    closeMenu?: () => void;\n}\n\n/**\n * Added on to vcd-dropdown component to link menu items of the dropdown on which this directive is added. each item is linked to its\n * neighbors in the 4 directions. It then uses the {@link DropdownFocusHandlerService} to move the DOM focus between the menu items.\n */\n@Directive({\n    selector: 'vcd-dropdown[vcdDropdownFocusHandler]',\n})\nexport class DropdownFocusHandlerDirective implements AfterViewInit, OnDestroy {\n    constructor(\n        @Optional() @SkipSelf() private parentVcdDropdown: DropdownComponent,\n        @Optional() @SkipSelf() private parentFocusHandler: DropdownFocusHandlerDirective,\n        @Host() private hostVcdDropdown: DropdownComponent,\n        private focusHandlerService: DropdownFocusHandlerService,\n        private renderer: Renderer2\n    ) {}\n\n    /**\n     * List of focusable menu items with their neighbors in 4 directions.\n     */\n    menuItems: MenuItem[];\n    /**\n     * The menu item which can toggle this menu. This can be the root dropdown trigger or nested menu trigger\n     */\n    private menuTrigger: MenuItem;\n    private dropdownTriggerEl: HTMLElement;\n    private clrDropdownMenuEl: HTMLElement;\n    private isRootDropdown = !this.parentVcdDropdown;\n    private timeoutId: number;\n    private subscriptionTracker = new SubscriptionTracker(this);\n    private unlistenRightArrowKeyPress: (...argArray: any[]) => any;\n\n    /**\n     * After a dropdown menu is opened, it creates {@link MenuItem} for each of the menu items along with their trigger menu item and links\n     * them. It also then moves the focus to first item in the opened menu list.\n     */\n    ngAfterViewInit(): void {\n        this.dropdownTriggerEl = this.hostVcdDropdown._dropdownTriggerEl;\n        this.listenToRightArrowKeyPressOnNestedTrigger();\n\n        this.subscriptionTracker.subscribe(this.hostVcdDropdown.dropdownMenuUpdated, (dropdown) => {\n            if (!dropdown) {\n                this.reset();\n                return;\n            }\n            this.clrDropdownMenuEl = dropdown.menu;\n            // We have to wait till the dropdown is opened for getting the menus trigger because, in case of a nested menu, the trigger is\n            // obtained from parent menus menuItems and they are not initialized even if we wait till the ngAfterViewInit hook\n            this.menuTrigger = this.isRootDropdown ? this.rootMenuTrigger : this.nestedMenuTrigger;\n            this.registerRootMenuContainer();\n            this.linkMenuItems();\n            this.moveFocusToFirstItem();\n        });\n    }\n\n    /**\n     * Sometimes when the right arrow key is pressed on a nested menu trigger, the event is propagating to sibling nested menu triggers and\n     * the event handlers attached to the menu triggers by clarity to toggle the menus are being invoked. Because of this, pressing right\n     * arrow on a nested menu is opening other sibling menus as well\n     */\n    private listenToRightArrowKeyPressOnNestedTrigger(): void {\n        if (this.isRootDropdown) {\n            return;\n        }\n        this.unlistenRightArrowKeyPress = this.renderer.listen(\n            this.dropdownTriggerEl,\n            'keydown.arrowright',\n            (event: Event) => event.stopPropagation()\n        );\n    }\n\n    private reset(): void {\n        if (this.isRootDropdown) {\n            this.focusHandlerService.unlistenFuncs.forEach((unlisten) => unlisten());\n        }\n        this.menuTrigger = null;\n        this.menuItems = null;\n    }\n\n    ngOnDestroy(): void {\n        if (this.unlistenRightArrowKeyPress) {\n            this.unlistenRightArrowKeyPress();\n        }\n    }\n\n    private registerRootMenuContainer(): void {\n        if (this.isRootDropdown) {\n            const rootMenuContainer = this.clrDropdownMenuEl;\n            this.focusHandlerService.listenToArrowKeys(rootMenuContainer);\n        }\n    }\n\n    private moveFocusToFirstItem(): void {\n        this.focusHandlerService.moveFocusTo(this.menuTrigger);\n        // After the menu is opened, the ClrDropdownMenu wouldn't be attached to the DOM until the next change detection cycle.\n        // So setTimeout is the only way to wait for the ClrDropdownMenu to be ready to move focus to first item.\n        this.timeoutId = window.setTimeout(() => {\n            if (this.parentVcdDropdown) {\n                this.focusHandlerService.moveFocus(Direction.RIGHT);\n            } else {\n                this.focusHandlerService.moveFocus(Direction.DOWN);\n            }\n            window.clearTimeout(this.timeoutId);\n        });\n    }\n\n    private getDropdownItemElement(item: Element): HTMLElement {\n        // We only need the underlying button that opens the nested dropdown as that is the activatable/focusable item\n        return (item.matches(ActivatableMenuItemType.BUTTON)\n            ? item\n            : item.querySelector(NESTED_DROPDOWN_TRIGGER)) as HTMLElement;\n    }\n\n    private linkMenuItems(): void {\n        const menuChildren: Element[] = Array.from(this.clrDropdownMenuEl.children);\n        this.menuItems = menuChildren\n            .filter(\n                (child) =>\n                    child.matches(ActivatableMenuItemType.BUTTON) ||\n                    child.matches(ActivatableMenuItemType.NESTED_VCD_DROPDOWN)\n            )\n            .map((child) => ({\n                element: this.getDropdownItemElement(child),\n                left: this.menuTrigger,\n            }));\n        this.linkVertical();\n        // Lint to menu trigger\n        if (this.isRootDropdown) {\n            this.menuTrigger.down = this.menuItems[0];\n        } else {\n            // If there is a parent dropdown, We have to link these menu items to their trigger in the parent dropdown\n            this.menuTrigger.right = this.menuItems[0];\n        }\n    }\n\n    private closeVcdDropdown = () => {\n        this.hostVcdDropdown.clrDropdown.toggleService.open = false;\n    };\n\n    private get rootMenuTrigger(): MenuItem {\n        return {\n            element: this.dropdownTriggerEl,\n            closeMenu: this.closeVcdDropdown,\n        };\n    }\n\n    private get nestedMenuTrigger(): MenuItem {\n        const menuTrigger = this.parentFocusHandler.menuItems.find((item) => {\n            return Object.is(item.element.innerText, this.dropdownTriggerEl.innerText);\n        });\n        menuTrigger.closeMenu = this.closeVcdDropdown;\n        return menuTrigger;\n    }\n\n    private linkVertical(): void {\n        this.menuItems.forEach((menuItem: MenuItem, index: number) => {\n            if (index > 0) {\n                menuItem.up = this.menuItems[index - 1];\n            }\n            if (index  1) {\n            this.menuItems[0].up = this.menuItems[this.menuItems.length - 1];\n            this.menuItems[this.menuItems.length - 1].down = this.menuItems[0];\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DropdownFocusHandlerService.html":{"url":"injectables/DropdownFocusHandlerService.html","title":"injectable - DropdownFocusHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DropdownFocusHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/dropdown/dropdown-focus-handler.service.ts\n        \n\n            \n                Description\n            \n            \n                Provided at the injector level of root DropdownComponent. The same service object is used for all the nested menus along\nwith the root menu. This is responsible for listening to arrow key presses within the root dropdown menu container and updating the\nfocused item on the DOM across all the nested and root menus.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentFocusedItem\n                            \n                            \n                                unlistenFuncs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                escapePressed\n                            \n                            \n                                listenToArrowKeys\n                            \n                            \n                                moveFocus\n                            \n                            \n                                moveFocusTo\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/dropdown/dropdown-focus-handler.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            escapePressed\n                        \n                        \n                    \n                \n            \n            \n                \nescapePressed()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.service.ts:106\n                \n            \n\n\n            \n                \n                    Whenever escape is pressed on dropdown item, the menu has to be closed and the focus has to be moved to parent menu if any... Just\nlike when left arrow key is pressed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listenToArrowKeys\n                        \n                        \n                    \n                \n            \n            \n                \nlistenToArrowKeys(menuContainer: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.service.ts:72\n                \n            \n\n\n            \n                \n                    Attaches arrow key event listeners to the root menu container in all direction except right. This is because, when a right arrow is\npressed, Clarity opens the nested dropdown menu and the logic inside DropdownFocusHandlerDirective.ngAfterViewInit\nautomatically moves the focus to first item in the menu on the right side\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menuContainer\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moveFocus\n                        \n                        \n                    \n                \n            \n            \n                \nmoveFocus(direction: Direction)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.service.ts:28\n                \n            \n\n\n            \n                \n                    Moves the focus to HTML element in the given direction and returns true if the focus is moved and false otherwise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                                Direction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moveFocusTo\n                        \n                        \n                    \n                \n            \n            \n                \nmoveFocusTo(item: MenuItem)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.service.ts:51\n                \n            \n\n\n            \n                \n                    Calls the HTML focus method on the HTML element passed and removed focus on currently focused element.\nReturns true if the focus is moved and false otherwise.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                MenuItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentFocusedItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuItem\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unlistenFuncs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     (function)[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy, Renderer2 } from '@angular/core';\nimport { Direction, MenuItem } from './dropdown-focus-handler.directive';\n\n/**\n * Provided at the injector level of root {@link DropdownComponent}. The same service object is used for all the nested menus along\n * with the root menu. This is responsible for listening to arrow key presses within the root dropdown menu container and updating the\n * focused item on the DOM across all the nested and root menus.\n */\n@Injectable()\nexport class DropdownFocusHandlerService implements OnDestroy {\n    currentFocusedItem: MenuItem;\n    unlistenFuncs: (() => void)[] = [];\n\n    constructor(private renderer: Renderer2) {}\n\n    ngOnDestroy(): void {\n        this.unlistenFuncs.forEach((unlisten) => unlisten());\n    }\n\n    /**\n     * Moves the focus to HTML element in the given direction and returns true if the focus is moved and false otherwise\n     */\n    moveFocus(direction: Direction): boolean {\n        let moved;\n        switch (direction) {\n            case Direction.DOWN:\n                moved = this.moveFocusTo(this.currentFocusedItem.down);\n                break;\n            case Direction.LEFT:\n                moved = this.moveFocusTo(this.currentFocusedItem.left);\n                break;\n            case Direction.UP:\n                moved = this.moveFocusTo(this.currentFocusedItem.up);\n                break;\n            case Direction.RIGHT:\n                moved = this.moveFocusTo(this.currentFocusedItem.right);\n                break;\n        }\n        return moved;\n    }\n\n    /**\n     * Calls the HTML focus method on the HTML element passed and removed focus on currently focused element.\n     * Returns true if the focus is moved and false otherwise.\n     */\n    moveFocusTo(item: MenuItem): boolean {\n        if (!item) {\n            return false;\n        }\n        if (this.currentFocusedItem) {\n            // Sometimes, when navigating to a nested menu using right arrow, the nested menu trigger gets focused multiple times\n            if (Object.is(this.currentFocusedItem.element, item.element)) {\n                return false;\n            }\n            this.currentFocusedItem.element.blur();\n        }\n        item.element.focus();\n        this.currentFocusedItem = item;\n        return true;\n    }\n\n    /**\n     * Attaches arrow key event listeners to the root menu container in all direction except right. This is because, when a right arrow is\n     * pressed, Clarity opens the nested dropdown menu and the logic inside {@link DropdownFocusHandlerDirective.ngAfterViewInit}\n     * automatically moves the focus to first item in the menu on the right side\n     */\n    listenToArrowKeys(menuContainer: HTMLElement): void {\n        // We call event.preventDefault below to prevent scrolling of page underneath the dropdown when arrow keys are pressed\n        this.unlistenFuncs.push(\n            this.renderer.listen(menuContainer, 'keydown.arrowdown', (event: Event) => {\n                event.stopPropagation();\n                this.moveFocus(Direction.DOWN);\n                event.preventDefault();\n            })\n        );\n        this.unlistenFuncs.push(\n            this.renderer.listen(menuContainer, 'keydown.arrowup', (event: Event) => {\n                event.stopPropagation();\n                this.moveFocus(Direction.UP);\n                event.preventDefault();\n            })\n        );\n        this.unlistenFuncs.push(\n            this.renderer.listen(menuContainer, 'keydown.arrowleft', (event: Event) => {\n                if (!this.currentFocusedItem.left) {\n                    return;\n                }\n                // Close the nested menu before moving focus to left side\n                this.currentFocusedItem.left.closeMenu();\n                event.stopPropagation();\n                this.moveFocus(Direction.LEFT);\n                event.preventDefault();\n            })\n        );\n    }\n\n    /**\n     * Whenever escape is pressed on dropdown item, the menu has to be closed and the focus has to be moved to parent menu if any... Just\n     * like when left arrow key is pressed\n     */\n    escapePressed(): void {\n        if (!this.currentFocusedItem.left) {\n            return;\n        }\n        // Close the nested menu before moving focus to left side\n        this.currentFocusedItem.left.closeMenu();\n        this.moveFocus(Direction.LEFT);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DropdownModule.html":{"url":"modules/DropdownModule.html","title":"module - DropdownModule","body":"\n                   \n\n\n\n\n    Modules\n    DropdownModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DropdownModule\n\n\n\ncluster_DropdownModule_declarations\n\n\n\ncluster_DropdownModule_DropdownComponent_providers\n\n\n\ncluster_DropdownModule_imports\n\n\n\ncluster_DropdownModule_exports\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\n\n\nDropdownModule\n\nDropdownModule\n\nDropdownModule -->\n\nDropdownComponent->DropdownModule\n\n\n\n\n\nDropdownFocusHandlerDirective\n\nDropdownFocusHandlerDirective\n\nDropdownModule -->\n\nDropdownFocusHandlerDirective->DropdownModule\n\n\n\n\n\nDynamicDropdownPositionDirective\n\nDynamicDropdownPositionDirective\n\nDropdownModule -->\n\nDynamicDropdownPositionDirective->DropdownModule\n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nDropdownModule->DropdownComponent \n\n\n\n\n\nDropdownFocusHandlerDirective \n\nDropdownFocusHandlerDirective \n\nDropdownFocusHandlerDirective  -->\n\nDropdownModule->DropdownFocusHandlerDirective \n\n\n\n\n\nDynamicDropdownPositionDirective \n\nDynamicDropdownPositionDirective \n\nDynamicDropdownPositionDirective  -->\n\nDropdownModule->DynamicDropdownPositionDirective \n\n\n\n\n\nDROPDOWN_FOCUS_HANDLER_PROVIDER\n\nDROPDOWN_FOCUS_HANDLER_PROVIDER\n\nDropdownComponent -->\n\nDROPDOWN_FOCUS_HANDLER_PROVIDER->DropdownComponent\n\n\n\n\n\nShowClippedTextDirectiveModule\n\nShowClippedTextDirectiveModule\n\nDropdownModule -->\n\nShowClippedTextDirectiveModule->DropdownModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/dropdown/dropdown.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DropdownComponent\n                        \n                        \n                            DropdownFocusHandlerDirective\n                        \n                        \n                            DynamicDropdownPositionDirective\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ShowClippedTextDirectiveModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DropdownComponent\n                        \n                        \n                            DropdownFocusHandlerDirective\n                        \n                        \n                            DynamicDropdownPositionDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ClarityModule } from '@clr/angular';\nimport { I18nModule } from '@vcd/i18n';\nimport { ShowClippedTextDirectiveModule } from '../lib/directives/show-clipped-text.directive.module';\nimport { DropdownFocusHandlerDirective } from './dropdown-focus-handler.directive';\nimport { DropdownComponent } from './dropdown.component';\nimport { DynamicDropdownPositionDirective } from './dynamic-dropdown-position.directive';\n\n@NgModule({\n    declarations: [DropdownComponent, DynamicDropdownPositionDirective, DropdownFocusHandlerDirective],\n    imports: [CommonModule, ReactiveFormsModule, ClarityModule, I18nModule, ShowClippedTextDirectiveModule],\n    exports: [DropdownComponent, DynamicDropdownPositionDirective, DropdownFocusHandlerDirective],\n})\nexport class DropdownModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DynamicDropdownPositionDirective.html":{"url":"directives/DynamicDropdownPositionDirective.html","title":"directive - DynamicDropdownPositionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DynamicDropdownPositionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/dropdown/dynamic-dropdown-position.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive for ClrDropDown which repositions the drop-down menu dynamically based on the available space.\nIf there is not enough space to show the whole drop-down menu, then leave the default position which is bottom and\nusers have to scroll down to access it.\n\n            \n\n            \n                Implements\n            \n            \n                            AfterContentInit\n            \n\n            \n                Example\n            \n            \n                        \n                            ```\n * \n *     \n *         {{ 'vm.actions' | translate }}\n *         \n *         \n *     \n *         Dropdown header\n *         Action 1\n *         Action 2\n *         \n *         Link 1\n *         Link 2\n *     \n * \n * ```\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        clr-dropdown[vcdDynamicDropdown]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                contentAreaElement\n                            \n                            \n                                    Private\n                                dropdownMenuElement\n                            \n                            \n                                    Private\n                                dropdownMenuRect\n                            \n                            \n                                    Private\n                                dropdownTriggerElement\n                            \n                            \n                                    Private\n                                dropdownTriggerRect\n                            \n                            \n                                    Private\n                                isInsideModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Private\n                                resetPosition\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dropdownMenu\n                                \n                                \n                                    positionTop\n                                \n                                \n                                    positionLeft\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elRef: ElementRef, renderer: Renderer2, document: Document, dropDownBtn: ClrDropdown, parentDropdown: DynamicDropdownPositionDirective)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:84\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dropDownBtn\n                                                  \n                                                        \n                                                                    ClrDropdown\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parentDropdown\n                                                  \n                                                        \n                                                                    DynamicDropdownPositionDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:198\n                \n            \n\n\n            \n                \n                    On window resize, close the dropdown when it is open, otherwise we need to recalculate again its position\nand reposition it, which may not be a good user experience.\n\n\n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetPosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPosition(element: HTMLElement, top: number, left: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:188\n                \n            \n\n\n            \n                \n                    Reposition the dropdown element by setting top and left position.\nNote: The dropdown is position absolute by setting position, top and left properties AND then is position\nrelatively to itself by setting transform: translateX/Y property.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    top\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    left\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            contentAreaElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dropdownMenuElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dropdownMenuRect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DOMRect\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dropdownTriggerElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dropdownTriggerRect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DOMRect\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isInsideModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:63\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dropdownMenu\n                    \n                \n\n\n                \n                    \n                        setdropdownMenu(dropdown)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:66\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            dropdown\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        positionTop\n                    \n                \n\n                \n                    \n                        getpositionTop()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:101\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        positionLeft\n                    \n                \n\n                \n                    \n                        getpositionLeft()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:134\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport {\n    AfterContentInit,\n    ContentChild,\n    Directive,\n    ElementRef,\n    HostListener,\n    Inject,\n    Optional,\n    Renderer2,\n    SkipSelf,\n} from '@angular/core';\nimport { ClrDropdown, ClrDropdownMenu } from '@clr/angular';\n\nconst CONTENT_AREA_SELECTOR = '.content-area';\nconst NO_SCROLLING_CLASSNAME = 'no-scrolling'; // Set by Clarity when a modal is opened\n// Extra space on the right and left of drop down menus to shift them left or right and prevent any clipping\nconst MENU_BUFFER_SPACE = 150;\n\n/**\n * Directive for ClrDropDown which repositions the drop-down menu dynamically based on the available space.\n *\n * If there is not enough space to show the whole drop-down menu, then leave the default position which is `bottom` and\n * users have to scroll down to access it.\n *\n * @example\n * ```\n * \n *     \n *         {{ 'vm.actions' | translate }}\n *         \n *         \n *     \n *         Dropdown header\n *         Action 1\n *         Action 2\n *         \n *         Link 1\n *         Link 2\n *     \n * \n * ```\n */\n/**\n * This component is marked as dynamic to suppress the '\"strictMetadataEmit\": true' error being reported on DI of Document\n */\n/** @dynamic */\n@Directive({\n    selector: 'clr-dropdown[vcdDynamicDropdown]',\n})\nexport class DynamicDropdownPositionDirective implements AfterContentInit {\n    private contentAreaElement: HTMLElement;\n    private dropdownTriggerElement: HTMLElement;\n    private dropdownMenuElement: HTMLElement;\n    private dropdownTriggerRect: DOMRect;\n    private dropdownMenuRect: DOMRect;\n    // Drop downs should be position absolutely to the window when they are in modal\n    private isInsideModal = false;\n\n    @ContentChild(ClrDropdownMenu, { static: false })\n    set dropdownMenu(dropdown: ClrDropdownMenu) {\n        if (dropdown) {\n            this.dropdownTriggerElement = this.elRef.nativeElement;\n            this.dropdownMenuElement = this.dropdownTriggerElement.querySelector('clr-dropdown-menu');\n            if (this.dropdownMenuElement) {\n                // Recalculate the dropdown position on open\n                this.dropdownTriggerRect = this.dropdownTriggerElement.getBoundingClientRect();\n                this.dropdownMenuRect = this.dropdownMenuElement.getBoundingClientRect();\n                this.resetPosition(this.dropdownMenuElement, this.positionTop, this.positionLeft);\n            }\n            try {\n                // Internal API\n                (dropdown as any).popoverInstance.removeScrollEventListeners();\n            } catch (e) {\n                console.error('Clarity has changed ClrDropdownMenu internal API. Please fix me!');\n                throw new Error('Clarity has changed ClrDropdownMenu internal API. Please fix me!');\n            }\n        }\n    }\n\n    constructor(\n        private elRef: ElementRef,\n        private renderer: Renderer2,\n        @Inject(DOCUMENT) private document: Document,\n        private dropDownBtn: ClrDropdown,\n        @Optional() @SkipSelf() private parentDropdown: DynamicDropdownPositionDirective\n    ) {}\n\n    ngAfterContentInit(): void {\n        this.isInsideModal = this.document.body.classList.contains(NO_SCROLLING_CLASSNAME);\n        if (!this.isInsideModal) {\n            this.contentAreaElement = this.document.body.querySelector(CONTENT_AREA_SELECTOR) as HTMLElement;\n        }\n    }\n\n    private get positionTop(): number {\n        const dropdownTriggerRect = this.dropdownTriggerRect;\n        const dropdownTriggerHeight = dropdownTriggerRect.bottom - dropdownTriggerRect.top;\n        const dropdownMenuRect = this.dropdownMenuRect;\n        const dropdownMenuHeight = dropdownMenuRect.bottom - dropdownMenuRect.top;\n\n        // When the dropdown is inside a modal and it's being clipped, its position is determined based on the window\n        if (this.isInsideModal && dropdownMenuRect.bottom > window.innerHeight) {\n            return -(dropdownMenuHeight + dropdownTriggerHeight + 1);\n        }\n        if (!this.contentAreaElement) {\n            return 0;\n        }\n        const contentAreaRect = this.contentAreaElement.getBoundingClientRect();\n        // When not in a modal, the position is relative to the `.content-area` element\n        if (dropdownMenuRect.bottom = contentAreaRect.top) {\n            // If the dropdown trigger is a dropdown item instead of a button, we shift it up by less number of pixels to avoid space\n            // between dropdown trigger and the dropdown menu\n            const isFirstDropdownTrigger = !!this.dropdownTriggerElement.querySelector('button.first-dropdown-toggle');\n            return isFirstDropdownTrigger ? -(dropdownTriggerHeight + dropdownMenuHeight) : -dropdownMenuHeight;\n        }\n        if (dropdownTriggerRect.top - dropdownMenuRect.height = contentAreaRect.right &&\n            dropdownTriggerRect.left - dropdownMenuRect.width >= contentAreaRect.left\n        ) {\n            const marginLeft = triggerComputedStyles ? parseInt(triggerComputedStyles.marginLeft, 10) : 0;\n            // If the dropdown being clipped is at the 2nd level, we want to shift it furthur left such that it would\n            // not over lap and cover the 1st level of dropdown underneath it\n            if (this.parentDropdown) {\n                const parentDropdownMenuRect = this.parentDropdown.dropdownMenuElement.getBoundingClientRect();\n                const parentDropdownWidth = parentDropdownMenuRect.right - parentDropdownMenuRect.left;\n                return -(parentDropdownWidth + dropdownMenuRect.width + marginLeft);\n            }\n            return -(dropdownMenuRect.width + marginLeft);\n        }\n        // if the dropdown is clipped at the bottom and if it is also being clipped at the top and pushed down, shift it to right\n        if (\n            dropdownMenuRect.bottom > contentAreaRect.bottom &&\n            dropdownTriggerRect.top - dropdownMenuRect.height \n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorBannerComponent.html":{"url":"components/ErrorBannerComponent.html","title":"component - ErrorBannerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorBannerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/common/error/error-banner.component.ts\n\n\n    \n        Description\n    \n    \n        Component that displays the error message only if a non empty errorMessage is passed in\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-error-banner\n            \n\n            \n                styleUrls\n                ./error-banner.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error-banner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _errorMessage\n                            \n                            \n                                closed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onAlertClosedChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alertClosable\n                            \n                            \n                                alertType\n                            \n                            \n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dismissed\n                            \n                            \n                                errorMessageChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    errorMessage\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alertClosable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/error/error-banner.component.ts:41\n                            \n                        \n                \n                    \n                        Marks clr-alert as closable or not\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        alertType\n                    \n                \n                \n                    \n                        Type :     \"danger\" | \"warning\" | \"info\" | \"success\"\n\n                    \n                \n                \n                    \n                        Default value : 'danger'\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/error/error-banner.component.ts:36\n                            \n                        \n                \n                    \n                        Sets clr-alert type\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/error/error-banner.component.ts:29\n                            \n                        \n                \n                    \n                        Two way bound errorMessage, will be cleared when the user dismisses the alert\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dismissed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/error/error-banner.component.ts:24\n                            \n                        \n                \n                    \n                        Emits events when the error banner is dismissed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessageChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/error/error-banner.component.ts:54\n                            \n                        \n                \n                    \n                        Emits an event when the error message is changed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onAlertClosedChange\n                        \n                        \n                    \n                \n            \n            \n                \nonAlertClosedChange(closed: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/error/error-banner.component.ts:59\n                \n            \n\n\n            \n                \n                    Clears the error message when the alert is closed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    closed\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/error/error-banner.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/error/error-banner.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n\n\n                \n                    \n                        seterrorMessage(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/common/error/error-banner.component.ts:46\n                                \n                            \n                    \n                        \n                                Sets the error message displayed by this error banner.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Component that displays the error message only if a non empty errorMessage is passed in\n */\n@Component({\n    selector: 'vcd-error-banner',\n    templateUrl: './error-banner.component.html',\n    styleUrls: ['./error-banner.component.scss'],\n})\nexport class ErrorBannerComponent {\n    private _errorMessage = '';\n\n    closed = true;\n\n    /**\n     * Emits events when the error banner is dismissed.\n     */\n    @Output() dismissed = new EventEmitter();\n\n    /**\n     * Two way bound errorMessage, will be cleared when the user dismisses the alert\n     */\n    @Input() get errorMessage(): string {\n        return this._errorMessage;\n    }\n\n    /**\n     * Sets clr-alert type\n     */\n    @Input() alertType: 'danger' | 'warning' | 'info' | 'success' = 'danger';\n\n    /**\n     * Marks clr-alert as closable or not\n     */\n    @Input() alertClosable = true;\n\n    /**\n     * Sets the error message displayed by this error banner.\n     */\n    set errorMessage(val: string) {\n        this._errorMessage = val;\n        this.closed = !val;\n    }\n\n    /**\n     * Emits an event when the error message is changed.\n     */\n    @Output() errorMessageChange = new EventEmitter();\n\n    /**\n     * Clears the error message when the alert is closed.\n     */\n    onAlertClosedChange(closed: boolean): void {\n        this._errorMessage = '';\n        this.errorMessageChange.emit('');\n        this.dismissed.next();\n    }\n}\n\n    \n\n    \n        \n    \n        {{ errorMessage }}\n    \n\n\n    \n\n    \n                \n                    ./error-banner.component.scss\n                \n                /*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nclr-alert ::ng-deep .alert {\n    margin-left: 0;\n    margin-right: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ errorMessage }}    '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorBannerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorBannerWidgetObject.html":{"url":"classes/ErrorBannerWidgetObject.html","title":"class - ErrorBannerWidgetObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorBannerWidgetObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/error/error-banner.wo.ts\n        \n\n            \n                Description\n            \n            \n                Testing Widget Object for ErrorBannerComponent\n\n            \n\n            \n                Extends\n            \n            \n                        WidgetObject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                tagName\n                            \n                            \n                                    Public\n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                click\n                            \n                            \n                                detectChanges\n                            \n                            \n                                    Protected\n                                findElement\n                            \n                            \n                                    Protected\n                                findElements\n                            \n                            \n                                    Protected\n                                getNodeText\n                            \n                            \n                                    Protected\n                                getText\n                            \n                            \n                                    Protected\n                                getTexts\n                            \n                            \n                                    Protected\n                                sendKeyboardEvent\n                            \n                            \n                                    Protected\n                                setInputValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ariaRole\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tagName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd-error-banner'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/error/error-banner.wo.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : fixture.componentInstance\n                        \n                    \n                            \n                                \n                                    Inherited from         WidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         WidgetObject:42\n\n                            \n                        \n\n                \n                    \n                        The component instance being managed. Whenever possible, we should access the component's API.\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    click(cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:73\n\n                \n            \n\n\n            \n                \n                    Clicks an element and detects changes so the DOM is immediately updated\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to click a specific element. If not passed in, the entire node will\nreceive the click event\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \ndetectChanges()\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElement(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:54\n\n                \n            \n\n\n            \n                \n                    Finds first element within this widget matching the given selector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        What to search for\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DebugElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElements\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElements(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:62\n\n                \n            \n\n\n            \n                \n                    Same as findElement but returns all elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DebugElement[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getNodeText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeText(el: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:140\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getText(cssSelector: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:128\n\n                \n            \n\n\n            \n                \n                    Returns text content of this widget\nIf the element cannot be found, gives empty string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to retrieve text for a specific element within this widget.\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getTexts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTexts(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:136\n\n                \n            \n\n\n            \n                \n                    Same as getText but return the text for all matching nodes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            sendKeyboardEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendKeyboardEvent(eventType, eventProperties: literal type, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:90\n\n                \n            \n\n\n            \n                \n                    Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\nfound by the {@param cssSelector} within the provided {@param parent} or the current root element.\nSetting the event properties is done with Object.defineProperty on the created event. This allows setting\nproperties like which that is deprecated and cannot be set with the native approach of creating keyboard event.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    eventType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The keyboard event type like 'keyup', 'keydown', 'keypress'\n\n                                    \n                                \n                                \n                                    eventProperties\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        properties of the event like code, key etc.\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setInputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setInputValue(value: string | number, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:114\n\n                \n            \n\n\n            \n                \n                    Sets the value of an input element or textarea element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        the value that the element should display\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        ariaRole\n                    \n                \n\n                \n                    \n                        getariaRole()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/common/error/error-banner.wo.ts:18\n                                \n                            \n                    \n                        \n                                The ARIA role of the component.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { WidgetObject } from '../../utils/test/widget-object';\nimport { ErrorBannerComponent } from './error-banner.component';\n\n/**\n * Testing Widget Object for {@link ErrorBannerComponent}\n */\nexport class ErrorBannerWidgetObject extends WidgetObject {\n    static tagName = 'vcd-error-banner';\n\n    /**\n     * The ARIA role of the component.\n     */\n    get ariaRole(): string {\n        return this.findElement('clr-alert').nativeElement.getAttribute('role');\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExportColumn.html":{"url":"interfaces/ExportColumn.html","title":"interface - ExportColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExportColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/data-exporter/data-exporter.component.ts\n        \n\n            \n                Description\n            \n            \n                Identifiers for each column that user is allowed to select\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        displayName\n                                \n                                \n                                        fieldName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Displayed in the list of columns. If there is no displayName, the default value is fieldName\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldName\n                                    \n                                \n                                \n                                    \n                                        fieldName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the field in the JSON that is returned and converted to a viewable format\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup } from '@angular/forms';\nimport { ClrDropdown } from '@clr/angular';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { CsvExporterService } from './csv-exporter.service';\n\n/**\n * Identifiers for each column that user is allowed to select\n */\nexport interface ExportColumn {\n    /**\n     * Displayed in the list of columns. If there is no displayName, the default value is fieldName\n     */\n    displayName?: string;\n    /**\n     * The name of the field in the JSON that is returned and converted to a viewable format\n     */\n    fieldName: string;\n}\n\nexport enum UserOptions {\n    selectAll = 'selectAll',\n    friendlyNames = 'friendlyNames',\n    sanitize = 'sanitize',\n}\n\n/**\n * Information passed to the caller so they can fetch the data\n */\nexport interface DataExportRequestEvent {\n    /**\n     * Call this to indicate a new value to be displayed in the progress indicator.\n     * @param progress A number from 0 to 1 indicating download progress. Passing -1 will make it an indeterminate\n     */\n    updateProgress: (progress: number) => void;\n\n    /**\n     * Call this when all records have been fetched to initiate the CSV creation.\n     * This should only be called once after all data fetching is finished\n     * @param records Records to be converted into a csv file\n     * @return a promise of the resulting CSV to indicate when this potentially lengthy process is over\n     */\n    exportData: (records: object[]) => Promise;\n\n    /**\n     * Columns selected by the user.\n     */\n    selectedColumns: ExportColumn[];\n}\n\n/**\n * A dialog to export data\n *\n *  - Allows the UI to select columns to be exported\n *  - Provides a progress indicator\n *  - Converts the data that is fetched by the caller into a CSV\n */\n@Component({\n    selector: 'vcd-data-exporter',\n    templateUrl: 'data-exporter.component.html',\n    styleUrls: ['./data-exporter.component.scss'],\n})\nexport class DataExporterComponent implements OnInit, OnDestroy {\n    constructor(private csvExporterService: CsvExporterService, private translationService: TranslationService) {}\n\n    @ViewChild(ClrDropdown) set columnDropdown(columnDropdown: ClrDropdown) {\n        if (!columnDropdown) {\n            return;\n        }\n        this.subscriptionTracker.subscribe(columnDropdown.toggleService.openChange, (opened) => {\n            this.isDropdownOpen = opened;\n        });\n    }\n\n    _columns: ExportColumn[] = [];\n\n    /**\n     * List of columns that can be exported, user may deselect some before sending the download request.\n     * Display name defaults to field name if there is no displayName\n     */\n    @Input()\n    set columns(cols: ExportColumn[]) {\n        this._columns = cols;\n        this.updateFieldNameMap(cols);\n    }\n\n    get columns(): ExportColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * The name of the file to be downloaded\n     */\n    @Input() fileName = 'data-export.csv';\n\n    /**\n     * Text for the Dialog Header\n     */\n    @Input()\n    dialogHeader: LazyString = this.translationService.translateAsync('vcd.cc.data-exporter.title');\n\n    /**\n     * Text for the cancel button.\n     */\n    @Input()\n    cancelText: LazyString = this.translationService.translateAsync('vcd.cc.cancel');\n\n    /**\n     * Text for the export all button.\n     */\n    @Input()\n    exportAllText: LazyString = this.translationService.translateAsync('vcd.cc.export.all');\n\n    /**\n     * Text for the select columns dropdown button.\n     */\n    @Input()\n    selectColumnsText: LazyString = this.translationService.translateAsync('vcd.cc.select.columns');\n\n    /**\n     * Text for the export button.\n     */\n    @Input()\n    exportText: LazyString = this.translationService.translateAsync('vcd.cc.export');\n\n    /**\n     * Text for the yes button.\n     */\n    @Input()\n    yesText: LazyString = this.translationService.translateAsync('vcd.cc.yes');\n\n    /**\n     * Text for the yes button.\n     */\n    @Input()\n    noText: LazyString = this.translationService.translateAsync('vcd.cc.no');\n\n    /**\n     * Text label that is next to the friendly field names checkbox.\n     */\n    @Input()\n    friendlyNamesCheckboxLabel: LazyString = this.translationService.translateAsync('vcd.cc.friendly.names.question');\n\n    /**\n     * Text the info message next to the friendly field names checkbox.\n     */\n    @Input()\n    friendlyNamesInfoMessage: LazyString = this.translationService.translateAsync('vcd.cc.friendly.names.info');\n\n    /**\n     * Text the hint message below the friendly field names checkbox.\n     */\n    @Input()\n    friendlyNamesHint: LazyString = this.translationService.translateAsync('vcd.cc.friendly.names.hint');\n\n    /**\n     * Text label that is next to the sanitize checkbox.\n     */\n    @Input()\n    sanitizeCheckboxLabel: LazyString = this.translationService.translateAsync('vcd.cc.sanitize.question');\n\n    /**\n     * Hint message that is below the sanitize checkbox.\n     */\n    @Input()\n    sanitizeCheckboxHint: LazyString = this.translationService.translateAsync('vcd.cc.sanitize.hint');\n\n    /**\n     * Text the info message next to the sanitize checkbox.\n     */\n    @Input()\n    sanitizeInfoMessage: LazyString = this.translationService.translateAsync('vcd.cc.sanitize.info');\n\n    /**\n     * The message that is displayed while the data is downloading.\n     */\n    @Input()\n    downloadingMessage: LazyString = this.translationService.translateAsync('vcd.cc.exporter.downloading');\n\n    /**\n     * The message that is displayed while the data is writing to file.\n     */\n    @Input()\n    writingMessage: LazyString = this.translationService.translateAsync('vcd.cc.exporter.writing');\n\n    /**\n     * Whether the dialog is open\n     */\n    @Input()\n    set open(value: boolean) {\n        this._open = value;\n        this.openChange.emit(value);\n    }\n    get open(): boolean {\n        return this._open;\n    }\n\n    private _open = false;\n    private subscriptionTracker = new SubscriptionTracker(this);\n\n    forceDropdownOpen = false;\n\n    /**\n     * Fires when {@link _open} changes. Its parameter indicates the new state.\n     */\n    @Output() openChange = new EventEmitter();\n\n    /**\n     * Called when the export is ready to be created\n     */\n    @Output() dataExportRequest = new EventEmitter();\n\n    /**\n     * True between the time {@link dataExportRequest} fires and {@link DataExportRequestEvent.exportData} is called\n     * or an error is thrown\n     */\n    get isRequestPending(): boolean {\n        return this._isRequestPending;\n    }\n    private _isRequestPending = false;\n\n    /**\n     * Number between 0-1, used for displaying the progress bar.\n     */\n    get progress(): number {\n        return this._progress;\n    }\n    private _progress = 0;\n\n    private fieldNameMap = new Map();\n\n    formGroup: FormGroup;\n\n    exportStage: LazyString;\n\n    optionsFormGroup = new FormGroup({\n        [UserOptions.selectAll]: new FormControl(true),\n        [UserOptions.friendlyNames]: new FormControl(true),\n        [UserOptions.sanitize]: new FormControl(true),\n    });\n\n    /**\n     * Says if the column dropdown is open.\n     */\n    isDropdownOpen = false;\n\n    onClickExport(): void {\n        this.exportStage = this.downloadingMessage;\n        this._isRequestPending = true;\n        this.dataExportRequest.emit({\n            exportData: this.exportData.bind(this),\n            updateProgress: this.updateProgress.bind(this),\n            selectedColumns: this.selectedColumns,\n        });\n    }\n\n    get selectAllControl(): FormControl {\n        return this.optionsFormGroup.get(UserOptions.selectAll) as FormControl;\n    }\n\n    get sanitizeControl(): FormControl {\n        return this.optionsFormGroup.get(UserOptions.sanitize) as FormControl;\n    }\n\n    get friendlyFieldsControl(): FormControl {\n        return this.optionsFormGroup.get(UserOptions.friendlyNames) as FormControl;\n    }\n\n    get isExportEnabled(): boolean {\n        if (this.isRequestPending) {\n            return false;\n        }\n        for (const column of this.columns) {\n            if (this.formGroup.controls[column.fieldName].value) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    get shouldShowBubbles(): boolean {\n        return !this.selectAllControl.value && !this.isDropdownOpen;\n    }\n\n    /**\n     * Gives a list of all the columns that are selected.\n     */\n    get selectedColumns(): ExportColumn[] {\n        return this.columns.filter((col) => this.formGroup.controls[col.fieldName].value);\n    }\n\n    /**\n     * Sets the selected value of the given column.\n     */\n    selectColumn(column: ExportColumn, selected: boolean): void {\n        this.formGroup.controls[column.fieldName].setValue(selected);\n    }\n\n    ngOnInit(): void {\n        const controls = this.columns.reduce((previousValue, currentValue) => {\n            previousValue[currentValue.fieldName] = new FormControl(true);\n            return previousValue;\n        }, {});\n        this.formGroup = new FormGroup(controls);\n        this.subscriptionTracker.subscribe(this.selectAllControl.valueChanges, (change) => {\n            if (change) {\n                for (const column of this.columns) {\n                    this.formGroup.controls[column.fieldName].setValue(true);\n                }\n            } else {\n                this.forceDropdownOpen = true;\n                this.isDropdownOpen = true;\n            }\n        });\n    }\n\n    ngOnDestroy(): void {}\n\n    private exportData(records: object[]): Promise {\n        if (!this.open) {\n            return;\n        }\n\n        const rows = [\n            // First row is the display names\n            Object.keys(records[0]).map((fieldName) =>\n                this.friendlyFieldsControl.value ? this.getDisplayNameForField(fieldName) : fieldName\n            ),\n            // Then the data\n            ...records.map((rec) => Object.keys(rec).map((key) => rec[key])),\n        ];\n        return this.downloadData(rows, this.sanitizeControl.value);\n    }\n\n    downloadData(data: any[][], shouldSanitize: boolean = false): Promise {\n        this.exportStage = this.writingMessage;\n        return new Promise((resolve) => {\n            // We need to setTimeout because we changed how the message should be displayed\n            // but we need to interrupt the current task to get the message to display\n            // We tried to use window.requestAnimationFrame, but this didn't work so we had to use\n            // setTimeout().\n            setTimeout(() => {\n                this._isRequestPending = false;\n                const csvFile = this.csvExporterService.createCsv(data, shouldSanitize);\n                this.csvExporterService.downloadCsvFile(csvFile, this.fileName);\n                this.open = false;\n                resolve(csvFile);\n            });\n        });\n    }\n\n    private updateProgress(progress: number): void {\n        this._progress = progress;\n    }\n\n    private getDisplayNameForField(fieldName: string): string {\n        if (this.fieldNameMap.has(fieldName)) {\n            const exportColumn = this.fieldNameMap.get(fieldName);\n            return this.getDisplayNameForColumn(exportColumn);\n        } else {\n            return fieldName;\n        }\n    }\n\n    getDisplayNameForColumn(col: ExportColumn): string {\n        return col.displayName || col.fieldName;\n    }\n\n    private updateFieldNameMap(cols: ExportColumn[]): void {\n        this.fieldNameMap = new Map(cols.map((col) => [col.fieldName, col]));\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilterBuilder.html":{"url":"classes/FilterBuilder.html","title":"class - FilterBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilterBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/filter-builder.ts\n        \n\n            \n                Description\n            \n            \n                Utility to reduce the verbosity required when creating complex query filter expressions.\nUsage:\nconst builder = new FilterBuilder();\nconst filter = builder\n          .is(\"isVappTemplate\").equalTo(true)\n          .and()\n          .is(\"vcd\").equalTo(vcdId)\n          .and().or(\n              builder.is(\"created\").before(userInputDate),\n              builder.is(\"uptime\").greaterThan(user)\n          );\nWill produce:\nisVappTemplate==true;vcd==some-urn-here;(created=lt=DATETIME,uptime=gt=3600000)\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentOperator\n                            \n                            \n                                    Private\n                                parent\n                            \n                            \n                                    Private\n                                result\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                after\n                            \n                            \n                                    Public\n                                all\n                            \n                            \n                                    Public\n                                and\n                            \n                            \n                                    Public\n                                any\n                            \n                            \n                                    Public\n                                before\n                            \n                            \n                                    Public\n                                betweenNumbers\n                            \n                            \n                                    Private\n                                buildPartial\n                            \n                            \n                                    Private\n                                clear\n                            \n                            \n                                    Private\n                                condition\n                            \n                            \n                                    Public\n                                equalTo\n                            \n                            \n                                    Public\n                                getString\n                            \n                            \n                                    Public\n                                greaterThan\n                            \n                            \n                                    Public\n                                greaterThanOrEqualTo\n                            \n                            \n                                    Public\n                                is\n                            \n                            \n                                    Public\n                                lessThan\n                            \n                            \n                                    Public\n                                lessThanOrEqualTo\n                            \n                            \n                                    Public\n                                notEqualTo\n                            \n                            \n                                    Public\n                                or\n                            \n                            \n                                    Public\n                                wrap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parent: FilterBuilder)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/filter-builder.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        FilterBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentOperator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/filter-builder.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FilterBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/filter-builder.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            result\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/filter-builder.ts:39\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            after\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    after(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:246\n                \n            \n\n\n            \n                \n                    Match a filter expression to be after a date\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            all\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    all(conditions: FilterBuilder[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:106\n                \n            \n\n\n            \n                \n                    Top level AND operator\n  conditions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                FilterBuilder[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            and\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    and(conditions: FilterBuilder[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:72\n                \n            \n\n\n            \n                \n                    Conjunct expressions\n  conditions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                FilterBuilder[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            any\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    any(conditions: FilterBuilder[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:160\n                \n            \n\n\n            \n                \n                    Top level OR operator\nconditions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                FilterBuilder[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            before\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    before(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:238\n                \n            \n\n\n            \n                \n                    Match a filter expression to be before a date\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            betweenNumbers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    betweenNumbers(values: number[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:256\n                \n            \n\n\n            \n                \n                    Match a filter expression to be between two numbers.\nLower limit is greater or equal and upper limit is less or equal.\nIf for either of the limit is not provided value, the limit is not included in the filter expression.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildPartial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildPartial()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:291\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:282\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            condition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    condition(operator: string, value: Primitives, moreValues: Primitives[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:270\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    operator\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                Primitives\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    moreValues\n                                    \n                                                Primitives[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            equalTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    equalTo(value: Primitives, moreValues: Primitives[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:190\n                \n            \n\n\n            \n                \n                    Match a filter expression to be equal to a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Primitives\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    moreValues\n                                    \n                                                Primitives[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getString()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:62\n                \n            \n\n\n            \n                \n                    Create a string representing the filter parameter to be used in a query\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the filter expression\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            greaterThan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    greaterThan(value: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:222\n                \n            \n\n\n            \n                \n                    Match a filter expression to be greater than a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            greaterThanOrEqualTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    greaterThanOrEqualTo(value: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:230\n                \n            \n\n\n            \n                \n                    Match a filter expression to be greater than or equal to a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            is\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    is(property: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:52\n                \n            \n\n\n            \n                \n                    Initialize a filter expression\n  property\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The created FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            lessThan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    lessThan(value: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:206\n                \n            \n\n\n            \n                \n                    Match a filter expression to be less than a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            lessThanOrEqualTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    lessThanOrEqualTo(value: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:214\n                \n            \n\n\n            \n                \n                    Match a filter expression to be less than or equal to a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            notEqualTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    notEqualTo(value: Primitives, moreValues: Primitives[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:198\n                \n            \n\n\n            \n                \n                    Match a filter expression to be different to a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Primitives\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    moreValues\n                                    \n                                                Primitives[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            or\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    or(conditions: FilterBuilder[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:126\n                \n            \n\n\n            \n                \n                    Disjunct expressions\n  conditions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                FilterBuilder[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            wrap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    wrap()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:180\n                \n            \n\n\n            \n                \n                    Wrap the current expression in ()\n\n\n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export const Operators: { [key: string]: string } = {\n    OR: ',',\n    AND: ';',\n    GT: '=gt=',\n    GE: '=ge=',\n    LT: '=lt=',\n    LE: '=le=',\n    EQ: '==',\n    NEQ: '!=',\n};\n\nexport type Primitives = boolean | string | number;\n\n/**\n * Utility to reduce the verbosity required when creating complex query filter expressions.\n *\n * Usage:\n * const builder = new FilterBuilder();\n * const filter = builder\n *          .is(\"isVappTemplate\").equalTo(true)\n *          .and()\n *          .is(\"vcd\").equalTo(vcdId)\n *          .and().or(\n *              builder.is(\"created\").before(userInputDate),\n *              builder.is(\"uptime\").greaterThan(user)\n *          );\n *\n * Will produce:\n * isVappTemplate==true;vcd==some-urn-here;(created=lt=DATETIME,uptime=gt=3600000)\n */\nexport class FilterBuilder {\n    private result = '';\n    private parent: FilterBuilder;\n    private currentOperator: string;\n\n    constructor(parent: FilterBuilder = null) {\n        this.parent = parent;\n    }\n\n    /**\n     * Initialize a filter expression\n     *  property\n     * @returns The created FilterBuilder instance\n     */\n    public is(property: string): FilterBuilder {\n        const fb = new FilterBuilder(this);\n        fb.result = property;\n        return fb;\n    }\n\n    /**\n     * Create a string representing the filter parameter to be used in a query\n     * @returns the filter expression\n     */\n    public getString(): string {\n        const query = this.buildPartial();\n        return query;\n    }\n\n    /**\n     * Conjunct expressions\n     *  conditions\n     * @returns The FilterBuilder instance\n     */\n    public and(...conditions: FilterBuilder[]): FilterBuilder {\n        if (!conditions.length) {\n            if (\n                this.currentOperator === Operators.OR ||\n                (this.parent && this.parent.currentOperator === Operators.OR)\n            ) {\n                if (this.parent) {\n                    this.parent.result = '(' + this.parent.result;\n                    this.result += ')';\n                } else {\n                    this.wrap();\n                }\n                this.currentOperator = Operators.AND;\n            }\n            this.result += Operators.AND;\n        } else {\n            this.result += '(';\n            const first = conditions.shift();\n            let partial = first.buildPartial();\n\n            conditions.forEach(condition => {\n                partial += Operators.AND + condition.buildPartial();\n            });\n\n            this.result += partial + ')';\n        }\n        return this;\n    }\n\n    /**\n     * Top level AND operator\n     *  conditions\n     * @returns The FilterBuilder instance\n     */\n    public all(...conditions: FilterBuilder[]): FilterBuilder {\n        if (conditions.length) {\n            const first = conditions.shift();\n            let partial = first.buildPartial();\n\n            conditions.forEach(condition => {\n                partial += Operators.AND + condition.buildPartial();\n            });\n\n            this.result += partial;\n        }\n\n        return this;\n    }\n\n    /**\n     * Disjunct expressions\n     *  conditions\n     * @returns The FilterBuilder instance\n     */\n    public or(...conditions: FilterBuilder[]): FilterBuilder {\n        if (!conditions.length) {\n            if (\n                this.currentOperator === Operators.AND ||\n                (this.parent && this.parent.currentOperator === Operators.AND)\n            ) {\n                if (this.parent) {\n                    this.parent.result = '(' + this.parent.result;\n                    this.result += ')';\n                } else {\n                    this.wrap();\n                }\n                this.currentOperator = Operators.OR;\n            }\n            this.result += Operators.OR;\n        } else {\n            this.result += '(';\n            const first = conditions.shift();\n            let partial = first.buildPartial();\n\n            conditions.forEach(condition => {\n                partial += Operators.OR + condition.buildPartial();\n            });\n\n            this.result += partial + ')';\n        }\n        return this;\n    }\n\n    /**\n     * Top level OR operator\n     * conditions\n     * @returns The FilterBuilder instance\n     */\n    public any(...conditions: FilterBuilder[]): FilterBuilder {\n        if (conditions.length) {\n            const first = conditions.shift();\n            let partial = first.buildPartial();\n            first.clear();\n\n            conditions.forEach(condition => {\n                partial += Operators.OR + condition.buildPartial();\n                condition.clear();\n            });\n            this.result += partial;\n        }\n\n        return this;\n    }\n\n    /**\n     * Wrap the current expression in ()\n     * @returns The FilterBuilder instance\n     */\n    public wrap(): FilterBuilder {\n        this.result = '(' + this.result + ')';\n        this.currentOperator = null;\n        return this;\n    }\n\n    /**\n     * Match a filter expression to be equal to a value\n     * @returns The FilterBuilder instance\n     */\n    public equalTo(value: Primitives, ...moreValues: Primitives[]): FilterBuilder {\n        return this.condition(Operators.EQ, value, ...moreValues);\n    }\n\n    /**\n     * Match a filter expression to be different to a value\n     * @returns The FilterBuilder instance\n     */\n    public notEqualTo(value: Primitives, ...moreValues: Primitives[]): FilterBuilder {\n        return this.condition(Operators.NEQ, value, ...moreValues);\n    }\n\n    /**\n     * Match a filter expression to be less than a value\n     * @returns The FilterBuilder instance\n     */\n    public lessThan(value: number): FilterBuilder {\n        return this.condition(Operators.LT, value);\n    }\n\n    /**\n     * Match a filter expression to be less than or equal to a value\n     * @returns The FilterBuilder instance\n     */\n    public lessThanOrEqualTo(value: number): FilterBuilder {\n        return this.condition(Operators.LE, value);\n    }\n\n    /**\n     * Match a filter expression to be greater than a value\n     * @returns The FilterBuilder instance\n     */\n    public greaterThan(value: number): FilterBuilder {\n        return this.condition(Operators.GT, value);\n    }\n\n    /**\n     * Match a filter expression to be greater than or equal to a value\n     * @returns The FilterBuilder instance\n     */\n    public greaterThanOrEqualTo(value: number): FilterBuilder {\n        return this.condition(Operators.GE, value);\n    }\n\n    /**\n     * Match a filter expression to be before a date\n     * @returns The FilterBuilder instance\n     */\n    public before(date: Date): FilterBuilder {\n        return this.condition(Operators.LT, date.toISOString());\n    }\n\n    /**\n     * Match a filter expression to be after a date\n     * @returns The FilterBuilder instance\n     */\n    public after(date: Date): FilterBuilder {\n        return this.condition(Operators.GT, date.toISOString());\n    }\n\n    /**\n     * Match a filter expression to be between two numbers.\n     * Lower limit is greater or equal and upper limit is less or equal.\n     * If for either of the limit is not provided value, the limit is not included in the filter expression.\n     * @returns The FilterBuilder instance\n     */\n    public betweenNumbers(values: number[]): FilterBuilder {\n        const builders: FilterBuilder[] = [];\n\n        if (typeof values[0] === 'number') {\n            builders.push(new FilterBuilder().is(this.result).condition(Operators.GE, values[0]));\n        }\n\n        if (typeof values[1] === 'number') {\n            builders.push(new FilterBuilder().is(this.result).condition(Operators.LE, values[1]));\n        }\n\n        return new FilterBuilder().is('').and(...builders);\n    }\n\n    private condition(operator: string, value: Primitives, ...moreValues: Primitives[]): FilterBuilder {\n        const name = this.result;\n        this.result += (operator + value) as string;\n        if (moreValues.length) {\n            moreValues.forEach(val => {\n                this.result += (',' + name + operator + val) as string;\n            });\n            this.currentOperator = Operators.OR;\n        }\n        return this;\n    }\n\n    private clear(): void {\n        this.result = '';\n        this.currentOperator = '';\n        if (this.parent) {\n            this.parent.clear();\n            this.parent = null;\n        }\n    }\n\n    private buildPartial(): string {\n        if (this.parent) {\n            return `${this.parent.buildPartial()}${this.result}`;\n        } else {\n            return this.result;\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterConfig.html":{"url":"interfaces/FilterConfig.html","title":"interface - FilterConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FilterConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/filters/datagrid-filter.ts\n        \n\n            \n                Description\n            \n            \n                Properties required by all the grid filters\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        queryField\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        queryField\n                                    \n                                \n                                \n                                    \n                                        queryField:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used as a query field for server side filtering of the grid column\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     V\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     V\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Value with which grid data can be filtered before initially being rendered\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { ClrDatagridFilterInterface } from '@clr/angular/data/datagrid/interfaces/filter.interface';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { SubscriptionTracker } from '../../common/subscription';\nimport {\n    ComponentRenderer,\n    ComponentRendererConstructor,\n    ComponentRendererSpec,\n} from '../interfaces/component-renderer.interface';\n\n/**\n * Number of milliseconds delayed before emitting the filter has changed observable\n */\nexport const DEBOUNCE_TIME_FOR_GRID_FILTER_CHANGES = 300;\n\n/**\n * Properties required by all the grid filters\n */\nexport interface FilterConfig {\n    /**\n     * Used as a query field for server side filtering of the grid column\n     */\n    queryField?: string;\n\n    /**\n     * Value with which grid data can be filtered before initially being rendered\n     */\n    value?: V;\n}\n\n/**\n * Renderer specification of a column that contains component type to be rendered in a filter widget and configuration for that\n * component. used by the {@link ComponentRendererOutletDirective}\n */\nexport interface FilterRendererSpec extends ComponentRendererSpec {\n    /**\n     *  Config object required for the configuration of component that will be rendered in the column filter widget\n     */\n    config: C;\n}\n\n/**\n * Extended by filter components used in {@link DatagridComponent}. Those components can only be used inside a\n * clr-dg-filter component and are dynamically rendered by {@link ComponentRendererOutletDirective} using\n * {@link GridColumn.filter}\n * V is the type of filter input value that is passed into setValue method\n * C extends FilterConfig is configuration of a filter that contains queryField and a value of type V\n */\nexport abstract class DatagridFilter>\n    implements OnInit, OnDestroy, ClrDatagridFilterInterface, ComponentRenderer {\n    formGroup = this.createFormGroup();\n    private subscriptionTracker = new SubscriptionTracker(this);\n\n    protected constructor(filterContainer: ClrDatagridFilter) {\n        filterContainer.setFilter(this);\n    }\n\n    /**\n     * Sets the configuration needed for a filter UI widget and also it's value.\n     * Assigned from {@link ComponentRendererOutletDirective#assignValue} after the filter component is created.\n     * Used by the getValue method in sub classes to format the FIQL string output.\n     */\n    protected _config: C;\n    @Input() set config(val: C) {\n        this.onBeforeSetConfig(val);\n        this._config = val;\n        if (this._config.value) {\n            this.setValue(this._config.value);\n        }\n    }\n\n    get config(): C {\n        return this._config;\n    }\n\n    /**\n     * Emits whenever a filter form inputs changes\n     */\n    changes = new Subject();\n\n    ngOnInit(): void {\n        const obs = this.getDebounceTimeMs()\n            ? this.formGroup.valueChanges.pipe(debounceTime(this.getDebounceTimeMs()))\n            : this.formGroup.valueChanges;\n        this.subscriptionTracker.subscribe(obs, () => this.changes.next());\n    }\n\n    /**\n     * To override the default delay time for emission of changes\n     */\n    protected getDebounceTimeMs(): number {\n        return DEBOUNCE_TIME_FOR_GRID_FILTER_CHANGES;\n    }\n\n    /**\n     * Called inside setter of {@link DatagridFilter#config} and Defined in the derived classes to perform some logic before\n     * assigning the UI widget configuration and setting a value\n     */\n    protected onBeforeSetConfig(config: C): void {}\n\n    /**\n     * To initialize the {@link formGroup} from sub classes\n     */\n    abstract createFormGroup(): FormGroup;\n\n    /**\n     * Used for assigning a value to a filter from outside\n     */\n    abstract setValue(value: V): void;\n\n    /**\n     * For getting the filter UI widget values in FIQL formatted string\n     */\n    abstract getValue(): string;\n\n    /**\n     * Return true if the filter is currently activated (e.g. a value is provided)\n     */\n    abstract isActive(): boolean;\n\n    /**\n     * @inheritdoc\n     */\n    abstract ngOnDestroy(): void;\n\n    /**\n     * Required by Clarity but ignored since we don't support client side filtering\n     */\n    accepts(): boolean {\n        return true;\n    }\n\n    /**\n     * @see unit tests of sub class {@link DatagridStringFilterComponent} for unit tests of following methods\n     */\n    /**\n     * Used in the {@link #getValue} method to make it part of the FIQL formatted string\n     */\n    get queryField(): string {\n        if (this._config) {\n            if (this._config.queryField) {\n                return this._config.queryField;\n            }\n            throw Error('Query field is not specified');\n        }\n    }\n}\n\n/**\n * Utility function to enforce type safety on config object of components of {@link ComponentRenderer} type. Used for creating\n * component renderer specifications of {@link FilterRendererSpec} type\n *\n * Example usage:\n * const gridColumn = {\n *   filterRendererSpec: FilterComponentRendererSpec({type: DatagridNumericFilterComponent, config: {value: [1, 2]}}),\n * }\n *\n * In the above examples these methods help in making sure that:\n * - Value \"v\" of the config property is of [number, number] type for gridColumn.filterRendererSpec\n *\n * #Note: 'C & {}' below makes the inference site for C be the constructor type from the first argument.\n * {@link https://stackoverflow.com/questions/59055154/typescript-generics-infer-type-from-the-type-of-function-arguments}\n */\nexport function FilterComponentRendererSpec(componentRendererSpec: {\n    type: ComponentRendererConstructor;\n    config: C & {};\n}): FilterRendererSpec {\n    return componentRendererSpec;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterRendererSpec.html":{"url":"interfaces/FilterRendererSpec.html","title":"interface - FilterRendererSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FilterRendererSpec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/filters/datagrid-filter.ts\n        \n\n            \n                Description\n            \n            \n                Renderer specification of a column that contains component type to be rendered in a filter widget and configuration for that\ncomponent. used by the ComponentRendererOutletDirective\n\n            \n\n            \n                Extends\n            \n            \n                        ComponentRendererSpec\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     C\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     C\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Config object required for the configuration of component that will be rendered in the column filter widget\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { ClrDatagridFilterInterface } from '@clr/angular/data/datagrid/interfaces/filter.interface';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { SubscriptionTracker } from '../../common/subscription';\nimport {\n    ComponentRenderer,\n    ComponentRendererConstructor,\n    ComponentRendererSpec,\n} from '../interfaces/component-renderer.interface';\n\n/**\n * Number of milliseconds delayed before emitting the filter has changed observable\n */\nexport const DEBOUNCE_TIME_FOR_GRID_FILTER_CHANGES = 300;\n\n/**\n * Properties required by all the grid filters\n */\nexport interface FilterConfig {\n    /**\n     * Used as a query field for server side filtering of the grid column\n     */\n    queryField?: string;\n\n    /**\n     * Value with which grid data can be filtered before initially being rendered\n     */\n    value?: V;\n}\n\n/**\n * Renderer specification of a column that contains component type to be rendered in a filter widget and configuration for that\n * component. used by the {@link ComponentRendererOutletDirective}\n */\nexport interface FilterRendererSpec extends ComponentRendererSpec {\n    /**\n     *  Config object required for the configuration of component that will be rendered in the column filter widget\n     */\n    config: C;\n}\n\n/**\n * Extended by filter components used in {@link DatagridComponent}. Those components can only be used inside a\n * clr-dg-filter component and are dynamically rendered by {@link ComponentRendererOutletDirective} using\n * {@link GridColumn.filter}\n * V is the type of filter input value that is passed into setValue method\n * C extends FilterConfig is configuration of a filter that contains queryField and a value of type V\n */\nexport abstract class DatagridFilter>\n    implements OnInit, OnDestroy, ClrDatagridFilterInterface, ComponentRenderer {\n    formGroup = this.createFormGroup();\n    private subscriptionTracker = new SubscriptionTracker(this);\n\n    protected constructor(filterContainer: ClrDatagridFilter) {\n        filterContainer.setFilter(this);\n    }\n\n    /**\n     * Sets the configuration needed for a filter UI widget and also it's value.\n     * Assigned from {@link ComponentRendererOutletDirective#assignValue} after the filter component is created.\n     * Used by the getValue method in sub classes to format the FIQL string output.\n     */\n    protected _config: C;\n    @Input() set config(val: C) {\n        this.onBeforeSetConfig(val);\n        this._config = val;\n        if (this._config.value) {\n            this.setValue(this._config.value);\n        }\n    }\n\n    get config(): C {\n        return this._config;\n    }\n\n    /**\n     * Emits whenever a filter form inputs changes\n     */\n    changes = new Subject();\n\n    ngOnInit(): void {\n        const obs = this.getDebounceTimeMs()\n            ? this.formGroup.valueChanges.pipe(debounceTime(this.getDebounceTimeMs()))\n            : this.formGroup.valueChanges;\n        this.subscriptionTracker.subscribe(obs, () => this.changes.next());\n    }\n\n    /**\n     * To override the default delay time for emission of changes\n     */\n    protected getDebounceTimeMs(): number {\n        return DEBOUNCE_TIME_FOR_GRID_FILTER_CHANGES;\n    }\n\n    /**\n     * Called inside setter of {@link DatagridFilter#config} and Defined in the derived classes to perform some logic before\n     * assigning the UI widget configuration and setting a value\n     */\n    protected onBeforeSetConfig(config: C): void {}\n\n    /**\n     * To initialize the {@link formGroup} from sub classes\n     */\n    abstract createFormGroup(): FormGroup;\n\n    /**\n     * Used for assigning a value to a filter from outside\n     */\n    abstract setValue(value: V): void;\n\n    /**\n     * For getting the filter UI widget values in FIQL formatted string\n     */\n    abstract getValue(): string;\n\n    /**\n     * Return true if the filter is currently activated (e.g. a value is provided)\n     */\n    abstract isActive(): boolean;\n\n    /**\n     * @inheritdoc\n     */\n    abstract ngOnDestroy(): void;\n\n    /**\n     * Required by Clarity but ignored since we don't support client side filtering\n     */\n    accepts(): boolean {\n        return true;\n    }\n\n    /**\n     * @see unit tests of sub class {@link DatagridStringFilterComponent} for unit tests of following methods\n     */\n    /**\n     * Used in the {@link #getValue} method to make it part of the FIQL formatted string\n     */\n    get queryField(): string {\n        if (this._config) {\n            if (this._config.queryField) {\n                return this._config.queryField;\n            }\n            throw Error('Query field is not specified');\n        }\n    }\n}\n\n/**\n * Utility function to enforce type safety on config object of components of {@link ComponentRenderer} type. Used for creating\n * component renderer specifications of {@link FilterRendererSpec} type\n *\n * Example usage:\n * const gridColumn = {\n *   filterRendererSpec: FilterComponentRendererSpec({type: DatagridNumericFilterComponent, config: {value: [1, 2]}}),\n * }\n *\n * In the above examples these methods help in making sure that:\n * - Value \"v\" of the config property is of [number, number] type for gridColumn.filterRendererSpec\n *\n * #Note: 'C & {}' below makes the inference site for C be the constructor type from the first argument.\n * {@link https://stackoverflow.com/questions/59055154/typescript-generics-infer-type-from-the-type-of-function-arguments}\n */\nexport function FilterComponentRendererSpec(componentRendererSpec: {\n    type: ComponentRendererConstructor;\n    config: C & {};\n}): FilterRendererSpec {\n    return componentRendererSpec;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterTestHostComponent.html":{"url":"components/FilterTestHostComponent.html","title":"component - FilterTestHostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterTestHostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/utils/test/datagrid/filter-utils.ts\n\n\n    \n        Description\n    \n    \n        TestHostComponent that has only single column for filter testing.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                column\n                            \n                            \n                                    Static\n                                filterColumn\n                            \n                            \n                                gridData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setFilter\n                        \n                        \n                    \n                \n            \n            \n                \nsetFilter(filterType: Type>, finder: AngularWidgetObjectFinder, config: C)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/datagrid/filter-utils.ts:130\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        V\n                        C\n                    \n                \n            \n\n            \n                \n                    Creates the filterRendererSpec and adds it to the grid column above\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterType\n                                    \n                                                Type>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    finder\n                                    \n                                                AngularWidgetObjectFinder\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            column\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FilterTestHostComponent.filterColumn\n\n                        \n                    \n                    \n                        \n                            Default value : FilterTestHostComponent.filterColumn\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/datagrid/filter-utils.ts:121\n                            \n                        \n\n                \n                    \n                        Used inside the html template\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            filterColumn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridColumn\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        displayName: 'Filter',\n        renderer: 'Does not matter',\n        queryFieldName: 'queryFieldName',\n    }\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/datagrid/filter-utils.ts:113\n                            \n                        \n\n                \n                    \n                        Made static so that it can be called in filter unit tests to make sure the FIQL string outputs have the queryFieldName\nvalue given in the column definition below\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     GridDataFetchResult\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        items: [],\n    }\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/datagrid/filter-utils.ts:123\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Type } from '@angular/core';\nimport { TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport { MockTranslationService, TranslationService } from '@vcd/i18n';\nimport {\n    DatagridFilter,\n    FilterComponentRendererSpec,\n    GridColumn,\n    GridDataFetchResult,\n    VcdDatagridModule,\n} from '../../../datagrid';\nimport { MockRecord } from '../../../datagrid/mock-data';\nimport { IdGenerator } from '../../id-generator/id-generator';\nimport { AngularWidgetObjectFinder } from '../widget-object/angular-widget-finder';\nimport { TestElement } from '../widget-object/angular-widget-object';\nimport { ClrDatagridWidgetObject } from './datagrid.wo';\n\nfunction getFilter(element: TestElement, filterType: Type>): DatagridFilter {\n    return element.parents('body').queryDirective(filterType);\n}\n\n/**\n * Creates a testing module with {@link FilterTestHostComponent} that has only single column for filter testing\n */\nasync function configureTestingModule(): Promise {\n    await TestBed.configureTestingModule({\n        imports: [VcdDatagridModule],\n        declarations: [FilterTestHostComponent],\n        providers: [\n            {\n                provide: TranslationService,\n                useClass: MockTranslationService,\n            },\n            {\n                provide: IdGenerator,\n                useValue: new IdGenerator('vcd-id'),\n            },\n        ],\n    }).compileComponents();\n}\n\n/**\n * Used inside beforeEach functions of filter tests and it does the following:\n * - Creates a testing module with {@link FilterTestHostComponent} that has only single column for filter testing\n * - Sets the filter on the column of host component({@link FilterTestHostComponent})\n * - Opens the filter and returns a component instance of the filter created\n *\n * @param filterType to be created in the test host component grid's column\n * @param config The configuration for the filter\n *\n * Example:\n * beforeEach(function(this: HasDgStringFilter): void {\n *     this.filter = createDatagridFilterTestHelper(\n *         DatagridStringFilterComponent,\n *         { wildCardPosition: WildCardPosition.END, value: 'testInput-1' }\n *     );\n * });\n */\nexport function createDatagridFilterTestHelper(\n    filterType: Type>,\n    config?: C\n): DatagridFilter {\n    configureTestingModule();\n\n    // Add the filter to grid column\n    const finder = new AngularWidgetObjectFinder(FilterTestHostComponent);\n    const grid = finder.find(ClrDatagridWidgetObject);\n\n    finder.hostComponent.setFilter(filterType, finder, config || ({} as C));\n    grid.clrDatagrid.fixture.detectChanges();\n    grid.getFilterToggle().click();\n    return getFilter(grid.clrDatagrid, filterType);\n}\n\n/**\n * Same as the above function but used for tests which need finder\n */\nexport function createDatagridFilterTestHelperWithFinder(\n    filterType: Type>,\n    config?: C\n): { finder: AngularWidgetObjectFinder; filter: DatagridFilter } {\n    configureTestingModule();\n\n    // Add the filter to grid column\n    const finder = new AngularWidgetObjectFinder(FilterTestHostComponent);\n    const grid = finder.find(ClrDatagridWidgetObject);\n    finder.hostComponent.setFilter(filterType, finder, config || ({} as C));\n    grid.clrDatagrid.fixture.detectChanges();\n    grid.getFilterToggle().click();\n\n    return {\n        finder,\n        filter: getFilter(grid.clrDatagrid, filterType),\n    };\n}\n\n/**\n * TestHostComponent that has only single column for filter testing.\n */\n@Component({\n    template: `  `,\n})\nexport class FilterTestHostComponent {\n    /**\n     * Made static so that it can be called in filter unit tests to make sure the FIQL string outputs have the queryFieldName\n     * value given in the column definition below\n     */\n    static filterColumn: GridColumn = {\n        displayName: 'Filter',\n        renderer: 'Does not matter',\n        queryFieldName: 'queryFieldName',\n    };\n    /**\n     * Used inside the html template\n     */\n    column = FilterTestHostComponent.filterColumn;\n\n    gridData: GridDataFetchResult = {\n        items: [],\n    };\n\n    /**\n     * Creates the filterRendererSpec and adds it to the grid column above\n     */\n    setFilter(filterType: Type>, finder: AngularWidgetObjectFinder, config: C): void {\n        this.column.filter = FilterComponentRendererSpec({ type: filterType, config });\n        finder.detectChanges();\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'FilterTestHostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindParams.html":{"url":"interfaces/FindParams.html","title":"interface - FindParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FindParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object.ts\n        \n\n            \n                Description\n            \n            \n                Arguments for WidgetFinder and WidgetFinder\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        ancestor\n                                \n                                \n                                            Optional\n                                        className\n                                \n                                \n                                        woConstructor\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ancestor\n                                    \n                                \n                                \n                                    \n                                        ancestor:         DebugElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DebugElement\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If provided, search starts from this container. It defaults to the fixture's root debugElement\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional CSS class name that can be used when there could be multiple instances of the object within the\nfixture tree\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        woConstructor\n                                    \n                                \n                                \n                                    \n                                        woConstructor:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The constructor of the widget to be found\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { DebugElement, Type } from '@angular/core';\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\n\n/**\n * An implementation of the page object pattern, but applied to widgets, since they can be reused on multiple pages.\n *\n * The main purpose for the wrapper are providing access to the internals of a widget avoiding duplication of code that\n * queries the internals of a component from a test.\n *\n * ## Subclass Rules\n *\n * - Methods exposed by subclasses should not expose HTMLElements or DebugElements directly. That would encourage\n * callers to query it from the outside creating potential duplicate querying code and abstraction leaks.\n *  - Subclasses also should not have testing assertions. They should only provide the state and the calling test can\n * assert code on its own.\n *\n * `T` is the type of the JS/TS object being wrapped\n *\n * It is recommended that files for implementations be named with a `.wo.ts` extension\n */\nexport abstract class WidgetObject {\n    /**\n     *\n     * Constructor should only be called directly if you are directly instantiating the widget being wrapped (T). If you\n     * need to find a widget within the tree, you should use {@link find}.\n     *\n     * @param component The component instance being managed. Whenever possible, we should access the component's API.\n     * @param root The root element (host) for the component instance. We typically prefer to interact with the\n     * component but there are times when we must check the DOM.\n     * @param fixture The test fixture, so we can call {@link ComponentFixture#detectChanges} after something that\n     * requires re-rendering of the DOM.\n     */\n    constructor(\n        protected fixture: ComponentFixture,\n        protected root: DebugElement = fixture.debugElement,\n        public component: T = fixture.componentInstance\n    ) {}\n\n    detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Finds first element within this widget matching the given selector\n     * @param selector What to search for\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n    protected findElement(selector: string | Type, parent: DebugElement = this.root): DebugElement {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.query(query);\n    }\n\n    /**\n     * Same as {@link findElement} but returns all elements\n     */\n    protected findElements(selector: string | Type, parent: DebugElement = this.root): DebugElement[] {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.queryAll(query);\n    }\n\n    /**\n     * Clicks an element and detects changes so the DOM is immediately updated\n     * @param cssSelector Pass this in if you want to click a specific element. If not passed in, the entire node will\n     * receive the click event\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected click(cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.click();\n        this.detectChanges();\n    }\n\n    /**\n     * Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\n     * found by the {@param cssSelector} within the provided {@param parent} or the current root element.\n     * Setting the event properties is done with `Object.defineProperty` on the created event. This allows setting\n     * properties like `which` that is deprecated and cannot be set with the native approach of creating keyboard event.\n     * @param eventType The keyboard event type like 'keyup', 'keydown', 'keypress'\n     * @param eventProperties properties of the event like `code`, `key` etc.\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected sendKeyboardEvent(\n        eventType,\n        eventProperties: { [name: string]: unknown },\n        cssSelector?: string,\n        parent: DebugElement = this.root\n    ): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        // Create keyboard event that bubbles up the chain\n        const event = new KeyboardEvent(eventType, { bubbles: true });\n        // Use `Object.defineProperty` in order to be able to set even deprecated, readonly properties like `which`\n        Object.keys(eventProperties).forEach((key) => {\n            Object.defineProperty(event, key, { value: eventProperties[key] });\n        });\n        nativeElement.dispatchEvent(event);\n        this.detectChanges();\n    }\n\n    /**\n     * Sets the value of an input element or textarea element\n     * @param value the value that the element should display\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected setInputValue(value: string | number, cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLInputElement | HTMLTextAreaElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.value = String(value);\n        nativeElement.dispatchEvent(new Event('input'));\n        this.detectChanges();\n    }\n\n    /**\n     * Returns text content of this widget\n     * If the element cannot be found, gives empty string.\n     * @param cssSelector Pass this in if you want to retrieve text for a specific element within this widget.\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n\n    protected getText(cssSelector: string, parent: DebugElement = this.root): string {\n        const element = this.findElement(cssSelector, parent);\n        return element ? this.getNodeText(element) : '';\n    }\n\n    /**\n     * Same as {@link getText} but return the text for all matching nodes\n     */\n    protected getTexts(cssSelector: string): string[] {\n        return this.findElements(cssSelector).map((el) => this.getNodeText(el));\n    }\n\n    protected getNodeText(el: DebugElement): string {\n        // The || '' is because textContent could technically be null when passed in the document\n        // element object. We know that cannot be pased in here, so we ignore it for coverage\n        // but we still need the line there to make strictNullChecks work\n        return el.nativeElement.textContent.trim() || /* istanbul ignore next */ '';\n    }\n}\n\n/**\n * Subclasses should implement the FindableWidget interface so they can be found with {@link WidgetFinder}\n *\n * ## Note\n * This is done by creating a static property `tagName`on your subclass, not a regular instance, since this\n * interface represents a constructor for a {@link WidgetObject}, not an instance.\n */\nexport interface FindableWidget extends Type {\n    tagName: string;\n}\n\n/**\n * Arguments for {@link WidgetFinder#findWidgets} and {@link WidgetFinder#find}\n */\nexport interface FindParams {\n    /**\n     * The constructor of the widget to be found\n     */\n    woConstructor: T;\n    /**\n     * If provided, search starts from this container. It defaults to the fixture's root debugElement\n     */\n    ancestor?: DebugElement;\n    /**\n     * Optional CSS class name that can be used when there could be multiple instances of the object within the\n     * fixture tree\n     */\n    className?: string;\n}\n\n/**\n * @deprecated Finds instances that implement {@link FindableWidget}\n * H is the host component's type. This finder is only for old unit tests.\n * Please use AngularWidgetObjectFinder instead.\n */\nexport class WidgetFinder {\n    /**\n     * We don't care or could possibly know the type of fixture\n     */\n    private fixture: ComponentFixture;\n\n    /**\n     * If you need direct access to manipulate the host\n     */\n    public hostComponent: H;\n\n    /**\n     * @param componentConstructor The host component to be created as the root of the tests's fixture\n     */\n    constructor(componentConstructor: Type) {\n        this.fixture = TestBed.createComponent(componentConstructor);\n        this.hostComponent = this.fixture.componentInstance;\n    }\n\n    /**\n     * Finds widgets within a fixture\n     * @return A Potentially empty list of widgets matching the given specs\n     */\n    public findWidgets>(\n        params: FindParams | T,\n        parent?: DebugElement\n    ): InstanceType[] {\n        const defaults = { ancestor: this.fixture.debugElement, className: '' };\n        const { woConstructor, ancestor, className } = isFindParamsObject(params)\n            ? { ...defaults, ...params }\n            : { ...defaults, woConstructor: params };\n\n        let query = woConstructor.tagName;\n        if (className) {\n            query += `.${className}`;\n        }\n        const componentRoots = (parent ? parent : ancestor).queryAll(By.css(query));\n        const widgets = componentRoots.map(\n            // Typescript is not able to infer it correctly as the subclass but we know for sure\n            (root) => new woConstructor(this.fixture, root, root.componentInstance) as InstanceType\n        );\n        return widgets;\n    }\n\n    /**\n     * Finds a single widget object\n     * @throws An error if the widget is not found or if there are multiple instances\n     */\n    public find>(params: FindParams | T): InstanceType {\n        const widgets = this.findWidgets(params);\n        const tagName = isFindParamsObject(params) ? params.woConstructor.tagName : params.tagName;\n        if (widgets.length === 0) {\n            throw Error(`Did not find a `);\n        }\n        if (widgets.length > 1) {\n            throw Error(`Expected to find a single  but found ${widgets.length}`);\n        }\n        return widgets[0] as InstanceType;\n    }\n\n    public detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n}\n\nexport function isFindParamsObject(params: FindParams | T): params is FindParams {\n    return !!(params as FindParams).woConstructor;\n}\n/**\n * Can be used in tests that use `this` to share a finder with before/AfterEach instead of leaky closures\n */\nexport interface HasFinder {\n    finder: WidgetFinder;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindableWidget.html":{"url":"interfaces/FindableWidget.html","title":"interface - FindableWidget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FindableWidget\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object.ts\n        \n\n            \n                Description\n            \n            \n                Subclasses should implement the FindableWidget interface so they can be found with WidgetFinder\nNote\nThis is done by creating a static property tagNameon your subclass, not a regular instance, since this\ninterface represents a constructor for a WidgetObject, not an instance.\n\n            \n\n            \n                Extends\n            \n            \n                        Type\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        tagName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tagName\n                                    \n                                \n                                \n                                    \n                                        tagName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DebugElement, Type } from '@angular/core';\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\n\n/**\n * An implementation of the page object pattern, but applied to widgets, since they can be reused on multiple pages.\n *\n * The main purpose for the wrapper are providing access to the internals of a widget avoiding duplication of code that\n * queries the internals of a component from a test.\n *\n * ## Subclass Rules\n *\n * - Methods exposed by subclasses should not expose HTMLElements or DebugElements directly. That would encourage\n * callers to query it from the outside creating potential duplicate querying code and abstraction leaks.\n *  - Subclasses also should not have testing assertions. They should only provide the state and the calling test can\n * assert code on its own.\n *\n * `T` is the type of the JS/TS object being wrapped\n *\n * It is recommended that files for implementations be named with a `.wo.ts` extension\n */\nexport abstract class WidgetObject {\n    /**\n     *\n     * Constructor should only be called directly if you are directly instantiating the widget being wrapped (T). If you\n     * need to find a widget within the tree, you should use {@link find}.\n     *\n     * @param component The component instance being managed. Whenever possible, we should access the component's API.\n     * @param root The root element (host) for the component instance. We typically prefer to interact with the\n     * component but there are times when we must check the DOM.\n     * @param fixture The test fixture, so we can call {@link ComponentFixture#detectChanges} after something that\n     * requires re-rendering of the DOM.\n     */\n    constructor(\n        protected fixture: ComponentFixture,\n        protected root: DebugElement = fixture.debugElement,\n        public component: T = fixture.componentInstance\n    ) {}\n\n    detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Finds first element within this widget matching the given selector\n     * @param selector What to search for\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n    protected findElement(selector: string | Type, parent: DebugElement = this.root): DebugElement {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.query(query);\n    }\n\n    /**\n     * Same as {@link findElement} but returns all elements\n     */\n    protected findElements(selector: string | Type, parent: DebugElement = this.root): DebugElement[] {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.queryAll(query);\n    }\n\n    /**\n     * Clicks an element and detects changes so the DOM is immediately updated\n     * @param cssSelector Pass this in if you want to click a specific element. If not passed in, the entire node will\n     * receive the click event\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected click(cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.click();\n        this.detectChanges();\n    }\n\n    /**\n     * Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\n     * found by the {@param cssSelector} within the provided {@param parent} or the current root element.\n     * Setting the event properties is done with `Object.defineProperty` on the created event. This allows setting\n     * properties like `which` that is deprecated and cannot be set with the native approach of creating keyboard event.\n     * @param eventType The keyboard event type like 'keyup', 'keydown', 'keypress'\n     * @param eventProperties properties of the event like `code`, `key` etc.\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected sendKeyboardEvent(\n        eventType,\n        eventProperties: { [name: string]: unknown },\n        cssSelector?: string,\n        parent: DebugElement = this.root\n    ): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        // Create keyboard event that bubbles up the chain\n        const event = new KeyboardEvent(eventType, { bubbles: true });\n        // Use `Object.defineProperty` in order to be able to set even deprecated, readonly properties like `which`\n        Object.keys(eventProperties).forEach((key) => {\n            Object.defineProperty(event, key, { value: eventProperties[key] });\n        });\n        nativeElement.dispatchEvent(event);\n        this.detectChanges();\n    }\n\n    /**\n     * Sets the value of an input element or textarea element\n     * @param value the value that the element should display\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected setInputValue(value: string | number, cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLInputElement | HTMLTextAreaElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.value = String(value);\n        nativeElement.dispatchEvent(new Event('input'));\n        this.detectChanges();\n    }\n\n    /**\n     * Returns text content of this widget\n     * If the element cannot be found, gives empty string.\n     * @param cssSelector Pass this in if you want to retrieve text for a specific element within this widget.\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n\n    protected getText(cssSelector: string, parent: DebugElement = this.root): string {\n        const element = this.findElement(cssSelector, parent);\n        return element ? this.getNodeText(element) : '';\n    }\n\n    /**\n     * Same as {@link getText} but return the text for all matching nodes\n     */\n    protected getTexts(cssSelector: string): string[] {\n        return this.findElements(cssSelector).map((el) => this.getNodeText(el));\n    }\n\n    protected getNodeText(el: DebugElement): string {\n        // The || '' is because textContent could technically be null when passed in the document\n        // element object. We know that cannot be pased in here, so we ignore it for coverage\n        // but we still need the line there to make strictNullChecks work\n        return el.nativeElement.textContent.trim() || /* istanbul ignore next */ '';\n    }\n}\n\n/**\n * Subclasses should implement the FindableWidget interface so they can be found with {@link WidgetFinder}\n *\n * ## Note\n * This is done by creating a static property `tagName`on your subclass, not a regular instance, since this\n * interface represents a constructor for a {@link WidgetObject}, not an instance.\n */\nexport interface FindableWidget extends Type {\n    tagName: string;\n}\n\n/**\n * Arguments for {@link WidgetFinder#findWidgets} and {@link WidgetFinder#find}\n */\nexport interface FindParams {\n    /**\n     * The constructor of the widget to be found\n     */\n    woConstructor: T;\n    /**\n     * If provided, search starts from this container. It defaults to the fixture's root debugElement\n     */\n    ancestor?: DebugElement;\n    /**\n     * Optional CSS class name that can be used when there could be multiple instances of the object within the\n     * fixture tree\n     */\n    className?: string;\n}\n\n/**\n * @deprecated Finds instances that implement {@link FindableWidget}\n * H is the host component's type. This finder is only for old unit tests.\n * Please use AngularWidgetObjectFinder instead.\n */\nexport class WidgetFinder {\n    /**\n     * We don't care or could possibly know the type of fixture\n     */\n    private fixture: ComponentFixture;\n\n    /**\n     * If you need direct access to manipulate the host\n     */\n    public hostComponent: H;\n\n    /**\n     * @param componentConstructor The host component to be created as the root of the tests's fixture\n     */\n    constructor(componentConstructor: Type) {\n        this.fixture = TestBed.createComponent(componentConstructor);\n        this.hostComponent = this.fixture.componentInstance;\n    }\n\n    /**\n     * Finds widgets within a fixture\n     * @return A Potentially empty list of widgets matching the given specs\n     */\n    public findWidgets>(\n        params: FindParams | T,\n        parent?: DebugElement\n    ): InstanceType[] {\n        const defaults = { ancestor: this.fixture.debugElement, className: '' };\n        const { woConstructor, ancestor, className } = isFindParamsObject(params)\n            ? { ...defaults, ...params }\n            : { ...defaults, woConstructor: params };\n\n        let query = woConstructor.tagName;\n        if (className) {\n            query += `.${className}`;\n        }\n        const componentRoots = (parent ? parent : ancestor).queryAll(By.css(query));\n        const widgets = componentRoots.map(\n            // Typescript is not able to infer it correctly as the subclass but we know for sure\n            (root) => new woConstructor(this.fixture, root, root.componentInstance) as InstanceType\n        );\n        return widgets;\n    }\n\n    /**\n     * Finds a single widget object\n     * @throws An error if the widget is not found or if there are multiple instances\n     */\n    public find>(params: FindParams | T): InstanceType {\n        const widgets = this.findWidgets(params);\n        const tagName = isFindParamsObject(params) ? params.woConstructor.tagName : params.tagName;\n        if (widgets.length === 0) {\n            throw Error(`Did not find a `);\n        }\n        if (widgets.length > 1) {\n            throw Error(`Expected to find a single  but found ${widgets.length}`);\n        }\n        return widgets[0] as InstanceType;\n    }\n\n    public detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n}\n\nexport function isFindParamsObject(params: FindParams | T): params is FindParams {\n    return !!(params as FindParams).woConstructor;\n}\n/**\n * Can be used in tests that use `this` to share a finder with before/AfterEach instead of leaky closures\n */\nexport interface HasFinder {\n    finder: WidgetFinder;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindableWidget-1.html":{"url":"interfaces/FindableWidget-1.html","title":"interface - FindableWidget-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FindableWidget\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object/widget-object.ts\n        \n\n            \n                Description\n            \n            \n                The interface that all WidgetObject classes must satisfy. This means that they must extend BaseWidgetObject and\nhave a static tagName.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        tagName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tagName\n                                    \n                                \n                                \n                                    \n                                        tagName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        type ElementLocator = (options?: unknown) => T;\n\n/**\n * A class that is able to make queries to the DOM and be instantiated by a widget finder.\n * Widget objects should be used only to find elements in the DOM. You should not attempt to take\n * actions on these elements in a given widget object.\n *\n * All widget objects should extend this base class.\n *\n * @example\n *\n * class LoginWidgetObject extends BaseWidgetObject {\n *      getUsernameField = this.locatorForChild('.username');\n *\n *      getOkButton(): T {\n *          return this.driver.getByText('button', 'Ok').unwrap();\n *      }\n *\n *      getOkButtonContainer(): T {\n *          return this.driver.getByText('button', 'Ok').parent('.button-container').unwrap();\n *      }\n * }\n */\nexport class BaseWidgetObject {\n    protected locatorDriver?: LocatorDriver;\n    constructor(driver: LocatorDriver) {\n        this.locatorDriver = driver;\n    }\n\n    /**\n     * Returns an element locator that will find a child with the given cssSelector when called.\n     */\n    protected locatorForCssSelectors? = (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.get(cssSelector, options).unwrap();\n    };\n\n    /**\n     * Returns an element locator that will find a parent with the given cssSelector when called.\n     */\n    protected locatorForAncestors? = (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.parents(cssSelector, options).unwrap();\n    };\n\n    /**\n     * Returns an element locator that will find a child with the given cssSelector and text when called.\n     */\n    protected locatorForText? = (cssSelector: string, text: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.getByText(cssSelector, text, options).unwrap();\n    };\n}\n\n/**\n * Knows how to find elements of a given type T in the DOM.\n */\nexport interface LocatorDriver {\n    /**\n     * Finds all child elements that match the given cssSelector.\n     */\n    get(cssSelector: string, options?: unknown): LocatorDriver;\n\n    /**\n     * Finds all child elements that match the given cssSelector and have text that contains the given value.\n     */\n    getByText(cssSelector: string, value: string, options?: unknown): LocatorDriver;\n\n    /**\n     * Finds the closest parent that matches the given cssSelector.\n     */\n    parents(cssSelector: string, options?: unknown): LocatorDriver;\n\n    /**\n     * Returns an instance of the given widget within this widget object.\n     */\n    findWidget, C extends FindableWidget>(\n        widget: C,\n        cssSelector?: string\n    ): CorrectReturnTypes, T>;\n\n    /**\n     * Unwraps the value from this query and turns it into the resulting object type.\n     */\n    unwrap(): T;\n}\n\ntype ConvertGenericOnly = unknown extends CR ? R : CorrectReturnTypes;\n\n/**\n * Changes the class so that all functions/getters return R.\n */\nexport type CorrectReturnTypes = {\n    [P in keyof T]: T[P] extends (...args: any[]) => infer CR\n        ? (...args: Parameters) => ConvertGenericOnly\n        : ConvertGenericOnly;\n};\n\n/**\n * The interface that all WidgetObject classes must satisfy. This means that they must extend BaseWidgetObject and\n * have a static tagName.\n */\nexport interface FindableWidget> {\n    new (driver: LocatorDriver): W;\n    tagName: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormCheckboxComponent.html":{"url":"components/FormCheckboxComponent.html","title":"component - FormCheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormCheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/form/form-checkbox/form-checkbox.component.ts\n\n\n    \n        Description\n    \n    \n        FormControl wrapper around a input HTML element of checkbox type. The label input from\nBaseFormControl is used for displaying a label on the left of a form field and the text input is used for\ndisplaying label on the right of checkbox. Use the 'styling' property with a value of 'checkbox' or 'toggle-switch'\nto display a checkbox or toggle switch on the UI.\nExample:\n      \n      \n\n    \n\n    \n        Extends\n    \n    \n                BaseFormControl\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-form-checkbox\n            \n\n\n\n\n            \n                templateUrl\n                ./form-checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formControlNameDirective\n                            \n                            \n                                id\n                            \n                            \n                                    Protected\n                                initialValue\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                iconShape\n                            \n                            \n                                rightLabel\n                            \n                            \n                                styling\n                            \n                            \n                                text\n                            \n                            \n                                description\n                            \n                            \n                                errorLabels\n                            \n                            \n                                isReadOnly\n                            \n                            \n                                label\n                            \n                            \n                                showAsterisk\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isCheckbox\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDirective: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/form/form-checkbox/form-checkbox.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDirective\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        iconShape\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-checkbox/form-checkbox.component.ts:49\n                            \n                        \n                \n                    \n                        A shape for the icon that appears next to the checkbox.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rightLabel\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-checkbox/form-checkbox.component.ts:44\n                            \n                        \n                \n                    \n                        Put the label text on the right.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        styling\n                    \n                \n                \n                    \n                        Type :         CheckBoxStyling\n\n                    \n                \n                \n                    \n                        Default value : CheckBoxStyling.CHECKBOX\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-checkbox/form-checkbox.component.ts:39\n                            \n                        \n                \n                    \n                        Styling for the checkbox.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-checkbox/form-checkbox.component.ts:34\n                            \n                        \n                \n                    \n                        The label that appears next to the control\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '\\u00A0'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:52\n\n                            \n                        \n                \n                    \n                        The description that appears below the control\n\\u00A0 is   (non-breaking space)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorLabels\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:62\n\n                            \n                        \n                \n                    \n                        Error labels to be used instead of NgControl error keys\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isReadOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:57\n\n                            \n                        \n                \n                    \n                        Whether this component is in readonly mode\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:46\n\n                            \n                        \n                \n                    \n                        The label that appears before the control\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showAsterisk\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:41\n\n                            \n                        \n                \n                    \n                        Show the asterisk next to the control when true\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: (args: unknown[]) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:105\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onChange\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: (args: unknown[]) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onTouched\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:113\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(val: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:117\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:36\n\n                            \n                        \n\n                \n                    \n                        Whether the control is disabled.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControlNameDirective\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:67\n\n                            \n                        \n\n                \n                    \n                        FormControlName directive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:21\n\n                            \n                        \n\n                \n                    \n                        Auto generated ID for the input field.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initialValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number | string | boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:72\n\n                            \n                        \n\n                \n                    \n                        To store the initial value of the input form control.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:26\n\n                            \n                        \n\n                \n                    \n                        Change callback.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTouch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:31\n\n                            \n                        \n\n                \n                    \n                        Touch callback.\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isCheckbox\n                    \n                \n\n                \n                    \n                        getisCheckbox()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/form-checkbox/form-checkbox.component.ts:51\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit, Optional, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { BaseFormControl } from '../base-form-control';\n\nexport enum CheckBoxStyling {\n    CHECKBOX = 'checkbox',\n    TOGGLESWITCH = 'toggle-switch',\n}\n\n/**\n * {@link FormControl} wrapper around a input HTML element of checkbox type. The label input from\n * {@link BaseFormControl} is used for displaying a label on the left of a form field and the text input is used for\n * displaying label on the right of checkbox. Use the 'styling' property with a value of 'checkbox' or 'toggle-switch'\n * to display a checkbox or toggle switch on the UI.\n *\n * Example:\n *      \n *      \n */\n@Component({\n    selector: 'vcd-form-checkbox',\n    templateUrl: './form-checkbox.component.html',\n})\nexport class FormCheckboxComponent extends BaseFormControl {\n    /**\n     * The label that appears next to the control\n     */\n    @Input() text: string;\n\n    /**\n     * Styling for the checkbox.\n     */\n    @Input() styling: CheckBoxStyling = CheckBoxStyling.CHECKBOX;\n\n    /**\n     * Put the label text on the right.\n     */\n    @Input() rightLabel = false;\n\n    /**\n     * A shape for the icon that appears next to the checkbox.\n     */\n    @Input() iconShape: string;\n\n    get isCheckbox(): boolean {\n        return this.styling === CheckBoxStyling.CHECKBOX;\n    }\n\n    constructor(@Self() @Optional() controlDirective: NgControl) {\n        super(controlDirective);\n    }\n}\n\n    \n\n    \n        \n    \n        {{ label }}\n        \n            \n                \n                \n                    \n                    {{ text }}\n                \n            \n            \n                \n                    {{ key | translate: formControl.value }}\n                \n            \n            \n                {{ description }}\n            \n        \n    \n    \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ label }}                                                                                            {{ text }}                                                                            {{ key | translate: formControl.value }}                                                        {{ description }}                                        '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormCheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormInputComponent.html":{"url":"components/FormInputComponent.html","title":"component - FormInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/form/form-input/form-input.component.ts\n\n\n    \n        Description\n    \n    \n        A FormControl that contains an input that supports string, number and datetime-local input types\nExample:\n      \n      \n\n    \n\n    \n        Extends\n    \n    \n                BaseFormControl\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-form-input\n            \n\n            \n                styleUrls\n                ../form.scss,./form-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                textInput\n                            \n                            \n                                disabled\n                            \n                            \n                                formControlNameDirective\n                            \n                            \n                                id\n                            \n                            \n                                    Protected\n                                initialValue\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                inputChanged\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                writeValue\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hint\n                            \n                            \n                                hintPosition\n                            \n                            \n                                max\n                            \n                            \n                                maxlength\n                            \n                            \n                                min\n                            \n                            \n                                placeholder\n                            \n                            \n                                size\n                            \n                            \n                                type\n                            \n                            \n                                description\n                            \n                            \n                                errorLabels\n                            \n                            \n                                isReadOnly\n                            \n                            \n                                label\n                            \n                            \n                                showAsterisk\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                enterClicked\n                            \n                            \n                                escapeClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDirective: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/form/form-input/form-input.component.ts:93\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDirective\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:77\n                            \n                        \n                \n                    \n                        Hint to display in the content of a signpost\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hintPosition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'top-left'\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:72\n                            \n                        \n                \n                    \n                        The direction for displaying the hint\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Number.MAX_SAFE_INTEGER\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:52\n                            \n                        \n                \n                    \n                        Maximum value allowed.\n(This is an input specified in the component attribute.)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:67\n                            \n                        \n                \n                    \n                        Maximum number of characters (in UTF-16 code units) that the user can enter.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Number.MIN_SAFE_INTEGER\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:46\n                            \n                        \n                \n                    \n                        Minimum value allowed.\n(This is an input specified in the component attribute.)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:40\n                            \n                        \n                \n                    \n                        Input 'placeholder' field.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:62\n                            \n                        \n                \n                    \n                        Input 'size' field.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:57\n                            \n                        \n                \n                    \n                        Input 'type' field.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '\\u00A0'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:52\n\n                            \n                        \n                \n                    \n                        The description that appears below the control\n\\u00A0 is   (non-breaking space)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorLabels\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:62\n\n                            \n                        \n                \n                    \n                        Error labels to be used instead of NgControl error keys\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isReadOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:57\n\n                            \n                        \n                \n                    \n                        Whether this component is in readonly mode\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:46\n\n                            \n                        \n                \n                    \n                        The label that appears before the control\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showAsterisk\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:41\n\n                            \n                        \n                \n                    \n                        Show the asterisk next to the control when true\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        enterClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:88\n                            \n                        \n                \n                    \n                        Emitted when enter key is released for callers to handle the event like... closing a filter widget\nDatagridNumericFilterComponent.close\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        escapeClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:93\n                            \n                        \n                \n                    \n                        Emitted when escape key is released for callers to handle the event\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            inputChanged\n                        \n                        \n                    \n                \n            \n            \n                \ninputChanged()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/form-input/form-input.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/form-input/form-input.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/form-input/form-input.component.ts:104\n                \n            \n\n\n            \n                \n                    Input fields in the vcd-ui app does not support IME input on chrome browser. So in order to fix it, the value\nbeing assigned to the form control has to be given to the input HTML element's value using the 'viewChild' query\nselector inside writeValue function.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: (args: unknown[]) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:105\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onChange\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: (args: unknown[]) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onTouched\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:113\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(val: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:117\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('textInput', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:82\n                            \n                        \n\n                \n                    \n                        The input field element\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:36\n\n                            \n                        \n\n                \n                    \n                        Whether the control is disabled.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControlNameDirective\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:67\n\n                            \n                        \n\n                \n                    \n                        FormControlName directive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:21\n\n                            \n                        \n\n                \n                    \n                        Auto generated ID for the input field.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initialValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number | string | boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:72\n\n                            \n                        \n\n                \n                    \n                        To store the initial value of the input form control.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:26\n\n                            \n                        \n\n                \n                    \n                        Change callback.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTouch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:31\n\n                            \n                        \n\n                \n                    \n                        Touch callback.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    Optional,\n    Output,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { BaseFormControl } from '../base-form-control';\n\n/**\n * A {@link FormControl} that contains an input that supports string, number and datetime-local input types\n *\n * Example:\n *      \n *      \n */\n@Component({\n    selector: 'vcd-form-input',\n    templateUrl: './form-input.component.html',\n    styleUrls: ['../form.scss', './form-input.component.scss'],\n})\nexport class FormInputComponent extends BaseFormControl implements AfterViewInit {\n    /**\n     * Input 'placeholder' field.\n     */\n    @Input() placeholder: string = null;\n\n    /**\n     * Minimum value allowed.\n     * (This is an input specified in the component attribute.)\n     */\n    @Input() min: number = Number.MIN_SAFE_INTEGER;\n\n    /**\n     * Maximum value allowed.\n     * (This is an input specified in the component attribute.)\n     */\n    @Input() max: number = Number.MAX_SAFE_INTEGER;\n\n    /**\n     * Input 'type' field.\n     */\n    @Input() type = 'text';\n\n    /**\n     * Input 'size' field.\n     */\n    @Input() size: number = null;\n\n    /**\n     * Maximum number of characters (in UTF-16 code units) that the user can enter.\n     */\n    @Input() maxlength: number = null;\n\n    /**\n     * The direction for displaying the hint\n     */\n    @Input() hintPosition = 'top-left';\n\n    /**\n     * Hint to display in the content of a signpost\n     */\n    @Input() hint: string;\n\n    /**\n     * The input field element\n     */\n    @ViewChild('textInput', { static: true }) textInput: ElementRef;\n\n    /**\n     * Emitted when enter key is released for callers to handle the event like... closing a filter widget\n     * {@link DatagridNumericFilterComponent.close}\n     */\n    @Output() enterClicked = new EventEmitter(false);\n\n    /**\n     * Emitted when escape key is released for callers to handle the event\n     */\n    @Output() escapeClicked = new EventEmitter(false);\n\n    constructor(@Self() @Optional() controlDirective: NgControl) {\n        super(controlDirective);\n    }\n\n    /**\n     * Input fields in the vcd-ui app does not support IME input on chrome browser. So in order to fix it, the value\n     * being assigned to the form control has to be given to the input HTML element's value using the 'viewChild' query\n     * selector inside writeValue function.\n     */\n    writeValue(value: any): void {\n        // The textInput view child element is undefined the first time. So, the initial value is stored in a variable\n        // to assign it later to the input field value.\n        this.initialValue = value;\n        if (!this.textInput) {\n            return;\n        }\n\n        if (typeof value === 'number') {\n            value = value.toString(10);\n        }\n        if (this.type === 'datetime-local') {\n            value = getFormattedDateValue(value);\n        }\n        this.textInput.nativeElement.value = value;\n    }\n\n    ngAfterViewInit(): void {\n        // The textInput view child element is only defined after this life cycle hook. So, the writeValue is called\n        // here.\n        this.writeValue(this.initialValue);\n    }\n\n    inputChanged(): void {\n        const value = this.textInput.nativeElement.value;\n        this.initialValue = value;\n\n        if (this.type === 'number') {\n            if (!value) {\n                this.onChange(value);\n            } else {\n                this.onChange(parseFloat(value));\n            }\n            return;\n        }\n        if (this.type === 'datetime-local' && value !== '') {\n            const isoDateValue = new Date(getFormattedDateValue(value)).toISOString();\n            this.onChange(isoDateValue);\n            return;\n        }\n        this.onChange(value);\n    }\n}\n\n/**\n * To format a date string into a value which can be given to the input html element\n */\nexport function getFormattedDateValue(value: string): string {\n    const date = new Date(value);\n    return (\n        date.getFullYear() +\n        '-' +\n        pad(date.getMonth() + 1) +\n        '-' +\n        pad(date.getDate()) +\n        'T' +\n        pad(date.getHours()) +\n        ':' +\n        pad(date.getMinutes())\n    );\n}\n\nexport function pad(num: number): string | number {\n    if (num \n    \n\n    \n        \n    \n        {{\n        label\n        }}\n        \n            \n                \n                \n            \n            \n                \n                    {{ key | translate: formControl.value:min.toString():max }}\n                \n            \n            \n                {{ description }}\n            \n        \n        \n        \n            \n                {{ hint }}\n            \n        \n    \n\n\n    \n\n\n    \n\n    \n                \n                    ../form.scss\n                \n                .required-field:after {\n    content: '*';\n    color: red;\n    padding-left: 5px;\n}\n\n                \n                    ./form-input.component.scss\n                \n                .form-group >>> aside {\n    margin-top: 6px;\n    margin-bottom: 6px;\n    flex-grow: 1;\n}\n\n.form-group.hide-label {\n    padding-left: 0;\n}\n\n.input-aside {\n    display: flex;\n    width: 100%;\n}\n\n:host-context(.modal):not(.adjust-aside-left) {\n    .form-label {\n        flex-grow: 1;\n    }\n    .form-label > input {\n        width: 100%;\n    }\n}\n\n.form-group-description {\n    margin-bottom: 15px;\n}\n\nclr-signpost p:first-child {\n    margin-top: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{        label        }}                                                                                                                {{ key | translate: formControl.value:min.toString():max }}                                                        {{ description }}                                                                {{ hint }}                            '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormSelectComponent.html":{"url":"components/FormSelectComponent.html","title":"component - FormSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/form/form-select/form-select.component.ts\n\n\n    \n        Description\n    \n    \n        FormControl wrapper around a select HTML element\n\n    \n\n    \n        Extends\n    \n    \n                BaseFormControl\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-form-select\n            \n\n            \n                styleUrls\n                ../form.scss,./form-select.component.scss\n            \n\n\n\n            \n                templateUrl\n                form-select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formControlNameDirective\n                            \n                            \n                                id\n                            \n                            \n                                    Protected\n                                initialValue\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                            \n                                description\n                            \n                            \n                                errorLabels\n                            \n                            \n                                isReadOnly\n                            \n                            \n                                label\n                            \n                            \n                                showAsterisk\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selectedOption\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/form/form-select/form-select.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         SelectOption[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-select/form-select.component.ts:23\n                            \n                        \n                \n                    \n                        The displayed options for the select element\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '\\u00A0'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:52\n\n                            \n                        \n                \n                    \n                        The description that appears below the control\n\\u00A0 is   (non-breaking space)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorLabels\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:62\n\n                            \n                        \n                \n                    \n                        Error labels to be used instead of NgControl error keys\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isReadOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:57\n\n                            \n                        \n                \n                    \n                        Whether this component is in readonly mode\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:46\n\n                            \n                        \n                \n                    \n                        The label that appears before the control\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showAsterisk\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:41\n\n                            \n                        \n                \n                    \n                        Show the asterisk next to the control when true\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: (args: unknown[]) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:105\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onChange\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: (args: unknown[]) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onTouched\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:113\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(val: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:117\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:36\n\n                            \n                        \n\n                \n                    \n                        Whether the control is disabled.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControlNameDirective\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:67\n\n                            \n                        \n\n                \n                    \n                        FormControlName directive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:21\n\n                            \n                        \n\n                \n                    \n                        Auto generated ID for the input field.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initialValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number | string | boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:72\n\n                            \n                        \n\n                \n                    \n                        To store the initial value of the input form control.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:26\n\n                            \n                        \n\n                \n                    \n                        Change callback.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTouch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:31\n\n                            \n                        \n\n                \n                    \n                        Touch callback.\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedOption\n                    \n                \n\n                \n                    \n                        getselectedOption()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/form-select/form-select.component.ts:29\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, Optional, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { SelectOption } from '../../common/interfaces/select-option';\nimport { BaseFormControl } from '../base-form-control';\n\n/**\n * {@link FormControl} wrapper around a select HTML element\n */\n@Component({\n    selector: 'vcd-form-select',\n    templateUrl: 'form-select.component.html',\n    styleUrls: ['../form.scss', './form-select.component.scss'],\n})\nexport class FormSelectComponent extends BaseFormControl {\n    /**\n     * The displayed options for the select element\n     */\n    @Input() options: SelectOption[] = [];\n\n    constructor(@Self() @Optional() ngControl: NgControl) {\n        super(ngControl);\n    }\n\n    get selectedOption(): SelectOption {\n        if (!this.options || this.formControl.value === null || this.formControl.value === undefined) {\n            return undefined;\n        }\n        // option.value and formControl.value can be of type number or string\n        return this.options.find((option) => option.value.toString() === this.formControl.value.toString());\n    }\n}\n\n    \n\n    \n        \n    \n        {{\n        label\n        }}\n        \n            {{ selectedOption.isTranslatable ? (selectedOption.display | translate) : selectedOption.display }}\n        \n        \n            \n                \n                    \n                        {{ option.isTranslatable ? (option.display | translate) : option.display }}\n                    \n                \n                \n            \n\n            \n\n            \n                \n                    {{ key | translate: [formControl.value] }}\n                \n            \n        \n    \n    \n        \n    \n\n\n    \n\n    \n                \n                    ../form.scss\n                \n                .required-field:after {\n    content: '*';\n    color: red;\n    padding-left: 5px;\n}\n\n                \n                    ./form-select.component.scss\n                \n                .form-group.hide-label {\n    padding-left: 0;\n}\n\n.form-group.hide-label label:first-child {\n    visibility: hidden;\n}\n\n.error-content {\n    white-space: normal;\n}\n\n:host(.site-selector-single-site) {\n    display: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{        label        }}                    {{ selectedOption.isTranslatable ? (selectedOption.display | translate) : selectedOption.display }}                                                                                        {{ option.isTranslatable ? (option.display | translate) : option.display }}                                                                                                                            {{ key | translate: [formControl.value] }}                                                        '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormValidators.html":{"url":"classes/FormValidators.html","title":"class - FormValidators","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormValidators\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/form/validators.ts\n        \n\n            \n                Description\n            \n            \n                validators used for form control validations.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createNullSafeValidator\n                            \n                            \n                                    Static\n                                isNumberInRange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createNullSafeValidator\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNullSafeValidator(validator: (args: any[]) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/validators.ts:17\n                \n            \n\n\n            \n                \n                    A wrapper that validates that a control's value is defined before running the validator function.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    validator\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The validator function to run if the control's value is defined.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            isNumberInRange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isNumberInRange(min: number, max: number, translationKey: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/validators.ts:32\n                \n            \n\n\n            \n                \n                    Create a validator that requires a number to be within a range.\nAlso checks that the value is numeric\nAccepts a translation key to display proper error messaging\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    min\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    max\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    translationKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'vcd.cc.warning.numRange'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FormControl, ValidatorFn, Validators } from '@angular/forms';\n\n/**\n * validators used for form control validations.\n */\nexport class FormValidators {\n    /**\n     * A wrapper that validates that a control's value is defined before running the validator function.\n     *\n     * @param validator The validator function to run if the control's value is defined.\n     */\n    static createNullSafeValidator(validator: (...args: any[]) => unknown): ValidatorFn {\n        const res = (control: FormControl) => {\n            if (Validators.required(control)) {\n                return null;\n            }\n            return validator(control);\n        };\n        return res;\n    }\n\n    /**\n     * Create a validator that requires a number to be within a range.\n     * Also checks that the value is numeric\n     * Accepts a translation key to display proper error messaging\n     */\n    static isNumberInRange(min: number, max: number, translationKey = 'vcd.cc.warning.numRange'): ValidatorFn {\n        const res = FormValidators.createNullSafeValidator((control: any) => {\n            const isNumber = !isNaN(parseFloat(control.value)) && isFinite(control.value);\n            return control.value >= min && control.value \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormlyInputComponent.html":{"url":"components/FormlyInputComponent.html","title":"component - FormlyInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormlyInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/formly/vcd/inputs/input/formly-input.component.ts\n\n\n\n    \n        Extends\n    \n    \n            FieldType\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-formly-input\n            \n\n\n\n            \n                template\n                \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onEnterClicked\n                            \n                            \n                                onEscapeClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    min\n                                \n                                \n                                    max\n                                \n                                \n                                    type\n                                \n                                \n                                    hintPosition\n                                \n                                \n                                    errorLabels\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onEnterClicked\n                        \n                        \n                    \n                \n            \n            \n                \nonEnterClicked()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/formly/vcd/inputs/input/formly-input.component.ts:67\n                \n            \n\n\n            \n                \n                    FormInputComponent.enterClicked\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onEscapeClicked\n                        \n                        \n                    \n                \n            \n            \n                \nonEscapeClicked()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/formly/vcd/inputs/input/formly-input.component.ts:75\n                \n            \n\n\n            \n                \n                    FormInputComponent.escapeClicked\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n\n                \n                    \n                        getmin()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/input/formly-input.component.ts:37\n                                \n                            \n                    \n                        \n                                FormInputComponent.min\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n\n                \n                    \n                        getmax()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/input/formly-input.component.ts:43\n                                \n                            \n                    \n                        \n                                FormInputComponent.max\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/input/formly-input.component.ts:49\n                                \n                            \n                    \n                        \n                                FormInputComponent.type\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hintPosition\n                    \n                \n\n                \n                    \n                        gethintPosition()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/input/formly-input.component.ts:55\n                                \n                            \n                    \n                        \n                                FormInputComponent.hintPosition\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errorLabels\n                    \n                \n\n                \n                    \n                        geterrorLabels()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/input/formly-input.component.ts:61\n                                \n                            \n                    \n                        \n                                FormInputComponent.errorLabels\n\n\n                                \n                                    Returns :     string[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n    selector: 'vcd-formly-input',\n    template: `\n        \n        \n    `,\n})\nexport class FormlyInputComponent extends FieldType {\n    /**\n     * {@link FormInputComponent.min}\n     */\n    get min(): number {\n        return this.to.min || Number.MIN_SAFE_INTEGER;\n    }\n    /**\n     * {@link FormInputComponent.max}\n     */\n    get max(): number {\n        return this.to.max || Number.MAX_SAFE_INTEGER;\n    }\n    /**\n     * {@link FormInputComponent.type}\n     */\n    get type(): string {\n        return this.to.type || 'text';\n    }\n    /**\n     * {@link FormInputComponent.hintPosition}\n     */\n    get hintPosition(): string {\n        return this.to.hintPosition || 'top-left';\n    }\n    /**\n     * {@link FormInputComponent.errorLabels}\n     */\n    get errorLabels(): string[] {\n        return this.to.errorLabels || [];\n    }\n    /**\n     * {@link FormInputComponent.enterClicked}\n     */\n    onEnterClicked(): any {\n        if (this.to.onEnterClicked) {\n            return this.to.onEnterClicked(this.field);\n        }\n    }\n    /**\n     * {@link FormInputComponent.escapeClicked}\n     */\n    onEscapeClicked(): any {\n        if (this.to.onEscapeClicked) {\n            return this.to.onEscapeClicked(this.field);\n        }\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormlyInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormlyNumberWithUnitInputComponent.html":{"url":"components/FormlyNumberWithUnitInputComponent.html","title":"component - FormlyNumberWithUnitInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormlyNumberWithUnitInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/formly/vcd/inputs/number-with-unit-input/formly-number-with-unit-input.component.ts\n\n\n\n    \n        Extends\n    \n    \n            FieldType\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-formly-number-with-unit-input\n            \n\n\n\n            \n                template\n                \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    errorLabels\n                                \n                                \n                                    min\n                                \n                                \n                                    max\n                                \n                                \n                                    hintPosition\n                                \n                                \n                                    showUnlimitedOption\n                                \n                                \n                                    unlimitedValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        errorLabels\n                    \n                \n\n                \n                    \n                        geterrorLabels()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/number-with-unit-input/formly-number-with-unit-input.component.ts:39\n                                \n                            \n                    \n                        \n                                NumberWithUnitFormInputComponent.errorLabels\n\n\n                                \n                                    Returns :     string[]\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n\n                \n                    \n                        getmin()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/number-with-unit-input/formly-number-with-unit-input.component.ts:45\n                                \n                            \n                    \n                        \n                                NumberWithUnitFormInputComponent.min\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n\n                \n                    \n                        getmax()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/number-with-unit-input/formly-number-with-unit-input.component.ts:51\n                                \n                            \n                    \n                        \n                                NumberWithUnitFormInputComponent.max\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hintPosition\n                    \n                \n\n                \n                    \n                        gethintPosition()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/number-with-unit-input/formly-number-with-unit-input.component.ts:57\n                                \n                            \n                    \n                        \n                                NumberWithUnitFormInputComponent.hintPosition\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        showUnlimitedOption\n                    \n                \n\n                \n                    \n                        getshowUnlimitedOption()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/number-with-unit-input/formly-number-with-unit-input.component.ts:63\n                                \n                            \n                    \n                        \n                                NumberWithUnitFormInputComponent.showUnlimitedOption\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        unlimitedValue\n                    \n                \n\n                \n                    \n                        getunlimitedValue()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/number-with-unit-input/formly-number-with-unit-input.component.ts:72\n                                \n                            \n                    \n                        \n                                NumberWithUnitFormInputComponent.unlimitedValue\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\nimport { UNLIMITED } from '../../../../form/number-with-unit-input/number-with-unit-form-input.component';\n\n@Component({\n    selector: 'vcd-formly-number-with-unit-input',\n    template: `\n        \n        \n    `,\n})\nexport class FormlyNumberWithUnitInputComponent extends FieldType {\n    /**\n     * {@link NumberWithUnitFormInputComponent.errorLabels}\n     */\n    get errorLabels(): string[] {\n        return this.to.errorLabels || [];\n    }\n    /**\n     * {@link NumberWithUnitFormInputComponent.min}\n     */\n    get min(): number {\n        return this.to.min || UNLIMITED;\n    }\n    /**\n     * {@link NumberWithUnitFormInputComponent.max}\n     */\n    get max(): number {\n        return this.to.max || Number.MAX_SAFE_INTEGER;\n    }\n    /**\n     * {@link NumberWithUnitFormInputComponent.hintPosition}\n     */\n    get hintPosition(): string {\n        return this.to.hintPosition || 'top-left';\n    }\n    /**\n     * {@link NumberWithUnitFormInputComponent.showUnlimitedOption}\n     */\n    get showUnlimitedOption(): boolean {\n        if (typeof this.to.showUnlimitedOption !== 'boolean') {\n            return true;\n        }\n        return this.to.showUnlimitedOption;\n    }\n    /**\n     * {@link NumberWithUnitFormInputComponent.unlimitedValue}\n     */\n    get unlimitedValue(): number {\n        return this.to.unlimitedValue || UNLIMITED;\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormlyNumberWithUnitInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormlySelectComponent.html":{"url":"components/FormlySelectComponent.html","title":"component - FormlySelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormlySelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/formly/vcd/inputs/select/formly-select.component.ts\n\n\n\n    \n        Extends\n    \n    \n            FieldType\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-formly-select\n            \n\n\n\n            \n                template\n                \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    errorLabels\n                                \n                                \n                                    selectOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        errorLabels\n                    \n                \n\n                \n                    \n                        geterrorLabels()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/select/formly-select.component.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        selectOptions\n                    \n                \n\n                \n                    \n                        getselectOptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/select/formly-select.component.ts:31\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\nimport { Observable, of } from 'rxjs';\nimport { SelectOption } from '../../../../common/interfaces/select-option';\n\n@Component({\n    selector: 'vcd-formly-select',\n    template: `\n        \n        \n    `,\n})\nexport class FormlySelectComponent extends FieldType {\n    get errorLabels(): string[] {\n        return this.to.errorLabels || [];\n    }\n\n    get selectOptions(): Observable {\n        if (!(this.to.options instanceof Observable)) {\n            return of(this.to.options);\n        }\n        return this.to.options;\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormlySelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FunctionRenderer.html":{"url":"interfaces/FunctionRenderer.html","title":"interface - FunctionRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FunctionRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/interfaces/datagrid-column.interface.ts\n        \n\n            \n                Description\n            \n            \n                Column renderer as a function. Defined in calling component when the cell value is calculated from different\nproperties.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Unamed property\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n\n                                    \n                                        \n                                            Signature :\n                                            \n                                            \n                                                \n                                                    [record: T]\n                                            \n                                        \n                                    \n\n\n                                    \n                                        \n                                            Returns :         string\n\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TextIcon } from '../../common/interfaces/action-item.interface';\nimport { CliptextConfig } from '../../lib/directives/show-clipped-text.directive';\nimport { FilterConfig, FilterRendererSpec } from '../filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './component-renderer.interface';\n\nexport enum GridColumnHideable {\n    /**\n     * Does not show up in column toggle box\n     */\n    Never = 'NEVER',\n    /**\n     * Shows up in column toggle box, column is visible\n     */\n    Shown = 'SHOWN',\n    /**\n     * Shows up in column toggle box, column is hidden\n     */\n    Hidden = 'HIDDEN',\n}\n\n/**\n * Column renderer as a function. Defined in calling component when the cell value is calculated from different\n * properties.\n * @param record The record for the row being rendered\n * @return The string to be displayed for that cell\n */\nexport interface FunctionRenderer {\n    (record: T): string;\n}\n\n/**\n * Renderer specification of a column that contains component type to be rendered in the cell and configuration for that\n * component. used by the {@link ComponentRendererOutletDirective}\n */\nexport interface ColumnRendererSpec extends ComponentRendererSpec {\n    /**\n     * A function that creates a config object required for the configuration of component that will be rendered in the column\n     * @param record An object to be transformed into {@link ComponentRenderer#config}. It's passed in by the calling\n     * component\n     */\n    config: (record?: R) => C;\n}\n\n/**\n * Configuration object defined in the caller. This contains properties for the column header (text, filtering,\n * sorting, toggling etc.,) and content for row cells.\n *\n * Example:\n * const gridColumn: GridColumn = {\n *   displayName: \"Column Heading\",\n *   renderer: \"someRecord.property\",\n *   hideable: \"NEVER\"\n * }\n *\n * The above column is rendered with \"Column Heading\" text in it's heading and it is not shown in the column toggler.\n * The value of the property \"someRecord.property\" is rendered in cells corresponding to the column.\n */\nexport interface GridColumn {\n    /**\n     * Header text for the column\n     */\n    displayName: string;\n\n    /**\n     * Used for sorting/filtering. Not needed for columns not filterable/sortable\n     * TODO: do we need to support array type for querying across multiple columns?\n     */\n    queryFieldName?: string;\n\n    /**\n     * If the renderer passed in is a\n     * - string: Used as default renderer. Can be a dot separated string to identify a nested property of the item\n     * - {@link FunctionRenderer}: When you want to create a calculated column, but don't need custom HTML\n     * - TemplateRef: When custom HTML is needed and when it has to be passed in as a inline HTML\n     * - {@link ColumnRendererSpec}: When HTML is needed and when the HTML is provided as a component\n     */\n    renderer: string | FunctionRenderer | ColumnRendererSpec;\n\n    /**\n     * Whether the column shows up in the column toggler and if the column shows up, it reflects the toggle state\n     */\n    hideable?: GridColumnHideable;\n\n    /**\n     * When there is no data, show this message.\n     *\n     * Try to avoid showing this before initial load.\n     */\n    emptyColumnPlaceholder?: string;\n\n    /**\n     * TODO: Should this be made to work with top level search on grids across all columns?\n     *  The above to-do is going to be worked on as part of https://jira.eng.vmware.com/browse/VDUCC-27 and\n     */\n    filter?: FilterRendererSpec>;\n\n    /**\n     * The configuration for the cliptext in the datagrid.\n     * Defaults to size: 'lg', mouseoutDelay: undefined.\n     * If null, will disable cliptext\n     */\n    cliptextConfig?: CliptextConfig;\n\n    /**\n     * Whether to show the column as sortable. Defaults to true\n     */\n    sortable?: boolean;\n\n    /**\n     * The class of the column header.\n     */\n    clrDgColumnClassName?: string;\n}\n\n/**\n * Utility function to enforce type safety on config object of components of {@link ComponentRenderer} type. Used for creating\n * component renderer specification of {@link ColumnRendererSpec} type\n *\n * Example usage:\n * const gridColumn = {\n *   renderer: ColumnComponentRendererSpec({type: BoldTextRendererComponent, config: record => ({text: ''})\n * }\n *\n * In the above example this method helps in making sure that:\n * - Value \"v\" returned by the config function is of BoldTextRendererConfig type for gridColumn.renderer\n *\n * #Note: 'C & {}' below makes the inference site for C be the constructor type from the first argument.\n * {@link https://stackoverflow.com/questions/59055154/typescript-generics-infer-type-from-the-type-of-function-arguments}\n */\nexport function ColumnComponentRendererSpec(componentRendererSpec: {\n    type: ComponentRendererConstructor;\n    config: (record?: R) => C & {};\n}): ColumnRendererSpec {\n    return componentRendererSpec;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FunctionRendererPipe.html":{"url":"pipes/FunctionRendererPipe.html","title":"pipe - FunctionRendererPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FunctionRendererPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/datagrid/pipes/function-renderer.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Used for executing the functions of column cells which use functions to calculate their values from different\nproperties of an object\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        functionRenderer\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(item: any, renderer: (val: any) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/pipes/function-renderer.pipe.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    renderer\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Used for executing the functions of column cells which use functions to calculate their values from different\n * properties of an object\n */\n@Pipe({\n    name: 'functionRenderer',\n    pure: true,\n})\nexport class FunctionRendererPipe implements PipeTransform {\n    public transform(item: any, renderer: (val: any) => any): string {\n        if (!item || !renderer) {\n            return null;\n        }\n        return renderer(item);\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GridColumn.html":{"url":"interfaces/GridColumn.html","title":"interface - GridColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GridColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/interfaces/datagrid-column.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration object defined in the caller. This contains properties for the column header (text, filtering,\nsorting, toggling etc.,) and content for row cells.\nExample:\nconst gridColumn: GridColumn = {\n   displayName: \"Column Heading\",\n   renderer: \"someRecord.property\",\n   hideable: \"NEVER\"\n}\nThe above column is rendered with \"Column Heading\" text in it's heading and it is not shown in the column toggler.\nThe value of the property \"someRecord.property\" is rendered in cells corresponding to the column.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        cliptextConfig\n                                \n                                \n                                            Optional\n                                        clrDgColumnClassName\n                                \n                                \n                                        displayName\n                                \n                                \n                                            Optional\n                                        emptyColumnPlaceholder\n                                \n                                \n                                            Optional\n                                        filter\n                                \n                                \n                                            Optional\n                                        hideable\n                                \n                                \n                                            Optional\n                                        queryFieldName\n                                \n                                \n                                        renderer\n                                \n                                \n                                            Optional\n                                        sortable\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cliptextConfig\n                                    \n                                \n                                \n                                    \n                                        cliptextConfig:         CliptextConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CliptextConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The configuration for the cliptext in the datagrid.\nDefaults to size: 'lg', mouseoutDelay: undefined.\nIf null, will disable cliptext\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clrDgColumnClassName\n                                    \n                                \n                                \n                                    \n                                        clrDgColumnClassName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The class of the column header.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Header text for the column\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emptyColumnPlaceholder\n                                    \n                                \n                                \n                                    \n                                        emptyColumnPlaceholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    When there is no data, show this message.\nTry to avoid showing this before initial load.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:     FilterRendererSpec>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FilterRendererSpec>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    TODO: Should this be made to work with top level search on grids across all columns?\n  The above to-do is going to be worked on as part of https://jira.eng.vmware.com/browse/VDUCC-27 and\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideable\n                                    \n                                \n                                \n                                    \n                                        hideable:         GridColumnHideable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GridColumnHideable\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether the column shows up in the column toggler and if the column shows up, it reflects the toggle state\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queryFieldName\n                                    \n                                \n                                \n                                    \n                                        queryFieldName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used for sorting/filtering. Not needed for columns not filterable/sortable\nTODO: do we need to support array type for querying across multiple columns?\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        renderer\n                                    \n                                \n                                \n                                    \n                                        renderer:     string | FunctionRenderer | ColumnRendererSpec\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | FunctionRenderer | ColumnRendererSpec\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the renderer passed in is a\n\nstring: Used as default renderer. Can be a dot separated string to identify a nested property of the item\nFunctionRenderer: When you want to create a calculated column, but don't need custom HTML\nTemplateRef: When custom HTML is needed and when it has to be passed in as a inline HTML\nColumnRendererSpec: When HTML is needed and when the HTML is provided as a component\n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortable\n                                    \n                                \n                                \n                                    \n                                        sortable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether to show the column as sortable. Defaults to true\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { TextIcon } from '../../common/interfaces/action-item.interface';\nimport { CliptextConfig } from '../../lib/directives/show-clipped-text.directive';\nimport { FilterConfig, FilterRendererSpec } from '../filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './component-renderer.interface';\n\nexport enum GridColumnHideable {\n    /**\n     * Does not show up in column toggle box\n     */\n    Never = 'NEVER',\n    /**\n     * Shows up in column toggle box, column is visible\n     */\n    Shown = 'SHOWN',\n    /**\n     * Shows up in column toggle box, column is hidden\n     */\n    Hidden = 'HIDDEN',\n}\n\n/**\n * Column renderer as a function. Defined in calling component when the cell value is calculated from different\n * properties.\n * @param record The record for the row being rendered\n * @return The string to be displayed for that cell\n */\nexport interface FunctionRenderer {\n    (record: T): string;\n}\n\n/**\n * Renderer specification of a column that contains component type to be rendered in the cell and configuration for that\n * component. used by the {@link ComponentRendererOutletDirective}\n */\nexport interface ColumnRendererSpec extends ComponentRendererSpec {\n    /**\n     * A function that creates a config object required for the configuration of component that will be rendered in the column\n     * @param record An object to be transformed into {@link ComponentRenderer#config}. It's passed in by the calling\n     * component\n     */\n    config: (record?: R) => C;\n}\n\n/**\n * Configuration object defined in the caller. This contains properties for the column header (text, filtering,\n * sorting, toggling etc.,) and content for row cells.\n *\n * Example:\n * const gridColumn: GridColumn = {\n *   displayName: \"Column Heading\",\n *   renderer: \"someRecord.property\",\n *   hideable: \"NEVER\"\n * }\n *\n * The above column is rendered with \"Column Heading\" text in it's heading and it is not shown in the column toggler.\n * The value of the property \"someRecord.property\" is rendered in cells corresponding to the column.\n */\nexport interface GridColumn {\n    /**\n     * Header text for the column\n     */\n    displayName: string;\n\n    /**\n     * Used for sorting/filtering. Not needed for columns not filterable/sortable\n     * TODO: do we need to support array type for querying across multiple columns?\n     */\n    queryFieldName?: string;\n\n    /**\n     * If the renderer passed in is a\n     * - string: Used as default renderer. Can be a dot separated string to identify a nested property of the item\n     * - {@link FunctionRenderer}: When you want to create a calculated column, but don't need custom HTML\n     * - TemplateRef: When custom HTML is needed and when it has to be passed in as a inline HTML\n     * - {@link ColumnRendererSpec}: When HTML is needed and when the HTML is provided as a component\n     */\n    renderer: string | FunctionRenderer | ColumnRendererSpec;\n\n    /**\n     * Whether the column shows up in the column toggler and if the column shows up, it reflects the toggle state\n     */\n    hideable?: GridColumnHideable;\n\n    /**\n     * When there is no data, show this message.\n     *\n     * Try to avoid showing this before initial load.\n     */\n    emptyColumnPlaceholder?: string;\n\n    /**\n     * TODO: Should this be made to work with top level search on grids across all columns?\n     *  The above to-do is going to be worked on as part of https://jira.eng.vmware.com/browse/VDUCC-27 and\n     */\n    filter?: FilterRendererSpec>;\n\n    /**\n     * The configuration for the cliptext in the datagrid.\n     * Defaults to size: 'lg', mouseoutDelay: undefined.\n     * If null, will disable cliptext\n     */\n    cliptextConfig?: CliptextConfig;\n\n    /**\n     * Whether to show the column as sortable. Defaults to true\n     */\n    sortable?: boolean;\n\n    /**\n     * The class of the column header.\n     */\n    clrDgColumnClassName?: string;\n}\n\n/**\n * Utility function to enforce type safety on config object of components of {@link ComponentRenderer} type. Used for creating\n * component renderer specification of {@link ColumnRendererSpec} type\n *\n * Example usage:\n * const gridColumn = {\n *   renderer: ColumnComponentRendererSpec({type: BoldTextRendererComponent, config: record => ({text: ''})\n * }\n *\n * In the above example this method helps in making sure that:\n * - Value \"v\" returned by the config function is of BoldTextRendererConfig type for gridColumn.renderer\n *\n * #Note: 'C & {}' below makes the inference site for C be the constructor type from the first argument.\n * {@link https://stackoverflow.com/questions/59055154/typescript-generics-infer-type-from-the-type-of-function-arguments}\n */\nexport function ColumnComponentRendererSpec(componentRendererSpec: {\n    type: ComponentRendererConstructor;\n    config: (record?: R) => C & {};\n}): ColumnRendererSpec {\n    return componentRendererSpec;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GridDataFetchResult.html":{"url":"interfaces/GridDataFetchResult.html","title":"interface - GridDataFetchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GridDataFetchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                Representation of data required for rendering contents of cells and pagination information\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                            Optional\n                                        totalItems\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     R[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     R[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Items to be listed in the grid\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalItems\n                                    \n                                \n                                \n                                    \n                                        totalItems:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Total number of items\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GridState.html":{"url":"interfaces/GridState.html","title":"interface - GridState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GridState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\npart of the event DatagridComponent.gridRefresh. The handler then used this object to construct a query.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        filters\n                                \n                                \n                                            Optional\n                                        pagination\n                                \n                                \n                                            Optional\n                                        sortColumn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    FIQL formatted list of active filters\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                    \n                                \n                                \n                                    \n                                        pagination:         PagionationInformation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PagionationInformation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The pagination information that the datagrid should show.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortColumn\n                                    \n                                \n                                \n                                    \n                                        sortColumn:         SortedColumn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SortedColumn\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The currently sorted column in the datagrid.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasFinder.html":{"url":"interfaces/HasFinder.html","title":"interface - HasFinder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HasFinder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object.ts\n        \n\n            \n                Description\n            \n            \n                Can be used in tests that use this to share a finder with before/AfterEach instead of leaky closures\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        finder\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        finder\n                                    \n                                \n                                \n                                    \n                                        finder:         WidgetFinder\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WidgetFinder\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DebugElement, Type } from '@angular/core';\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\n\n/**\n * An implementation of the page object pattern, but applied to widgets, since they can be reused on multiple pages.\n *\n * The main purpose for the wrapper are providing access to the internals of a widget avoiding duplication of code that\n * queries the internals of a component from a test.\n *\n * ## Subclass Rules\n *\n * - Methods exposed by subclasses should not expose HTMLElements or DebugElements directly. That would encourage\n * callers to query it from the outside creating potential duplicate querying code and abstraction leaks.\n *  - Subclasses also should not have testing assertions. They should only provide the state and the calling test can\n * assert code on its own.\n *\n * `T` is the type of the JS/TS object being wrapped\n *\n * It is recommended that files for implementations be named with a `.wo.ts` extension\n */\nexport abstract class WidgetObject {\n    /**\n     *\n     * Constructor should only be called directly if you are directly instantiating the widget being wrapped (T). If you\n     * need to find a widget within the tree, you should use {@link find}.\n     *\n     * @param component The component instance being managed. Whenever possible, we should access the component's API.\n     * @param root The root element (host) for the component instance. We typically prefer to interact with the\n     * component but there are times when we must check the DOM.\n     * @param fixture The test fixture, so we can call {@link ComponentFixture#detectChanges} after something that\n     * requires re-rendering of the DOM.\n     */\n    constructor(\n        protected fixture: ComponentFixture,\n        protected root: DebugElement = fixture.debugElement,\n        public component: T = fixture.componentInstance\n    ) {}\n\n    detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Finds first element within this widget matching the given selector\n     * @param selector What to search for\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n    protected findElement(selector: string | Type, parent: DebugElement = this.root): DebugElement {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.query(query);\n    }\n\n    /**\n     * Same as {@link findElement} but returns all elements\n     */\n    protected findElements(selector: string | Type, parent: DebugElement = this.root): DebugElement[] {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.queryAll(query);\n    }\n\n    /**\n     * Clicks an element and detects changes so the DOM is immediately updated\n     * @param cssSelector Pass this in if you want to click a specific element. If not passed in, the entire node will\n     * receive the click event\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected click(cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.click();\n        this.detectChanges();\n    }\n\n    /**\n     * Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\n     * found by the {@param cssSelector} within the provided {@param parent} or the current root element.\n     * Setting the event properties is done with `Object.defineProperty` on the created event. This allows setting\n     * properties like `which` that is deprecated and cannot be set with the native approach of creating keyboard event.\n     * @param eventType The keyboard event type like 'keyup', 'keydown', 'keypress'\n     * @param eventProperties properties of the event like `code`, `key` etc.\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected sendKeyboardEvent(\n        eventType,\n        eventProperties: { [name: string]: unknown },\n        cssSelector?: string,\n        parent: DebugElement = this.root\n    ): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        // Create keyboard event that bubbles up the chain\n        const event = new KeyboardEvent(eventType, { bubbles: true });\n        // Use `Object.defineProperty` in order to be able to set even deprecated, readonly properties like `which`\n        Object.keys(eventProperties).forEach((key) => {\n            Object.defineProperty(event, key, { value: eventProperties[key] });\n        });\n        nativeElement.dispatchEvent(event);\n        this.detectChanges();\n    }\n\n    /**\n     * Sets the value of an input element or textarea element\n     * @param value the value that the element should display\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected setInputValue(value: string | number, cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLInputElement | HTMLTextAreaElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.value = String(value);\n        nativeElement.dispatchEvent(new Event('input'));\n        this.detectChanges();\n    }\n\n    /**\n     * Returns text content of this widget\n     * If the element cannot be found, gives empty string.\n     * @param cssSelector Pass this in if you want to retrieve text for a specific element within this widget.\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n\n    protected getText(cssSelector: string, parent: DebugElement = this.root): string {\n        const element = this.findElement(cssSelector, parent);\n        return element ? this.getNodeText(element) : '';\n    }\n\n    /**\n     * Same as {@link getText} but return the text for all matching nodes\n     */\n    protected getTexts(cssSelector: string): string[] {\n        return this.findElements(cssSelector).map((el) => this.getNodeText(el));\n    }\n\n    protected getNodeText(el: DebugElement): string {\n        // The || '' is because textContent could technically be null when passed in the document\n        // element object. We know that cannot be pased in here, so we ignore it for coverage\n        // but we still need the line there to make strictNullChecks work\n        return el.nativeElement.textContent.trim() || /* istanbul ignore next */ '';\n    }\n}\n\n/**\n * Subclasses should implement the FindableWidget interface so they can be found with {@link WidgetFinder}\n *\n * ## Note\n * This is done by creating a static property `tagName`on your subclass, not a regular instance, since this\n * interface represents a constructor for a {@link WidgetObject}, not an instance.\n */\nexport interface FindableWidget extends Type {\n    tagName: string;\n}\n\n/**\n * Arguments for {@link WidgetFinder#findWidgets} and {@link WidgetFinder#find}\n */\nexport interface FindParams {\n    /**\n     * The constructor of the widget to be found\n     */\n    woConstructor: T;\n    /**\n     * If provided, search starts from this container. It defaults to the fixture's root debugElement\n     */\n    ancestor?: DebugElement;\n    /**\n     * Optional CSS class name that can be used when there could be multiple instances of the object within the\n     * fixture tree\n     */\n    className?: string;\n}\n\n/**\n * @deprecated Finds instances that implement {@link FindableWidget}\n * H is the host component's type. This finder is only for old unit tests.\n * Please use AngularWidgetObjectFinder instead.\n */\nexport class WidgetFinder {\n    /**\n     * We don't care or could possibly know the type of fixture\n     */\n    private fixture: ComponentFixture;\n\n    /**\n     * If you need direct access to manipulate the host\n     */\n    public hostComponent: H;\n\n    /**\n     * @param componentConstructor The host component to be created as the root of the tests's fixture\n     */\n    constructor(componentConstructor: Type) {\n        this.fixture = TestBed.createComponent(componentConstructor);\n        this.hostComponent = this.fixture.componentInstance;\n    }\n\n    /**\n     * Finds widgets within a fixture\n     * @return A Potentially empty list of widgets matching the given specs\n     */\n    public findWidgets>(\n        params: FindParams | T,\n        parent?: DebugElement\n    ): InstanceType[] {\n        const defaults = { ancestor: this.fixture.debugElement, className: '' };\n        const { woConstructor, ancestor, className } = isFindParamsObject(params)\n            ? { ...defaults, ...params }\n            : { ...defaults, woConstructor: params };\n\n        let query = woConstructor.tagName;\n        if (className) {\n            query += `.${className}`;\n        }\n        const componentRoots = (parent ? parent : ancestor).queryAll(By.css(query));\n        const widgets = componentRoots.map(\n            // Typescript is not able to infer it correctly as the subclass but we know for sure\n            (root) => new woConstructor(this.fixture, root, root.componentInstance) as InstanceType\n        );\n        return widgets;\n    }\n\n    /**\n     * Finds a single widget object\n     * @throws An error if the widget is not found or if there are multiple instances\n     */\n    public find>(params: FindParams | T): InstanceType {\n        const widgets = this.findWidgets(params);\n        const tagName = isFindParamsObject(params) ? params.woConstructor.tagName : params.tagName;\n        if (widgets.length === 0) {\n            throw Error(`Did not find a `);\n        }\n        if (widgets.length > 1) {\n            throw Error(`Expected to find a single  but found ${widgets.length}`);\n        }\n        return widgets[0] as InstanceType;\n    }\n\n    public detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n}\n\nexport function isFindParamsObject(params: FindParams | T): params is FindParams {\n    return !!(params as FindParams).woConstructor;\n}\n/**\n * Can be used in tests that use `this` to share a finder with before/AfterEach instead of leaky closures\n */\nexport interface HasFinder {\n    finder: WidgetFinder;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISubscriptionTracker.html":{"url":"interfaces/ISubscriptionTracker.html","title":"interface - ISubscriptionTracker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISubscriptionTracker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/subscription/subscription-tracker.ts\n        \n\n            \n                Description\n            \n            \n                An interface that knows how to subscribe and unsubscribe from observables.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    subscribe\n                                \n                                \n                                    unsubscribe\n                                \n                                \n                                    unsubscribeAll\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subscribe\n                        \n                        \n                    \n                \n            \n            \n                \nsubscribe(observable: Observable, observerOrNext?: PartialObserver | , error?: (error?: any) => void, complete?: () => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/subscription/subscription-tracker.ts:18\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Subscribes to the given {@param observable}. Passes along the given {@param observerOrNext}.\nWill call the {@param complete} when complete, and {@param error} when errors happen.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    observerOrNext\n                                    \n                                            PartialObserver | \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    complete\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \nunsubscribe(subscription: Subscription)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/subscription/subscription-tracker.ts:28\n                \n            \n\n\n            \n                \n                    Unsubscribes from the given {@param subscription}.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subscription\n                                    \n                                            Subscription\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unsubscribeAll\n                        \n                        \n                    \n                \n            \n            \n                \nunsubscribeAll()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/subscription/subscription-tracker.ts:33\n                \n            \n\n\n            \n                \n                    Unsubscribes from all subscriptions on this Subscribable.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { OnDestroy } from '@angular/core';\nimport { Observable, PartialObserver, Subscription } from 'rxjs';\nimport { toSubscriber } from 'rxjs/internal-compatibility';\n\n/**\n * An interface that knows how to subscribe and unsubscribe from observables.\n */\nexport interface ISubscriptionTracker {\n    /**\n     * Subscribes to the given {@param observable}. Passes along the given {@param observerOrNext}.\n     * Will call the {@param complete} when complete, and {@param error} when errors happen.\n     */\n    subscribe(\n        observable: Observable,\n        observerOrNext?: PartialObserver | ((value: T) => void),\n        error?: (error: any) => void,\n        complete?: () => void\n    ): Subscription;\n\n    /**\n     * Unsubscribes from the given {@param subscription}.\n     */\n    unsubscribe(subscription: Subscription): Subscription;\n\n    /**\n     * Unsubscribes from all subscriptions on this {@link Subscribable}.\n     */\n    unsubscribeAll(): void;\n}\n\n/**\n * Components can use this to have subscriptions automatically removed when the component is destroyed\n */\nexport class SubscriptionTracker implements ISubscriptionTracker {\n    private subscriptions: Subscription[] = [];\n\n    /**\n     * Constructs this tracker to call {@link unsubscribeAll} when {@link OnDestroy.ngOnDestroy} is called.\n     */\n    constructor(destroyable: OnDestroy) {\n        const originalOnDestroy = destroyable.ngOnDestroy;\n        destroyable.ngOnDestroy = () => {\n            this.unsubscribeAll();\n            originalOnDestroy.call(destroyable);\n        };\n    }\n\n    subscribe(\n        observable: Observable,\n        observerOrNext?: PartialObserver | ((value: T) => void),\n        error?: (error: any) => void,\n        complete?: () => void\n    ): Subscription {\n        const subscription = observable.subscribe(toSubscriber(observerOrNext, error, complete));\n        this.subscriptions.push(subscription);\n        return subscription;\n    }\n\n    unsubscribe(subscription: Subscription): Subscription {\n        subscription.unsubscribe();\n        const indexOfSubscription = this.subscriptions.indexOf(subscription);\n        if (indexOfSubscription === -1) {\n            throw new Error('Unsubscribing to untracked subscription');\n        }\n        this.subscriptions.splice(indexOfSubscription, 1);\n        return subscription;\n    }\n\n    unsubscribeAll(): void {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdGenerator.html":{"url":"classes/IdGenerator.html","title":"class - IdGenerator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdGenerator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/id-generator/id-generator.ts\n        \n\n            \n                Description\n            \n            \n                Generates unique IDs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                idCounter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prefix: string)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/id-generator/id-generator.ts:17\n                            \n                        \n\n                \n                    \n                            The string to be prefixed for IdGenerator returned\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prefix\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            idCounter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/id-generator/id-generator.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generate\n                        \n                        \n                    \n                \n            \n            \n                \ngenerate()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/id-generator/id-generator.ts:15\n                \n            \n\n\n            \n                \n                    Getter that returns the a unique ID\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class IdGenerator {\n    private static idCounter = 0;\n\n    /**\n     * Getter that returns the a unique ID\n     */\n    generate(): string {\n        return `${this.prefix}-${IdGenerator.idCounter++}`;\n    }\n\n    /**\n     * The string to be prefixed for {@link IdGenerator#id} returned\n     */\n    constructor(private prefix: string) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingIndicatorComponent.html":{"url":"components/LoadingIndicatorComponent.html","title":"component - LoadingIndicatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoadingIndicatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/common/loading/loading-indicator.component.ts\n\n\n    \n        Description\n    \n    \n        Loading indicator for blocking modal dialogs while loading.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-loading-indicator\n            \n\n            \n                styleUrls\n                loading-indicator.component.scss\n            \n\n\n\n            \n                templateUrl\n                loading-indicator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _size\n                            \n                            \n                                    Private\n                                    Readonly\n                                defaultSpinnerSize\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                loadingTextKey\n                            \n                            \n                                showSpinner\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    size\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/loading/loading-indicator.component.ts:43\n                            \n                        \n                \n                    \n                        Show/hide the loading indicator.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loadingTextKey\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/loading/loading-indicator.component.ts:55\n                            \n                        \n                \n                    \n                        Text to show next to the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showSpinner\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/loading/loading-indicator.component.ts:49\n                            \n                        \n                \n                    \n                        Show/hide the spinner if only an overlay is required.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         SpinnerSize\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/loading/loading-indicator.component.ts:62\n                            \n                        \n                \n                    \n                        Spinner size setter.\nSets default size if provided value is not from specified sized.\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SpinnerSize\n\n                        \n                    \n                    \n                        \n                            Default value : this.defaultSpinnerSize\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/loading/loading-indicator.component.ts:38\n                            \n                        \n\n                \n                    \n                        Spinner size.\nSpinners can be displayed in three sizes:\n\nsm(Small): This is the required sizing for inline spinners (see above). It measures 18x18 pixels.\nmd(Medium): Medium spinners measure 36x36 pixels. Default.\nlg(Large): This is the default size for page spinners (see above).\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            defaultSpinnerSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SpinnerSize\n\n                        \n                    \n                    \n                        \n                            Default value : SIZES.md\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/loading/loading-indicator.component.ts:27\n                            \n                        \n\n                \n                    \n                        Default spinner size set to \"md\" - medium used within the modal dialogs\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n\n                \n                    \n                        getsize()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/common/loading/loading-indicator.component.ts:73\n                                \n                            \n                    \n                        \n                                Gives the size of this loading indicator.\n\n\n                                \n                                    Returns :         SpinnerSize\n\n                                \n                        \n                    \n\n                \n                    \n                        setsize(size)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/common/loading/loading-indicator.component.ts:62\n                                \n                            \n                    \n                        \n                                Spinner size setter.\nSets default size if provided value is not from specified sized.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            size\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nexport enum SIZES {\n    sm = 'sm',\n    md = 'md',\n    lg = 'lg',\n}\nexport type SpinnerSize = keyof typeof SIZES;\n\n/**\n * Loading indicator for blocking modal dialogs while loading.\n */\n@Component({\n    selector: 'vcd-loading-indicator',\n    templateUrl: 'loading-indicator.component.html',\n    styleUrls: ['loading-indicator.component.scss'],\n})\nexport class LoadingIndicatorComponent {\n    /**\n     * Default spinner size set to \"md\" - medium used within the modal dialogs\n     */\n    private readonly defaultSpinnerSize: SpinnerSize = SIZES.md;\n    /**\n     * Spinner size.\n     *\n     * Spinners can be displayed in three sizes:\n     *\n     *  - sm(Small): This is the required sizing for inline spinners (see above). It measures 18x18 pixels.\n     *  - md(Medium): Medium spinners measure 36x36 pixels. Default.\n     *  - lg(Large): This is the default size for page spinners (see above).\n     *\n     */\n    private _size: SpinnerSize = this.defaultSpinnerSize;\n    /**\n     * Show/hide the loading indicator.\n     */\n    @Input()\n    public isLoading: boolean;\n\n    /**\n     * Show/hide the spinner if only an overlay is required.\n     */\n    @Input()\n    public showSpinner = true;\n\n    /**\n     * Text to show next to the spinner.\n     */\n    @Input()\n    public loadingTextKey: string = null;\n\n    /**\n     * Spinner size setter.\n     * Sets default size if provided value is not from specified sized.\n     */\n    @Input()\n    set size(size: SpinnerSize) {\n        if (!size || Object.keys(SIZES).indexOf(size) === -1) {\n            this._size = this.defaultSpinnerSize;\n        } else {\n            this._size = size;\n        }\n    }\n\n    /**\n     * Gives the size of this loading indicator.\n     */\n    get size(): SpinnerSize {\n        return this._size;\n    }\n}\n\n    \n\n    \n        \n    \n    \n        \n             \n            {{ loadingTextKey | translate }}\n        \n    \n\n\n\n    \n\n    \n                \n                    loading-indicator.component.scss\n                \n                $overlay-background-color-default: rgba(250, 250, 250, 0.5);\n$overlay-background-color-modal: rgba(255, 255, 255, 0.5);\n\n@mixin full-height {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n}\n\n:host {\n    display: block;\n    position: relative;\n}\n\n:host-context(.modal-body) .overlay {\n    background-color: $overlay-background-color-modal;\n}\n\n.overlay {\n    background-color: $overlay-background-color-default;\n    @include full-height();\n    z-index: 10;\n}\n\n.indicator-container {\n    z-index: 600;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    @include full-height();\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                         {{ loadingTextKey | translate }}            '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoadingIndicatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocatorDriver.html":{"url":"interfaces/LocatorDriver.html","title":"interface - LocatorDriver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocatorDriver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object/widget-object.ts\n        \n\n            \n                Description\n            \n            \n                Knows how to find elements of a given type T in the DOM.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    findWidget\n                                \n                                \n                                    get\n                                \n                                \n                                    getByText\n                                \n                                \n                                    parents\n                                \n                                \n                                    unwrap\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findWidget\n                        \n                        \n                    \n                \n            \n            \n                \nfindWidget(widget: C, cssSelector?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/widget-object.ts:79\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        W\n                        C\n                    \n                \n            \n\n            \n                \n                    Returns an instance of the given widget within this widget object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    widget\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CorrectReturnTypes, T>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(cssSelector: string, options?: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/widget-object.ts:64\n                \n            \n\n\n            \n                \n                    Finds all child elements that match the given cssSelector.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LocatorDriver\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByText\n                        \n                        \n                    \n                \n            \n            \n                \ngetByText(cssSelector: string, value: string, options?: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/widget-object.ts:69\n                \n            \n\n\n            \n                \n                    Finds all child elements that match the given cssSelector and have text that contains the given value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LocatorDriver\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parents\n                        \n                        \n                    \n                \n            \n            \n                \nparents(cssSelector: string, options?: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/widget-object.ts:74\n                \n            \n\n\n            \n                \n                    Finds the closest parent that matches the given cssSelector.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LocatorDriver\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unwrap\n                        \n                        \n                    \n                \n            \n            \n                \nunwrap()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/widget-object.ts:87\n                \n            \n\n\n            \n                \n                    Unwraps the value from this query and turns it into the resulting object type.\n\n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        type ElementLocator = (options?: unknown) => T;\n\n/**\n * A class that is able to make queries to the DOM and be instantiated by a widget finder.\n * Widget objects should be used only to find elements in the DOM. You should not attempt to take\n * actions on these elements in a given widget object.\n *\n * All widget objects should extend this base class.\n *\n * @example\n *\n * class LoginWidgetObject extends BaseWidgetObject {\n *      getUsernameField = this.locatorForChild('.username');\n *\n *      getOkButton(): T {\n *          return this.driver.getByText('button', 'Ok').unwrap();\n *      }\n *\n *      getOkButtonContainer(): T {\n *          return this.driver.getByText('button', 'Ok').parent('.button-container').unwrap();\n *      }\n * }\n */\nexport class BaseWidgetObject {\n    protected locatorDriver?: LocatorDriver;\n    constructor(driver: LocatorDriver) {\n        this.locatorDriver = driver;\n    }\n\n    /**\n     * Returns an element locator that will find a child with the given cssSelector when called.\n     */\n    protected locatorForCssSelectors? = (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.get(cssSelector, options).unwrap();\n    };\n\n    /**\n     * Returns an element locator that will find a parent with the given cssSelector when called.\n     */\n    protected locatorForAncestors? = (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.parents(cssSelector, options).unwrap();\n    };\n\n    /**\n     * Returns an element locator that will find a child with the given cssSelector and text when called.\n     */\n    protected locatorForText? = (cssSelector: string, text: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.getByText(cssSelector, text, options).unwrap();\n    };\n}\n\n/**\n * Knows how to find elements of a given type T in the DOM.\n */\nexport interface LocatorDriver {\n    /**\n     * Finds all child elements that match the given cssSelector.\n     */\n    get(cssSelector: string, options?: unknown): LocatorDriver;\n\n    /**\n     * Finds all child elements that match the given cssSelector and have text that contains the given value.\n     */\n    getByText(cssSelector: string, value: string, options?: unknown): LocatorDriver;\n\n    /**\n     * Finds the closest parent that matches the given cssSelector.\n     */\n    parents(cssSelector: string, options?: unknown): LocatorDriver;\n\n    /**\n     * Returns an instance of the given widget within this widget object.\n     */\n    findWidget, C extends FindableWidget>(\n        widget: C,\n        cssSelector?: string\n    ): CorrectReturnTypes, T>;\n\n    /**\n     * Unwraps the value from this query and turns it into the resulting object type.\n     */\n    unwrap(): T;\n}\n\ntype ConvertGenericOnly = unknown extends CR ? R : CorrectReturnTypes;\n\n/**\n * Changes the class so that all functions/getters return R.\n */\nexport type CorrectReturnTypes = {\n    [P in keyof T]: T[P] extends (...args: any[]) => infer CR\n        ? (...args: Parameters) => ConvertGenericOnly\n        : ConvertGenericOnly;\n};\n\n/**\n * The interface that all WidgetObject classes must satisfy. This means that they must extend BaseWidgetObject and\n * have a static tagName.\n */\nexport interface FindableWidget> {\n    new (driver: LocatorDriver): W;\n    tagName: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem.html":{"url":"interfaces/MenuItem.html","title":"interface - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/dropdown/dropdown-focus-handler.directive.ts\n        \n\n            \n                Description\n            \n            \n                Object wrapping the focusable HTML elements of dropdown menu with the neighbors in 4 directions of each menu item.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        closeMenu\n                                \n                                \n                                            Optional\n                                        down\n                                \n                                \n                                        element\n                                \n                                \n                                            Optional\n                                        left\n                                \n                                \n                                            Optional\n                                        right\n                                \n                                \n                                            Optional\n                                        up\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        closeMenu\n                                    \n                                \n                                \n                                    \n                                        closeMenu:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Call back to close the menu for which this menu item can be a trigger. called from DropdownFocusHandlerService\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        down\n                                    \n                                \n                                \n                                    \n                                        down:         MenuItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuItem\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        element\n                                    \n                                \n                                \n                                    \n                                        element:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The HTML element of this dropdown menu item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                    \n                                \n                                \n                                    \n                                        left:         MenuItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuItem\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        right\n                                    \n                                \n                                \n                                    \n                                        right:         MenuItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuItem\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        up\n                                    \n                                \n                                \n                                    \n                                        up:         MenuItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuItem\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Neighboring menu items in all the 4 directions\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AfterViewInit, Directive, Host, OnDestroy, Optional, Renderer2, SkipSelf } from '@angular/core';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { DropdownFocusHandlerService } from './dropdown-focus-handler.service';\nimport { DropdownComponent } from './dropdown.component';\n\n/**\n * To filter out the non-activatable separator item type when creating linked menu list {@link #linkMenuItems}. Because, we don't\n * want the focus to go to separator item type when navigating using the arrow keys\n */\nenum ActivatableMenuItemType {\n    /**\n     * Menu item that results in executing of an action when clicked\n     */\n    BUTTON = 'button',\n    /**\n     * Activating this would open a nested menu\n     */\n    NESTED_VCD_DROPDOWN = 'vcd-dropdown',\n}\n\nconst NESTED_DROPDOWN_TRIGGER = 'clr-dropdown > button';\n\n/**\n * Arrow keys directions\n */\nexport enum Direction {\n    UP = 'up',\n    DOWN = 'down',\n    LEFT = 'left',\n    RIGHT = 'right',\n}\n\n/**\n * Object wrapping the focusable HTML elements of dropdown menu with the neighbors in 4 directions of each menu item.\n */\nexport interface MenuItem {\n    /**\n     * The HTML element of this dropdown menu item\n     */\n    element: HTMLElement;\n    /**\n     * Neighboring menu items in all the 4 directions\n     */\n    up?: MenuItem;\n    down?: MenuItem;\n    left?: MenuItem;\n    right?: MenuItem;\n    /**\n     * Call back to close the menu for which this menu item can be a trigger. called from {@link DropdownFocusHandlerService}\n     */\n    closeMenu?: () => void;\n}\n\n/**\n * Added on to vcd-dropdown component to link menu items of the dropdown on which this directive is added. each item is linked to its\n * neighbors in the 4 directions. It then uses the {@link DropdownFocusHandlerService} to move the DOM focus between the menu items.\n */\n@Directive({\n    selector: 'vcd-dropdown[vcdDropdownFocusHandler]',\n})\nexport class DropdownFocusHandlerDirective implements AfterViewInit, OnDestroy {\n    constructor(\n        @Optional() @SkipSelf() private parentVcdDropdown: DropdownComponent,\n        @Optional() @SkipSelf() private parentFocusHandler: DropdownFocusHandlerDirective,\n        @Host() private hostVcdDropdown: DropdownComponent,\n        private focusHandlerService: DropdownFocusHandlerService,\n        private renderer: Renderer2\n    ) {}\n\n    /**\n     * List of focusable menu items with their neighbors in 4 directions.\n     */\n    menuItems: MenuItem[];\n    /**\n     * The menu item which can toggle this menu. This can be the root dropdown trigger or nested menu trigger\n     */\n    private menuTrigger: MenuItem;\n    private dropdownTriggerEl: HTMLElement;\n    private clrDropdownMenuEl: HTMLElement;\n    private isRootDropdown = !this.parentVcdDropdown;\n    private timeoutId: number;\n    private subscriptionTracker = new SubscriptionTracker(this);\n    private unlistenRightArrowKeyPress: (...argArray: any[]) => any;\n\n    /**\n     * After a dropdown menu is opened, it creates {@link MenuItem} for each of the menu items along with their trigger menu item and links\n     * them. It also then moves the focus to first item in the opened menu list.\n     */\n    ngAfterViewInit(): void {\n        this.dropdownTriggerEl = this.hostVcdDropdown._dropdownTriggerEl;\n        this.listenToRightArrowKeyPressOnNestedTrigger();\n\n        this.subscriptionTracker.subscribe(this.hostVcdDropdown.dropdownMenuUpdated, (dropdown) => {\n            if (!dropdown) {\n                this.reset();\n                return;\n            }\n            this.clrDropdownMenuEl = dropdown.menu;\n            // We have to wait till the dropdown is opened for getting the menus trigger because, in case of a nested menu, the trigger is\n            // obtained from parent menus menuItems and they are not initialized even if we wait till the ngAfterViewInit hook\n            this.menuTrigger = this.isRootDropdown ? this.rootMenuTrigger : this.nestedMenuTrigger;\n            this.registerRootMenuContainer();\n            this.linkMenuItems();\n            this.moveFocusToFirstItem();\n        });\n    }\n\n    /**\n     * Sometimes when the right arrow key is pressed on a nested menu trigger, the event is propagating to sibling nested menu triggers and\n     * the event handlers attached to the menu triggers by clarity to toggle the menus are being invoked. Because of this, pressing right\n     * arrow on a nested menu is opening other sibling menus as well\n     */\n    private listenToRightArrowKeyPressOnNestedTrigger(): void {\n        if (this.isRootDropdown) {\n            return;\n        }\n        this.unlistenRightArrowKeyPress = this.renderer.listen(\n            this.dropdownTriggerEl,\n            'keydown.arrowright',\n            (event: Event) => event.stopPropagation()\n        );\n    }\n\n    private reset(): void {\n        if (this.isRootDropdown) {\n            this.focusHandlerService.unlistenFuncs.forEach((unlisten) => unlisten());\n        }\n        this.menuTrigger = null;\n        this.menuItems = null;\n    }\n\n    ngOnDestroy(): void {\n        if (this.unlistenRightArrowKeyPress) {\n            this.unlistenRightArrowKeyPress();\n        }\n    }\n\n    private registerRootMenuContainer(): void {\n        if (this.isRootDropdown) {\n            const rootMenuContainer = this.clrDropdownMenuEl;\n            this.focusHandlerService.listenToArrowKeys(rootMenuContainer);\n        }\n    }\n\n    private moveFocusToFirstItem(): void {\n        this.focusHandlerService.moveFocusTo(this.menuTrigger);\n        // After the menu is opened, the ClrDropdownMenu wouldn't be attached to the DOM until the next change detection cycle.\n        // So setTimeout is the only way to wait for the ClrDropdownMenu to be ready to move focus to first item.\n        this.timeoutId = window.setTimeout(() => {\n            if (this.parentVcdDropdown) {\n                this.focusHandlerService.moveFocus(Direction.RIGHT);\n            } else {\n                this.focusHandlerService.moveFocus(Direction.DOWN);\n            }\n            window.clearTimeout(this.timeoutId);\n        });\n    }\n\n    private getDropdownItemElement(item: Element): HTMLElement {\n        // We only need the underlying button that opens the nested dropdown as that is the activatable/focusable item\n        return (item.matches(ActivatableMenuItemType.BUTTON)\n            ? item\n            : item.querySelector(NESTED_DROPDOWN_TRIGGER)) as HTMLElement;\n    }\n\n    private linkMenuItems(): void {\n        const menuChildren: Element[] = Array.from(this.clrDropdownMenuEl.children);\n        this.menuItems = menuChildren\n            .filter(\n                (child) =>\n                    child.matches(ActivatableMenuItemType.BUTTON) ||\n                    child.matches(ActivatableMenuItemType.NESTED_VCD_DROPDOWN)\n            )\n            .map((child) => ({\n                element: this.getDropdownItemElement(child),\n                left: this.menuTrigger,\n            }));\n        this.linkVertical();\n        // Lint to menu trigger\n        if (this.isRootDropdown) {\n            this.menuTrigger.down = this.menuItems[0];\n        } else {\n            // If there is a parent dropdown, We have to link these menu items to their trigger in the parent dropdown\n            this.menuTrigger.right = this.menuItems[0];\n        }\n    }\n\n    private closeVcdDropdown = () => {\n        this.hostVcdDropdown.clrDropdown.toggleService.open = false;\n    };\n\n    private get rootMenuTrigger(): MenuItem {\n        return {\n            element: this.dropdownTriggerEl,\n            closeMenu: this.closeVcdDropdown,\n        };\n    }\n\n    private get nestedMenuTrigger(): MenuItem {\n        const menuTrigger = this.parentFocusHandler.menuItems.find((item) => {\n            return Object.is(item.element.innerText, this.dropdownTriggerEl.innerText);\n        });\n        menuTrigger.closeMenu = this.closeVcdDropdown;\n        return menuTrigger;\n    }\n\n    private linkVertical(): void {\n        this.menuItems.forEach((menuItem: MenuItem, index: number) => {\n            if (index > 0) {\n                menuItem.up = this.menuItems[index - 1];\n            }\n            if (index  1) {\n            this.menuItems[0].up = this.menuItems[this.menuItems.length - 1];\n            this.menuItems[this.menuItems.length - 1].down = this.menuItems[0];\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MockRecord.html":{"url":"interfaces/MockRecord.html","title":"interface - MockRecord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MockRecord\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/mock-data.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        age\n                                \n                                \n                                        city\n                                \n                                \n                                        details\n                                \n                                \n                                        name\n                                \n                                \n                                        state\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MockRecord {\n    name: string;\n    city: string;\n    state: string;\n    details: {\n        gender: string;\n    };\n    age: number;\n}\n\nexport const mockData: MockRecord[] = [\n    {\n        name: 'Person 1',\n        city: 'Palo Alto',\n        state: 'CA',\n        details: {\n            gender: 'Male',\n        },\n        age: 30,\n    },\n    {\n        name: 'Person 2',\n        city: 'Boston',\n        state: 'MA',\n        details: {\n            gender: 'Female',\n        },\n        age: 60,\n    },\n];\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MultiSelectOption.html":{"url":"interfaces/MultiSelectOption.html","title":"interface - MultiSelectOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MultiSelectOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts\n        \n\n            \n                Description\n            \n            \n                Same as the SelectOption but value is always a string\n\n            \n\n            \n                Extends\n            \n            \n                        SelectOption\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Host, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { SelectOption } from '../../common/interfaces/select-option';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { IdGenerator } from '../../utils/id-generator/id-generator';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\n/**\n * Same as the {@link SelectOption} but value is always a string\n */\nexport interface MultiSelectOption extends SelectOption {\n    value: string;\n}\n\nexport interface DatagridMultiSelectFilterConfig extends FilterConfig {\n    /**\n     * List of select options\n     */\n    options: MultiSelectOption[];\n}\n\n/**\n * Used internally for {@link DatagridMultiSelectFilterComponent.options} to add unique IDs to filter options. The IDs are used for\n * associating checkbox options with their labels in the HTML\n */\ninterface MultiSelectOptionInternal extends MultiSelectOption {\n    /**\n     * Unique identifier for each checkbox option instantiated in the HTML\n     */\n    id: string;\n}\n\nconst idGenerator = new IdGenerator('vcd-multiselect-filter-id');\n\n/**\n * Used within a clarity grid column {@link DatagridComponent} to render a filter widget with list of checkboxes to select\n * multiple options\n * Example usage:\n * columns: GridColumn[] = [{\n *      displayName: 'Custom Select filter',\n *      renderer: 'state',\n *      queryFieldName: 'state',\n *      filterRendererSpec: FilterComponentRendererSpec({\n *          type: DatagridMultiSelectFilterComponent,\n *          config: {\n *              options: [{\n *                  value: 'CA',\n *                  display: 'California'\n *              }, {\n *                  value: 'MA',\n *                  display: 'Massachusetts'\n *              }],\n *              value: ['MA', 'NC'],\n *          },\n *      }),\n *   }]\n */\n@Component({\n    selector: 'vcd-dg-multiselect-filter',\n    templateUrl: './datagrid-multiselect-filter.component.html',\n})\nexport class DatagridMultiSelectFilterComponent extends DatagridFilter\n    implements OnDestroy {\n    constructor(private filterContainer: ClrDatagridFilter) {\n        super(filterContainer);\n    }\n\n    /**\n     * Used inside the HTML to instantiate checkbox options\n     */\n    options: MultiSelectOptionInternal[];\n\n    createFormGroup(): FormGroup {\n        return new FormGroup({});\n    }\n\n    /**\n     * Overrides the config property because, the formGroup controls are defined by the config set by the caller.\n     * Value of each option becomes a formControl name inside the formGroup.\n     */\n    onBeforeSetConfig(config: DatagridMultiSelectFilterConfig): void {\n        this.options = config.options.map(option => ({\n            ...option,\n            id: idGenerator.generate(),\n        }));\n        // Remove all the form controls in the form before adding new controls\n        Object.keys(this.formGroup.controls).forEach(control => {\n            this.formGroup.removeControl(control);\n        });\n        config.options.forEach(option => {\n            this.formGroup.addControl(option.value, new FormControl(false));\n        });\n    }\n\n    protected getDebounceTimeMs(): number {\n        return 1000;\n    }\n\n    setValue(values: string[]): void {\n        values.forEach(frmCtrl => {\n            const correspondingFormCtrl = this.formGroup.get(frmCtrl);\n            if (!correspondingFormCtrl) {\n                throw Error(`A multi select filter option with value '${frmCtrl}' does not exist`);\n            }\n            correspondingFormCtrl.setValue(true);\n        });\n    }\n\n    getValue(): string {\n        const selectedFilters = Object.keys(this.formGroup.getRawValue())\n            .filter(formControl => this.formGroup.get(formControl).value)\n            .map(selectedOption => new FilterBuilder().is(this.queryField).equalTo(selectedOption));\n        return new FilterBuilder().any(...selectedFilters).getString();\n    }\n\n    isActive(): boolean {\n        return (\n            this.formGroup &&\n            !!Object.keys(this.formGroup.getRawValue()).filter(frmCtrl => this.formGroup.get(frmCtrl).value).length\n        );\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param options List of options for select input\n * @param value the default value that should go in this multi-select filter.\n */\nexport function DatagridMultiSelectFilter(\n    options: MultiSelectOption[],\n    value?: string[]\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridMultiSelectFilterComponent,\n        config: {\n            options,\n            value,\n        },\n    });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MultiSelectOptionInternal.html":{"url":"interfaces/MultiSelectOptionInternal.html","title":"interface - MultiSelectOptionInternal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MultiSelectOptionInternal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts\n        \n\n            \n                Description\n            \n            \n                Used internally for DatagridMultiSelectFilterComponent.options to add unique IDs to filter options. The IDs are used for\nassociating checkbox options with their labels in the HTML\n\n            \n\n            \n                Extends\n            \n            \n                        MultiSelectOption\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for each checkbox option instantiated in the HTML\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Host, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { SelectOption } from '../../common/interfaces/select-option';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { IdGenerator } from '../../utils/id-generator/id-generator';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\n/**\n * Same as the {@link SelectOption} but value is always a string\n */\nexport interface MultiSelectOption extends SelectOption {\n    value: string;\n}\n\nexport interface DatagridMultiSelectFilterConfig extends FilterConfig {\n    /**\n     * List of select options\n     */\n    options: MultiSelectOption[];\n}\n\n/**\n * Used internally for {@link DatagridMultiSelectFilterComponent.options} to add unique IDs to filter options. The IDs are used for\n * associating checkbox options with their labels in the HTML\n */\ninterface MultiSelectOptionInternal extends MultiSelectOption {\n    /**\n     * Unique identifier for each checkbox option instantiated in the HTML\n     */\n    id: string;\n}\n\nconst idGenerator = new IdGenerator('vcd-multiselect-filter-id');\n\n/**\n * Used within a clarity grid column {@link DatagridComponent} to render a filter widget with list of checkboxes to select\n * multiple options\n * Example usage:\n * columns: GridColumn[] = [{\n *      displayName: 'Custom Select filter',\n *      renderer: 'state',\n *      queryFieldName: 'state',\n *      filterRendererSpec: FilterComponentRendererSpec({\n *          type: DatagridMultiSelectFilterComponent,\n *          config: {\n *              options: [{\n *                  value: 'CA',\n *                  display: 'California'\n *              }, {\n *                  value: 'MA',\n *                  display: 'Massachusetts'\n *              }],\n *              value: ['MA', 'NC'],\n *          },\n *      }),\n *   }]\n */\n@Component({\n    selector: 'vcd-dg-multiselect-filter',\n    templateUrl: './datagrid-multiselect-filter.component.html',\n})\nexport class DatagridMultiSelectFilterComponent extends DatagridFilter\n    implements OnDestroy {\n    constructor(private filterContainer: ClrDatagridFilter) {\n        super(filterContainer);\n    }\n\n    /**\n     * Used inside the HTML to instantiate checkbox options\n     */\n    options: MultiSelectOptionInternal[];\n\n    createFormGroup(): FormGroup {\n        return new FormGroup({});\n    }\n\n    /**\n     * Overrides the config property because, the formGroup controls are defined by the config set by the caller.\n     * Value of each option becomes a formControl name inside the formGroup.\n     */\n    onBeforeSetConfig(config: DatagridMultiSelectFilterConfig): void {\n        this.options = config.options.map(option => ({\n            ...option,\n            id: idGenerator.generate(),\n        }));\n        // Remove all the form controls in the form before adding new controls\n        Object.keys(this.formGroup.controls).forEach(control => {\n            this.formGroup.removeControl(control);\n        });\n        config.options.forEach(option => {\n            this.formGroup.addControl(option.value, new FormControl(false));\n        });\n    }\n\n    protected getDebounceTimeMs(): number {\n        return 1000;\n    }\n\n    setValue(values: string[]): void {\n        values.forEach(frmCtrl => {\n            const correspondingFormCtrl = this.formGroup.get(frmCtrl);\n            if (!correspondingFormCtrl) {\n                throw Error(`A multi select filter option with value '${frmCtrl}' does not exist`);\n            }\n            correspondingFormCtrl.setValue(true);\n        });\n    }\n\n    getValue(): string {\n        const selectedFilters = Object.keys(this.formGroup.getRawValue())\n            .filter(formControl => this.formGroup.get(formControl).value)\n            .map(selectedOption => new FilterBuilder().is(this.queryField).equalTo(selectedOption));\n        return new FilterBuilder().any(...selectedFilters).getString();\n    }\n\n    isActive(): boolean {\n        return (\n            this.formGroup &&\n            !!Object.keys(this.formGroup.getRawValue()).filter(frmCtrl => this.formGroup.get(frmCtrl).value).length\n        );\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param options List of options for select input\n * @param value the default value that should go in this multi-select filter.\n */\nexport function DatagridMultiSelectFilter(\n    options: MultiSelectOption[],\n    value?: string[]\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridMultiSelectFilterComponent,\n        config: {\n            options,\n            value,\n        },\n    });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/NestedPropertyPipe.html":{"url":"pipes/NestedPropertyPipe.html","title":"pipe - NestedPropertyPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  NestedPropertyPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/common/pipes/nested-property.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Used for extracting the value of nested property of an object.\nExample:\nconst obj = {\n     a: {\n         b: {\n             c: 'c'\n         }\n     }\n}\nInvoking {{ obj | nestedProperty: 'a.b.c' }} in a template produces c\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        nestedProperty\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(item: any, property: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/pipes/nested-property.pipe.ts:32\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DatePipe, DecimalPipe } from '@angular/common';\nimport { Inject, LOCALE_ID, Pipe, PipeTransform } from '@angular/core';\n\nconst OBJECT_PROPERTY_SEPARATOR = '.';\nconst DATE_OBJECT_CLASS = '[object Date]';\n\n/**\n * Used for extracting the value of nested property of an object.\n *\n * Example:\n * const obj = {\n *     a: {\n *         b: {\n *             c: 'c'\n *         }\n *     }\n * }\n *\n * Invoking `{{ obj | nestedProperty: 'a.b.c' }}` in a template produces c\n */\n@Pipe({\n    name: 'nestedProperty',\n    pure: true,\n})\nexport class NestedPropertyPipe implements PipeTransform {\n    constructor(@Inject(LOCALE_ID) private localeId: string) {}\n    public transform(item: any, property: string): string {\n        if (!item || !property) {\n            return null;\n        }\n        const splitProperty = property.split(OBJECT_PROPERTY_SEPARATOR);\n        let returnValue;\n        if (splitProperty.length > 1) {\n            let value = item;\n            for (const nestedProp of splitProperty) {\n                if (isNullOrUndefined(value) || isNullOrUndefined(value[nestedProp])) {\n                    return null;\n                }\n                value = value[nestedProp];\n            }\n            returnValue = value;\n        } else {\n            if (isNullOrUndefined(item[property])) {\n                return null;\n            }\n            returnValue = item[property];\n        }\n\n        if (typeof returnValue === 'number') {\n            return new DecimalPipe(this.localeId).transform(returnValue);\n        }\n        return returnValue instanceof Date ? new DatePipe(this.localeId).transform(returnValue) : returnValue;\n    }\n}\n\n/**\n * Utility method for covering the 'null' and 'undefined' checks as 'value == null' is equivalent to 'value === null || value === undefined'\n */\nfunction isNullOrUndefined(value: unknown): boolean {\n    return value == null;\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoUnit.html":{"url":"classes/NoUnit.html","title":"class - NoUnit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoUnit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Unit\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                INSTANCE\n                            \n                            \n                                    Private\n                                    Readonly\n                                _multiplier\n                            \n                            \n                                    Private\n                                    Readonly\n                                _unitName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findBestUnit\n                            \n                            \n                                getUnitNameTranslationKey\n                            \n                            \n                                getValueWithUnitTranslationKey\n                            \n                            \n                                    Abstract\n                                findBestUnit\n                            \n                            \n                                    Public\n                                getBaseValue\n                            \n                            \n                                    Public\n                                getMultiplier\n                            \n                            \n                                    Public\n                                getOutputValue\n                            \n                            \n                                    Public\n                                getUnitName\n                            \n                            \n                                    Abstract\n                                getUnitNameTranslationKey\n                            \n                            \n                                    Abstract\n                                getValueWithUnitTranslationKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            INSTANCE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NoUnit\n\n                        \n                    \n                    \n                        \n                            Default value : new NoUnit(1, '')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts:490\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _multiplier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _unitName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \nfindBestUnit(value: number, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts:491\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \ngetUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts:495\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \ngetValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts:499\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBestUnit(value: number, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:71\n\n                \n            \n\n\n            \n                \n                    Returns the best unit out of available units for given value of current unit\nBest unit is a Unit whose converted value is less than 1000\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nList of available Units out of which best unit is calculated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBaseValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBaseValue(value: number)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:45\n\n                \n            \n\n\n            \n                \n                    Returns the value in base unit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMultiplier()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOutputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOutputValue(value, outputUnit: Unit)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:37\n\n                \n            \n\n\n            \n                \n                    Returns the value in outputUnit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    outputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nUnit to which value is converted\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUnitName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitName()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:61\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying unitName\nEx: MB, B, GHz, MHz, %\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:54\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying value with unit\nEx: 25 MB, 100 %, 2 GHz\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    AfterContentChecked,\n    Component,\n    Injectable,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Self,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, NgControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { TranslationService } from '@vcd/i18n';\nimport { SelectOption } from '../../common/interfaces';\nimport { SubscriptionTracker } from '../../common/subscription';\nimport { FormValidators } from '../../form/validators';\nimport { Unit } from '../../utils/unit/unit';\nimport { UnitFormatter } from '../../utils/unit/unit-formatter';\nimport { BaseFormControl } from '../base-form-control';\nimport { FormInputComponent } from '../form-input/form-input.component';\nimport { FormSelectComponent } from '../form-select/form-select.component';\n\n/**\n * -1 is the number to specify a value of unlimited.\n */\nexport const UNLIMITED = -1;\n\n/**\n * A numerical form input component with unit selection and unlimited checkbox.\n *\n * If a single element array is provided for the units, then there is no unit selection\n * but rather a string notation for the unit. If the array is empty then there are no units at all.\n *\n * The display of unlimited checkbox is configurable.\n */\n@Component({\n    selector: 'vcd-number-with-unit-form-input',\n    templateUrl: './number-with-unit-form-input.component.html',\n    styleUrls: ['./number-with-unit-form-input.component.scss'],\n})\nexport class NumberWithUnitFormInputComponent\n    extends BaseFormControl\n    implements OnChanges, OnInit, OnDestroy, AfterContentChecked {\n    /**\n     * List of available units. Consider the following options for the array:\n     * # array with more than one elements\n     *    - a dropdown unit selection is shown. You must also provide {@link inputValueUnit}\n     * # single element array\n     *    - a string notation for no dropdown, {@link inputValueUnit} is derived from the element\n     * # empty array\n     *    - no units at all\n     */\n    @Input()\n    set unitOptions(unitOptions: Unit[]) {\n        this._unitOptions = unitOptions || [];\n\n        if (this._unitOptions.length === 1) {\n            this.inputValueUnit = this._unitOptions[0];\n        }\n\n        this.comboOptionUnitMap.clear();\n        this.comboOptions = [];\n        this._unitOptions.forEach((unitOption) => {\n            const comboOption: SelectOption = {\n                display: unitOption.getUnitName(),\n                value: unitOption.getMultiplier(),\n            };\n            this.comboOptionUnitMap.set(comboOption, unitOption);\n            this.comboOptions.push(comboOption);\n        });\n    }\n\n    get unitOptions(): Unit[] {\n        return this._unitOptions;\n    }\n\n    /**\n     * The base unit of the component. The value of this FormControl is calculated based on this property.\n     * Required when a multi element array is provided for {@link unitOptions} and it should be one of those values.\n     */\n    @Input() inputValueUnit: Unit;\n\n    /**\n     * The initial display unit.\n     * This is useful if you want to prevent finding best match when displaying a value for the first time.\n     * For example if you provide 1024 MB and you want it to be displayed as 1024MB instead of 1GB\n     */\n    @Input() initialValueUnit: Unit;\n\n    /**\n     * Show the Unlimited checkbox. Can be set just once only at render time.\n     */\n    @Input() showUnlimitedOption = true;\n\n    /**\n     * The value when the component is set to unlimited. Default is -1.\n     */\n    @Input() unlimitedValue: number = UNLIMITED;\n\n    /**\n     * Minimum value allowed relevant to {@link inputValueUnit}. Default is 0.\n     */\n    @Input() min: number = 0;\n\n    /**\n     * Maximum value allowed relevant to {@link inputValueUnit}. Default is {@link Number.MAX_SAFE_INTEGER}.\n     */\n    @Input() max: number = Number.MAX_SAFE_INTEGER;\n\n    /**\n     * Input 'placeholder' field.\n     */\n    @Input() placeholder: string = null;\n\n    /**\n     * Input 'size' field.\n     */\n    @Input() size: number = 10;\n\n    /**\n     * Maximum number of characters (in UTF-16 code units) that the user can enter.\n     */\n    @Input() maxlength: number = null;\n\n    /**\n     * Hint to display in the content of a signpost\n     */\n    @Input() hint: string;\n\n    /**\n     * The direction for displaying the hint\n     */\n    @Input() hintPosition = 'top-left';\n\n    public formGroup: FormGroup;\n\n    private _unitOptions: Unit[] = [];\n\n    /**\n     * A drop down of available units\n     *\n     * This list is constructed from list of\n     * available units in {@link unitOptions}\n     */\n    comboOptions: SelectOption[] = [];\n\n    /**\n     * Map of SelectOption and Unit which is used to\n     * extract Unit for a given SelectOption.\n     */\n    private comboOptionUnitMap: Map = new Map();\n\n    // value set to the number input of the formGroup\n    private bestValue: number = null;\n\n    // unit set to the selected dropdown select of the formGroup\n    private bestUnit: Unit;\n\n    /**\n     * The minimum value calculated from the {@link min} value converted to the currently selected unit\n     */\n    unitMin: number;\n\n    /**\n     * The maximum value calculated from the {@link max} value converted to the currently selected unit\n     */\n    unitMax: number;\n\n    /**\n     * This is the last real value for the input. Used in case when user toggles the unlimited checkbox twice in a row.\n     * When unlimited is checked the value of the input is cleared, then when toggled again, the input value should be\n     * set to the last value.\n     */\n    lastRealValue: number = null;\n\n    /**\n     * Set the unit in the dropdown.\n     * @param value Should be one of the value that you pass in {@link #unitOptions} to select the Unit.\n     */\n    set selectedUnit(value: number) {\n        this.formGroup.get('comboUnitOptions').setValue(value);\n    }\n\n    @ViewChild('unitDropdown', { static: false }) unitDropdown: FormSelectComponent;\n    @ViewChild('limitedInput', { static: false }) limitedInput: FormInputComponent;\n\n    tracker = new SubscriptionTracker(this);\n\n    constructor(\n        @Self() @Optional() controlDirective: NgControl,\n        private fb: FormBuilder,\n        private translationService: TranslationService,\n        private unitFormatter: UnitFormatter\n    ) {\n        super(controlDirective);\n    }\n\n    ngOnDestroy(): void {\n        this.tracker.unsubscribeAll();\n    }\n\n    ngOnInit(): void {\n        // Calculate the best unit and value. Take into account if initial unit is provided.\n        if (this.initialValueUnit) {\n            this.bestUnit = this.initialValueUnit;\n            this.bestValue = this.initialValue\n                ? this.inputValueUnit.getOutputValue(this.initialValue, this.bestUnit)\n                : null;\n        } else {\n            this.computeBestUnitAndValue(this.initialValue as number);\n        }\n\n        // Build the form group based on the best unit and value, considering also if unlimited is enabled\n        if (!this.showUnlimitedOption) {\n            this.formGroup = this.fb.group({\n                limited: [this.bestValue === this.unlimitedValue ? null : this.bestValue],\n                comboUnitOptions: this.bestUnit.getMultiplier(),\n            });\n        } else {\n            this.formGroup = this.fb.group({\n                limited: [this.bestValue === this.unlimitedValue ? null : this.bestValue],\n                comboUnitOptions: [this.bestUnit.getMultiplier()],\n                unlimited: this.bestValue === this.unlimitedValue,\n            });\n            // Remember the value in case the control value is programmatically set to unlimited\n            if (this.bestValue !== this.unlimitedValue) {\n                this.lastRealValue = this.bestValue;\n            }\n            this.tracker.subscribe(this.formGroup.get('unlimited').valueChanges, (unlimitedChecked) => {\n                const input = this.formGroup.get('limited');\n                if (unlimitedChecked) {\n                    // When going to unlimited remember the value of the input before clearing it\n                    this.lastRealValue = input.value;\n                    input.setValue(null);\n                } else {\n                    input.setValue(this.lastRealValue);\n                }\n                this.updateUnlimitedDisabledState();\n            });\n        }\n        this.tracker.subscribe(this.formGroup.get('comboUnitOptions').valueChanges, () => {\n            // Mark the input as dirty since if it was not touched no error will be displayed even if there are some\n            this.recalculateUnitMinMax();\n            this.onChange(this.getValue());\n        });\n        this.tracker.subscribe(this.formGroup.get('limited').valueChanges, () => {\n            this.onChange(this.getValue());\n        });\n        this.recalculateUnitMinMax();\n        this.updateUnlimitedDisabledState();\n        // This code should be here since the formGroup has been created in the ngOnInit. If the disabled()\n        // call has been done in a constructor this component would not have been initialized\n        if (this.disabled) {\n            this.updateDisabledState(true, true);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.recalculateUnitMinMax();\n    }\n\n    ngAfterContentChecked(): void {\n        if (!this.limitedInput) {\n            return;\n        }\n        Object.defineProperty(this.limitedInput, 'showErrors', {\n            get: this.limitedInputShowErrors,\n        });\n    }\n\n    limitedInputShowErrors = () => {\n        return this.showErrors && this.errors ? {} : null;\n    };\n\n    writeValue(value: number): void {\n        if (!this.formGroup) {\n            this.initialValue = value;\n            return;\n        }\n        const input = this.formGroup.get('limited');\n        if (value === null) {\n            if (this.showUnlimitedOption) {\n                // Set Unlimited checkbox to false because the form control was reset\n                this.formGroup.get('unlimited').setValue(false);\n            }\n            input.setValue(null);\n            this.updateUnlimitedDisabledState();\n            return;\n        }\n\n        if (this.showUnlimitedOption) {\n            if (value !== this.unlimitedValue) {\n                this.computeBestUnitAndValue(value);\n                this.lastRealValue = this.bestValue;\n                input.setValue(this.bestValue);\n                this.selectedUnit = this.bestUnit.getMultiplier();\n            }\n            this.formGroup.get('unlimited').setValue(value === this.unlimitedValue);\n        } else {\n            this.computeBestUnitAndValue(value);\n            this.lastRealValue = this.bestValue;\n            input.setValue(this.bestValue);\n            this.selectedUnit = this.bestUnit.getMultiplier();\n        }\n\n        this.updateUnlimitedDisabledState();\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this.updateDisabledState(isDisabled, true);\n    }\n\n    private updateUnlimitedDisabledState(): void {\n        if (!this.showUnlimitedOption || this.disabled) {\n            return;\n        }\n        this.updateDisabledState(this.formGroup?.get('unlimited')?.value, false);\n    }\n\n    updateDisabledState(isDisabled: boolean, updateUnlimitedCheckbox: boolean): void {\n        if (this.formGroup) {\n            // Do not emit when changing the disable state\n            if (isDisabled) {\n                this.formGroup.get('comboUnitOptions').disable({ emitEvent: false });\n                this.formGroup.get('limited').disable({ emitEvent: false });\n                if (updateUnlimitedCheckbox) {\n                    this.formGroup.get('unlimited')?.disable({ emitEvent: false });\n                }\n            } else {\n                this.formGroup.get('comboUnitOptions').enable({ emitEvent: false });\n                this.formGroup.get('limited').enable({ emitEvent: false });\n                if (updateUnlimitedCheckbox) {\n                    this.formGroup.get('unlimited')?.enable({ emitEvent: false });\n                }\n            }\n        }\n    }\n\n    private computeBestUnitAndValue(value: number): void {\n        if (this.unitOptions.length === 0) {\n            this.bestValue = value;\n            this.bestUnit = NoUnit.INSTANCE;\n        } else if (value === null) {\n            this.bestValue = null;\n            this.bestUnit = this.unitOptions[0];\n        } else {\n            this.bestUnit = this.inputValueUnit.findBestUnit(value, this.unitOptions);\n            this.bestValue = this.inputValueUnit.getOutputValue(value, this.bestUnit);\n        }\n    }\n\n    private getValue(): number {\n        if (this.formGroup.get('unlimited')?.value) {\n            return this.unlimitedValue;\n        }\n\n        const value = this.formGroup.get('limited').value;\n        if (value && this.unitOptions.length) {\n            return this.getSelectedUnit().getOutputValue(value, this.inputValueUnit);\n        }\n        return value;\n    }\n\n    private getSelectedUnit(): Unit {\n        const value = this.formGroup.get('comboUnitOptions').value;\n        const selectedComboUnit = this.comboOptions.find(\n            // tslint:disable-next-line:triple-equals\n            (co) => co.value == value\n        );\n        const selectedUnit = this.comboOptionUnitMap.get(selectedComboUnit);\n        return selectedUnit;\n    }\n\n    private recalculateUnitMinMax(): void {\n        if (!this.formGroup) {\n            return;\n        }\n        const selectedUnit = this.getSelectedUnit();\n        this.unitMin = selectedUnit ? this.inputValueUnit.getOutputValue(this.min, selectedUnit) : this.min;\n        this.unitMax = selectedUnit ? this.inputValueUnit.getOutputValue(this.max, selectedUnit) : this.max;\n    }\n\n    get displayValue(): string {\n        if (this.formGroup.get('unlimited') && this.formGroup.get('unlimited').value) {\n            return this.translationService.translate('vcd.cc.unlimited');\n        }\n\n        const value = this.formGroup.get('limited').value;\n        if (value) {\n            if (this.unitDropdown) {\n                // Return the value and the selected unit.\n                const inputUnit: Unit = this.comboOptionUnitMap.get(this.unitDropdown.selectedOption);\n                return this.unitFormatter.bestFormat(value, inputUnit, this.unitOptions);\n            } else if (this.unitOptions.length === 1) {\n                // Return the value and the predefined unit. For example, 100 %.\n                return this.unitFormatter.bestFormat(value, this.unitOptions[0], this.unitOptions);\n            } else if (this.isReadOnly) {\n                // Return the value with best unit when #limited FormControl.value\n                // is set programmatically\n\n                const displayComboUnit = this.comboOptions.find(\n                    // tslint:disable-next-line:triple-equals\n                    (co) => co.value == this.formGroup.get('comboUnitOptions').value\n                );\n                const displayUnit = this.comboOptionUnitMap.get(displayComboUnit);\n                if (displayUnit) {\n                    return this.unitFormatter.bestFormat(value, displayUnit, this.unitOptions);\n                }\n            }\n            // Return only the value when unitOptions was not set.\n            return value.toString();\n        }\n        return;\n    }\n\n    /**\n     * Up to now (when this function has been introduced) all our form errors were in the form\n     * `{ [key]: true }` which made it quite impossible to add custom parameters for translation.\n     *  `errorLabels` are a perfect example for this use case\n     *\n     * Now the errors are in format `{ [key]: any }` where any can be either an array [] for positional\n     * based message format or `{msgKey: string}` for a named message format.\n     *\n     * For `errorLabels` we\n     *\n     */\n    get errors(): ValidationErrors {\n        if (this.errorLabels.length) {\n            return this.errorLabels.reduce(\n                (acc, cur) => ({\n                    ...acc,\n                    [cur]: true,\n                }),\n                {}\n            );\n        }\n        return this.formControl.errors;\n    }\n\n    getErrorTranslationParams(errorObjectValue: any): any {\n        // `errorObjectValue === true` is the 'old' case see comments for `errors`\n        if (!errorObjectValue || errorObjectValue === true) {\n            return [this.getValue(), this.min.toString(), this.max.toString()];\n        }\n        return errorObjectValue;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class NumberWithUnitsFormValidatorsFactory {\n    constructor(private unitFormatter: UnitFormatter) {}\n\n    public isInRange(min: number, max: number, inputUnit: Unit, availableUnits: Unit[], unlimited = -1): ValidatorFn {\n        const res = FormValidators.createNullSafeValidator((control: any) => {\n            const value = control.value;\n\n            const isNumber = !isNaN(Number(control.value)) && isFinite(control.value);\n\n            if (isNumber) {\n                if (value >= min && value \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NumberUnit.html":{"url":"classes/NumberUnit.html","title":"class - NumberUnit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NumberUnit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/unit/unit.ts\n        \n\n            \n                Description\n            \n            \n                Finds the bestUnit by trying groups of the comparison number\n\n            \n\n            \n                Extends\n            \n            \n                        Unit\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _multiplier\n                            \n                            \n                                    Private\n                                    Readonly\n                                _unitName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findBestUnit\n                            \n                            \n                                    Abstract\n                                getAllUnitTypes\n                            \n                            \n                                    Protected\n                                    Abstract\n                                getUnitMultiplier\n                            \n                            \n                                    Abstract\n                                findBestUnit\n                            \n                            \n                                    Public\n                                getBaseValue\n                            \n                            \n                                    Public\n                                getMultiplier\n                            \n                            \n                                    Public\n                                getOutputValue\n                            \n                            \n                                    Public\n                                getUnitName\n                            \n                            \n                                    Abstract\n                                getUnitNameTranslationKey\n                            \n                            \n                                    Abstract\n                                getValueWithUnitTranslationKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _multiplier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _unitName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \nfindBestUnit(value: number, availableUnits: NumberUnit[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:89\n                \n            \n\n\n            \n                \n                    Calculates the best unit out of available units to display in UI cell for a given input Unit\nand value\nBest unit is a Unit whose converted value is less than the comparison number\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nValue of input Unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                            NumberUnit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.getAllUnitTypes()\n                                    \n\n                                    \n                                        \nArray of available Units to display in UI cell\navailableUnits array should be pre-sorted ascending by multiplier\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getAllUnitTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUnitTypes()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     NumberUnit[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            getUnitMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitMultiplier()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:112\n                \n            \n\n\n            \n                \n                    Returns the number that you multiply by to get the next order unit.\n\n\n                    \n                        Example :\n                        \n                            1024 would be the multiplier for Byte.\n                        \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBestUnit(value: number, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:71\n\n                \n            \n\n\n            \n                \n                    Returns the best unit out of available units for given value of current unit\nBest unit is a Unit whose converted value is less than 1000\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nList of available Units out of which best unit is calculated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBaseValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBaseValue(value: number)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:45\n\n                \n            \n\n\n            \n                \n                    Returns the value in base unit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMultiplier()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOutputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOutputValue(value, outputUnit: Unit)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:37\n\n                \n            \n\n\n            \n                \n                    Returns the value in outputUnit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    outputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nUnit to which value is converted\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUnitName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitName()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:61\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying unitName\nEx: MB, B, GHz, MHz, %\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:54\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying value with unit\nEx: 25 MB, 100 %, 2 GHz\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Unit {\n    private readonly _multiplier: number;\n    private readonly _unitName: string;\n\n    /**\n     * @param multiplier - Value that is used to convert this to base unit\n     * @param unitName - Name of the Unit. Also used to construct translation\n     * keys for each type of Unit.\n     */\n    constructor(private multiplier: number, private unitName: string) {\n        this._multiplier = multiplier;\n        this._unitName = unitName;\n    }\n\n    public getMultiplier(): number {\n        return this._multiplier;\n    }\n\n    public getUnitName(): string {\n        return this._unitName;\n    }\n\n    /**\n     * Returns the value in outputUnit for this unit\n     * @param value - Value of this unit\n     * @param outputUnit - Unit to which value is converted\n     */\n    public getOutputValue(value, outputUnit: Unit): number {\n        return this.getBaseValue(value) / outputUnit.multiplier;\n    }\n\n    /**\n     * Returns the value in base unit for this unit\n     * @param value - Value of this unit\n     */\n    public getBaseValue(value: number): number {\n        return value * this.multiplier;\n    }\n\n    /**\n     * Translation key to be used when displaying value with unit\n     *\n     * Ex: 25 MB, 100 %, 2 GHz\n     */\n    abstract getValueWithUnitTranslationKey(): string;\n\n    /**\n     * Translation key to be used when displaying unitName\n     *\n     * Ex: MB, B, GHz, MHz, %\n     */\n    abstract getUnitNameTranslationKey(): string;\n\n    /**\n     * Returns the best unit out of available units for given value of current unit\n     *\n     * Best unit is a Unit whose converted value is less than 1000\n     *\n     * @param value - Value of this unit\n     * @param availableUnits - List of available Units out of which best unit is calculated\n     */\n    abstract findBestUnit(value: number, availableUnits: Unit[]): Unit;\n}\n\n/**\n * Finds the bestUnit by trying groups of the comparison number\n */\nabstract class NumberUnit extends Unit {\n    /**\n     * Calculates the best unit out of available units to display in UI cell for a given input Unit\n     * and value\n     *\n     * Best unit is a Unit whose converted value is less than the comparison number\n     *\n     * @param value - Value of input Unit\n     * @param availableUnits - Array of available Units to display in UI cell\n     * availableUnits array should be pre-sorted ascending by multiplier\n     *\n     */\n    findBestUnit(value: number, availableUnits: NumberUnit[] = this.getAllUnitTypes()): Unit {\n        if (value >= this.getUnitMultiplier()) {\n            const baseValue = this.getBaseValue(value);\n            let outputNumber = baseValue;\n            const unitTypes = availableUnits;\n            let i = 0;\n            while (outputNumber >= this.getUnitMultiplier() && i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NumberWithUnitFormInputWidgetObject.html":{"url":"classes/NumberWithUnitFormInputWidgetObject.html","title":"class - NumberWithUnitFormInputWidgetObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NumberWithUnitFormInputWidgetObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts\n        \n\n            \n                Description\n            \n            \n                Test wrapper for the VCD Number With Unit Form Input component.\n\n            \n\n            \n                Extends\n            \n            \n                        WidgetObject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                tagName\n                            \n                            \n                                    Public\n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNativeElement\n                            \n                            \n                                selectUnit\n                            \n                            \n                                setInputValueUnit\n                            \n                            \n                                setUnitOptionsToNone\n                            \n                            \n                                setUnitOptionsToPercent\n                            \n                            \n                                    Protected\n                                click\n                            \n                            \n                                detectChanges\n                            \n                            \n                                    Protected\n                                findElement\n                            \n                            \n                                    Protected\n                                findElements\n                            \n                            \n                                    Protected\n                                getNodeText\n                            \n                            \n                                    Protected\n                                getText\n                            \n                            \n                                    Protected\n                                getTexts\n                            \n                            \n                                    Protected\n                                sendKeyboardEvent\n                            \n                            \n                                    Protected\n                                setInputValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    formControl\n                                \n                                \n                                    displayValue\n                                \n                                \n                                    readonlyText\n                                \n                                \n                                    unlimitedFormControl\n                                \n                                \n                                    valueFormControl\n                                \n                                \n                                    unitFormControl\n                                \n                                \n                                    selectedUnit\n                                \n                                \n                                    selectedUnitDisplayValue\n                                \n                                \n                                    isUnitDropDownDisplayed\n                                \n                                \n                                    singleUnitDisplayText\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tagName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd-number-with-unit-form-input'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : fixture.componentInstance\n                        \n                    \n                            \n                                \n                                    Inherited from         WidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         WidgetObject:42\n\n                            \n                        \n\n                \n                    \n                        The component instance being managed. Whenever possible, we should access the component's API.\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNativeElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetNativeElement(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HTMLElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectUnit\n                        \n                        \n                    \n                \n            \n            \n                \nselectUnit(unit: Unit)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setInputValueUnit\n                        \n                        \n                    \n                \n            \n            \n                \nsetInputValueUnit(unit: Unit)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setUnitOptionsToNone\n                        \n                        \n                    \n                \n            \n            \n                \nsetUnitOptionsToNone()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setUnitOptionsToPercent\n                        \n                        \n                    \n                \n            \n            \n                \nsetUnitOptionsToPercent()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    click(cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:73\n\n                \n            \n\n\n            \n                \n                    Clicks an element and detects changes so the DOM is immediately updated\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to click a specific element. If not passed in, the entire node will\nreceive the click event\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \ndetectChanges()\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElement(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:54\n\n                \n            \n\n\n            \n                \n                    Finds first element within this widget matching the given selector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        What to search for\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DebugElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElements\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElements(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:62\n\n                \n            \n\n\n            \n                \n                    Same as findElement but returns all elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DebugElement[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getNodeText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeText(el: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:140\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getText(cssSelector: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:128\n\n                \n            \n\n\n            \n                \n                    Returns text content of this widget\nIf the element cannot be found, gives empty string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to retrieve text for a specific element within this widget.\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getTexts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTexts(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:136\n\n                \n            \n\n\n            \n                \n                    Same as getText but return the text for all matching nodes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            sendKeyboardEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendKeyboardEvent(eventType, eventProperties: literal type, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:90\n\n                \n            \n\n\n            \n                \n                    Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\nfound by the {@param cssSelector} within the provided {@param parent} or the current root element.\nSetting the event properties is done with Object.defineProperty on the created event. This allows setting\nproperties like which that is deprecated and cannot be set with the native approach of creating keyboard event.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    eventType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The keyboard event type like 'keyup', 'keydown', 'keypress'\n\n                                    \n                                \n                                \n                                    eventProperties\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        properties of the event like code, key etc.\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setInputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setInputValue(value: string | number, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:114\n\n                \n            \n\n\n            \n                \n                    Sets the value of an input element or textarea element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        the value that the element should display\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                \n\n                \n                    \n                        getformControl()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:17\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        displayValue\n                    \n                \n\n                \n                    \n                        getdisplayValue()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:21\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        readonlyText\n                    \n                \n\n                \n                    \n                        getreadonlyText()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:28\n                                \n                            \n                    \n                        \n                                Reads from the readonly section. If widget is not readonly, it returns an empty string;\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        unlimitedFormControl\n                    \n                \n\n                \n                    \n                        getunlimitedFormControl()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:32\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        valueFormControl\n                    \n                \n\n                \n                    \n                        getvalueFormControl()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:36\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        unitFormControl\n                    \n                \n\n                \n                    \n                        getunitFormControl()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:40\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        selectedUnit\n                    \n                \n\n                \n                    \n                        getselectedUnit()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:52\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        selectedUnitDisplayValue\n                    \n                \n\n                \n                    \n                        getselectedUnitDisplayValue()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:56\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isUnitDropDownDisplayed\n                    \n                \n\n                \n                    \n                        getisUnitDropDownDisplayed()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:81\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        singleUnitDisplayText\n                    \n                \n\n                \n                    \n                        getsingleUnitDisplayText()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:88\n                                \n                            \n                    \n                        \n                                Returns an empty string if there is no HTML for single unit\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { AbstractControl } from '@angular/forms';\nimport { WidgetObject } from '../../utils/test/widget-object';\nimport { Percent, Unit } from '../../utils/unit/unit';\nimport { NumberWithUnitFormInputComponent } from './number-with-unit-form-input.component';\n\n/**\n * Test wrapper for the VCD Number With Unit Form Input component.\n */\nexport class NumberWithUnitFormInputWidgetObject extends WidgetObject {\n    static tagName = 'vcd-number-with-unit-form-input';\n\n    get formControl(): AbstractControl {\n        return this.component.formControl;\n    }\n\n    get displayValue(): string {\n        return this.component.displayValue;\n    }\n\n    /**\n     * Reads from the readonly section. If widget is not readonly, it returns an empty string;\n     */\n    get readonlyText(): string {\n        return this.getText('.readonly-text');\n    }\n\n    get unlimitedFormControl(): AbstractControl {\n        return this.component.formGroup.get('unlimited');\n    }\n\n    get valueFormControl(): AbstractControl {\n        return this.component.formGroup.get('limited');\n    }\n\n    get unitFormControl(): AbstractControl {\n        return this.component.formGroup.get('comboUnitOptions');\n    }\n\n    selectUnit(unit: Unit): void {\n        this.component.selectedUnit = unit.getMultiplier();\n    }\n\n    setInputValueUnit(unit: Unit): void {\n        this.component.inputValueUnit = unit;\n    }\n\n    get selectedUnit(): number {\n        return this.component.formGroup.get('comboUnitOptions').value;\n    }\n\n    get selectedUnitDisplayValue(): string {\n        return (\n            this.component.unitOptions\n                // tslint:disable-next-line:triple-equals\n                .find((item) => item.getMultiplier() == this.selectedUnit)\n                .getUnitName()\n        );\n    }\n\n    setUnitOptionsToPercent(): void {\n        this.component.unitOptions = [Percent.ZERO_TO_100];\n        this.component.inputValueUnit = Percent.ZERO_TO_1;\n        this.unitFormControl.setValue(this.component.unitOptions[0].getMultiplier());\n        this.fixture.detectChanges();\n    }\n\n    setUnitOptionsToNone(): void {\n        this.component.unitOptions = [];\n        this.fixture.detectChanges();\n    }\n\n    getNativeElement(cssSelector: string): HTMLElement {\n        return this.findElement(cssSelector) && this.findElement(cssSelector).nativeElement;\n    }\n\n    get isUnitDropDownDisplayed(): boolean {\n        return !!this.getNativeElement('.combo-options');\n    }\n\n    /**\n     * Returns an empty string if there is no HTML for single unit\n     */\n    get singleUnitDisplayText(): string {\n        const element = this.getNativeElement('.single-option');\n        return element ? element.innerHTML : '';\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NumberWithUnitsFormValidatorsFactory.html":{"url":"injectables/NumberWithUnitsFormValidatorsFactory.html","title":"injectable - NumberWithUnitsFormValidatorsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NumberWithUnitsFormValidatorsFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isInRange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(unitFormatter: UnitFormatter)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts:460\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        unitFormatter\n                                                  \n                                                        \n                                                                        UnitFormatter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isInRange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isInRange(min: number, max: number, inputUnit: Unit, availableUnits: Unit[], unlimited)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts:463\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    min\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    max\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    inputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    unlimited\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        -1\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    AfterContentChecked,\n    Component,\n    Injectable,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Self,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, NgControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { TranslationService } from '@vcd/i18n';\nimport { SelectOption } from '../../common/interfaces';\nimport { SubscriptionTracker } from '../../common/subscription';\nimport { FormValidators } from '../../form/validators';\nimport { Unit } from '../../utils/unit/unit';\nimport { UnitFormatter } from '../../utils/unit/unit-formatter';\nimport { BaseFormControl } from '../base-form-control';\nimport { FormInputComponent } from '../form-input/form-input.component';\nimport { FormSelectComponent } from '../form-select/form-select.component';\n\n/**\n * -1 is the number to specify a value of unlimited.\n */\nexport const UNLIMITED = -1;\n\n/**\n * A numerical form input component with unit selection and unlimited checkbox.\n *\n * If a single element array is provided for the units, then there is no unit selection\n * but rather a string notation for the unit. If the array is empty then there are no units at all.\n *\n * The display of unlimited checkbox is configurable.\n */\n@Component({\n    selector: 'vcd-number-with-unit-form-input',\n    templateUrl: './number-with-unit-form-input.component.html',\n    styleUrls: ['./number-with-unit-form-input.component.scss'],\n})\nexport class NumberWithUnitFormInputComponent\n    extends BaseFormControl\n    implements OnChanges, OnInit, OnDestroy, AfterContentChecked {\n    /**\n     * List of available units. Consider the following options for the array:\n     * # array with more than one elements\n     *    - a dropdown unit selection is shown. You must also provide {@link inputValueUnit}\n     * # single element array\n     *    - a string notation for no dropdown, {@link inputValueUnit} is derived from the element\n     * # empty array\n     *    - no units at all\n     */\n    @Input()\n    set unitOptions(unitOptions: Unit[]) {\n        this._unitOptions = unitOptions || [];\n\n        if (this._unitOptions.length === 1) {\n            this.inputValueUnit = this._unitOptions[0];\n        }\n\n        this.comboOptionUnitMap.clear();\n        this.comboOptions = [];\n        this._unitOptions.forEach((unitOption) => {\n            const comboOption: SelectOption = {\n                display: unitOption.getUnitName(),\n                value: unitOption.getMultiplier(),\n            };\n            this.comboOptionUnitMap.set(comboOption, unitOption);\n            this.comboOptions.push(comboOption);\n        });\n    }\n\n    get unitOptions(): Unit[] {\n        return this._unitOptions;\n    }\n\n    /**\n     * The base unit of the component. The value of this FormControl is calculated based on this property.\n     * Required when a multi element array is provided for {@link unitOptions} and it should be one of those values.\n     */\n    @Input() inputValueUnit: Unit;\n\n    /**\n     * The initial display unit.\n     * This is useful if you want to prevent finding best match when displaying a value for the first time.\n     * For example if you provide 1024 MB and you want it to be displayed as 1024MB instead of 1GB\n     */\n    @Input() initialValueUnit: Unit;\n\n    /**\n     * Show the Unlimited checkbox. Can be set just once only at render time.\n     */\n    @Input() showUnlimitedOption = true;\n\n    /**\n     * The value when the component is set to unlimited. Default is -1.\n     */\n    @Input() unlimitedValue: number = UNLIMITED;\n\n    /**\n     * Minimum value allowed relevant to {@link inputValueUnit}. Default is 0.\n     */\n    @Input() min: number = 0;\n\n    /**\n     * Maximum value allowed relevant to {@link inputValueUnit}. Default is {@link Number.MAX_SAFE_INTEGER}.\n     */\n    @Input() max: number = Number.MAX_SAFE_INTEGER;\n\n    /**\n     * Input 'placeholder' field.\n     */\n    @Input() placeholder: string = null;\n\n    /**\n     * Input 'size' field.\n     */\n    @Input() size: number = 10;\n\n    /**\n     * Maximum number of characters (in UTF-16 code units) that the user can enter.\n     */\n    @Input() maxlength: number = null;\n\n    /**\n     * Hint to display in the content of a signpost\n     */\n    @Input() hint: string;\n\n    /**\n     * The direction for displaying the hint\n     */\n    @Input() hintPosition = 'top-left';\n\n    public formGroup: FormGroup;\n\n    private _unitOptions: Unit[] = [];\n\n    /**\n     * A drop down of available units\n     *\n     * This list is constructed from list of\n     * available units in {@link unitOptions}\n     */\n    comboOptions: SelectOption[] = [];\n\n    /**\n     * Map of SelectOption and Unit which is used to\n     * extract Unit for a given SelectOption.\n     */\n    private comboOptionUnitMap: Map = new Map();\n\n    // value set to the number input of the formGroup\n    private bestValue: number = null;\n\n    // unit set to the selected dropdown select of the formGroup\n    private bestUnit: Unit;\n\n    /**\n     * The minimum value calculated from the {@link min} value converted to the currently selected unit\n     */\n    unitMin: number;\n\n    /**\n     * The maximum value calculated from the {@link max} value converted to the currently selected unit\n     */\n    unitMax: number;\n\n    /**\n     * This is the last real value for the input. Used in case when user toggles the unlimited checkbox twice in a row.\n     * When unlimited is checked the value of the input is cleared, then when toggled again, the input value should be\n     * set to the last value.\n     */\n    lastRealValue: number = null;\n\n    /**\n     * Set the unit in the dropdown.\n     * @param value Should be one of the value that you pass in {@link #unitOptions} to select the Unit.\n     */\n    set selectedUnit(value: number) {\n        this.formGroup.get('comboUnitOptions').setValue(value);\n    }\n\n    @ViewChild('unitDropdown', { static: false }) unitDropdown: FormSelectComponent;\n    @ViewChild('limitedInput', { static: false }) limitedInput: FormInputComponent;\n\n    tracker = new SubscriptionTracker(this);\n\n    constructor(\n        @Self() @Optional() controlDirective: NgControl,\n        private fb: FormBuilder,\n        private translationService: TranslationService,\n        private unitFormatter: UnitFormatter\n    ) {\n        super(controlDirective);\n    }\n\n    ngOnDestroy(): void {\n        this.tracker.unsubscribeAll();\n    }\n\n    ngOnInit(): void {\n        // Calculate the best unit and value. Take into account if initial unit is provided.\n        if (this.initialValueUnit) {\n            this.bestUnit = this.initialValueUnit;\n            this.bestValue = this.initialValue\n                ? this.inputValueUnit.getOutputValue(this.initialValue, this.bestUnit)\n                : null;\n        } else {\n            this.computeBestUnitAndValue(this.initialValue as number);\n        }\n\n        // Build the form group based on the best unit and value, considering also if unlimited is enabled\n        if (!this.showUnlimitedOption) {\n            this.formGroup = this.fb.group({\n                limited: [this.bestValue === this.unlimitedValue ? null : this.bestValue],\n                comboUnitOptions: this.bestUnit.getMultiplier(),\n            });\n        } else {\n            this.formGroup = this.fb.group({\n                limited: [this.bestValue === this.unlimitedValue ? null : this.bestValue],\n                comboUnitOptions: [this.bestUnit.getMultiplier()],\n                unlimited: this.bestValue === this.unlimitedValue,\n            });\n            // Remember the value in case the control value is programmatically set to unlimited\n            if (this.bestValue !== this.unlimitedValue) {\n                this.lastRealValue = this.bestValue;\n            }\n            this.tracker.subscribe(this.formGroup.get('unlimited').valueChanges, (unlimitedChecked) => {\n                const input = this.formGroup.get('limited');\n                if (unlimitedChecked) {\n                    // When going to unlimited remember the value of the input before clearing it\n                    this.lastRealValue = input.value;\n                    input.setValue(null);\n                } else {\n                    input.setValue(this.lastRealValue);\n                }\n                this.updateUnlimitedDisabledState();\n            });\n        }\n        this.tracker.subscribe(this.formGroup.get('comboUnitOptions').valueChanges, () => {\n            // Mark the input as dirty since if it was not touched no error will be displayed even if there are some\n            this.recalculateUnitMinMax();\n            this.onChange(this.getValue());\n        });\n        this.tracker.subscribe(this.formGroup.get('limited').valueChanges, () => {\n            this.onChange(this.getValue());\n        });\n        this.recalculateUnitMinMax();\n        this.updateUnlimitedDisabledState();\n        // This code should be here since the formGroup has been created in the ngOnInit. If the disabled()\n        // call has been done in a constructor this component would not have been initialized\n        if (this.disabled) {\n            this.updateDisabledState(true, true);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.recalculateUnitMinMax();\n    }\n\n    ngAfterContentChecked(): void {\n        if (!this.limitedInput) {\n            return;\n        }\n        Object.defineProperty(this.limitedInput, 'showErrors', {\n            get: this.limitedInputShowErrors,\n        });\n    }\n\n    limitedInputShowErrors = () => {\n        return this.showErrors && this.errors ? {} : null;\n    };\n\n    writeValue(value: number): void {\n        if (!this.formGroup) {\n            this.initialValue = value;\n            return;\n        }\n        const input = this.formGroup.get('limited');\n        if (value === null) {\n            if (this.showUnlimitedOption) {\n                // Set Unlimited checkbox to false because the form control was reset\n                this.formGroup.get('unlimited').setValue(false);\n            }\n            input.setValue(null);\n            this.updateUnlimitedDisabledState();\n            return;\n        }\n\n        if (this.showUnlimitedOption) {\n            if (value !== this.unlimitedValue) {\n                this.computeBestUnitAndValue(value);\n                this.lastRealValue = this.bestValue;\n                input.setValue(this.bestValue);\n                this.selectedUnit = this.bestUnit.getMultiplier();\n            }\n            this.formGroup.get('unlimited').setValue(value === this.unlimitedValue);\n        } else {\n            this.computeBestUnitAndValue(value);\n            this.lastRealValue = this.bestValue;\n            input.setValue(this.bestValue);\n            this.selectedUnit = this.bestUnit.getMultiplier();\n        }\n\n        this.updateUnlimitedDisabledState();\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this.updateDisabledState(isDisabled, true);\n    }\n\n    private updateUnlimitedDisabledState(): void {\n        if (!this.showUnlimitedOption || this.disabled) {\n            return;\n        }\n        this.updateDisabledState(this.formGroup?.get('unlimited')?.value, false);\n    }\n\n    updateDisabledState(isDisabled: boolean, updateUnlimitedCheckbox: boolean): void {\n        if (this.formGroup) {\n            // Do not emit when changing the disable state\n            if (isDisabled) {\n                this.formGroup.get('comboUnitOptions').disable({ emitEvent: false });\n                this.formGroup.get('limited').disable({ emitEvent: false });\n                if (updateUnlimitedCheckbox) {\n                    this.formGroup.get('unlimited')?.disable({ emitEvent: false });\n                }\n            } else {\n                this.formGroup.get('comboUnitOptions').enable({ emitEvent: false });\n                this.formGroup.get('limited').enable({ emitEvent: false });\n                if (updateUnlimitedCheckbox) {\n                    this.formGroup.get('unlimited')?.enable({ emitEvent: false });\n                }\n            }\n        }\n    }\n\n    private computeBestUnitAndValue(value: number): void {\n        if (this.unitOptions.length === 0) {\n            this.bestValue = value;\n            this.bestUnit = NoUnit.INSTANCE;\n        } else if (value === null) {\n            this.bestValue = null;\n            this.bestUnit = this.unitOptions[0];\n        } else {\n            this.bestUnit = this.inputValueUnit.findBestUnit(value, this.unitOptions);\n            this.bestValue = this.inputValueUnit.getOutputValue(value, this.bestUnit);\n        }\n    }\n\n    private getValue(): number {\n        if (this.formGroup.get('unlimited')?.value) {\n            return this.unlimitedValue;\n        }\n\n        const value = this.formGroup.get('limited').value;\n        if (value && this.unitOptions.length) {\n            return this.getSelectedUnit().getOutputValue(value, this.inputValueUnit);\n        }\n        return value;\n    }\n\n    private getSelectedUnit(): Unit {\n        const value = this.formGroup.get('comboUnitOptions').value;\n        const selectedComboUnit = this.comboOptions.find(\n            // tslint:disable-next-line:triple-equals\n            (co) => co.value == value\n        );\n        const selectedUnit = this.comboOptionUnitMap.get(selectedComboUnit);\n        return selectedUnit;\n    }\n\n    private recalculateUnitMinMax(): void {\n        if (!this.formGroup) {\n            return;\n        }\n        const selectedUnit = this.getSelectedUnit();\n        this.unitMin = selectedUnit ? this.inputValueUnit.getOutputValue(this.min, selectedUnit) : this.min;\n        this.unitMax = selectedUnit ? this.inputValueUnit.getOutputValue(this.max, selectedUnit) : this.max;\n    }\n\n    get displayValue(): string {\n        if (this.formGroup.get('unlimited') && this.formGroup.get('unlimited').value) {\n            return this.translationService.translate('vcd.cc.unlimited');\n        }\n\n        const value = this.formGroup.get('limited').value;\n        if (value) {\n            if (this.unitDropdown) {\n                // Return the value and the selected unit.\n                const inputUnit: Unit = this.comboOptionUnitMap.get(this.unitDropdown.selectedOption);\n                return this.unitFormatter.bestFormat(value, inputUnit, this.unitOptions);\n            } else if (this.unitOptions.length === 1) {\n                // Return the value and the predefined unit. For example, 100 %.\n                return this.unitFormatter.bestFormat(value, this.unitOptions[0], this.unitOptions);\n            } else if (this.isReadOnly) {\n                // Return the value with best unit when #limited FormControl.value\n                // is set programmatically\n\n                const displayComboUnit = this.comboOptions.find(\n                    // tslint:disable-next-line:triple-equals\n                    (co) => co.value == this.formGroup.get('comboUnitOptions').value\n                );\n                const displayUnit = this.comboOptionUnitMap.get(displayComboUnit);\n                if (displayUnit) {\n                    return this.unitFormatter.bestFormat(value, displayUnit, this.unitOptions);\n                }\n            }\n            // Return only the value when unitOptions was not set.\n            return value.toString();\n        }\n        return;\n    }\n\n    /**\n     * Up to now (when this function has been introduced) all our form errors were in the form\n     * `{ [key]: true }` which made it quite impossible to add custom parameters for translation.\n     *  `errorLabels` are a perfect example for this use case\n     *\n     * Now the errors are in format `{ [key]: any }` where any can be either an array [] for positional\n     * based message format or `{msgKey: string}` for a named message format.\n     *\n     * For `errorLabels` we\n     *\n     */\n    get errors(): ValidationErrors {\n        if (this.errorLabels.length) {\n            return this.errorLabels.reduce(\n                (acc, cur) => ({\n                    ...acc,\n                    [cur]: true,\n                }),\n                {}\n            );\n        }\n        return this.formControl.errors;\n    }\n\n    getErrorTranslationParams(errorObjectValue: any): any {\n        // `errorObjectValue === true` is the 'old' case see comments for `errors`\n        if (!errorObjectValue || errorObjectValue === true) {\n            return [this.getValue(), this.min.toString(), this.max.toString()];\n        }\n        return errorObjectValue;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class NumberWithUnitsFormValidatorsFactory {\n    constructor(private unitFormatter: UnitFormatter) {}\n\n    public isInRange(min: number, max: number, inputUnit: Unit, availableUnits: Unit[], unlimited = -1): ValidatorFn {\n        const res = FormValidators.createNullSafeValidator((control: any) => {\n            const value = control.value;\n\n            const isNumber = !isNaN(Number(control.value)) && isFinite(control.value);\n\n            if (isNumber) {\n                if (value >= min && value \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ObjectAndResponse.html":{"url":"interfaces/ObjectAndResponse.html","title":"interface - ObjectAndResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ObjectAndResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/activity-reporter/activity-promise-resolver.ts\n        \n\n            \n                Description\n            \n            \n                A combination of some object and the response that gave that object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        object\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                    \n                                \n                                \n                                    \n                                        object:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The data that was returned from a given activity, if any.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:         ActivityResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActivityResponse\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The response that an activity returned.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ActivityResponse {\n    /**\n     * The error message, if any, from the activity.\n     *\n     * A response without an error is assumed to have succeeded.\n     */\n    error?: string;\n    /**\n     * The response message, if any, from the activity.\n     */\n    success?: string;\n}\n\n/**\n * A combination of some object and the response that gave that object.\n */\nexport interface ObjectAndResponse {\n    /**\n     * The data that was returned from a given activity, if any.\n     */\n    object?: T;\n    /**\n     * The response that an activity returned.\n     */\n    response: ActivityResponse;\n}\n\n/**\n * A class that understands how to take a promise and turn it into some response message for display.\n * A client of this library will override {@link ActivityPromiseResolver} to process their specific type of promise.\n * This override will know how to generate a {@link ObjectAndResponse} from the type of promise it processes.\n *\n * @param T The type that is returned from a promise that this resolver processes.\n */\nexport class ActivityPromiseResolver {\n    /**\n     * Takes a Promise and turns it to some activity status\n     * @param activityResolutionPromise The activity that this resolver will generate a response from. It generates\n     * either a sucesss or a failure condition.\n     * @param successMessage The success message this method should return if the activity succeeds. If undefined is passed,\n     * a succeeded promise will return an empty response parameter which is assumed to mean success.\n     */\n    resolveActivity(activityResolutionPromise: Promise, successMessage?: string): Promise> {\n        return activityResolutionPromise\n            .then(result => {\n                return {\n                    object: result,\n                    response: { ...result, success: successMessage || result },\n                };\n            })\n            .catch(error => {\n                return { response: { error } };\n            });\n    }\n\n    /**\n     * Takes a Promise of many items and turns it to some activity status\n     * @param activityResolutionPromise The activity that this resolver will generate a response from. It generates\n     * either a sucesss or a failure condition. There are many entities contained in this response.\n     * @param successMessage The success message this method should return if the activity succeeds. If undefined is passed,\n     * a succeeded promise will return an empty response parameter which is assumed to mean success.\n     */\n    resolveActivities(\n        activityResolutionPromises: Promise,\n        successMessage?: string\n    ): Promise)[]> {\n        return activityResolutionPromises\n            .then(result => {\n                return [\n                    {\n                        object: result[0],\n                        response: { ...result, success: successMessage },\n                    },\n                ];\n            })\n            .catch(error => {\n                return [{ response: { error } }];\n            });\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationCallback.html":{"url":"interfaces/PaginationCallback.html","title":"interface - PaginationCallback","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PaginationCallback\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                A function that can be used to render the pagination data in the grid.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Unamed property\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n\n                                    \n                                        \n                                            Signature :\n                                            \n                                            \n                                                \n                                                    [firstItem: number, lastItem: number, totalItems: number]\n                                            \n                                        \n                                    \n\n\n                                    \n                                        \n                                            Returns :     string | Observable\n\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationConfiguration.html":{"url":"interfaces/PaginationConfiguration.html","title":"interface - PaginationConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PaginationConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                The information the user gives to show page size and page size options in the pagination footer.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        pageSize\n                                \n                                \n                                            Optional\n                                        pageSizeOptions\n                                \n                                \n                                            Optional\n                                        rowHeight\n                                \n                                \n                                            Optional\n                                        shouldShowPageNumberInput\n                                \n                                \n                                            Optional\n                                        shouldShowPageSizeSelector\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                    \n                                \n                                \n                                    \n                                        pageSize:     number | \"Magic\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | \"Magic\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\nnumber of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\nMagic: Auto calculates the size based on available height of the container\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSizeOptions\n                                    \n                                \n                                \n                                    \n                                        pageSizeOptions:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Available page size options in the dropdown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rowHeight\n                                    \n                                \n                                \n                                    \n                                        rowHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The height of a row in the datagrid. If not set, will use the default of ROW_HEIGHT.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shouldShowPageNumberInput\n                                    \n                                \n                                \n                                    \n                                        shouldShowPageNumberInput:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the page number input should be shown.\nDefaults to false.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shouldShowPageSizeSelector\n                                    \n                                \n                                \n                                    \n                                        shouldShowPageSizeSelector:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the page size option dropdown should be shown.\nDefaults to false.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PagionationInformation.html":{"url":"interfaces/PagionationInformation.html","title":"interface - PagionationInformation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PagionationInformation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                The information about pagionation that will be exposed.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        itemsPerPage\n                                \n                                \n                                        pageNumber\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        itemsPerPage\n                                    \n                                \n                                \n                                    \n                                        itemsPerPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    How many items belong on a page.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageNumber\n                                    \n                                \n                                \n                                    \n                                        pageNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    What page is currently selected.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PartialResult.html":{"url":"interfaces/PartialResult.html","title":"interface - PartialResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PartialResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search.component.ts\n        \n\n            \n                Description\n            \n            \n                This interface describes partial search result, i.e. result that do not contain all the items that match the\nsearch criteria {@see QuickSearchComponent#hasPartialResult}\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        lastItem\n                                \n                                \n                                        totalItems\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lastItem\n                                    \n                                \n                                \n                                    \n                                        lastItem:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The number of the last item of the result\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalItems\n                                    \n                                \n                                \n                                    \n                                        totalItems:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Total number of items in the result\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { TranslationService } from '@vcd/i18n';\nimport { DomUtil } from '../utils/dom-util';\nimport { QuickSearchResultItem, QuickSearchResults, QuickSearchResultsType } from './quick-search-result';\nimport { QuickSearchProvider } from './quick-search.provider';\nimport { QuickSearchService } from './quick-search.service';\n\ninterface SearchSection {\n    provider: QuickSearchProvider;\n    result: QuickSearchResults;\n    isLoading: boolean;\n}\n\n/**\n * This interface describes the event emitted when a result item is activated,\n * i.e. its event handler has been called.\n */\nexport interface ResultActivatedEvent {\n    itemDisplayText: string;\n    sectionTitle: string;\n    eventSource: 'MouseEvent' | 'KeyboardEvent';\n}\n\n/**\n * This interface describes partial search result, i.e. result that do not contain all the items that match the\n * search criteria {@see QuickSearchComponent#hasPartialResult}\n */\ninterface PartialResult {\n    /**\n     * The number of the last item of the result\n     */\n    lastItem: number;\n\n    /**\n     * Total number of items in the result\n     */\n    totalItems: number;\n}\n\n/**\n * The Quick Search component is inspired by the Spotlight Search in Mac OSX (cmd+space)\n * and the Search Everywhere in IntelliJ (shift+shift)\n *\n * This VCD Quick Search does not provide any search by itself. It is not also a single component\n * but rather a group of objects that work together in order to allow the developer to build a might search experience\n * for the end user.\n *\n * Basically the VCD Quick Search consists of:\n * \n *     QuickSearchComponent - the visual component that you should include in your template\n *     {@link QuickSearchService}QuickSearchService\n *     - the service that you should register your own providers with\n *     {@link QuickSearchProvider}QuickSearchProvider\n *     - the interface your search provider should implement.\n *     It can return either an array of {@link QuickSearchResults} or a promise for lazy loading of results\n * \n *\n * QuickSearchComponent:\n *\n *    \n *\n *\n * {@link QuickSearchService}:\n *\n * This service works along with the component in order to provide search results displayed. Those results are grouped\n * in sections based on the registered provider {@link QuickSearchProvider}.\n *\n * You can provide order of the search providers, hence the order of the displayed sections\n *\n * If there is just one search provider no section title is displayed.\n *\n * In case of multiple search providers the Quick Search can be configured to hide the entire section if it contains no data.\n *\n *\n * For a complete end-to-end running example please take a look at the `Examples` tab of the live-docs\n */\n@Component({\n    selector: 'vcd-quick-search',\n    templateUrl: './quick-search.component.html',\n    styleUrls: ['./quick-search.component.scss'],\n})\nexport class QuickSearchComponent {\n    /**\n     * Placeholder for the search input. Default is empty string;\n     */\n    @Input() public placeholder: string;\n\n    /**\n     * This property alongside with `openChange` provide two-way binding [(open)] for controlling the visibility state\n     * of the quick search component\n     */\n    @Input()\n    public set open(open: boolean) {\n        this.handleOpen(open);\n    }\n    public get open(): boolean {\n        return this._open;\n    }\n\n    /**\n     * This method along with `open` property provide two-way binding [(open)] for controlling the visibility state\n     * of the quick search component\n     */\n    @Output() openChange: EventEmitter = new EventEmitter(false);\n\n    /**\n     * Event dispatched when item has been activated, i.e. its event handler is called.\n     * This happens when item is clicked or 'Enter' is pressed when there is a selection.\n     */\n    @Output() resultActivated: EventEmitter = new EventEmitter();\n\n    constructor(\n        private searchService: QuickSearchService,\n        private changeDetectorRef: ChangeDetectorRef,\n        private el: ElementRef,\n        public translationService: TranslationService\n    ) {}\n\n    get searchCriteria(): string {\n        return this._searchCriteria;\n    }\n\n    set searchCriteria(value: string) {\n        this._searchCriteria = value;\n        this.doSearch();\n    }\n    private _searchCriteria: string;\n\n    private _open = false;\n\n    @ViewChild('searchInput', { static: false, read: ElementRef }) searchInput: ElementRef;\n\n    private searchId = 0;\n\n    /**\n     * The search sections are provided by the {@link QuickSearchService} upon opening the Quick Search.\n     * This insures that new sections based on the current context of the application may appear.\n     */\n    searchSections: SearchSection[] = [];\n\n    selectedItem: QuickSearchResultItem;\n\n    itemClicked(item: QuickSearchResultItem): void {\n        this.handleItem(item, true);\n    }\n\n    onArrowDown(event: KeyboardEvent): void {\n        event.preventDefault();\n        this.selectNext(true);\n    }\n\n    onArrowUp(event: KeyboardEvent): void {\n        event.preventDefault();\n        this.selectNext(false);\n    }\n\n    onEnterKey(event): void {\n        event.preventDefault();\n        if (!this.selectedItem) {\n            return;\n        }\n        this.handleItem(this.selectedItem, false);\n    }\n\n    private doSearch(): void {\n        // Remember which is the current search. This will help us not to show results from an old search\n        const searchId = ++this.searchId;\n\n        this.selectedItem = null;\n\n        // Mark each sections in loading state. This flag is needed when trying to select the first item\n        // while the search is still in progress\n        this.searchSections.forEach((searchSection) => (searchSection.isLoading = true));\n\n        // Go through the available search sections, i.e. the registered search providers and request for results\n        this.searchSections.forEach(async (searchSection) => {\n            let searchResult: QuickSearchResults;\n            // Only request for data if the search is not empty\n            if (!!this.searchCriteria) {\n                const result = searchSection.provider.search(this.searchCriteria);\n\n                // Some of the results may be provided later, so mark the section as loading\n                if (result instanceof Promise) {\n                    searchResult = await result;\n                } else {\n                    searchResult = result;\n                }\n                // Use the closure to verify that the displayed data is going to be really from the latest search\n                if (searchId !== this.searchId) {\n                    return;\n                }\n            }\n            searchSection.result = searchResult;\n            searchSection.isLoading = false;\n            if (!this.selectedItem) {\n                this.selectFirst(true);\n            }\n        });\n    }\n\n    /**\n     * Try to select the first item in the compound search result.\n     * @param ensureFirstSectionIsLoaded if true and if the topmost section is still loading then do not select an item\n     */\n    private selectFirst(ensureFirstSectionIsLoaded: boolean): void {\n        for (const section of this.searchSections) {\n            // The section is still loading. If it was requested to ensure the loading has completed than abort\n            // the attempt to select an item or just skip it and examine the next section.\n            if (section.isLoading) {\n                if (ensureFirstSectionIsLoaded) {\n                    return;\n                }\n                continue;\n            }\n            this.selectedItem = section.result?.items[0];\n            if (this.selectedItem) {\n                break;\n            }\n        }\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private selectNext(down: boolean): void {\n        // If there is no selection then just select the first available item\n        if (!this.selectedItem) {\n            this.selectFirst(false);\n            return;\n        }\n\n        // Get all the items form all the sections in a single flat array\n        const allResults = this.searchSections.reduce((acc, v) => [...acc, ...(v.result?.items || [])], []);\n\n        let selectedItemIndex = allResults.indexOf(this.selectedItem);\n\n        // There is a selected item but it is not one of the available ones, so just select the first from the list\n        if (selectedItemIndex  ({ provider, result: null, isLoading: true }));\n            this.doSearch();\n\n            setTimeout(() => {\n                this.searchInput.nativeElement.focus();\n                this.searchInput.nativeElement.select();\n            }, 0);\n        }\n\n        this._open = open;\n        this.openChange.emit(this._open);\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private handleItem(item: QuickSearchResultItem, clicked: boolean): void {\n        const searchSection: SearchSection = this.searchSections.find(\n            (section) =>\n                !section.isLoading &&\n                section.result?.items.some((resultItem) => resultItem.displayText === item.displayText)\n        );\n        const resultActivatedEvent: ResultActivatedEvent = {\n            itemDisplayText: item.displayText,\n            sectionTitle: searchSection.provider.sectionName,\n            eventSource: clicked ? 'MouseEvent' : 'KeyboardEvent',\n        };\n        item.handler();\n        this.resultActivated.emit(resultActivatedEvent);\n        this.open = false;\n    }\n\n    showSectionTitle(searchSection: SearchSection): boolean {\n        return !!(searchSection.provider.sectionName && this.searchCriteria);\n    }\n\n    /**\n     * Determines if the result in this section is partial (i.e. there are more items matching the criteria which are\n     * in the current list) or it is full (the current list contains all the items matching the criteria)\n     * If the result is partial then {@link PartialResult} object is returned. If the result contains all the items\n     * then null is returned\n     * @param searchSection the section which result items is to be checked\n     */\n    hasPartialResult(searchSection: SearchSection): PartialResult {\n        if (\n            searchSection.result?.total &&\n            searchSection.result?.items?.length &&\n            searchSection.result.items.length \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Percent.html":{"url":"classes/Percent.html","title":"class - Percent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Percent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/unit/unit.ts\n        \n\n            \n                Description\n            \n            \n                Percent is handled differently compared to other Units.\nCan be represented in two different formats -\nZERO_TO_100 - ex: 50 %\nZERO_TO_1 - ex: 0.5 %\nIn both formats single unitName - \"%\" is used represent the value\n\n            \n\n            \n                Extends\n            \n            \n                        Unit\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                unitTranslationKey\n                            \n                            \n                                    Static\n                                valueWithUnitTranslationKey\n                            \n                            \n                                    Static\n                                ZERO_TO_1\n                            \n                            \n                                    Static\n                                ZERO_TO_100\n                            \n                            \n                                    Private\n                                    Readonly\n                                _multiplier\n                            \n                            \n                                    Private\n                                    Readonly\n                                _unitName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findBestUnit\n                            \n                            \n                                getUnitNameTranslationKey\n                            \n                            \n                                getValueWithUnitTranslationKey\n                            \n                            \n                                    Abstract\n                                findBestUnit\n                            \n                            \n                                    Public\n                                getBaseValue\n                            \n                            \n                                    Public\n                                getMultiplier\n                            \n                            \n                                    Public\n                                getOutputValue\n                            \n                            \n                                    Public\n                                getUnitName\n                            \n                            \n                                    Abstract\n                                getUnitNameTranslationKey\n                            \n                            \n                                    Abstract\n                                getValueWithUnitTranslationKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(multiplier: number)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/unit/unit.ts:188\n                            \n                        \n\n                \n                    \n                            Percent always has unitName as \"%\"\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        multiplier\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            unitTranslationKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd.cc.units.percent'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/unit/unit.ts:188\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            valueWithUnitTranslationKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd.cc.display.percent'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/unit/unit.ts:187\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            ZERO_TO_1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Percent\n\n                        \n                    \n                    \n                        \n                            Default value : new Percent(1)\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/unit/unit.ts:196\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            ZERO_TO_100\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Percent\n\n                        \n                    \n                    \n                        \n                            Default value : new Percent(0.01)\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/unit/unit.ts:197\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _multiplier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _unitName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \nfindBestUnit(value: number, unitList: Unit[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:213\n                \n            \n\n\n            \n                \n                    Percent is always best represented in ZERO_TO_100 format\nand so returns ZERO_TO_100\nEx: 50 % is the display format for ZERO_TO_100 for value - 50\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    unitList\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \ngetUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \ngetValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBestUnit(value: number, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:71\n\n                \n            \n\n\n            \n                \n                    Returns the best unit out of available units for given value of current unit\nBest unit is a Unit whose converted value is less than 1000\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nList of available Units out of which best unit is calculated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBaseValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBaseValue(value: number)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:45\n\n                \n            \n\n\n            \n                \n                    Returns the value in base unit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMultiplier()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOutputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOutputValue(value, outputUnit: Unit)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:37\n\n                \n            \n\n\n            \n                \n                    Returns the value in outputUnit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    outputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nUnit to which value is converted\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUnitName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitName()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:61\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying unitName\nEx: MB, B, GHz, MHz, %\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:54\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying value with unit\nEx: 25 MB, 100 %, 2 GHz\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Unit {\n    private readonly _multiplier: number;\n    private readonly _unitName: string;\n\n    /**\n     * @param multiplier - Value that is used to convert this to base unit\n     * @param unitName - Name of the Unit. Also used to construct translation\n     * keys for each type of Unit.\n     */\n    constructor(private multiplier: number, private unitName: string) {\n        this._multiplier = multiplier;\n        this._unitName = unitName;\n    }\n\n    public getMultiplier(): number {\n        return this._multiplier;\n    }\n\n    public getUnitName(): string {\n        return this._unitName;\n    }\n\n    /**\n     * Returns the value in outputUnit for this unit\n     * @param value - Value of this unit\n     * @param outputUnit - Unit to which value is converted\n     */\n    public getOutputValue(value, outputUnit: Unit): number {\n        return this.getBaseValue(value) / outputUnit.multiplier;\n    }\n\n    /**\n     * Returns the value in base unit for this unit\n     * @param value - Value of this unit\n     */\n    public getBaseValue(value: number): number {\n        return value * this.multiplier;\n    }\n\n    /**\n     * Translation key to be used when displaying value with unit\n     *\n     * Ex: 25 MB, 100 %, 2 GHz\n     */\n    abstract getValueWithUnitTranslationKey(): string;\n\n    /**\n     * Translation key to be used when displaying unitName\n     *\n     * Ex: MB, B, GHz, MHz, %\n     */\n    abstract getUnitNameTranslationKey(): string;\n\n    /**\n     * Returns the best unit out of available units for given value of current unit\n     *\n     * Best unit is a Unit whose converted value is less than 1000\n     *\n     * @param value - Value of this unit\n     * @param availableUnits - List of available Units out of which best unit is calculated\n     */\n    abstract findBestUnit(value: number, availableUnits: Unit[]): Unit;\n}\n\n/**\n * Finds the bestUnit by trying groups of the comparison number\n */\nabstract class NumberUnit extends Unit {\n    /**\n     * Calculates the best unit out of available units to display in UI cell for a given input Unit\n     * and value\n     *\n     * Best unit is a Unit whose converted value is less than the comparison number\n     *\n     * @param value - Value of input Unit\n     * @param availableUnits - Array of available Units to display in UI cell\n     * availableUnits array should be pre-sorted ascending by multiplier\n     *\n     */\n    findBestUnit(value: number, availableUnits: NumberUnit[] = this.getAllUnitTypes()): Unit {\n        if (value >= this.getUnitMultiplier()) {\n            const baseValue = this.getBaseValue(value);\n            let outputNumber = baseValue;\n            const unitTypes = availableUnits;\n            let i = 0;\n            while (outputNumber >= this.getUnitMultiplier() && i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PipesModule.html":{"url":"modules/PipesModule.html","title":"module - PipesModule","body":"\n                   \n\n\n\n\n    Modules\n    PipesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\n\nNestedPropertyPipe\n\nNestedPropertyPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nNestedPropertyPipe->PipesModule\n\n\n\n\n\nFormCheckboxComponent \n\nFormCheckboxComponent \n\nFormCheckboxComponent  -->\n\nPipesModule->FormCheckboxComponent \n\n\n\n\n\nFormInputComponent \n\nFormInputComponent \n\nFormInputComponent  -->\n\nPipesModule->FormInputComponent \n\n\n\n\n\nFormSelectComponent \n\nFormSelectComponent \n\nFormSelectComponent  -->\n\nPipesModule->FormSelectComponent \n\n\n\n\n\nNumberWithUnitFormInputComponent \n\nNumberWithUnitFormInputComponent \n\nNumberWithUnitFormInputComponent  -->\n\nPipesModule->NumberWithUnitFormInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/common/pipes/pipes.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NestedPropertyPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FormCheckboxComponent\n                        \n                        \n                            FormInputComponent\n                        \n                        \n                            FormSelectComponent\n                        \n                        \n                            NumberWithUnitFormInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { NgModule } from '@angular/core';\nimport { NestedPropertyPipe } from './nested-property.pipe';\n\nconst declarations = [NestedPropertyPipe];\n\n@NgModule({\n    declarations,\n    exports: [...declarations],\n})\nexport class PipesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PowerTwoUnit.html":{"url":"classes/PowerTwoUnit.html","title":"class - PowerTwoUnit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PowerTwoUnit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/unit/unit.ts\n        \n\n            \n                Description\n            \n            \n                Finds the bestUnit by trying groups of 1024\n\n            \n\n            \n                Extends\n            \n            \n                        NumberUnit\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _multiplier\n                            \n                            \n                                    Private\n                                    Readonly\n                                _unitName\n                            \n                            \n                                    Private\n                                    Readonly\n                                _multiplier\n                            \n                            \n                                    Private\n                                    Readonly\n                                _unitName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUnitMultiplier\n                            \n                            \n                                findBestUnit\n                            \n                            \n                                    Abstract\n                                getAllUnitTypes\n                            \n                            \n                                    Protected\n                                    Abstract\n                                getUnitMultiplier\n                            \n                            \n                                    Abstract\n                                findBestUnit\n                            \n                            \n                                    Public\n                                getBaseValue\n                            \n                            \n                                    Public\n                                getMultiplier\n                            \n                            \n                                    Public\n                                getOutputValue\n                            \n                            \n                                    Public\n                                getUnitName\n                            \n                            \n                                    Abstract\n                                getUnitNameTranslationKey\n                            \n                            \n                                    Abstract\n                                getValueWithUnitTranslationKey\n                            \n                            \n                                    Abstract\n                                findBestUnit\n                            \n                            \n                                    Public\n                                getBaseValue\n                            \n                            \n                                    Public\n                                getMultiplier\n                            \n                            \n                                    Public\n                                getOutputValue\n                            \n                            \n                                    Public\n                                getUnitName\n                            \n                            \n                                    Abstract\n                                getUnitNameTranslationKey\n                            \n                            \n                                    Abstract\n                                getValueWithUnitTranslationKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _multiplier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         NumberUnit\n\n                                \n                            \n                        \n                            \n                                    Defined in         NumberUnit:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _unitName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         NumberUnit\n\n                                \n                            \n                        \n                            \n                                    Defined in         NumberUnit:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _multiplier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _unitName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUnitMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \ngetUnitMultiplier()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \nfindBestUnit(value: number, availableUnits: NumberUnit[])\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:89\n\n                \n            \n\n\n            \n                \n                    Calculates the best unit out of available units to display in UI cell for a given input Unit\nand value\nBest unit is a Unit whose converted value is less than the comparison number\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nValue of input Unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                            NumberUnit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.getAllUnitTypes()\n                                    \n\n                                    \n                                        \nArray of available Units to display in UI cell\navailableUnits array should be pre-sorted ascending by multiplier\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getAllUnitTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUnitTypes()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:105\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     NumberUnit[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            getUnitMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitMultiplier()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:112\n\n                \n            \n\n\n            \n                \n                    Returns the number that you multiply by to get the next order unit.\n\n\n                    \n                        Example :\n                        \n                            1024 would be the multiplier for Byte.\n                        \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBestUnit(value: number, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:71\n\n                \n            \n\n\n            \n                \n                    Returns the best unit out of available units for given value of current unit\nBest unit is a Unit whose converted value is less than 1000\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nList of available Units out of which best unit is calculated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBaseValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBaseValue(value: number)\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:45\n\n                \n            \n\n\n            \n                \n                    Returns the value in base unit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMultiplier()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOutputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOutputValue(value, outputUnit: Unit)\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:37\n\n                \n            \n\n\n            \n                \n                    Returns the value in outputUnit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    outputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nUnit to which value is converted\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUnitName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitName()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:61\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying unitName\nEx: MB, B, GHz, MHz, %\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:54\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying value with unit\nEx: 25 MB, 100 %, 2 GHz\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBestUnit(value: number, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:71\n\n                \n            \n\n\n            \n                \n                    Returns the best unit out of available units for given value of current unit\nBest unit is a Unit whose converted value is less than 1000\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nList of available Units out of which best unit is calculated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBaseValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBaseValue(value: number)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:45\n\n                \n            \n\n\n            \n                \n                    Returns the value in base unit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMultiplier()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOutputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOutputValue(value, outputUnit: Unit)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:37\n\n                \n            \n\n\n            \n                \n                    Returns the value in outputUnit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    outputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nUnit to which value is converted\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUnitName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitName()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:61\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying unitName\nEx: MB, B, GHz, MHz, %\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:54\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying value with unit\nEx: 25 MB, 100 %, 2 GHz\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Unit {\n    private readonly _multiplier: number;\n    private readonly _unitName: string;\n\n    /**\n     * @param multiplier - Value that is used to convert this to base unit\n     * @param unitName - Name of the Unit. Also used to construct translation\n     * keys for each type of Unit.\n     */\n    constructor(private multiplier: number, private unitName: string) {\n        this._multiplier = multiplier;\n        this._unitName = unitName;\n    }\n\n    public getMultiplier(): number {\n        return this._multiplier;\n    }\n\n    public getUnitName(): string {\n        return this._unitName;\n    }\n\n    /**\n     * Returns the value in outputUnit for this unit\n     * @param value - Value of this unit\n     * @param outputUnit - Unit to which value is converted\n     */\n    public getOutputValue(value, outputUnit: Unit): number {\n        return this.getBaseValue(value) / outputUnit.multiplier;\n    }\n\n    /**\n     * Returns the value in base unit for this unit\n     * @param value - Value of this unit\n     */\n    public getBaseValue(value: number): number {\n        return value * this.multiplier;\n    }\n\n    /**\n     * Translation key to be used when displaying value with unit\n     *\n     * Ex: 25 MB, 100 %, 2 GHz\n     */\n    abstract getValueWithUnitTranslationKey(): string;\n\n    /**\n     * Translation key to be used when displaying unitName\n     *\n     * Ex: MB, B, GHz, MHz, %\n     */\n    abstract getUnitNameTranslationKey(): string;\n\n    /**\n     * Returns the best unit out of available units for given value of current unit\n     *\n     * Best unit is a Unit whose converted value is less than 1000\n     *\n     * @param value - Value of this unit\n     * @param availableUnits - List of available Units out of which best unit is calculated\n     */\n    abstract findBestUnit(value: number, availableUnits: Unit[]): Unit;\n}\n\n/**\n * Finds the bestUnit by trying groups of the comparison number\n */\nabstract class NumberUnit extends Unit {\n    /**\n     * Calculates the best unit out of available units to display in UI cell for a given input Unit\n     * and value\n     *\n     * Best unit is a Unit whose converted value is less than the comparison number\n     *\n     * @param value - Value of input Unit\n     * @param availableUnits - Array of available Units to display in UI cell\n     * availableUnits array should be pre-sorted ascending by multiplier\n     *\n     */\n    findBestUnit(value: number, availableUnits: NumberUnit[] = this.getAllUnitTypes()): Unit {\n        if (value >= this.getUnitMultiplier()) {\n            const baseValue = this.getBaseValue(value);\n            let outputNumber = baseValue;\n            const unitTypes = availableUnits;\n            let i = 0;\n            while (outputNumber >= this.getUnitMultiplier() && i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QuickSearchModule.html":{"url":"modules/QuickSearchModule.html","title":"module - QuickSearchModule","body":"\n                   \n\n\n\n\n    Modules\n    QuickSearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QuickSearchModule\n\n\n\ncluster_QuickSearchModule_declarations\n\n\n\ncluster_QuickSearchModule_exports\n\n\n\n\nQuickSearchComponent\n\nQuickSearchComponent\n\n\n\nQuickSearchModule\n\nQuickSearchModule\n\nQuickSearchModule -->\n\nQuickSearchComponent->QuickSearchModule\n\n\n\n\n\nQuickSearchComponent \n\nQuickSearchComponent \n\nQuickSearchComponent  -->\n\nQuickSearchModule->QuickSearchComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            QuickSearchComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            QuickSearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ClarityModule } from '@clr/angular';\nimport { I18nModule } from '@vcd/i18n';\nimport { QuickSearchComponent } from './quick-search.component';\n\n@NgModule({\n    imports: [CommonModule, ClarityModule, FormsModule, ReactiveFormsModule, I18nModule],\n    declarations: [QuickSearchComponent],\n    exports: [QuickSearchComponent],\n})\nexport class QuickSearchModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuickSearchProvider.html":{"url":"interfaces/QuickSearchProvider.html","title":"interface - QuickSearchProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QuickSearchProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search.provider.ts\n        \n\n            \n                Description\n            \n            \n                The interface a search providers should implement in order to register itself with the QuickSearchService\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        order\n                                \n                                \n                                        sectionName\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    search\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(criteria: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/quick-search/quick-search.provider.ts:33\n                \n            \n\n\n            \n                \n                    Returns an array or a promise of array of items that comply with the search criteria.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    criteria\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The search string provided by the user when typing in the Quick Search Component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QuickSearchResultsType\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     unknown\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     unknown\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A custom property available throughout all the providers. Not designed for any specific scenario.\nUse it according to the specific needs you may have.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                    \n                                \n                                \n                                    \n                                        order:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The order of the section in the quick search results. The lower the order, the closer to the beginning of the list.\n-1 means append\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionName\n                                    \n                                \n                                \n                                    \n                                        sectionName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Every search provider gets displayed in a separate section. This will be used as the section header.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { QuickSearchResultsType } from './quick-search-result';\n\n/**\n * The interface a search providers should implement in order to register itself with the {@link QuickSearchService}\n */\nexport interface QuickSearchProvider {\n    /**\n     * Every search provider gets displayed in a separate section. This will be used as the section header.\n     */\n    sectionName: string;\n\n    /**\n     * The order of the section in the quick search results. The lower the order, the closer to the beginning of the list.\n     * -1 means append\n     */\n    order: number;\n\n    /**\n     * A custom property available throughout all the providers. Not designed for any specific scenario.\n     * Use it according to the specific needs you may have.\n     */\n    data: unknown;\n\n    /**\n     * Returns an array or a promise of array of items that comply with the search criteria.\n     * @param criteria The search string provided by the user when typing in the Quick Search Component\n     */\n    search(criteria: string): QuickSearchResultsType;\n}\n\nexport abstract class QuickSearchProviderDefaults implements QuickSearchProvider {\n    sectionName = '';\n    order = -1;\n    data: unknown;\n    abstract search(criteria: string): QuickSearchResultsType;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuickSearchProviderDefaults.html":{"url":"classes/QuickSearchProviderDefaults.html","title":"class - QuickSearchProviderDefaults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuickSearchProviderDefaults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search.provider.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            QuickSearchProvider\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                order\n                            \n                            \n                                sectionName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     unknown\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/quick-search/quick-search.provider.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            order\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     -1\n\n                        \n                    \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/quick-search/quick-search.provider.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sectionName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/quick-search/quick-search.provider.ts:37\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(criteria: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/quick-search/quick-search.provider.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    criteria\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QuickSearchResultsType\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { QuickSearchResultsType } from './quick-search-result';\n\n/**\n * The interface a search providers should implement in order to register itself with the {@link QuickSearchService}\n */\nexport interface QuickSearchProvider {\n    /**\n     * Every search provider gets displayed in a separate section. This will be used as the section header.\n     */\n    sectionName: string;\n\n    /**\n     * The order of the section in the quick search results. The lower the order, the closer to the beginning of the list.\n     * -1 means append\n     */\n    order: number;\n\n    /**\n     * A custom property available throughout all the providers. Not designed for any specific scenario.\n     * Use it according to the specific needs you may have.\n     */\n    data: unknown;\n\n    /**\n     * Returns an array or a promise of array of items that comply with the search criteria.\n     * @param criteria The search string provided by the user when typing in the Quick Search Component\n     */\n    search(criteria: string): QuickSearchResultsType;\n}\n\nexport abstract class QuickSearchProviderDefaults implements QuickSearchProvider {\n    sectionName = '';\n    order = -1;\n    data: unknown;\n    abstract search(criteria: string): QuickSearchResultsType;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuickSearchRegistrarService.html":{"url":"injectables/QuickSearchRegistrarService.html","title":"injectable - QuickSearchRegistrarService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuickSearchRegistrarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search-registrar.service.ts\n        \n\n            \n                Description\n            \n            \n                Allows components to register with QuickSearchService and automatically unregister when the component is destroyed.\nMust be provided by the component itself in its providers: [QuickSearchRegistrarService]\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                providers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(quickSearchService: QuickSearchService)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/quick-search/quick-search-registrar.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        quickSearchService\n                                                  \n                                                        \n                                                                        QuickSearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/quick-search/quick-search-registrar.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(provider: QuickSearchProvider)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/quick-search/quick-search-registrar.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    provider\n                                    \n                                                QuickSearchProvider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QuickSearchProvider[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/quick-search/quick-search-registrar.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { QuickSearchProvider } from './quick-search.provider';\nimport { QuickSearchService } from './quick-search.service';\n\n/**\n * Allows components to register with {@link QuickSearchService} and automatically unregister when the component is destroyed.\n *\n * Must be provided by the component itself in its `providers: [QuickSearchRegistrarService]`\n */\n@Injectable()\nexport class QuickSearchRegistrarService implements OnDestroy {\n    constructor(private quickSearchService: QuickSearchService) {}\n\n    private providers: QuickSearchProvider[] = [];\n\n    register(provider: QuickSearchProvider): void {\n        this.providers.push(provider);\n        this.quickSearchService.registerProvider(provider);\n    }\n\n    ngOnDestroy(): void {\n        for (const provider of this.providers) {\n            this.quickSearchService.unregisterProvider(provider);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuickSearchResultItem.html":{"url":"interfaces/QuickSearchResultItem.html","title":"interface - QuickSearchResultItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QuickSearchResultItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search-result.ts\n        \n\n            \n                Description\n            \n            \n                The interface a quick search result item should implement\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayText\n                                \n                                \n                                        handler\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayText\n                                    \n                                \n                                \n                                    \n                                        displayText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The text that will be displayed in the quick search component\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handler\n                                    \n                                \n                                \n                                    \n                                        handler:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Function that is going to be called when this item is to be handled, i.e. when the\nuser clicks on this item or  selects it and presses the Enter key.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface QuickSearchResults {\n    /**\n     * Item list returned by the search\n     */\n    items: QuickSearchResultItem[];\n\n    /**\n     * The current page returned by the search\n     */\n    page?: number;\n\n    /**\n     * The current page size returned by the search\n     */\n    pageSize?: number;\n\n    /**\n     * Total number of items\n     */\n    total?: number;\n}\n\n/**\n * The interface a quick search result item should implement\n */\nexport interface QuickSearchResultItem {\n    /**\n     * The text that will be displayed in the quick search component\n     */\n    displayText: string;\n\n    /**\n     * Function that is going to be called when this item is to be handled, i.e. when the\n     * user clicks on this item or  selects it and presses the Enter key.\n     */\n    handler: () => void;\n}\n\n/**\n * The type of the quick search result which can be a promise\n */\nexport type QuickSearchResultsType = QuickSearchResults | Promise;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuickSearchResults.html":{"url":"interfaces/QuickSearchResults.html","title":"interface - QuickSearchResults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QuickSearchResults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search-result.ts\n        \n\n            \n                Description\n            \n            \n                The interface of a quick search result\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                            Optional\n                                        page\n                                \n                                \n                                            Optional\n                                        pageSize\n                                \n                                \n                                            Optional\n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:         QuickSearchResultItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QuickSearchResultItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Item list returned by the search\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The current page returned by the search\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The current page size returned by the search\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Total number of items\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface QuickSearchResults {\n    /**\n     * Item list returned by the search\n     */\n    items: QuickSearchResultItem[];\n\n    /**\n     * The current page returned by the search\n     */\n    page?: number;\n\n    /**\n     * The current page size returned by the search\n     */\n    pageSize?: number;\n\n    /**\n     * Total number of items\n     */\n    total?: number;\n}\n\n/**\n * The interface a quick search result item should implement\n */\nexport interface QuickSearchResultItem {\n    /**\n     * The text that will be displayed in the quick search component\n     */\n    displayText: string;\n\n    /**\n     * Function that is going to be called when this item is to be handled, i.e. when the\n     * user clicks on this item or  selects it and presses the Enter key.\n     */\n    handler: () => void;\n}\n\n/**\n * The type of the quick search result which can be a promise\n */\nexport type QuickSearchResultsType = QuickSearchResults | Promise;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuickSearchService.html":{"url":"injectables/QuickSearchService.html","title":"injectable - QuickSearchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuickSearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registrations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getRegisteredProviders\n                            \n                            \n                                    Public\n                                registerProvider\n                            \n                            \n                                    Public\n                                unregisterProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRegisteredProviders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRegisteredProviders()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/quick-search/quick-search.service.ts:62\n                \n            \n\n\n            \n                \n                    Get a list of all the registered search providers.\n\n\n                    \n                        Returns :         QuickSearchProvider[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerProvider(provider: QuickSearchProvider)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/quick-search/quick-search.service.ts:19\n                \n            \n\n\n            \n                \n                    Register a search provider\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    provider\n                                    \n                                                QuickSearchProvider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The search provider {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            unregisterProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unregisterProvider(provider: QuickSearchProvider)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/quick-search/quick-search.service.ts:51\n                \n            \n\n\n            \n                \n                    Unregister a search provider by providing the registration id.\nReturns true if un-registration was done.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    provider\n                                    \n                                                QuickSearchProvider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Provider to be unregistered\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registrations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QuickSearchProvider[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/quick-search/quick-search.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { QuickSearchProvider } from './quick-search.provider';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class QuickSearchService {\n    registrations: QuickSearchProvider[] = [];\n\n    /**\n     * Register a search provider\n     * @param provider The search provider {@link QuickSearchProvider}\n     */\n    public registerProvider(provider: QuickSearchProvider): void {\n        const order = typeof provider.order === 'undefined' ? -1 : provider.order;\n\n        let insertIndex = -1;\n        // Determine the position of the new registration\n        if (order > -1) {\n            insertIndex = this.registrations.findIndex((prov) => {\n                // If an item has a negative index, this means no order had been provided for that item\n                // which means we have found the insert index\n                if (prov.order  -1) {\n            this.registrations.splice(insertIndex, 0, provider);\n        } else {\n            this.registrations.push(provider);\n        }\n    }\n\n    /**\n     * Unregister a search provider by providing the registration id.\n     * Returns true if un-registration was done.\n     * @param provider Provider to be unregistered\n     */\n    public unregisterProvider(provider: QuickSearchProvider): boolean {\n        const index = this.registrations.findIndex((regProvider) => regProvider === provider);\n        if (index > -1) {\n            this.registrations.splice(index, 1);\n        }\n        return index > -1;\n    }\n\n    /**\n     * Get a list of all the registered search providers.\n     */\n    public getRegisteredProviders(): QuickSearchProvider[] {\n        return [...this.registrations];\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResultActivatedEvent.html":{"url":"interfaces/ResultActivatedEvent.html","title":"interface - ResultActivatedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResultActivatedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search.component.ts\n        \n\n            \n                Description\n            \n            \n                This interface describes the event emitted when a result item is activated,\ni.e. its event handler has been called.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        eventSource\n                                \n                                \n                                        itemDisplayText\n                                \n                                \n                                        sectionTitle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        eventSource\n                                    \n                                \n                                \n                                    \n                                        eventSource:     \"MouseEvent\" | \"KeyboardEvent\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"MouseEvent\" | \"KeyboardEvent\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemDisplayText\n                                    \n                                \n                                \n                                    \n                                        itemDisplayText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionTitle\n                                    \n                                \n                                \n                                    \n                                        sectionTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { TranslationService } from '@vcd/i18n';\nimport { DomUtil } from '../utils/dom-util';\nimport { QuickSearchResultItem, QuickSearchResults, QuickSearchResultsType } from './quick-search-result';\nimport { QuickSearchProvider } from './quick-search.provider';\nimport { QuickSearchService } from './quick-search.service';\n\ninterface SearchSection {\n    provider: QuickSearchProvider;\n    result: QuickSearchResults;\n    isLoading: boolean;\n}\n\n/**\n * This interface describes the event emitted when a result item is activated,\n * i.e. its event handler has been called.\n */\nexport interface ResultActivatedEvent {\n    itemDisplayText: string;\n    sectionTitle: string;\n    eventSource: 'MouseEvent' | 'KeyboardEvent';\n}\n\n/**\n * This interface describes partial search result, i.e. result that do not contain all the items that match the\n * search criteria {@see QuickSearchComponent#hasPartialResult}\n */\ninterface PartialResult {\n    /**\n     * The number of the last item of the result\n     */\n    lastItem: number;\n\n    /**\n     * Total number of items in the result\n     */\n    totalItems: number;\n}\n\n/**\n * The Quick Search component is inspired by the Spotlight Search in Mac OSX (cmd+space)\n * and the Search Everywhere in IntelliJ (shift+shift)\n *\n * This VCD Quick Search does not provide any search by itself. It is not also a single component\n * but rather a group of objects that work together in order to allow the developer to build a might search experience\n * for the end user.\n *\n * Basically the VCD Quick Search consists of:\n * \n *     QuickSearchComponent - the visual component that you should include in your template\n *     {@link QuickSearchService}QuickSearchService\n *     - the service that you should register your own providers with\n *     {@link QuickSearchProvider}QuickSearchProvider\n *     - the interface your search provider should implement.\n *     It can return either an array of {@link QuickSearchResults} or a promise for lazy loading of results\n * \n *\n * QuickSearchComponent:\n *\n *    \n *\n *\n * {@link QuickSearchService}:\n *\n * This service works along with the component in order to provide search results displayed. Those results are grouped\n * in sections based on the registered provider {@link QuickSearchProvider}.\n *\n * You can provide order of the search providers, hence the order of the displayed sections\n *\n * If there is just one search provider no section title is displayed.\n *\n * In case of multiple search providers the Quick Search can be configured to hide the entire section if it contains no data.\n *\n *\n * For a complete end-to-end running example please take a look at the `Examples` tab of the live-docs\n */\n@Component({\n    selector: 'vcd-quick-search',\n    templateUrl: './quick-search.component.html',\n    styleUrls: ['./quick-search.component.scss'],\n})\nexport class QuickSearchComponent {\n    /**\n     * Placeholder for the search input. Default is empty string;\n     */\n    @Input() public placeholder: string;\n\n    /**\n     * This property alongside with `openChange` provide two-way binding [(open)] for controlling the visibility state\n     * of the quick search component\n     */\n    @Input()\n    public set open(open: boolean) {\n        this.handleOpen(open);\n    }\n    public get open(): boolean {\n        return this._open;\n    }\n\n    /**\n     * This method along with `open` property provide two-way binding [(open)] for controlling the visibility state\n     * of the quick search component\n     */\n    @Output() openChange: EventEmitter = new EventEmitter(false);\n\n    /**\n     * Event dispatched when item has been activated, i.e. its event handler is called.\n     * This happens when item is clicked or 'Enter' is pressed when there is a selection.\n     */\n    @Output() resultActivated: EventEmitter = new EventEmitter();\n\n    constructor(\n        private searchService: QuickSearchService,\n        private changeDetectorRef: ChangeDetectorRef,\n        private el: ElementRef,\n        public translationService: TranslationService\n    ) {}\n\n    get searchCriteria(): string {\n        return this._searchCriteria;\n    }\n\n    set searchCriteria(value: string) {\n        this._searchCriteria = value;\n        this.doSearch();\n    }\n    private _searchCriteria: string;\n\n    private _open = false;\n\n    @ViewChild('searchInput', { static: false, read: ElementRef }) searchInput: ElementRef;\n\n    private searchId = 0;\n\n    /**\n     * The search sections are provided by the {@link QuickSearchService} upon opening the Quick Search.\n     * This insures that new sections based on the current context of the application may appear.\n     */\n    searchSections: SearchSection[] = [];\n\n    selectedItem: QuickSearchResultItem;\n\n    itemClicked(item: QuickSearchResultItem): void {\n        this.handleItem(item, true);\n    }\n\n    onArrowDown(event: KeyboardEvent): void {\n        event.preventDefault();\n        this.selectNext(true);\n    }\n\n    onArrowUp(event: KeyboardEvent): void {\n        event.preventDefault();\n        this.selectNext(false);\n    }\n\n    onEnterKey(event): void {\n        event.preventDefault();\n        if (!this.selectedItem) {\n            return;\n        }\n        this.handleItem(this.selectedItem, false);\n    }\n\n    private doSearch(): void {\n        // Remember which is the current search. This will help us not to show results from an old search\n        const searchId = ++this.searchId;\n\n        this.selectedItem = null;\n\n        // Mark each sections in loading state. This flag is needed when trying to select the first item\n        // while the search is still in progress\n        this.searchSections.forEach((searchSection) => (searchSection.isLoading = true));\n\n        // Go through the available search sections, i.e. the registered search providers and request for results\n        this.searchSections.forEach(async (searchSection) => {\n            let searchResult: QuickSearchResults;\n            // Only request for data if the search is not empty\n            if (!!this.searchCriteria) {\n                const result = searchSection.provider.search(this.searchCriteria);\n\n                // Some of the results may be provided later, so mark the section as loading\n                if (result instanceof Promise) {\n                    searchResult = await result;\n                } else {\n                    searchResult = result;\n                }\n                // Use the closure to verify that the displayed data is going to be really from the latest search\n                if (searchId !== this.searchId) {\n                    return;\n                }\n            }\n            searchSection.result = searchResult;\n            searchSection.isLoading = false;\n            if (!this.selectedItem) {\n                this.selectFirst(true);\n            }\n        });\n    }\n\n    /**\n     * Try to select the first item in the compound search result.\n     * @param ensureFirstSectionIsLoaded if true and if the topmost section is still loading then do not select an item\n     */\n    private selectFirst(ensureFirstSectionIsLoaded: boolean): void {\n        for (const section of this.searchSections) {\n            // The section is still loading. If it was requested to ensure the loading has completed than abort\n            // the attempt to select an item or just skip it and examine the next section.\n            if (section.isLoading) {\n                if (ensureFirstSectionIsLoaded) {\n                    return;\n                }\n                continue;\n            }\n            this.selectedItem = section.result?.items[0];\n            if (this.selectedItem) {\n                break;\n            }\n        }\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private selectNext(down: boolean): void {\n        // If there is no selection then just select the first available item\n        if (!this.selectedItem) {\n            this.selectFirst(false);\n            return;\n        }\n\n        // Get all the items form all the sections in a single flat array\n        const allResults = this.searchSections.reduce((acc, v) => [...acc, ...(v.result?.items || [])], []);\n\n        let selectedItemIndex = allResults.indexOf(this.selectedItem);\n\n        // There is a selected item but it is not one of the available ones, so just select the first from the list\n        if (selectedItemIndex  ({ provider, result: null, isLoading: true }));\n            this.doSearch();\n\n            setTimeout(() => {\n                this.searchInput.nativeElement.focus();\n                this.searchInput.nativeElement.select();\n            }, 0);\n        }\n\n        this._open = open;\n        this.openChange.emit(this._open);\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private handleItem(item: QuickSearchResultItem, clicked: boolean): void {\n        const searchSection: SearchSection = this.searchSections.find(\n            (section) =>\n                !section.isLoading &&\n                section.result?.items.some((resultItem) => resultItem.displayText === item.displayText)\n        );\n        const resultActivatedEvent: ResultActivatedEvent = {\n            itemDisplayText: item.displayText,\n            sectionTitle: searchSection.provider.sectionName,\n            eventSource: clicked ? 'MouseEvent' : 'KeyboardEvent',\n        };\n        item.handler();\n        this.resultActivated.emit(resultActivatedEvent);\n        this.open = false;\n    }\n\n    showSectionTitle(searchSection: SearchSection): boolean {\n        return !!(searchSection.provider.sectionName && this.searchCriteria);\n    }\n\n    /**\n     * Determines if the result in this section is partial (i.e. there are more items matching the criteria which are\n     * in the current list) or it is full (the current list contains all the items matching the criteria)\n     * If the result is partial then {@link PartialResult} object is returned. If the result contains all the items\n     * then null is returned\n     * @param searchSection the section which result items is to be checked\n     */\n    hasPartialResult(searchSection: SearchSection): PartialResult {\n        if (\n            searchSection.result?.total &&\n            searchSection.result?.items?.length &&\n            searchSection.result.items.length \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchSection.html":{"url":"interfaces/SearchSection.html","title":"interface - SearchSection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SearchSection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isLoading\n                                \n                                \n                                        provider\n                                \n                                \n                                        result\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isLoading\n                                    \n                                \n                                \n                                    \n                                        isLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                    \n                                \n                                \n                                    \n                                        provider:         QuickSearchProvider\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QuickSearchProvider\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                    \n                                \n                                \n                                    \n                                        result:         QuickSearchResults\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QuickSearchResults\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { TranslationService } from '@vcd/i18n';\nimport { DomUtil } from '../utils/dom-util';\nimport { QuickSearchResultItem, QuickSearchResults, QuickSearchResultsType } from './quick-search-result';\nimport { QuickSearchProvider } from './quick-search.provider';\nimport { QuickSearchService } from './quick-search.service';\n\ninterface SearchSection {\n    provider: QuickSearchProvider;\n    result: QuickSearchResults;\n    isLoading: boolean;\n}\n\n/**\n * This interface describes the event emitted when a result item is activated,\n * i.e. its event handler has been called.\n */\nexport interface ResultActivatedEvent {\n    itemDisplayText: string;\n    sectionTitle: string;\n    eventSource: 'MouseEvent' | 'KeyboardEvent';\n}\n\n/**\n * This interface describes partial search result, i.e. result that do not contain all the items that match the\n * search criteria {@see QuickSearchComponent#hasPartialResult}\n */\ninterface PartialResult {\n    /**\n     * The number of the last item of the result\n     */\n    lastItem: number;\n\n    /**\n     * Total number of items in the result\n     */\n    totalItems: number;\n}\n\n/**\n * The Quick Search component is inspired by the Spotlight Search in Mac OSX (cmd+space)\n * and the Search Everywhere in IntelliJ (shift+shift)\n *\n * This VCD Quick Search does not provide any search by itself. It is not also a single component\n * but rather a group of objects that work together in order to allow the developer to build a might search experience\n * for the end user.\n *\n * Basically the VCD Quick Search consists of:\n * \n *     QuickSearchComponent - the visual component that you should include in your template\n *     {@link QuickSearchService}QuickSearchService\n *     - the service that you should register your own providers with\n *     {@link QuickSearchProvider}QuickSearchProvider\n *     - the interface your search provider should implement.\n *     It can return either an array of {@link QuickSearchResults} or a promise for lazy loading of results\n * \n *\n * QuickSearchComponent:\n *\n *    \n *\n *\n * {@link QuickSearchService}:\n *\n * This service works along with the component in order to provide search results displayed. Those results are grouped\n * in sections based on the registered provider {@link QuickSearchProvider}.\n *\n * You can provide order of the search providers, hence the order of the displayed sections\n *\n * If there is just one search provider no section title is displayed.\n *\n * In case of multiple search providers the Quick Search can be configured to hide the entire section if it contains no data.\n *\n *\n * For a complete end-to-end running example please take a look at the `Examples` tab of the live-docs\n */\n@Component({\n    selector: 'vcd-quick-search',\n    templateUrl: './quick-search.component.html',\n    styleUrls: ['./quick-search.component.scss'],\n})\nexport class QuickSearchComponent {\n    /**\n     * Placeholder for the search input. Default is empty string;\n     */\n    @Input() public placeholder: string;\n\n    /**\n     * This property alongside with `openChange` provide two-way binding [(open)] for controlling the visibility state\n     * of the quick search component\n     */\n    @Input()\n    public set open(open: boolean) {\n        this.handleOpen(open);\n    }\n    public get open(): boolean {\n        return this._open;\n    }\n\n    /**\n     * This method along with `open` property provide two-way binding [(open)] for controlling the visibility state\n     * of the quick search component\n     */\n    @Output() openChange: EventEmitter = new EventEmitter(false);\n\n    /**\n     * Event dispatched when item has been activated, i.e. its event handler is called.\n     * This happens when item is clicked or 'Enter' is pressed when there is a selection.\n     */\n    @Output() resultActivated: EventEmitter = new EventEmitter();\n\n    constructor(\n        private searchService: QuickSearchService,\n        private changeDetectorRef: ChangeDetectorRef,\n        private el: ElementRef,\n        public translationService: TranslationService\n    ) {}\n\n    get searchCriteria(): string {\n        return this._searchCriteria;\n    }\n\n    set searchCriteria(value: string) {\n        this._searchCriteria = value;\n        this.doSearch();\n    }\n    private _searchCriteria: string;\n\n    private _open = false;\n\n    @ViewChild('searchInput', { static: false, read: ElementRef }) searchInput: ElementRef;\n\n    private searchId = 0;\n\n    /**\n     * The search sections are provided by the {@link QuickSearchService} upon opening the Quick Search.\n     * This insures that new sections based on the current context of the application may appear.\n     */\n    searchSections: SearchSection[] = [];\n\n    selectedItem: QuickSearchResultItem;\n\n    itemClicked(item: QuickSearchResultItem): void {\n        this.handleItem(item, true);\n    }\n\n    onArrowDown(event: KeyboardEvent): void {\n        event.preventDefault();\n        this.selectNext(true);\n    }\n\n    onArrowUp(event: KeyboardEvent): void {\n        event.preventDefault();\n        this.selectNext(false);\n    }\n\n    onEnterKey(event): void {\n        event.preventDefault();\n        if (!this.selectedItem) {\n            return;\n        }\n        this.handleItem(this.selectedItem, false);\n    }\n\n    private doSearch(): void {\n        // Remember which is the current search. This will help us not to show results from an old search\n        const searchId = ++this.searchId;\n\n        this.selectedItem = null;\n\n        // Mark each sections in loading state. This flag is needed when trying to select the first item\n        // while the search is still in progress\n        this.searchSections.forEach((searchSection) => (searchSection.isLoading = true));\n\n        // Go through the available search sections, i.e. the registered search providers and request for results\n        this.searchSections.forEach(async (searchSection) => {\n            let searchResult: QuickSearchResults;\n            // Only request for data if the search is not empty\n            if (!!this.searchCriteria) {\n                const result = searchSection.provider.search(this.searchCriteria);\n\n                // Some of the results may be provided later, so mark the section as loading\n                if (result instanceof Promise) {\n                    searchResult = await result;\n                } else {\n                    searchResult = result;\n                }\n                // Use the closure to verify that the displayed data is going to be really from the latest search\n                if (searchId !== this.searchId) {\n                    return;\n                }\n            }\n            searchSection.result = searchResult;\n            searchSection.isLoading = false;\n            if (!this.selectedItem) {\n                this.selectFirst(true);\n            }\n        });\n    }\n\n    /**\n     * Try to select the first item in the compound search result.\n     * @param ensureFirstSectionIsLoaded if true and if the topmost section is still loading then do not select an item\n     */\n    private selectFirst(ensureFirstSectionIsLoaded: boolean): void {\n        for (const section of this.searchSections) {\n            // The section is still loading. If it was requested to ensure the loading has completed than abort\n            // the attempt to select an item or just skip it and examine the next section.\n            if (section.isLoading) {\n                if (ensureFirstSectionIsLoaded) {\n                    return;\n                }\n                continue;\n            }\n            this.selectedItem = section.result?.items[0];\n            if (this.selectedItem) {\n                break;\n            }\n        }\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private selectNext(down: boolean): void {\n        // If there is no selection then just select the first available item\n        if (!this.selectedItem) {\n            this.selectFirst(false);\n            return;\n        }\n\n        // Get all the items form all the sections in a single flat array\n        const allResults = this.searchSections.reduce((acc, v) => [...acc, ...(v.result?.items || [])], []);\n\n        let selectedItemIndex = allResults.indexOf(this.selectedItem);\n\n        // There is a selected item but it is not one of the available ones, so just select the first from the list\n        if (selectedItemIndex  ({ provider, result: null, isLoading: true }));\n            this.doSearch();\n\n            setTimeout(() => {\n                this.searchInput.nativeElement.focus();\n                this.searchInput.nativeElement.select();\n            }, 0);\n        }\n\n        this._open = open;\n        this.openChange.emit(this._open);\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private handleItem(item: QuickSearchResultItem, clicked: boolean): void {\n        const searchSection: SearchSection = this.searchSections.find(\n            (section) =>\n                !section.isLoading &&\n                section.result?.items.some((resultItem) => resultItem.displayText === item.displayText)\n        );\n        const resultActivatedEvent: ResultActivatedEvent = {\n            itemDisplayText: item.displayText,\n            sectionTitle: searchSection.provider.sectionName,\n            eventSource: clicked ? 'MouseEvent' : 'KeyboardEvent',\n        };\n        item.handler();\n        this.resultActivated.emit(resultActivatedEvent);\n        this.open = false;\n    }\n\n    showSectionTitle(searchSection: SearchSection): boolean {\n        return !!(searchSection.provider.sectionName && this.searchCriteria);\n    }\n\n    /**\n     * Determines if the result in this section is partial (i.e. there are more items matching the criteria which are\n     * in the current list) or it is full (the current list contains all the items matching the criteria)\n     * If the result is partial then {@link PartialResult} object is returned. If the result contains all the items\n     * then null is returned\n     * @param searchSection the section which result items is to be checked\n     */\n    hasPartialResult(searchSection: SearchSection): PartialResult {\n        if (\n            searchSection.result?.total &&\n            searchSection.result?.items?.length &&\n            searchSection.result.items.length \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectOption.html":{"url":"interfaces/SelectOption.html","title":"interface - SelectOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SelectOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/interfaces/select-option.ts\n        \n\n            \n                Description\n            \n            \n                Options displayed in a select input option list\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        display\n                                \n                                \n                                            Optional\n                                        isTranslatable\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Text to be shown for the option\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isTranslatable\n                                    \n                                \n                                \n                                    \n                                        isTranslatable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used for translation of the SelectOption.display text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Value of a option\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SelectOption {\n    /**\n     * Value of a option\n     */\n    value: string | number;\n    /**\n     * Text to be shown for the option\n     */\n    display: string;\n    /**\n     * Used for translation of the {@link SelectOption.display} text\n     */\n    isTranslatable?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ShowClippedTextDirective.html":{"url":"directives/ShowClippedTextDirective.html","title":"directive - ShowClippedTextDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ShowClippedTextDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/lib/directives/show-clipped-text.directive.ts\n        \n\n            \n                Description\n            \n            \n                Displays a clarity tooltip with the full contents of a host element on hover but only if\nthe elements is clipped.\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [vcdShowClippedText]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                    Public\n                                hostElement\n                            \n                            \n                                    Static\n                                instanceCount\n                            \n                            \n                                mouseoutDelay\n                            \n                            \n                                    Private\n                                onMouseIn\n                            \n                            \n                                    Private\n                                onMouseOut\n                            \n                            \n                                tooltipSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                    Private\n                                isOverflowing\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                vcdShowClippedText\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    config\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:253\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        vcdShowClippedText\n                    \n                \n                \n                    \n                        Type :         CliptextConfig\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:227\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:263\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:282\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isOverflowing\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isOverflowing()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:305\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:276\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:257\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:248\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hostElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                    \n                        \n                            Default value : this.host.nativeElement\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:253\n                            \n                        \n\n                \n                    \n                        The HTML element receiving the directive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            instanceCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:224\n                            \n                        \n\n                \n                    \n                        To destroy the tooltip when no longer needed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mouseoutDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 500\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:246\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onMouseIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         (e: MouseEvent) => {\n        tip.clearHideTimeout();\n        tip.isMouseOver = true;\n        if (this.isOverflowing()) {\n            tip.currentDirective = this;\n            tip.update();\n        } else {\n            tip.hideTooltip(this.mouseoutDelay);\n        }\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:290\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onMouseOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         () => {\n        tip.hideTooltip(this.mouseoutDelay);\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:301\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tooltipSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TooltipSize.md\n\n                        \n                    \n                    \n                        \n                            Default value : TooltipSize.md\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:247\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n\n                \n                    \n                        setconfig(config)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:227\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            config\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\n\nexport enum TooltipPosition {\n    tl = 'tooltip-top-left',\n    tr = 'tooltip-top-right',\n    br = 'tooltip-bottom-right',\n    bl = 'tooltip-bottom-left',\n}\n\nexport enum TooltipSize {\n    sm = '100px',\n    md = '200px',\n    lg = '400px',\n}\n\n/**\n * The configuration information for the cliptext within the cells of the datagrid.\n */\nexport interface CliptextConfig {\n    /**\n     * The size of the tooltip to be displayed in the cell.\n     */\n    size?: TooltipSize;\n    /**\n     * The time delay from mouse off to hide the cliptext.\n     */\n    mouseoutDelay?: number;\n    /**\n     * If the cliptext should be disabled.\n     */\n    disabled?: boolean;\n}\n\n/**\n * Singleton tooltip created by directive\n */\nconst tip = {\n    /** A single DOM node structure for the popup is created and shared with all instances (the .tooltip)  */\n    container: null as HTMLElement,\n\n    /** The inner node (the .tooltip-content) */\n    content: null as HTMLElement,\n\n    /** Timer for setTimeout used when hiding */\n    hideTimeout: null as number,\n\n    /** The directive that last caused the tooltip to be displayed */\n    currentDirective: null as ShowClippedTextDirective,\n\n    /** Whether the mouse is currently over a host or the tooltip */\n    isMouseOver: false,\n\n    /**\n     * The host element that last caused the tooltip to be displayed\n     */\n    get currentHost(): HTMLElement {\n        return tip.currentDirective.hostElement;\n    },\n\n    /**\n     * The tooltip size requested for the last directive that caused the tooltip to be displayed\n     */\n    get tooltipSize(): TooltipSize {\n        return tip.currentDirective.tooltipSize;\n    },\n\n    /**\n     * How long to wait before hiding the tooltip after a mouseout. This gives the user a chance to hover over the\n     * tooltip so they can copy/paste its contents\n     */\n    get mouseoutDelay(): number {\n        return tip.currentDirective.mouseoutDelay;\n    },\n\n    create(): void {\n        if (tip.container) {\n            return;\n        }\n        tip.container = document.createElement('div');\n        tip.container.classList.add('tooltip', 'vcd-show-clipped-text');\n        tip.content = document.createElement('div');\n        tip.content.classList.add('tooltip-content');\n        setStyle(tip.container, {\n            position: 'absolute',\n            zIndex: '1000',\n            opacity: '0',\n        });\n        tip.container.appendChild(tip.content);\n        document.body.appendChild(tip.container);\n        watchEvents(tip.container, tip.onMouseEnter, tip.onMouseLeave);\n        tip.content.addEventListener('transitionend', tip.onTransitionEnd);\n    },\n\n    destroy(): void {\n        document.body.removeChild(tip.container);\n        unwatchEvents(tip.container, tip.onMouseEnter, tip.onMouseLeave);\n        tip.content.removeEventListener('transitionend', this.onTransitionEnd);\n        tip.container = null;\n        tip.content = null;\n    },\n\n    onMouseEnter(): void {\n        tip.clearHideTimeout();\n    },\n\n    onMouseLeave(): void {\n        if (tip.currentDirective) {\n            tip.hideTooltip(tip.mouseoutDelay);\n        }\n    },\n\n    hideTooltip(delay: number): void {\n        tip.clearHideTimeout();\n        tip.hideTimeout = window.setTimeout(() => {\n            tip.isMouseOver = false;\n            tip.container.style.opacity = '0';\n            tip.content.style.opacity = '0';\n            tip.hideTimeout = null;\n            tip.currentDirective = null;\n        }, delay);\n    },\n\n    clearHideTimeout(): void {\n        if (tip.hideTimeout) {\n            clearTimeout(tip.hideTimeout);\n            tip.hideTimeout = null;\n        }\n    },\n\n    onTransitionEnd(e: Event): void {\n        if (tip.container.style.opacity === '0') {\n            tip.container.style.visibility = 'hidden';\n            tip.content.style.visibility = 'hidden';\n        }\n    },\n\n    /**\n     * Update the tooltip based on the content/dimensions of {@link tip.currentDirective}\n     */\n    update(): void {\n        const el = tip.currentHost;\n        const rect = el.getBoundingClientRect();\n        setStyle(tip.container, {\n            top: rect.top + 'px',\n            left: rect.left + 'px',\n            width: rect.width + 'px',\n            height: rect.height + 'px',\n            opacity: '1',\n            wordBreak: 'break-all',\n        });\n        setStyle(tip.content, {\n            visibility: 'visible',\n            opacity: '1',\n            width: this.tooltipSize,\n        });\n        const { tl, tr, bl, br } = TooltipPosition;\n        tip.content.classList.remove(tl, tr, bl, br);\n        tip.content.classList.add(tip.calculatePosition(rect));\n        tip.content.innerHTML = el.innerHTML;\n    },\n\n    /**\n     *  Tooltip direction should be the opposite quadrant of where the center of the clipped element is\n     *     TL -> BR        TR -> BL\n     *     BL -> TR        BR -> TL\n     * @param rect THe dimensions of the clipped element\n     */\n    calculatePosition(rect: ClientRect): TooltipPosition {\n        const { innerWidth, innerHeight } = window;\n        const rectCenter = { x: rect.left + rect.width / 2, y: rect.top + rect.height / 2 };\n\n        // It's on the right\n        if (rectCenter.x > innerWidth / 2) {\n            if (rectCenter.y > innerHeight / 2) {\n                // Bottom right quad\n                return TooltipPosition.tl;\n            } else {\n                // Top right quad\n                return TooltipPosition.bl;\n            }\n        }\n\n        // It's on the left\n        if (rectCenter.y > innerHeight / 2) {\n            // Bottom left quad\n            return TooltipPosition.tr;\n        } else {\n            // Top left quad\n            return TooltipPosition.br;\n        }\n    },\n};\n\ntype EventHandler = (e: MouseEvent) => void;\n\nfunction watchEvents(el: HTMLElement, mouseIn: EventHandler, mouseOut: EventHandler): void {\n    el.addEventListener('mouseenter', mouseIn);\n    el.addEventListener('mouseleave', mouseOut);\n}\n\nfunction unwatchEvents(el: HTMLElement, mouseIn: EventHandler, mouseOut: EventHandler): void {\n    el.removeEventListener('mouseenter', mouseIn);\n    el.removeEventListener('mouseleave', mouseOut);\n}\n\nfunction setStyle(el: HTMLElement, style: Partial): void {\n    Object.assign(el.style, style);\n}\n\n/**\n * Displays a clarity tooltip with the full contents of a host element on hover but only if\n * the elements is clipped.\n */\n@Directive({\n    selector: '[vcdShowClippedText]',\n})\nexport class ShowClippedTextDirective implements OnDestroy, OnInit {\n    /** To destroy the tooltip when no longer needed */\n    static instanceCount = 0;\n\n    @Input('vcdShowClippedText')\n    set config(config: CliptextConfig) {\n        if (config && config.mouseoutDelay) {\n            this.mouseoutDelay = config.mouseoutDelay;\n        }\n        if (config && config.size) {\n            this.tooltipSize = config.size;\n        }\n        const nextDisabled = config !== undefined && config.disabled;\n        if (this.disabled === nextDisabled) {\n            return;\n        }\n        this.disabled = nextDisabled;\n        if (this.disabled) {\n            this.deactivate();\n        } else {\n            this.activate();\n        }\n    }\n\n    mouseoutDelay = 500;\n    tooltipSize = TooltipSize.md;\n    disabled = false;\n\n    /**\n     * The HTML element receiving the directive\n     */\n    public hostElement: HTMLElement = this.host.nativeElement;\n\n    constructor(private host: ElementRef) {}\n\n    ngOnInit(): void {\n        if (!this.disabled) {\n            this.activate();\n        }\n    }\n\n    activate(): void {\n        ShowClippedTextDirective.instanceCount++;\n        tip.create();\n        watchEvents(this.hostElement, this.onMouseIn, this.onMouseOut);\n\n        // A host must have the following styles to show text ellipsis when overflowing\n        setStyle(this.hostElement, {\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n        });\n    }\n\n    ngOnDestroy(): void {\n        if (!this.disabled) {\n            this.deactivate();\n        }\n    }\n\n    deactivate(): void {\n        ShowClippedTextDirective.instanceCount--;\n        unwatchEvents(this.hostElement, this.onMouseIn, this.onMouseOut);\n        if (ShowClippedTextDirective.instanceCount === 0) {\n            tip.destroy();\n        }\n    }\n\n    private onMouseIn = (e: MouseEvent) => {\n        tip.clearHideTimeout();\n        tip.isMouseOver = true;\n        if (this.isOverflowing()) {\n            tip.currentDirective = this;\n            tip.update();\n        } else {\n            tip.hideTooltip(this.mouseoutDelay);\n        }\n    };\n\n    private onMouseOut = () => {\n        tip.hideTooltip(this.mouseoutDelay);\n    };\n\n    private isOverflowing(): boolean {\n        // Text overflows when the content element's width is less than its scrollWidth.\n        return Math.ceil(this.hostElement.getBoundingClientRect().width)  {\n    // Since we're at it, please remove the param from onTransitionEnd since we don't use it\n    tip.onTransitionEnd(event);\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ShowClippedTextDirectiveModule.html":{"url":"modules/ShowClippedTextDirectiveModule.html","title":"module - ShowClippedTextDirectiveModule","body":"\n                   \n\n\n\n\n    Modules\n    ShowClippedTextDirectiveModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ShowClippedTextDirectiveModule\n\n\n\ncluster_ShowClippedTextDirectiveModule_declarations\n\n\n\ncluster_ShowClippedTextDirectiveModule_exports\n\n\n\n\nShowClippedTextDirective\n\nShowClippedTextDirective\n\n\n\nShowClippedTextDirectiveModule\n\nShowClippedTextDirectiveModule\n\nShowClippedTextDirectiveModule -->\n\nShowClippedTextDirective->ShowClippedTextDirectiveModule\n\n\n\n\n\nShowClippedTextDirective \n\nShowClippedTextDirective \n\nShowClippedTextDirective  -->\n\nShowClippedTextDirectiveModule->ShowClippedTextDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/lib/directives/show-clipped-text.directive.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ShowClippedTextDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ShowClippedTextDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { NgModule } from '@angular/core';\nimport { ShowClippedTextDirective } from './show-clipped-text.directive';\n\n@NgModule({\n    declarations: [ShowClippedTextDirective],\n    exports: [ShowClippedTextDirective],\n})\nexport class ShowClippedTextDirectiveModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShowClippedTextDirectiveTestHelper.html":{"url":"classes/ShowClippedTextDirectiveTestHelper.html","title":"class - ShowClippedTextDirectiveTestHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShowClippedTextDirectiveTestHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts\n        \n\n            \n                Description\n            \n            \n                Used to remove DOM specific code from the jasmine tests while testing this directive\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                componentInstance\n                            \n                            \n                                    Public\n                                hideDelay\n                            \n                            \n                                    Private\n                                host\n                            \n                            \n                                    Private\n                                secondHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                moveMouseOffHost\n                            \n                            \n                                moveMouseOffTooltip\n                            \n                            \n                                moveMouseOverHost\n                            \n                            \n                                moveMouseOverSecondHost\n                            \n                            \n                                moveMouseOverTooltip\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    width\n                                \n                                \n                                    hostPosition\n                                \n                                \n                                    disabled\n                                \n                                \n                                    hostText\n                                \n                                \n                                    tooltipSize\n                                \n                                \n                                    isTooltipVisible\n                                \n                                \n                                    tooltipText\n                                \n                                \n                                    tooltipPosition\n                                \n                                \n                                    tooltipCount\n                                \n                                \n                                    tooltipVisibility\n                                \n                                \n                                    tooltipContent\n                                \n                                \n                                    tooltip\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fixture: ComponentFixture)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fixture\n                                                  \n                                                        \n                                                                        ComponentFixture\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            componentInstance\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.fixture.componentInstance\n\n                        \n                    \n                    \n                        \n                            Default value : this.fixture.componentInstance\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hideDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.componentInstance.directive.mouseoutDelay\n\n                        \n                    \n                    \n                        \n                            Default value : this.componentInstance.directive.mouseoutDelay\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            host\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                    \n                        \n                            Default value : this.componentInstance.div.nativeElement\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            secondHost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                    \n                        \n                            Default value : this.componentInstance.div2.nativeElement\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:22\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moveMouseOffHost\n                        \n                        \n                    \n                \n            \n            \n                \nmoveMouseOffHost()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moveMouseOffTooltip\n                        \n                        \n                    \n                \n            \n            \n                \nmoveMouseOffTooltip()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moveMouseOverHost\n                        \n                        \n                    \n                \n            \n            \n                \nmoveMouseOverHost()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moveMouseOverSecondHost\n                        \n                        \n                    \n                \n            \n            \n                \nmoveMouseOverSecondHost()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moveMouseOverTooltip\n                        \n                        \n                    \n                \n            \n            \n                \nmoveMouseOverTooltip()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n\n                \n                    \n                        setwidth(width: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            width\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        hostPosition\n                    \n                \n\n\n                \n                    \n                        sethostPosition(quadrant)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            quadrant\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n\n\n                \n                    \n                        setdisabled(disabled: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:44\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            disabled\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        hostText\n                    \n                \n\n\n                \n                    \n                        sethostText(text: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:49\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            text\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipSize\n                    \n                \n\n                \n                    \n                        gettooltipSize()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:54\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isTooltipVisible\n                    \n                \n\n                \n                    \n                        getisTooltipVisible()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:78\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipText\n                    \n                \n\n                \n                    \n                        gettooltipText()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:82\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipPosition\n                    \n                \n\n                \n                    \n                        gettooltipPosition()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:86\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipCount\n                    \n                \n\n                \n                    \n                        gettooltipCount()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:98\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipVisibility\n                    \n                \n\n                \n                    \n                        gettooltipVisibility()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:102\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipContent\n                    \n                \n\n                \n                    \n                        gettooltipContent()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:110\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n\n                \n                    \n                        gettooltip()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:114\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\nimport { ShowClippedTextDirective, TooltipPosition } from './show-clipped-text.directive';\n\n/**\n * Used to remove DOM specific code from the jasmine tests while testing this directive\n */\nexport class ShowClippedTextDirectiveTestHelper {\n    constructor(private fixture: ComponentFixture) {}\n\n    public componentInstance = this.fixture.componentInstance;\n\n    public hideDelay = this.componentInstance.directive.mouseoutDelay;\n\n    private host: HTMLElement = this.componentInstance.div.nativeElement;\n\n    private secondHost: HTMLElement = this.componentInstance.div2.nativeElement;\n\n    set width(width: string) {\n        this.host.style.width = width;\n    }\n\n    set hostPosition(quadrant: TooltipPosition) {\n        this.host.style.position = 'absolute';\n        const defaults = { top: '', left: '', bottom: '', right: '' };\n        if (quadrant === TooltipPosition.tl) {\n            Object.assign(defaults, { top: '0', left: '0' });\n        } else if (quadrant === TooltipPosition.tr) {\n            Object.assign(defaults, { top: '0', right: '0' });\n        } else if (quadrant === TooltipPosition.bl) {\n            Object.assign(defaults, { bottom: '0', left: '0' });\n        } else if (quadrant === TooltipPosition.br) {\n            Object.assign(defaults, { bottom: '0', right: '0' });\n        }\n\n        Object.assign(this.host.style, defaults);\n    }\n\n    set disabled(disabled: boolean) {\n        this.componentInstance.disabled = disabled;\n        this.fixture.detectChanges();\n    }\n\n    set hostText(text: string) {\n        this.componentInstance.text = text;\n        this.fixture.detectChanges();\n    }\n\n    get tooltipSize(): number {\n        return this.tooltipContent.offsetWidth;\n    }\n\n    moveMouseOverHost(): void {\n        this.host.dispatchEvent(new MouseEvent('mouseenter'));\n    }\n\n    moveMouseOverSecondHost(): void {\n        this.secondHost.dispatchEvent(new MouseEvent('mouseenter'));\n    }\n\n    moveMouseOverTooltip(): void {\n        this.tooltip.dispatchEvent(new MouseEvent('mouseenter'));\n    }\n\n    moveMouseOffHost(): void {\n        this.host.dispatchEvent(new MouseEvent('mouseleave'));\n    }\n\n    moveMouseOffTooltip(): void {\n        this.tooltip.dispatchEvent(new MouseEvent('mouseleave'));\n    }\n\n    get isTooltipVisible(): boolean {\n        return !!this.tooltip && (this.tooltip.style.opacity === '1' || this.tooltip.style.opacity === '');\n    }\n\n    get tooltipText(): string {\n        return this.tooltipContent.innerText;\n    }\n\n    get tooltipPosition(): TooltipPosition {\n        const classes = this.tooltipContent.classList;\n        for (const className of Array.from(classes)) {\n            for (const key of Object.keys(TooltipPosition)) {\n                if (TooltipPosition[key] === className) {\n                    return TooltipPosition[key] as TooltipPosition;\n                }\n            }\n        }\n        return null;\n    }\n\n    public get tooltipCount(): number {\n        return document.querySelectorAll('.tooltip.vcd-show-clipped-text').length;\n    }\n\n    public get tooltipVisibility(): string {\n        return this.tooltipContent.style.visibility;\n    }\n\n    public destroy(): void {\n        this.fixture.destroy();\n    }\n\n    private get tooltipContent(): HTMLElement {\n        return this.tooltip.querySelector('.tooltip-content');\n    }\n\n    private get tooltip(): HTMLElement {\n        return document.querySelector('.tooltip.vcd-show-clipped-text');\n    }\n}\n\n@Component({\n    template: `\n        {{ text }}\n        {{ text2 }}\n    `,\n})\nexport class ShowClippedTextDirectiveTestHostComponent {\n    @ViewChild(ShowClippedTextDirective) directive!: ShowClippedTextDirective;\n    @ViewChild('div') div!: ElementRef;\n    @ViewChild('div2') div2!: ElementRef;\n\n    public text = 'texting';\n    public text2 = 'texting too';\n    public disabled = false;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShowClippedTextDirectiveTestHostComponent.html":{"url":"components/ShowClippedTextDirectiveTestHostComponent.html","title":"component - ShowClippedTextDirectiveTestHostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShowClippedTextDirectiveTestHostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                template\n                {{ text }}\n{{ text2 }}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                directive\n                            \n                            \n                                    Public\n                                disabled\n                            \n                            \n                                div\n                            \n                            \n                                div2\n                            \n                            \n                                    Public\n                                text\n                            \n                            \n                                    Public\n                                text2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            directive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ShowClippedTextDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(ShowClippedTextDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:126\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:132\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            div\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('div')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:127\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            div2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('div2')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:128\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'texting'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:130\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            text2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'texting too'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:131\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\nimport { ShowClippedTextDirective, TooltipPosition } from './show-clipped-text.directive';\n\n/**\n * Used to remove DOM specific code from the jasmine tests while testing this directive\n */\nexport class ShowClippedTextDirectiveTestHelper {\n    constructor(private fixture: ComponentFixture) {}\n\n    public componentInstance = this.fixture.componentInstance;\n\n    public hideDelay = this.componentInstance.directive.mouseoutDelay;\n\n    private host: HTMLElement = this.componentInstance.div.nativeElement;\n\n    private secondHost: HTMLElement = this.componentInstance.div2.nativeElement;\n\n    set width(width: string) {\n        this.host.style.width = width;\n    }\n\n    set hostPosition(quadrant: TooltipPosition) {\n        this.host.style.position = 'absolute';\n        const defaults = { top: '', left: '', bottom: '', right: '' };\n        if (quadrant === TooltipPosition.tl) {\n            Object.assign(defaults, { top: '0', left: '0' });\n        } else if (quadrant === TooltipPosition.tr) {\n            Object.assign(defaults, { top: '0', right: '0' });\n        } else if (quadrant === TooltipPosition.bl) {\n            Object.assign(defaults, { bottom: '0', left: '0' });\n        } else if (quadrant === TooltipPosition.br) {\n            Object.assign(defaults, { bottom: '0', right: '0' });\n        }\n\n        Object.assign(this.host.style, defaults);\n    }\n\n    set disabled(disabled: boolean) {\n        this.componentInstance.disabled = disabled;\n        this.fixture.detectChanges();\n    }\n\n    set hostText(text: string) {\n        this.componentInstance.text = text;\n        this.fixture.detectChanges();\n    }\n\n    get tooltipSize(): number {\n        return this.tooltipContent.offsetWidth;\n    }\n\n    moveMouseOverHost(): void {\n        this.host.dispatchEvent(new MouseEvent('mouseenter'));\n    }\n\n    moveMouseOverSecondHost(): void {\n        this.secondHost.dispatchEvent(new MouseEvent('mouseenter'));\n    }\n\n    moveMouseOverTooltip(): void {\n        this.tooltip.dispatchEvent(new MouseEvent('mouseenter'));\n    }\n\n    moveMouseOffHost(): void {\n        this.host.dispatchEvent(new MouseEvent('mouseleave'));\n    }\n\n    moveMouseOffTooltip(): void {\n        this.tooltip.dispatchEvent(new MouseEvent('mouseleave'));\n    }\n\n    get isTooltipVisible(): boolean {\n        return !!this.tooltip && (this.tooltip.style.opacity === '1' || this.tooltip.style.opacity === '');\n    }\n\n    get tooltipText(): string {\n        return this.tooltipContent.innerText;\n    }\n\n    get tooltipPosition(): TooltipPosition {\n        const classes = this.tooltipContent.classList;\n        for (const className of Array.from(classes)) {\n            for (const key of Object.keys(TooltipPosition)) {\n                if (TooltipPosition[key] === className) {\n                    return TooltipPosition[key] as TooltipPosition;\n                }\n            }\n        }\n        return null;\n    }\n\n    public get tooltipCount(): number {\n        return document.querySelectorAll('.tooltip.vcd-show-clipped-text').length;\n    }\n\n    public get tooltipVisibility(): string {\n        return this.tooltipContent.style.visibility;\n    }\n\n    public destroy(): void {\n        this.fixture.destroy();\n    }\n\n    private get tooltipContent(): HTMLElement {\n        return this.tooltip.querySelector('.tooltip-content');\n    }\n\n    private get tooltip(): HTMLElement {\n        return document.querySelector('.tooltip.vcd-show-clipped-text');\n    }\n}\n\n@Component({\n    template: `\n        {{ text }}\n        {{ text2 }}\n    `,\n})\nexport class ShowClippedTextDirectiveTestHostComponent {\n    @ViewChild(ShowClippedTextDirective) directive!: ShowClippedTextDirective;\n    @ViewChild('div') div!: ElementRef;\n    @ViewChild('div2') div2!: ElementRef;\n\n    public text = 'texting';\n    public text2 = 'texting too';\n    public disabled = false;\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ text }}{{ text2 }}'\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'ShowClippedTextDirectiveTestHostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SortedColumn.html":{"url":"interfaces/SortedColumn.html","title":"interface - SortedColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SortedColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                The information about the currently sorted column.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        reverse\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the column that is sorted.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reverse\n                                    \n                                \n                                \n                                    \n                                        reverse:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the column is sorted normally or reversed.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerActivityReporterComponent.html":{"url":"components/SpinnerActivityReporterComponent.html","title":"component - SpinnerActivityReporterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpinnerActivityReporterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/common/activity-reporter/spinner-activity-reporter.component.ts\n\n\n    \n        Description\n    \n    \n        Spinner activity reporter shows the spinner until an error or success message is returned.\nAn error message is displayed through the error banner.\n\n    \n\n    \n        Extends\n    \n    \n                ActivityReporter\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-spinner-activity-reporter\n            \n\n\n\n\n            \n                templateUrl\n                ./spinner-activity-reporter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorText\n                            \n                            \n                                    Public\n                                running\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                reportError\n                            \n                            \n                                reportSuccess\n                            \n                            \n                                startActivity\n                            \n                            \n                                    Async\n                                monitorEdit\n                            \n                            \n                                    Async\n                                monitorGet\n                            \n                            \n                                    Async\n                                monitorGetAll\n                            \n                            \n                                    Abstract\n                                reportError\n                            \n                            \n                                    Abstract\n                                reportSuccess\n                            \n                            \n                                    Abstract\n                                startActivity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(promiseResolver: ActivityPromiseResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/common/activity-reporter/spinner-activity-reporter.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        promiseResolver\n                                                  \n                                                        \n                                                                        ActivityPromiseResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reportError\n                        \n                        \n                    \n                \n            \n            \n                \nreportError(errorText: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/spinner-activity-reporter.component.ts:44\n                \n            \n\n\n            \n                \n                    Hides the loading indicator and shows an error message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reportSuccess\n                        \n                        \n                    \n                \n            \n            \n                \nreportSuccess()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/spinner-activity-reporter.component.ts:52\n                \n            \n\n\n            \n                \n                    Hides the loading indicator.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startActivity\n                        \n                        \n                    \n                \n            \n            \n                \nstartActivity()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/spinner-activity-reporter.component.ts:36\n                \n            \n\n\n            \n                \n                    Begins to show the loading indicator to the user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            monitorEdit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    monitorEdit(activityResolutionPromise: Promise, successMessage?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:73\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Monitors a promise that returns an entity and posts a successMessage using ActivityPromiseResolver.monitorActivity.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityResolutionPromise\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    successMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            monitorGet\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    monitorGet(activityResolutionPromise: Promise)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:38\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Monitors a promise that returns an entity using ActivityPromiseResolver.monitorActivity.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityResolutionPromise\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            monitorGetAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    monitorGetAll(activityResolutionPromises: Promise)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:53\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Monitors a promise that returns many entities using ActivityPromiseResolver.monitorActivities.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityResolutionPromises\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            reportError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reportError(errorText: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:27\n\n                \n            \n\n\n            \n                \n                    Override this method to provide custom error reporting behavior.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    errorText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text to display in the error alert.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            reportSuccess\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reportSuccess(successMessage: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:33\n\n                \n            \n\n\n            \n                \n                    Override this method to provide custom success reporting behavior.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    successMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A message to display to the user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            startActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startActivity()\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/activity-reporter/spinner-activity-reporter.component.ts:27\n                            \n                        \n\n                \n                    \n                        When set show the error text\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            running\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/activity-reporter/spinner-activity-reporter.component.ts:22\n                            \n                        \n\n                \n                    \n                        When true show the spinner\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { ActivityPromiseResolver } from './activity-promise-resolver';\nimport { ActivityReporter } from './activity-reporter';\n\n/**\n * Spinner activity reporter shows the spinner until an error or success message is returned.\n * An error message is displayed through the error banner.\n */\n@Component({\n    selector: 'vcd-spinner-activity-reporter',\n    templateUrl: './spinner-activity-reporter.component.html',\n})\nexport class SpinnerActivityReporterComponent extends ActivityReporter {\n    /**\n     * When true show the spinner\n     */\n    public running = false;\n\n    /**\n     * When set show the error text\n     */\n    public errorText: string = null;\n\n    constructor(@Inject(ActivityPromiseResolver) promiseResolver: ActivityPromiseResolver) {\n        super(promiseResolver);\n    }\n\n    /**\n     * Begins to show the loading indicator to the user.\n     */\n    startActivity(): void {\n        this.running = true;\n        this.errorText = null;\n    }\n\n    /**\n     * Hides the loading indicator and shows an error message.\n     */\n    reportError(errorText: string): void {\n        this.errorText = errorText;\n        this.running = false;\n    }\n\n    /**\n     * Hides the loading indicator.\n     */\n    reportSuccess(): void {\n        this.running = false;\n    }\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerActivityReporterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SpinnerActivityReporterWidgetObject.html":{"url":"classes/SpinnerActivityReporterWidgetObject.html","title":"class - SpinnerActivityReporterWidgetObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SpinnerActivityReporterWidgetObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/activity-reporter/spinner-activity-reporter.wo.ts\n        \n\n\n            \n                Extends\n            \n            \n                        WidgetObject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                tagName\n                            \n                            \n                                    Public\n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getSpinner\n                            \n                            \n                                    Public\n                                isSpinnerSpinning\n                            \n                            \n                                    Protected\n                                click\n                            \n                            \n                                detectChanges\n                            \n                            \n                                    Protected\n                                findElement\n                            \n                            \n                                    Protected\n                                findElements\n                            \n                            \n                                    Protected\n                                getNodeText\n                            \n                            \n                                    Protected\n                                getText\n                            \n                            \n                                    Protected\n                                getTexts\n                            \n                            \n                                    Protected\n                                sendKeyboardEvent\n                            \n                            \n                                    Protected\n                                setInputValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    running\n                                \n                                \n                                    errorText\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tagName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd-spinner-activity-reporter'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/activity-reporter/spinner-activity-reporter.wo.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : fixture.componentInstance\n                        \n                    \n                            \n                                \n                                    Inherited from         WidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         WidgetObject:42\n\n                            \n                        \n\n                \n                    \n                        The component instance being managed. Whenever possible, we should access the component's API.\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getSpinner\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSpinner()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/activity-reporter/spinner-activity-reporter.wo.ts:24\n                \n            \n\n\n            \n                \n                    Gives the spinner for this element\n\n\n                    \n                        Returns :         DebugElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isSpinnerSpinning\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isSpinnerSpinning()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/activity-reporter/spinner-activity-reporter.wo.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    click(cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:73\n\n                \n            \n\n\n            \n                \n                    Clicks an element and detects changes so the DOM is immediately updated\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to click a specific element. If not passed in, the entire node will\nreceive the click event\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \ndetectChanges()\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElement(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:54\n\n                \n            \n\n\n            \n                \n                    Finds first element within this widget matching the given selector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        What to search for\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DebugElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElements\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElements(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:62\n\n                \n            \n\n\n            \n                \n                    Same as findElement but returns all elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DebugElement[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getNodeText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeText(el: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:140\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getText(cssSelector: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:128\n\n                \n            \n\n\n            \n                \n                    Returns text content of this widget\nIf the element cannot be found, gives empty string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to retrieve text for a specific element within this widget.\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getTexts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTexts(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:136\n\n                \n            \n\n\n            \n                \n                    Same as getText but return the text for all matching nodes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            sendKeyboardEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendKeyboardEvent(eventType, eventProperties: literal type, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:90\n\n                \n            \n\n\n            \n                \n                    Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\nfound by the {@param cssSelector} within the provided {@param parent} or the current root element.\nSetting the event properties is done with Object.defineProperty on the created event. This allows setting\nproperties like which that is deprecated and cannot be set with the native approach of creating keyboard event.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    eventType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The keyboard event type like 'keyup', 'keydown', 'keypress'\n\n                                    \n                                \n                                \n                                    eventProperties\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        properties of the event like code, key etc.\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setInputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setInputValue(value: string | number, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:114\n\n                \n            \n\n\n            \n                \n                    Sets the value of an input element or textarea element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        the value that the element should display\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        running\n                    \n                \n\n                \n                    \n                        getrunning()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/utils/test/activity-reporter/spinner-activity-reporter.wo.ts:13\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errorText\n                    \n                \n\n                \n                    \n                        geterrorText()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/utils/test/activity-reporter/spinner-activity-reporter.wo.ts:17\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { DebugElement } from '@angular/core';\nimport { SpinnerActivityReporterComponent } from '../../../common/activity-reporter';\nimport { WidgetObject } from '../widget-object';\n\nexport class SpinnerActivityReporterWidgetObject extends WidgetObject {\n    static tagName = 'vcd-spinner-activity-reporter';\n\n    get running(): boolean {\n        return this.component.running;\n    }\n\n    get errorText(): string {\n        return this.component.errorText;\n    }\n\n    /**\n     * Gives the spinner for this element\n     */\n    private getSpinner(): DebugElement {\n        const element = this.findElement('.spinner');\n\n        if (!element) {\n            throw new Error('Could not find the spinner element.');\n        }\n        return element;\n    }\n\n    public isSpinnerSpinning(): boolean {\n        try {\n            return !!this.getSpinner();\n        } catch (error) {\n            return false;\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubscriptionTracker.html":{"url":"classes/SubscriptionTracker.html","title":"class - SubscriptionTracker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubscriptionTracker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/subscription/subscription-tracker.ts\n        \n\n            \n                Description\n            \n            \n                Components can use this to have subscriptions automatically removed when the component is destroyed\n\n            \n\n\n            \n                Implements\n            \n            \n                            ISubscriptionTracker\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                subscribe\n                            \n                            \n                                unsubscribe\n                            \n                            \n                                unsubscribeAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(destroyable: OnDestroy)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/common/subscription/subscription-tracker.ts:40\n                            \n                        \n\n                \n                    \n                            Constructs this tracker to call unsubscribeAll when OnDestroy.ngOnDestroy is called.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        destroyable\n                                                  \n                                                        \n                                                                        OnDestroy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/subscription/subscription-tracker.ts:40\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subscribe\n                        \n                        \n                    \n                \n            \n            \n                \nsubscribe(observable: Observable, observerOrNext?: PartialObserver | , error?: (error?: any) => void, complete?: () => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/subscription/subscription-tracker.ts:53\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    observerOrNext\n                                    \n                                            PartialObserver | \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    complete\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \nunsubscribe(subscription: Subscription)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/subscription/subscription-tracker.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subscription\n                                    \n                                            Subscription\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unsubscribeAll\n                        \n                        \n                    \n                \n            \n            \n                \nunsubscribeAll()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/subscription/subscription-tracker.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { OnDestroy } from '@angular/core';\nimport { Observable, PartialObserver, Subscription } from 'rxjs';\nimport { toSubscriber } from 'rxjs/internal-compatibility';\n\n/**\n * An interface that knows how to subscribe and unsubscribe from observables.\n */\nexport interface ISubscriptionTracker {\n    /**\n     * Subscribes to the given {@param observable}. Passes along the given {@param observerOrNext}.\n     * Will call the {@param complete} when complete, and {@param error} when errors happen.\n     */\n    subscribe(\n        observable: Observable,\n        observerOrNext?: PartialObserver | ((value: T) => void),\n        error?: (error: any) => void,\n        complete?: () => void\n    ): Subscription;\n\n    /**\n     * Unsubscribes from the given {@param subscription}.\n     */\n    unsubscribe(subscription: Subscription): Subscription;\n\n    /**\n     * Unsubscribes from all subscriptions on this {@link Subscribable}.\n     */\n    unsubscribeAll(): void;\n}\n\n/**\n * Components can use this to have subscriptions automatically removed when the component is destroyed\n */\nexport class SubscriptionTracker implements ISubscriptionTracker {\n    private subscriptions: Subscription[] = [];\n\n    /**\n     * Constructs this tracker to call {@link unsubscribeAll} when {@link OnDestroy.ngOnDestroy} is called.\n     */\n    constructor(destroyable: OnDestroy) {\n        const originalOnDestroy = destroyable.ngOnDestroy;\n        destroyable.ngOnDestroy = () => {\n            this.unsubscribeAll();\n            originalOnDestroy.call(destroyable);\n        };\n    }\n\n    subscribe(\n        observable: Observable,\n        observerOrNext?: PartialObserver | ((value: T) => void),\n        error?: (error: any) => void,\n        complete?: () => void\n    ): Subscription {\n        const subscription = observable.subscribe(toSubscriber(observerOrNext, error, complete));\n        this.subscriptions.push(subscription);\n        return subscription;\n    }\n\n    unsubscribe(subscription: Subscription): Subscription {\n        subscription.unsubscribe();\n        const indexOfSubscription = this.subscriptions.indexOf(subscription);\n        if (indexOfSubscription === -1) {\n            throw new Error('Unsubscribing to untracked subscription');\n        }\n        this.subscriptions.splice(indexOfSubscription, 1);\n        return subscription;\n    }\n\n    unsubscribeAll(): void {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestElement.html":{"url":"classes/TestElement.html","title":"class - TestElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object/angular-widget-object.ts\n        \n\n            \n                Description\n            \n            \n                A wrapper around an array of DebugElements that adds convenience methods.\nAvoid accessing the debug elements at all costs.\nCan be used in a for ... of ... loop to inspect all the sub elements within this TestElement.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Iterable\n            \n\n            \n                Example\n            \n            \n                        \n                            for (const el of testElement) {\nexpect(el.enabled()).toBeTruthy()\n}\n                        \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                elements\n                            \n                            \n                                    Public\n                                fixture\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                classes\n                            \n                            \n                                clear\n                            \n                            \n                                click\n                            \n                            \n                                detectChanges\n                            \n                            \n                                enabled\n                            \n                            \n                                    Private\n                                findParents\n                            \n                            \n                                getComponentInstance\n                            \n                            \n                                getInjector\n                            \n                            \n                                getStylePropertyValue\n                            \n                            \n                                length\n                            \n                            \n                                parents\n                            \n                            \n                                queryDirective\n                            \n                            \n                                sendKeyboardEvent\n                            \n                            \n                                text\n                            \n                            \n                                toArray\n                            \n                            \n                                value\n                            \n                            \n                                \n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elements: DebugElement[], fixture: ComponentFixture)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:96\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elements\n                                                  \n                                                        \n                                                                    DebugElement[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fixture\n                                                  \n                                                        \n                                                                    ComponentFixture\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elements\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DebugElement[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:97\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fixture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentFixture\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:97\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            blur\n                        \n                        \n                    \n                \n            \n            \n                \nblur()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:131\n                \n            \n\n\n            \n                \n                    Blurs all the contained elements.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            classes\n                        \n                        \n                    \n                \n            \n            \n                \nclasses()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:185\n                \n            \n\n\n            \n                \n                    Returns classes of first element as a string array\n\n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:139\n                \n            \n\n\n            \n                \n                    Clears the input on all the contained elements.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \nclick()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:123\n                \n            \n\n\n            \n                \n                    Clicks all of the elements contained.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \ndetectChanges()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:154\n                \n            \n\n\n            \n                \n                    Runs change detection with the component fixture.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enabled\n                        \n                        \n                    \n                \n            \n            \n                \nenabled()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:116\n                \n            \n\n\n            \n                \n                    Says if this element is enabled.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            findParents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findParents(debugEl: DebugElement, cssSelector: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:214\n                \n            \n\n\n            \n                \n                    Finds the first parent element that matches the CSS selector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    debugEl\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DebugElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getComponentInstance\n                        \n                        \n                    \n                \n            \n            \n                \ngetComponentInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:200\n                \n            \n\n\n            \n                \n                    Returns componentInstance of the first element\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetInjector()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:207\n                \n            \n\n\n            \n                \n                    Returns injector of the first element\n\n\n                    \n                        Returns :         Injector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStylePropertyValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetStylePropertyValue(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:193\n                \n            \n\n\n            \n                \n                    Returns style property value of the first element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        specified CSS property\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            length\n                        \n                        \n                    \n                \n            \n            \n                \nlength()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:147\n                \n            \n\n\n            \n                \n                    Says how many elements are contained in this TestElement.\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parents\n                        \n                        \n                    \n                \n            \n            \n                \nparents(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:224\n                \n            \n\n\n            \n                \n                    Returns the first parent element that matches css selector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TestElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryDirective\n                        \n                        \n                    \n                \n            \n            \n                \nqueryDirective(type: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:232\n                \n            \n\n\n            \n                \n                    Returns componentInstance after query directive\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            Type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendKeyboardEvent\n                        \n                        \n                    \n                \n            \n            \n                \nsendKeyboardEvent(eventType: string, eventProperties: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:172\n                \n            \n\n\n            \n                \n                    Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on this element.\nSetting the event properties is done with Object.defineProperty on the created event. This allows setting\nproperties like which that is deprecated and cannot be set with the native approach of creating keyboard event.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    eventType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The keyboard event type like 'keyup', 'keydown', 'keypress'\n\n                                    \n                                \n                                \n                                    eventProperties\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        properties of the event like code, key etc.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            text\n                        \n                        \n                    \n                \n            \n            \n                \ntext()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:102\n                \n            \n\n\n            \n                \n                    Gives the text of the first element.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toArray\n                        \n                        \n                    \n                \n            \n            \n                \ntoArray()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:161\n                \n            \n\n\n            \n                \n                    Gives the elements contained within this TestElement where each element is its own TestElement\n\n\n                    \n                        Returns :         TestElement[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            value\n                        \n                        \n                    \n                \n            \n            \n                \nvalue()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:109\n                \n            \n\n\n            \n                \n                    Gives the value of the first element.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            \n                        \n                        \n                    \n                \n            \n            \n                \n()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:239\n                \n            \n\n\n            \n                \n                    Allows a TestElement to be used in a for ... of ... loop.\n\n\n                    \n                        Returns :         Iterator\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DebugElement, Injector, Type } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport { AngularWidgetObjectFinder } from './angular-widget-finder';\nimport { BaseWidgetObject, FindableWidget } from './widget-object';\nimport { CorrectReturnTypes, LocatorDriver } from './widget-object';\n\n/**\n * Knows how to find Angular TestElements in the DOM.\n */\nexport class AngularLocatorDriver implements LocatorDriver {\n    constructor(private testElement: TestElement, private rootElement: DebugElement) {}\n\n    /**\n     * @inheritdoc\n     */\n    get(cssSelector: string): AngularLocatorDriver {\n        const elements = this.testElement.elements;\n        const nextElements = [].concat(...elements.map((element) => element.queryAll(By.css(cssSelector))));\n        return new AngularLocatorDriver(new TestElement(nextElements, this.testElement.fixture), this.rootElement);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getByText(cssSelector: string, value: string): AngularLocatorDriver {\n        const elements = this.testElement.elements;\n        let nextElements: DebugElement[] = [].concat(\n            ...elements.map((element) => element.queryAll(By.css(cssSelector)))\n        );\n        nextElements = nextElements.filter((el) => el.nativeElement.textContent.includes(value));\n        return new AngularLocatorDriver(new TestElement(nextElements, this.testElement.fixture), this.rootElement);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    parents(cssSelector: string): AngularLocatorDriver {\n        return new AngularLocatorDriver(\n            new TestElement(\n                this.testElement.elements.map((el) => this.findParent(cssSelector, el.parent)),\n                this.testElement.fixture\n            ),\n            this.rootElement\n        );\n    }\n\n    /**\n     * Looks up the chain of debug elements until it finds a parent that matches the CSS selector.\n     * Checks the given element.\n     */\n    private findParent(cssSelector: string, debugElement: DebugElement): DebugElement {\n        if (!debugElement) {\n            return undefined;\n        } else if (debugElement.nativeElement.matches(cssSelector)) {\n            return debugElement;\n        } else {\n            return this.findParent(cssSelector, debugElement.parent);\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    unwrap(): TestElement {\n        return this.testElement;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    findWidget, C extends FindableWidget>(\n        widget: C,\n        cssSelector?: string\n    ): CorrectReturnTypes, TestElement> {\n        return new AngularWidgetObjectFinder(this.testElement.fixture).find(widget, this.rootElement, cssSelector);\n    }\n}\n\n/**\n * A wrapper around an array of DebugElements that adds convenience methods.\n * Avoid accessing the debug elements at all costs.\n *\n * Can be used in a `for ... of ...` loop to inspect all the sub elements within this TestElement.\n *\n * @example\n * for (const el of testElement) {\n *     expect(el.enabled()).toBeTruthy()\n * }\n */\nexport class TestElement implements Iterable {\n    constructor(public elements: DebugElement[], public fixture: ComponentFixture) {}\n\n    /**\n     * Gives the text of the first element.\n     */\n    text(): string {\n        return this.elements[0].nativeElement.textContent.trim();\n    }\n\n    /**\n     * Gives the value of the first element.\n     */\n    value(): string {\n        return this.elements[0].nativeElement.value;\n    }\n\n    /**\n     * Says if this element is enabled.\n     */\n    enabled(): boolean {\n        return !this.elements[0].nativeElement.disabled;\n    }\n\n    /**\n     * Clicks all of the elements contained.\n     */\n    click(): void {\n        this.elements.map((element) => element.nativeElement.click());\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Blurs all the contained elements.\n     */\n    blur(): void {\n        this.elements.map((el) => el.nativeElement.dispatchEvent(new Event('blur')));\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Clears the input on all the contained elements.\n     */\n    clear(): void {\n        this.elements.map((el) => (el.nativeElement.value = ''));\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Says how many elements are contained in this TestElement.\n     */\n    length(): number {\n        return this.elements.length;\n    }\n\n    /**\n     * Runs change detection with the component fixture.\n     */\n    detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Gives the elements contained within this TestElement where each element is its own TestElement\n     */\n    toArray(): TestElement[] {\n        return this.elements.map((el) => new TestElement([el], this.fixture));\n    }\n\n    /**\n     * Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on this element.\n     * Setting the event properties is done with `Object.defineProperty` on the created event. This allows setting\n     * properties like `which` that is deprecated and cannot be set with the native approach of creating keyboard event.\n     * @param eventType The keyboard event type like 'keyup', 'keydown', 'keypress'\n     * @param eventProperties properties of the event like `code`, `key` etc.\n     */\n    sendKeyboardEvent(eventType: string, eventProperties: { [name: string]: unknown }): void {\n        const element = this.elements[0].nativeElement as HTMLElement;\n        const event = new KeyboardEvent(eventType, { bubbles: true });\n        Object.keys(eventProperties).forEach((key) => {\n            Object.defineProperty(event, key, { value: eventProperties[key] });\n        });\n        element.dispatchEvent(event);\n        this.detectChanges();\n    }\n\n    /**\n     * Returns classes of first element as a string array\n     */\n    classes(): string[] {\n        return Object.keys(this.elements[0].classes);\n    }\n\n    /**\n     * Returns style property value of the first element\n     * @param key specified CSS property\n     */\n    getStylePropertyValue(key: string): string {\n        return this.elements[0].nativeElement.style.getPropertyValue(key);\n    }\n\n    /**\n     * Returns componentInstance of the first element\n     */\n    getComponentInstance(): any {\n        return this.elements[0].componentInstance;\n    }\n\n    /**\n     * Returns injector of the first element\n     */\n    getInjector(): Injector {\n        return this.elements[0].injector;\n    }\n\n    /**\n     * Finds the first parent element that matches the CSS selector\n     */\n    private findParents(debugEl: DebugElement, cssSelector: string): DebugElement {\n        if (!debugEl) {\n            return null;\n        }\n        return debugEl.nativeElement.matches(cssSelector) ? debugEl : this.findParents(debugEl.parent, cssSelector);\n    }\n\n    /**\n     * Returns the first parent element that matches css selector\n     */\n    parents(cssSelector: string): TestElement {\n        const result = this.findParents(this.elements[0].parent, cssSelector);\n        return new TestElement(result ? [result] : [], this.fixture);\n    }\n\n    /**\n     * Returns componentInstance after query directive\n     */\n    queryDirective(type: Type): any {\n        return this.elements[0].query(By.directive(type)).componentInstance;\n    }\n\n    /**\n     * Allows a TestElement to be used in a `for ... of ...` loop.\n     */\n    [Symbol.iterator](): Iterator {\n        let counter = 0;\n        return {\n            next: () => {\n                counter += 1;\n                return {\n                    done: counter === this.elements.length,\n                    value: new TestElement([this.elements[counter]], this.fixture),\n                };\n            },\n        };\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThousandsUnit.html":{"url":"classes/ThousandsUnit.html","title":"class - ThousandsUnit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThousandsUnit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/unit/unit.ts\n        \n\n            \n                Description\n            \n            \n                Finds the bestUnit by trying groups of 1000\n\n            \n\n            \n                Extends\n            \n            \n                        NumberUnit\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _multiplier\n                            \n                            \n                                    Private\n                                    Readonly\n                                _unitName\n                            \n                            \n                                    Private\n                                    Readonly\n                                _multiplier\n                            \n                            \n                                    Private\n                                    Readonly\n                                _unitName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUnitMultiplier\n                            \n                            \n                                findBestUnit\n                            \n                            \n                                    Abstract\n                                getAllUnitTypes\n                            \n                            \n                                    Protected\n                                    Abstract\n                                getUnitMultiplier\n                            \n                            \n                                    Abstract\n                                findBestUnit\n                            \n                            \n                                    Public\n                                getBaseValue\n                            \n                            \n                                    Public\n                                getMultiplier\n                            \n                            \n                                    Public\n                                getOutputValue\n                            \n                            \n                                    Public\n                                getUnitName\n                            \n                            \n                                    Abstract\n                                getUnitNameTranslationKey\n                            \n                            \n                                    Abstract\n                                getValueWithUnitTranslationKey\n                            \n                            \n                                    Abstract\n                                findBestUnit\n                            \n                            \n                                    Public\n                                getBaseValue\n                            \n                            \n                                    Public\n                                getMultiplier\n                            \n                            \n                                    Public\n                                getOutputValue\n                            \n                            \n                                    Public\n                                getUnitName\n                            \n                            \n                                    Abstract\n                                getUnitNameTranslationKey\n                            \n                            \n                                    Abstract\n                                getValueWithUnitTranslationKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _multiplier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         NumberUnit\n\n                                \n                            \n                        \n                            \n                                    Defined in         NumberUnit:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _unitName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         NumberUnit\n\n                                \n                            \n                        \n                            \n                                    Defined in         NumberUnit:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _multiplier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _unitName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUnitMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \ngetUnitMultiplier()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \nfindBestUnit(value: number, availableUnits: NumberUnit[])\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:89\n\n                \n            \n\n\n            \n                \n                    Calculates the best unit out of available units to display in UI cell for a given input Unit\nand value\nBest unit is a Unit whose converted value is less than the comparison number\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nValue of input Unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                            NumberUnit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.getAllUnitTypes()\n                                    \n\n                                    \n                                        \nArray of available Units to display in UI cell\navailableUnits array should be pre-sorted ascending by multiplier\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getAllUnitTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUnitTypes()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:105\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     NumberUnit[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            getUnitMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitMultiplier()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:112\n\n                \n            \n\n\n            \n                \n                    Returns the number that you multiply by to get the next order unit.\n\n\n                    \n                        Example :\n                        \n                            1024 would be the multiplier for Byte.\n                        \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBestUnit(value: number, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:71\n\n                \n            \n\n\n            \n                \n                    Returns the best unit out of available units for given value of current unit\nBest unit is a Unit whose converted value is less than 1000\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nList of available Units out of which best unit is calculated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBaseValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBaseValue(value: number)\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:45\n\n                \n            \n\n\n            \n                \n                    Returns the value in base unit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMultiplier()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOutputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOutputValue(value, outputUnit: Unit)\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:37\n\n                \n            \n\n\n            \n                \n                    Returns the value in outputUnit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    outputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nUnit to which value is converted\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUnitName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitName()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:61\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying unitName\nEx: MB, B, GHz, MHz, %\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:54\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying value with unit\nEx: 25 MB, 100 %, 2 GHz\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBestUnit(value: number, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:71\n\n                \n            \n\n\n            \n                \n                    Returns the best unit out of available units for given value of current unit\nBest unit is a Unit whose converted value is less than 1000\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nList of available Units out of which best unit is calculated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBaseValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBaseValue(value: number)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:45\n\n                \n            \n\n\n            \n                \n                    Returns the value in base unit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMultiplier()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOutputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOutputValue(value, outputUnit: Unit)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:37\n\n                \n            \n\n\n            \n                \n                    Returns the value in outputUnit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    outputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nUnit to which value is converted\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUnitName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitName()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:61\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying unitName\nEx: MB, B, GHz, MHz, %\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:54\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying value with unit\nEx: 25 MB, 100 %, 2 GHz\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Unit {\n    private readonly _multiplier: number;\n    private readonly _unitName: string;\n\n    /**\n     * @param multiplier - Value that is used to convert this to base unit\n     * @param unitName - Name of the Unit. Also used to construct translation\n     * keys for each type of Unit.\n     */\n    constructor(private multiplier: number, private unitName: string) {\n        this._multiplier = multiplier;\n        this._unitName = unitName;\n    }\n\n    public getMultiplier(): number {\n        return this._multiplier;\n    }\n\n    public getUnitName(): string {\n        return this._unitName;\n    }\n\n    /**\n     * Returns the value in outputUnit for this unit\n     * @param value - Value of this unit\n     * @param outputUnit - Unit to which value is converted\n     */\n    public getOutputValue(value, outputUnit: Unit): number {\n        return this.getBaseValue(value) / outputUnit.multiplier;\n    }\n\n    /**\n     * Returns the value in base unit for this unit\n     * @param value - Value of this unit\n     */\n    public getBaseValue(value: number): number {\n        return value * this.multiplier;\n    }\n\n    /**\n     * Translation key to be used when displaying value with unit\n     *\n     * Ex: 25 MB, 100 %, 2 GHz\n     */\n    abstract getValueWithUnitTranslationKey(): string;\n\n    /**\n     * Translation key to be used when displaying unitName\n     *\n     * Ex: MB, B, GHz, MHz, %\n     */\n    abstract getUnitNameTranslationKey(): string;\n\n    /**\n     * Returns the best unit out of available units for given value of current unit\n     *\n     * Best unit is a Unit whose converted value is less than 1000\n     *\n     * @param value - Value of this unit\n     * @param availableUnits - List of available Units out of which best unit is calculated\n     */\n    abstract findBestUnit(value: number, availableUnits: Unit[]): Unit;\n}\n\n/**\n * Finds the bestUnit by trying groups of the comparison number\n */\nabstract class NumberUnit extends Unit {\n    /**\n     * Calculates the best unit out of available units to display in UI cell for a given input Unit\n     * and value\n     *\n     * Best unit is a Unit whose converted value is less than the comparison number\n     *\n     * @param value - Value of input Unit\n     * @param availableUnits - Array of available Units to display in UI cell\n     * availableUnits array should be pre-sorted ascending by multiplier\n     *\n     */\n    findBestUnit(value: number, availableUnits: NumberUnit[] = this.getAllUnitTypes()): Unit {\n        if (value >= this.getUnitMultiplier()) {\n            const baseValue = this.getBaseValue(value);\n            let outputNumber = baseValue;\n            const unitTypes = availableUnits;\n            let i = 0;\n            while (outputNumber >= this.getUnitMultiplier() && i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Unit.html":{"url":"classes/Unit.html","title":"class - Unit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Unit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/unit/unit.ts\n        \n\n            \n                Description\n            \n            \n                Allows you to define different types of units with unitName and\nmultiplier that converts to baseUnit.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _multiplier\n                            \n                            \n                                    Private\n                                    Readonly\n                                _unitName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                findBestUnit\n                            \n                            \n                                    Public\n                                getBaseValue\n                            \n                            \n                                    Public\n                                getMultiplier\n                            \n                            \n                                    Public\n                                getOutputValue\n                            \n                            \n                                    Public\n                                getUnitName\n                            \n                            \n                                    Abstract\n                                getUnitNameTranslationKey\n                            \n                            \n                                    Abstract\n                                getValueWithUnitTranslationKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(multiplier: number, unitName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/unit/unit.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        multiplier\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nValue that is used to convert this to base unit\n\n\n                                                        \n                                                \n                                                \n                                                        unitName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nName of the Unit. Also used to construct translation\nkeys for each type of Unit.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _multiplier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/unit/unit.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _unitName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/unit/unit.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBestUnit(value: number, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:71\n                \n            \n\n\n            \n                \n                    Returns the best unit out of available units for given value of current unit\nBest unit is a Unit whose converted value is less than 1000\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nList of available Units out of which best unit is calculated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBaseValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBaseValue(value: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:45\n                \n            \n\n\n            \n                \n                    Returns the value in base unit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMultiplier()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOutputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOutputValue(value, outputUnit: Unit)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:37\n                \n            \n\n\n            \n                \n                    Returns the value in outputUnit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    outputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nUnit to which value is converted\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUnitName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitName()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:61\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying unitName\nEx: MB, B, GHz, MHz, %\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:54\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying value with unit\nEx: 25 MB, 100 %, 2 GHz\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Unit {\n    private readonly _multiplier: number;\n    private readonly _unitName: string;\n\n    /**\n     * @param multiplier - Value that is used to convert this to base unit\n     * @param unitName - Name of the Unit. Also used to construct translation\n     * keys for each type of Unit.\n     */\n    constructor(private multiplier: number, private unitName: string) {\n        this._multiplier = multiplier;\n        this._unitName = unitName;\n    }\n\n    public getMultiplier(): number {\n        return this._multiplier;\n    }\n\n    public getUnitName(): string {\n        return this._unitName;\n    }\n\n    /**\n     * Returns the value in outputUnit for this unit\n     * @param value - Value of this unit\n     * @param outputUnit - Unit to which value is converted\n     */\n    public getOutputValue(value, outputUnit: Unit): number {\n        return this.getBaseValue(value) / outputUnit.multiplier;\n    }\n\n    /**\n     * Returns the value in base unit for this unit\n     * @param value - Value of this unit\n     */\n    public getBaseValue(value: number): number {\n        return value * this.multiplier;\n    }\n\n    /**\n     * Translation key to be used when displaying value with unit\n     *\n     * Ex: 25 MB, 100 %, 2 GHz\n     */\n    abstract getValueWithUnitTranslationKey(): string;\n\n    /**\n     * Translation key to be used when displaying unitName\n     *\n     * Ex: MB, B, GHz, MHz, %\n     */\n    abstract getUnitNameTranslationKey(): string;\n\n    /**\n     * Returns the best unit out of available units for given value of current unit\n     *\n     * Best unit is a Unit whose converted value is less than 1000\n     *\n     * @param value - Value of this unit\n     * @param availableUnits - List of available Units out of which best unit is calculated\n     */\n    abstract findBestUnit(value: number, availableUnits: Unit[]): Unit;\n}\n\n/**\n * Finds the bestUnit by trying groups of the comparison number\n */\nabstract class NumberUnit extends Unit {\n    /**\n     * Calculates the best unit out of available units to display in UI cell for a given input Unit\n     * and value\n     *\n     * Best unit is a Unit whose converted value is less than the comparison number\n     *\n     * @param value - Value of input Unit\n     * @param availableUnits - Array of available Units to display in UI cell\n     * availableUnits array should be pre-sorted ascending by multiplier\n     *\n     */\n    findBestUnit(value: number, availableUnits: NumberUnit[] = this.getAllUnitTypes()): Unit {\n        if (value >= this.getUnitMultiplier()) {\n            const baseValue = this.getBaseValue(value);\n            let outputNumber = baseValue;\n            const unitTypes = availableUnits;\n            let i = 0;\n            while (outputNumber >= this.getUnitMultiplier() && i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UnitFormatter.html":{"url":"injectables/UnitFormatter.html","title":"injectable - UnitFormatter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UnitFormatter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/unit/unit-formatter.ts\n        \n\n            \n                Description\n            \n            \n                UnitFormatter is used to format the value with unitName in localized string\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bestFormat\n                            \n                            \n                                format\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translationService: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/unit/unit-formatter.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                    TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bestFormat\n                        \n                        \n                    \n                \n            \n            \n                \nbestFormat(value: number, inputUnit: Unit, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit-formatter.ts:46\n                \n            \n\n\n            \n                \n                    Converts the value of inputUnit to best unit out of availableUnits and returns\nin localized string format ${value} ${outputUnit.unitName}\nEx: bestFormat(1000000, Unit.KB, [Unit.KB, Unit.MB, Unit.GB]) = \"1 GB\"\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        = value of inputUnit\n\n                                    \n                                \n                                \n                                    inputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nunit of value\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nlist of units from which best unit is calculated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            format\n                        \n                        \n                    \n                \n            \n            \n                \nformat(value: number, inputUnit: Unit, outputUnit: Unit, precision?: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit-formatter.ts:29\n                \n            \n\n\n            \n                \n                    Converts the value of inputUnit to outPutUnit returns in\nlocalized string format ${value} ${outputUnit.unitName}\nEx: format(1000, Unit.MB, Unit.GB, 2) = \"1 GB\"\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nvalue of inputUnit\n\n\n                                    \n                                \n                                \n                                    inputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nunit of value\n\n\n                                    \n                                \n                                \n                                    outputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nunit to which value is converted\n\n\n                                    \n                                \n                                \n                                    precision\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nhow many digits are shown after decimal\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslationService } from '@vcd/i18n';\nimport { CommonUtil } from '../common-util';\nimport { Unit } from './unit';\n\n/**\n * UnitFormatter is used to format the value with unitName in localized string\n */\n@Injectable()\nexport class UnitFormatter {\n    constructor(private translationService: TranslationService) {}\n\n    /**\n     * Converts the value of inputUnit to outPutUnit returns in\n     * localized string format `${value} ${outputUnit.unitName}`\n     *\n     * Ex: format(1000, Unit.MB, Unit.GB, 2) = \"1 GB\"\n     *\n     * @param value - value of inputUnit\n     * @param inputUnit - unit of value\n     * @param outputUnit - unit to which value is converted\n     * @param precision - how many digits are shown after decimal\n     */\n    format(value: number, inputUnit: Unit, outputUnit: Unit, precision?: number): string {\n        // TODO response from getOutputValue() needs to be formatted to localized number\n        return this.translationService.translate(outputUnit.getValueWithUnitTranslationKey(), [\n            CommonUtil.roundTo(inputUnit.getOutputValue(value, outputUnit), precision),\n        ]);\n    }\n\n    /**\n     * Converts the value of inputUnit to best unit out of availableUnits and returns\n     * in localized string format `${value} ${outputUnit.unitName}`\n     *\n     * Ex: bestFormat(1000000, Unit.KB, [Unit.KB, Unit.MB, Unit.GB]) = \"1 GB\"\n     *\n     * @param value = value of inputUnit\n     * @param inputUnit - unit of value\n     * @param availableUnits - list of units from which best unit is calculated\n     */\n    bestFormat(value: number, inputUnit: Unit, availableUnits: Unit[]): string {\n        return this.format(value, inputUnit, inputUnit.findBestUnit(value, availableUnits));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcdActionMenuModule.html":{"url":"modules/VcdActionMenuModule.html","title":"module - VcdActionMenuModule","body":"\n                   \n\n\n\n\n    Modules\n    VcdActionMenuModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcdActionMenuModule\n\n\n\ncluster_VcdActionMenuModule_declarations\n\n\n\ncluster_VcdActionMenuModule_imports\n\n\n\ncluster_VcdActionMenuModule_exports\n\n\n\n\nActionMenuComponent\n\nActionMenuComponent\n\n\n\nVcdActionMenuModule\n\nVcdActionMenuModule\n\nVcdActionMenuModule -->\n\nActionMenuComponent->VcdActionMenuModule\n\n\n\n\n\nActionMenuComponent \n\nActionMenuComponent \n\nActionMenuComponent  -->\n\nVcdActionMenuModule->ActionMenuComponent \n\n\n\n\n\nDropdownModule\n\nDropdownModule\n\nVcdActionMenuModule -->\n\nDropdownModule->VcdActionMenuModule\n\n\n\n\n\nShowClippedTextDirectiveModule\n\nShowClippedTextDirectiveModule\n\nVcdActionMenuModule -->\n\nShowClippedTextDirectiveModule->VcdActionMenuModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/action-menu/action-menu.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActionMenuComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DropdownModule\n                        \n                        \n                            ShowClippedTextDirectiveModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ActionMenuComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClarityModule } from '@clr/angular';\nimport { I18nModule } from '@vcd/i18n';\nimport { DropdownModule } from '../dropdown/dropdown.module';\nimport { ShowClippedTextDirectiveModule } from '../lib/directives/show-clipped-text.directive.module';\nimport { ActionMenuComponent } from './action-menu.component';\n\n@NgModule({\n    imports: [ClarityModule, CommonModule, I18nModule, DropdownModule, ShowClippedTextDirectiveModule],\n    declarations: [ActionMenuComponent],\n    providers: [],\n    exports: [ActionMenuComponent],\n})\nexport class VcdActionMenuModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcdActivityReporterModule.html":{"url":"modules/VcdActivityReporterModule.html","title":"module - VcdActivityReporterModule","body":"\n                   \n\n\n\n\n    Modules\n    VcdActivityReporterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcdActivityReporterModule\n\n\n\ncluster_VcdActivityReporterModule_declarations\n\n\n\ncluster_VcdActivityReporterModule_imports\n\n\n\ncluster_VcdActivityReporterModule_exports\n\n\n\n\nBannerActivityReporterComponent\n\nBannerActivityReporterComponent\n\n\n\nVcdActivityReporterModule\n\nVcdActivityReporterModule\n\nVcdActivityReporterModule -->\n\nBannerActivityReporterComponent->VcdActivityReporterModule\n\n\n\n\n\nSpinnerActivityReporterComponent\n\nSpinnerActivityReporterComponent\n\nVcdActivityReporterModule -->\n\nSpinnerActivityReporterComponent->VcdActivityReporterModule\n\n\n\n\n\nBannerActivityReporterComponent \n\nBannerActivityReporterComponent \n\nBannerActivityReporterComponent  -->\n\nVcdActivityReporterModule->BannerActivityReporterComponent \n\n\n\n\n\nSpinnerActivityReporterComponent \n\nSpinnerActivityReporterComponent \n\nSpinnerActivityReporterComponent  -->\n\nVcdActivityReporterModule->SpinnerActivityReporterComponent \n\n\n\n\n\nVcdErrorBannerModule\n\nVcdErrorBannerModule\n\nVcdActivityReporterModule -->\n\nVcdErrorBannerModule->VcdActivityReporterModule\n\n\n\n\n\nVcdLoadingIndicatorModule\n\nVcdLoadingIndicatorModule\n\nVcdActivityReporterModule -->\n\nVcdLoadingIndicatorModule->VcdActivityReporterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/common/activity-reporter/activity-reporter.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BannerActivityReporterComponent\n                        \n                        \n                            SpinnerActivityReporterComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            BannerActivityReporterComponent\n                        \n                        \n                            SpinnerActivityReporterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            VcdErrorBannerModule\n                        \n                        \n                            VcdLoadingIndicatorModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BannerActivityReporterComponent\n                        \n                        \n                            SpinnerActivityReporterComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClarityModule } from '@clr/angular';\nimport { I18nModule } from '@vcd/i18n';\nimport { VcdErrorBannerModule } from '../error/error-banner.module';\nimport { VcdLoadingIndicatorModule } from '../loading/loading-indicator.module';\nimport { BannerActivityReporterComponent } from './banner-activity-reporter.component';\nimport { SpinnerActivityReporterComponent } from './spinner-activity-reporter.component';\n\n@NgModule({\n    declarations: [BannerActivityReporterComponent, SpinnerActivityReporterComponent],\n    imports: [CommonModule, ClarityModule, I18nModule, VcdErrorBannerModule, VcdLoadingIndicatorModule],\n    exports: [BannerActivityReporterComponent, SpinnerActivityReporterComponent],\n    entryComponents: [BannerActivityReporterComponent, SpinnerActivityReporterComponent],\n})\nexport class VcdActivityReporterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcdComponentsModule.html":{"url":"modules/VcdComponentsModule.html","title":"module - VcdComponentsModule","body":"\n                   \n\n\n\n\n    Modules\n    VcdComponentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcdComponentsModule\n\n\n\ncluster_VcdComponentsModule_exports\n\n\n\n\nDropdownModule \n\nDropdownModule \n\n\n\nQuickSearchModule \n\nQuickSearchModule \n\n\n\nShowClippedTextDirectiveModule \n\nShowClippedTextDirectiveModule \n\n\n\nVcdActionMenuModule \n\nVcdActionMenuModule \n\n\n\nVcdActivityReporterModule \n\nVcdActivityReporterModule \n\n\n\nVcdDataExporterModule \n\nVcdDataExporterModule \n\n\n\nVcdDatagridModule \n\nVcdDatagridModule \n\n\n\nVcdErrorBannerModule \n\nVcdErrorBannerModule \n\n\n\nVcdFormModule \n\nVcdFormModule \n\n\n\nVcdLoadingIndicatorModule \n\nVcdLoadingIndicatorModule \n\n\n\nVcdComponentsModule\n\nVcdComponentsModule\n\nDropdownModule  -->\n\nVcdComponentsModule->DropdownModule \n\n\n\nQuickSearchModule  -->\n\nVcdComponentsModule->QuickSearchModule \n\n\n\nShowClippedTextDirectiveModule  -->\n\nVcdComponentsModule->ShowClippedTextDirectiveModule \n\n\n\nVcdActionMenuModule  -->\n\nVcdComponentsModule->VcdActionMenuModule \n\n\n\nVcdActivityReporterModule  -->\n\nVcdComponentsModule->VcdActivityReporterModule \n\n\n\nVcdDataExporterModule  -->\n\nVcdComponentsModule->VcdDataExporterModule \n\n\n\nVcdDatagridModule  -->\n\nVcdComponentsModule->VcdDatagridModule \n\n\n\nVcdErrorBannerModule  -->\n\nVcdComponentsModule->VcdErrorBannerModule \n\n\n\nVcdFormModule  -->\n\nVcdComponentsModule->VcdFormModule \n\n\n\nVcdLoadingIndicatorModule  -->\n\nVcdComponentsModule->VcdLoadingIndicatorModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/components.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            DropdownModule\n                        \n                        \n                            QuickSearchModule\n                        \n                        \n                            ShowClippedTextDirectiveModule\n                        \n                        \n                            VcdActionMenuModule\n                        \n                        \n                            VcdActivityReporterModule\n                        \n                        \n                            VcdDataExporterModule\n                        \n                        \n                            VcdDatagridModule\n                        \n                        \n                            VcdErrorBannerModule\n                        \n                        \n                            VcdFormModule\n                        \n                        \n                            VcdLoadingIndicatorModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { NgModule } from '@angular/core';\nimport { VcdActionMenuModule } from './action-menu/index';\nimport { VcdActivityReporterModule } from './common/activity-reporter/activity-reporter.module';\nimport { VcdErrorBannerModule } from './common/error/error-banner.module';\nimport { VcdLoadingIndicatorModule } from './common/loading/loading-indicator.module';\nimport { VcdDataExporterModule } from './data-exporter/data-exporter.module';\nimport { VcdDatagridModule } from './datagrid/datagrid.module';\nimport { DropdownModule } from './dropdown/dropdown.module';\nimport { VcdFormModule } from './form/form.module';\nimport { ShowClippedTextDirectiveModule } from './lib/directives/show-clipped-text.directive.module';\nimport { QuickSearchModule } from './quick-search/quick-search.module';\n\n@NgModule({\n    exports: [\n        VcdDataExporterModule,\n        VcdDatagridModule,\n        ShowClippedTextDirectiveModule,\n        VcdErrorBannerModule,\n        VcdLoadingIndicatorModule,\n        VcdActivityReporterModule,\n        VcdFormModule,\n        QuickSearchModule,\n        VcdActionMenuModule,\n        DropdownModule,\n    ],\n})\nexport class VcdComponentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcdDataExporterModule.html":{"url":"modules/VcdDataExporterModule.html","title":"module - VcdDataExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    VcdDataExporterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcdDataExporterModule\n\n\n\ncluster_VcdDataExporterModule_declarations\n\n\n\ncluster_VcdDataExporterModule_exports\n\n\n\n\nDataExporterComponent\n\nDataExporterComponent\n\n\n\nVcdDataExporterModule\n\nVcdDataExporterModule\n\nVcdDataExporterModule -->\n\nDataExporterComponent->VcdDataExporterModule\n\n\n\n\n\nDataExporterComponent \n\nDataExporterComponent \n\nDataExporterComponent  -->\n\nVcdDataExporterModule->DataExporterComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/data-exporter/data-exporter.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DataExporterComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DataExporterComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ClarityModule } from '@clr/angular';\nimport { I18nModule } from '@vcd/i18n';\nimport { DataExporterComponent } from './data-exporter.component';\n\n@NgModule({\n    declarations: [DataExporterComponent],\n    imports: [CommonModule, ReactiveFormsModule, ClarityModule, I18nModule],\n    exports: [DataExporterComponent],\n})\nexport class VcdDataExporterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcdDatagridModule.html":{"url":"modules/VcdDatagridModule.html","title":"module - VcdDatagridModule","body":"\n                   \n\n\n\n\n    Modules\n    VcdDatagridModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcdDatagridModule\n\n\n\ncluster_VcdDatagridModule_declarations\n\n\n\ncluster_VcdDatagridModule_imports\n\n\n\ncluster_VcdDatagridModule_exports\n\n\n\n\nBoldTextRendererComponent\n\nBoldTextRendererComponent\n\n\n\nVcdDatagridModule\n\nVcdDatagridModule\n\nVcdDatagridModule -->\n\nBoldTextRendererComponent->VcdDatagridModule\n\n\n\n\n\nComponentRendererOutletDirective\n\nComponentRendererOutletDirective\n\nVcdDatagridModule -->\n\nComponentRendererOutletDirective->VcdDatagridModule\n\n\n\n\n\nDatagridComponent\n\nDatagridComponent\n\nVcdDatagridModule -->\n\nDatagridComponent->VcdDatagridModule\n\n\n\n\n\nDatagridMultiSelectFilterComponent\n\nDatagridMultiSelectFilterComponent\n\nVcdDatagridModule -->\n\nDatagridMultiSelectFilterComponent->VcdDatagridModule\n\n\n\n\n\nDatagridNumericFilterComponent\n\nDatagridNumericFilterComponent\n\nVcdDatagridModule -->\n\nDatagridNumericFilterComponent->VcdDatagridModule\n\n\n\n\n\nDatagridSelectFilterComponent\n\nDatagridSelectFilterComponent\n\nVcdDatagridModule -->\n\nDatagridSelectFilterComponent->VcdDatagridModule\n\n\n\n\n\nDatagridStringFilterComponent\n\nDatagridStringFilterComponent\n\nVcdDatagridModule -->\n\nDatagridStringFilterComponent->VcdDatagridModule\n\n\n\n\n\nFunctionRendererPipe\n\nFunctionRendererPipe\n\nVcdDatagridModule -->\n\nFunctionRendererPipe->VcdDatagridModule\n\n\n\n\n\nBoldTextRendererComponent \n\nBoldTextRendererComponent \n\nBoldTextRendererComponent  -->\n\nVcdDatagridModule->BoldTextRendererComponent \n\n\n\n\n\nDatagridComponent \n\nDatagridComponent \n\nDatagridComponent  -->\n\nVcdDatagridModule->DatagridComponent \n\n\n\n\n\nShowClippedTextDirectiveModule\n\nShowClippedTextDirectiveModule\n\nVcdDatagridModule -->\n\nShowClippedTextDirectiveModule->VcdDatagridModule\n\n\n\n\n\nVcdActionMenuModule\n\nVcdActionMenuModule\n\nVcdDatagridModule -->\n\nVcdActionMenuModule->VcdDatagridModule\n\n\n\n\n\nVcdActivityReporterModule\n\nVcdActivityReporterModule\n\nVcdDatagridModule -->\n\nVcdActivityReporterModule->VcdDatagridModule\n\n\n\n\n\nVcdFormModule\n\nVcdFormModule\n\nVcdDatagridModule -->\n\nVcdFormModule->VcdDatagridModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoldTextRendererComponent\n                        \n                        \n                            ComponentRendererOutletDirective\n                        \n                        \n                            DatagridComponent\n                        \n                        \n                            DatagridMultiSelectFilterComponent\n                        \n                        \n                            DatagridNumericFilterComponent\n                        \n                        \n                            DatagridSelectFilterComponent\n                        \n                        \n                            DatagridStringFilterComponent\n                        \n                        \n                            FunctionRendererPipe\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            filters\n                        \n                        \n                            renderers\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ShowClippedTextDirectiveModule\n                        \n                        \n                            VcdActionMenuModule\n                        \n                        \n                            VcdActivityReporterModule\n                        \n                        \n                            VcdFormModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BoldTextRendererComponent\n                        \n                        \n                            DatagridComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ClarityModule } from '@clr/angular';\nimport { I18nModule } from '@vcd/i18n';\nimport { VcdActionMenuModule } from '../action-menu/action-menu.module';\nimport { VcdActivityReporterModule } from '../common/activity-reporter/activity-reporter.module';\nimport { PipesModule } from '../common/pipes/pipes.module';\nimport { VcdFormModule } from '../form/form.module';\nimport { ShowClippedTextDirectiveModule } from '../lib/directives/show-clipped-text.directive.module';\nimport { DatagridComponent } from './datagrid.component';\nimport { ComponentRendererOutletDirective } from './directives/component-renderer-outlet.directive';\nimport { DatagridMultiSelectFilterComponent } from './filters/datagrid-multiselect-filter.component';\nimport { DatagridNumericFilterComponent } from './filters/datagrid-numeric-filter.component';\nimport { DatagridSelectFilterComponent } from './filters/datagrid-select-filter.component';\nimport { DatagridStringFilterComponent } from './filters/datagrid-string-filter.component';\nimport { FunctionRendererPipe } from './pipes/function-renderer.pipe';\nimport { BoldTextRendererComponent } from './renderers/bold-text-renderer.component';\n\nconst directives = [ComponentRendererOutletDirective];\nconst pipes = [FunctionRendererPipe];\nconst renderers = [BoldTextRendererComponent];\nconst filters = [\n    DatagridNumericFilterComponent,\n    DatagridStringFilterComponent,\n    DatagridSelectFilterComponent,\n    DatagridMultiSelectFilterComponent,\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ClarityModule,\n        RouterModule,\n        PipesModule,\n        ReactiveFormsModule,\n        ShowClippedTextDirectiveModule,\n        FormsModule,\n        I18nModule,\n        VcdActivityReporterModule,\n        VcdFormModule,\n        VcdActionMenuModule,\n    ],\n    declarations: [DatagridComponent, ...directives, ...renderers, ...pipes, ...filters],\n    providers: [],\n    exports: [DatagridComponent, ...renderers],\n    entryComponents: [...renderers, ...filters],\n})\nexport class VcdDatagridModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VcdDatagridWidgetObject.html":{"url":"classes/VcdDatagridWidgetObject.html","title":"class - VcdDatagridWidgetObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VcdDatagridWidgetObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/datagrid/vcd-datagrid.wo.ts\n        \n\n            \n                Description\n            \n            \n                Widget Object for our VCD DataGrid\n\n            \n\n            \n                Extends\n            \n            \n                        BaseWidgetObject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getHeader\n                            \n                            \n                                    Static\n                                tagName\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorDriver\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorForAncestors\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorForCssSelectors\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorForText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findClrDatagrid\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    vcdDatagrid\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         this.locatorForCssSelectors('h3')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForCssSelectors('h3')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/datagrid/vcd-datagrid.wo.ts:18\n                            \n                        \n\n                \n                    \n                        Gives the header above the grid.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tagName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : `vcd-datagrid`\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/datagrid/vcd-datagrid.wo.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorDriver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LocatorDriver\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseWidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseWidgetObject:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorForAncestors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.parents(cssSelector, options).unwrap();\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseWidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseWidgetObject:45\n\n                            \n                        \n\n                \n                    \n                        Returns an element locator that will find a parent with the given cssSelector when called.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorForCssSelectors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.get(cssSelector, options).unwrap();\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseWidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseWidgetObject:38\n\n                            \n                        \n\n                \n                    \n                        Returns an element locator that will find a child with the given cssSelector when called.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorForText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         (cssSelector: string, text: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.getByText(cssSelector, text, options).unwrap();\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseWidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseWidgetObject:52\n\n                            \n                        \n\n                \n                    \n                        Returns an element locator that will find a child with the given cssSelector and text when called.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findClrDatagrid\n                        \n                        \n                    \n                \n            \n            \n                \nfindClrDatagrid()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/datagrid/vcd-datagrid.wo.ts:23\n                \n            \n\n\n            \n                \n                    Gives the widget object for this clr-datagrid.\n\n\n                    \n                        Returns :     ClrDatagridWidgetObject\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        vcdDatagrid\n                    \n                \n\n                \n                    \n                        getvcdDatagrid()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/utils/test/datagrid/vcd-datagrid.wo.ts:31\n                                \n                            \n                    \n                        \n                                Unwraps the vcd-datagrid\n\n\n                                \n                                    Returns :     T\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { BaseWidgetObject } from '../widget-object/widget-object';\nimport { ClrDatagridWidgetObject } from './datagrid.wo';\n\n/**\n * Widget Object for our VCD DataGrid\n */\nexport class VcdDatagridWidgetObject extends BaseWidgetObject {\n    static tagName = `vcd-datagrid`;\n\n    /**\n     * Gives the header above the grid.\n     */\n    getHeader = this.locatorForCssSelectors('h3');\n\n    /**\n     * Gives the widget object for this `clr-datagrid`.\n     */\n    findClrDatagrid(): ClrDatagridWidgetObject {\n        // @ts-ignore\n        return this.locatorDriver.findWidget(ClrDatagridWidgetObject);\n    }\n\n    /**\n     * Unwraps the `vcd-datagrid`\n     */\n    get vcdDatagrid(): T {\n        return this.locatorDriver.unwrap();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcdErrorBannerModule.html":{"url":"modules/VcdErrorBannerModule.html","title":"module - VcdErrorBannerModule","body":"\n                   \n\n\n\n\n    Modules\n    VcdErrorBannerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcdErrorBannerModule\n\n\n\ncluster_VcdErrorBannerModule_declarations\n\n\n\ncluster_VcdErrorBannerModule_exports\n\n\n\n\nErrorBannerComponent\n\nErrorBannerComponent\n\n\n\nVcdErrorBannerModule\n\nVcdErrorBannerModule\n\nVcdErrorBannerModule -->\n\nErrorBannerComponent->VcdErrorBannerModule\n\n\n\n\n\nErrorBannerComponent \n\nErrorBannerComponent \n\nErrorBannerComponent  -->\n\nVcdErrorBannerModule->ErrorBannerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/common/error/error-banner.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ErrorBannerComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ErrorBannerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ErrorBannerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClarityModule } from '@clr/angular';\nimport { I18nModule } from '@vcd/i18n';\nimport { ErrorBannerComponent } from './error-banner.component';\n\n@NgModule({\n    declarations: [ErrorBannerComponent],\n    imports: [CommonModule, ClarityModule, I18nModule],\n    exports: [ErrorBannerComponent],\n    entryComponents: [ErrorBannerComponent],\n})\nexport class VcdErrorBannerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcdFormModule.html":{"url":"modules/VcdFormModule.html","title":"module - VcdFormModule","body":"\n                   \n\n\n\n\n    Modules\n    VcdFormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcdFormModule\n\n\n\ncluster_VcdFormModule_declarations\n\n\n\ncluster_VcdFormModule_exports\n\n\n\ncluster_VcdFormModule_providers\n\n\n\n\nFormCheckboxComponent\n\nFormCheckboxComponent\n\n\n\nVcdFormModule\n\nVcdFormModule\n\nVcdFormModule -->\n\nFormCheckboxComponent->VcdFormModule\n\n\n\n\n\nFormInputComponent\n\nFormInputComponent\n\nVcdFormModule -->\n\nFormInputComponent->VcdFormModule\n\n\n\n\n\nFormSelectComponent\n\nFormSelectComponent\n\nVcdFormModule -->\n\nFormSelectComponent->VcdFormModule\n\n\n\n\n\nNumberWithUnitFormInputComponent\n\nNumberWithUnitFormInputComponent\n\nVcdFormModule -->\n\nNumberWithUnitFormInputComponent->VcdFormModule\n\n\n\n\n\nFormCheckboxComponent \n\nFormCheckboxComponent \n\nFormCheckboxComponent  -->\n\nVcdFormModule->FormCheckboxComponent \n\n\n\n\n\nFormInputComponent \n\nFormInputComponent \n\nFormInputComponent  -->\n\nVcdFormModule->FormInputComponent \n\n\n\n\n\nFormSelectComponent \n\nFormSelectComponent \n\nFormSelectComponent  -->\n\nVcdFormModule->FormSelectComponent \n\n\n\n\n\nNumberWithUnitFormInputComponent \n\nNumberWithUnitFormInputComponent \n\nNumberWithUnitFormInputComponent  -->\n\nVcdFormModule->NumberWithUnitFormInputComponent \n\n\n\n\n\nUnitFormatter\n\nUnitFormatter\n\nVcdFormModule -->\n\nUnitFormatter->VcdFormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/form/form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FormCheckboxComponent\n                        \n                        \n                            FormInputComponent\n                        \n                        \n                            FormSelectComponent\n                        \n                        \n                            NumberWithUnitFormInputComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            UnitFormatter\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FormCheckboxComponent\n                        \n                        \n                            FormInputComponent\n                        \n                        \n                            FormSelectComponent\n                        \n                        \n                            NumberWithUnitFormInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ClarityModule } from '@clr/angular';\nimport { I18nModule } from '@vcd/i18n';\nimport { UnitFormatter } from '../utils/unit/unit-formatter';\nimport { FormCheckboxComponent } from './form-checkbox/form-checkbox.component';\nimport { FormInputComponent } from './form-input/form-input.component';\nimport { FormSelectComponent } from './form-select/form-select.component';\nimport { NumberWithUnitFormInputComponent } from './number-with-unit-input/number-with-unit-form-input.component';\n\nconst declarations = [FormInputComponent, FormSelectComponent, FormCheckboxComponent, NumberWithUnitFormInputComponent];\n\n@NgModule({\n    imports: [ClarityModule, FormsModule, ReactiveFormsModule, CommonModule, I18nModule],\n    declarations,\n    providers: [UnitFormatter],\n    exports: [...declarations],\n})\nexport class VcdFormModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VcdFormlyFieldConfig.html":{"url":"interfaces/VcdFormlyFieldConfig.html","title":"interface - VcdFormlyFieldConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  VcdFormlyFieldConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/formly/vcd/vcd-formly.config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration of FormlyForm.fields that is specific to Vcd.\n\n            \n\n            \n                Extends\n            \n            \n                    FormlyFieldConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fieldGroup\n                                \n                                \n                                            Optional\n                                        templateOptions\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fieldGroup\n                                    \n                                \n                                \n                                    \n                                        fieldGroup:         VcdFormlyFieldConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VcdFormlyFieldConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    FormlyForm.fields\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        templateOptions\n                                    \n                                \n                                \n                                    \n                                        templateOptions:         VcdFormlyTemplateOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VcdFormlyTemplateOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    VcdFormlyTemplateOptions\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         VcdFormlyInputTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VcdFormlyInputTypes\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    VcdFormlyInputTypes\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ConfigOption, FormlyFieldConfig, FormlyTemplateOptions } from '@ngx-formly/core';\nimport { Observable } from 'rxjs';\nimport { SelectOption } from '../../common/interfaces/select-option';\nimport { Unit } from '../../utils/unit/unit';\nimport { FormlyInputComponent } from './inputs/input/formly-input.component';\nimport { FormlyNumberWithUnitInputComponent } from './inputs/number-with-unit-input/formly-number-with-unit-input.component';\nimport { FormlySelectComponent } from './inputs/select/formly-select.component';\n\n/**\n * Options that are specific to Vcd form components. These are passed as inputs or outputs in the HTML templates.\n */\nexport interface VcdFormlyTemplateOptions extends FormlyTemplateOptions {\n    options?: SelectOption[] | Observable;\n    inputValueUnit?: Unit;\n    unlimitedValue?: number;\n    showUnlimitedOption?: boolean;\n    unitOptions?: Unit[];\n    isReadOnly?: boolean;\n    hint?: string;\n    hintPosition?: string;\n    errorLabels?: string[];\n    onEnterClicked?: (field: FormlyFieldConfig) => any;\n    onEscapeClicked?: (field: FormlyFieldConfig) => any;\n}\n\n/**\n * Configuration of {@link FormlyForm.fields} that is specific to Vcd.\n */\nexport interface VcdFormlyFieldConfig extends FormlyFieldConfig {\n    /**\n     * {@link VcdFormlyInputTypes}\n     */\n    type?: VcdFormlyInputTypes;\n    /**\n     * {@link VcdFormlyTemplateOptions}\n     */\n    templateOptions?: VcdFormlyTemplateOptions;\n    /**\n     * {@link FormlyForm.fields}\n     */\n    fieldGroup?: VcdFormlyFieldConfig[];\n}\n\n/**\n * Different of Vcd form inputs that are configurable through Formly\n */\nexport enum VcdFormlyInputTypes {\n    /**\n     * Used for identifying {@link FormlyInputComponent} type\n     */\n    input = 'input',\n    /**\n     * Used for identifying {@link FormlySelectComponent} type\n     */\n    select = 'select',\n    /**\n     * Used for identifying {@link FormlyNumberWithUnitInputComponent} type\n     */\n    number_with_unit_input = 'number_with_unit_input',\n}\n\nexport const VCD_FORMLY_CONFIG: ConfigOption = {\n    types: [\n        {\n            name: VcdFormlyInputTypes.input,\n            component: FormlyInputComponent,\n        },\n        {\n            name: VcdFormlyInputTypes.select,\n            component: FormlySelectComponent,\n        },\n        {\n            name: VcdFormlyInputTypes.number_with_unit_input,\n            component: FormlyNumberWithUnitInputComponent,\n        },\n    ],\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcdFormlyModule.html":{"url":"modules/VcdFormlyModule.html","title":"module - VcdFormlyModule","body":"\n                   \n\n\n\n\n    Modules\n    VcdFormlyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcdFormlyModule\n\n\n\ncluster_VcdFormlyModule_declarations\n\n\n\ncluster_VcdFormlyModule_imports\n\n\n\n\nFormlyInputComponent\n\nFormlyInputComponent\n\n\n\nVcdFormlyModule\n\nVcdFormlyModule\n\nVcdFormlyModule -->\n\nFormlyInputComponent->VcdFormlyModule\n\n\n\n\n\nFormlyNumberWithUnitInputComponent\n\nFormlyNumberWithUnitInputComponent\n\nVcdFormlyModule -->\n\nFormlyNumberWithUnitInputComponent->VcdFormlyModule\n\n\n\n\n\nFormlySelectComponent\n\nFormlySelectComponent\n\nVcdFormlyModule -->\n\nFormlySelectComponent->VcdFormlyModule\n\n\n\n\n\nVcdFormModule\n\nVcdFormModule\n\nVcdFormlyModule -->\n\nVcdFormModule->VcdFormlyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/formly/vcd/vcd-formly.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FormlyInputComponent\n                        \n                        \n                            FormlyNumberWithUnitInputComponent\n                        \n                        \n                            FormlySelectComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            VcdFormModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(configOption: ConfigOption)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/formly/vcd/vcd-formly.module.ts:37\n                \n            \n\n\n            \n                \n                    Used for passing configuration in addition to default VCD_FORMLY_CONFIG\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    configOption\n                                    \n                                            ConfigOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Additional Formly configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ConfigOption, FormlyModule, FORMLY_CONFIG } from '@ngx-formly/core';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\nimport { I18nModule } from '@vcd/i18n';\nimport { VcdFormModule } from '../../form/form.module';\nimport { FormlyInputComponent } from './inputs/input/formly-input.component';\nimport { FormlyNumberWithUnitInputComponent } from './inputs/number-with-unit-input/formly-number-with-unit-input.component';\nimport { FormlySelectComponent } from './inputs/select/formly-select.component';\nimport { VCD_FORMLY_CONFIG } from './vcd-formly.config';\n\nconst VCD_FORMLY_INPUT_COMPONENTS = [FormlyInputComponent, FormlySelectComponent, FormlyNumberWithUnitInputComponent];\n\n@NgModule({\n    declarations: [...VCD_FORMLY_INPUT_COMPONENTS],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        FormlyModule.forChild(VCD_FORMLY_CONFIG),\n        VcdFormModule,\n        FormlySelectModule,\n        I18nModule,\n    ],\n    exports: [],\n})\nexport class VcdFormlyModule {\n    /**\n     * Used for passing configuration in addition to default {@link VCD_FORMLY_CONFIG}\n     * @param configOption Additional Formly configuration\n     */\n    static forRoot(configOption: ConfigOption): ModuleWithProviders {\n        return {\n            ngModule: VcdFormlyModule,\n            providers: [{ provide: FORMLY_CONFIG, useValue: configOption, multi: true }],\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VcdFormlyTemplateOptions.html":{"url":"interfaces/VcdFormlyTemplateOptions.html","title":"interface - VcdFormlyTemplateOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  VcdFormlyTemplateOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/formly/vcd/vcd-formly.config.ts\n        \n\n            \n                Description\n            \n            \n                Options that are specific to Vcd form components. These are passed as inputs or outputs in the HTML templates.\n\n            \n\n            \n                Extends\n            \n            \n                    FormlyTemplateOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        errorLabels\n                                \n                                \n                                            Optional\n                                        hint\n                                \n                                \n                                            Optional\n                                        hintPosition\n                                \n                                \n                                            Optional\n                                        inputValueUnit\n                                \n                                \n                                            Optional\n                                        isReadOnly\n                                \n                                \n                                            Optional\n                                        onEnterClicked\n                                \n                                \n                                            Optional\n                                        onEscapeClicked\n                                \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                            Optional\n                                        showUnlimitedOption\n                                \n                                \n                                            Optional\n                                        unitOptions\n                                \n                                \n                                            Optional\n                                        unlimitedValue\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorLabels\n                                    \n                                \n                                \n                                    \n                                        errorLabels:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hintPosition\n                                    \n                                \n                                \n                                    \n                                        hintPosition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputValueUnit\n                                    \n                                \n                                \n                                    \n                                        inputValueUnit:         Unit\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Unit\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isReadOnly\n                                    \n                                \n                                \n                                    \n                                        isReadOnly:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onEnterClicked\n                                    \n                                \n                                \n                                    \n                                        onEnterClicked:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onEscapeClicked\n                                    \n                                \n                                \n                                    \n                                        onEscapeClicked:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         SelectOption[] | Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SelectOption[] | Observable\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showUnlimitedOption\n                                    \n                                \n                                \n                                    \n                                        showUnlimitedOption:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unitOptions\n                                    \n                                \n                                \n                                    \n                                        unitOptions:         Unit[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Unit[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlimitedValue\n                                    \n                                \n                                \n                                    \n                                        unlimitedValue:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ConfigOption, FormlyFieldConfig, FormlyTemplateOptions } from '@ngx-formly/core';\nimport { Observable } from 'rxjs';\nimport { SelectOption } from '../../common/interfaces/select-option';\nimport { Unit } from '../../utils/unit/unit';\nimport { FormlyInputComponent } from './inputs/input/formly-input.component';\nimport { FormlyNumberWithUnitInputComponent } from './inputs/number-with-unit-input/formly-number-with-unit-input.component';\nimport { FormlySelectComponent } from './inputs/select/formly-select.component';\n\n/**\n * Options that are specific to Vcd form components. These are passed as inputs or outputs in the HTML templates.\n */\nexport interface VcdFormlyTemplateOptions extends FormlyTemplateOptions {\n    options?: SelectOption[] | Observable;\n    inputValueUnit?: Unit;\n    unlimitedValue?: number;\n    showUnlimitedOption?: boolean;\n    unitOptions?: Unit[];\n    isReadOnly?: boolean;\n    hint?: string;\n    hintPosition?: string;\n    errorLabels?: string[];\n    onEnterClicked?: (field: FormlyFieldConfig) => any;\n    onEscapeClicked?: (field: FormlyFieldConfig) => any;\n}\n\n/**\n * Configuration of {@link FormlyForm.fields} that is specific to Vcd.\n */\nexport interface VcdFormlyFieldConfig extends FormlyFieldConfig {\n    /**\n     * {@link VcdFormlyInputTypes}\n     */\n    type?: VcdFormlyInputTypes;\n    /**\n     * {@link VcdFormlyTemplateOptions}\n     */\n    templateOptions?: VcdFormlyTemplateOptions;\n    /**\n     * {@link FormlyForm.fields}\n     */\n    fieldGroup?: VcdFormlyFieldConfig[];\n}\n\n/**\n * Different of Vcd form inputs that are configurable through Formly\n */\nexport enum VcdFormlyInputTypes {\n    /**\n     * Used for identifying {@link FormlyInputComponent} type\n     */\n    input = 'input',\n    /**\n     * Used for identifying {@link FormlySelectComponent} type\n     */\n    select = 'select',\n    /**\n     * Used for identifying {@link FormlyNumberWithUnitInputComponent} type\n     */\n    number_with_unit_input = 'number_with_unit_input',\n}\n\nexport const VCD_FORMLY_CONFIG: ConfigOption = {\n    types: [\n        {\n            name: VcdFormlyInputTypes.input,\n            component: FormlyInputComponent,\n        },\n        {\n            name: VcdFormlyInputTypes.select,\n            component: FormlySelectComponent,\n        },\n        {\n            name: VcdFormlyInputTypes.number_with_unit_input,\n            component: FormlyNumberWithUnitInputComponent,\n        },\n    ],\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcdLoadingIndicatorModule.html":{"url":"modules/VcdLoadingIndicatorModule.html","title":"module - VcdLoadingIndicatorModule","body":"\n                   \n\n\n\n\n    Modules\n    VcdLoadingIndicatorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcdLoadingIndicatorModule\n\n\n\ncluster_VcdLoadingIndicatorModule_declarations\n\n\n\ncluster_VcdLoadingIndicatorModule_exports\n\n\n\n\nLoadingIndicatorComponent\n\nLoadingIndicatorComponent\n\n\n\nVcdLoadingIndicatorModule\n\nVcdLoadingIndicatorModule\n\nVcdLoadingIndicatorModule -->\n\nLoadingIndicatorComponent->VcdLoadingIndicatorModule\n\n\n\n\n\nLoadingIndicatorComponent \n\nLoadingIndicatorComponent \n\nLoadingIndicatorComponent  -->\n\nVcdLoadingIndicatorModule->LoadingIndicatorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/common/loading/loading-indicator.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoadingIndicatorComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            LoadingIndicatorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoadingIndicatorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClarityModule } from '@clr/angular';\nimport { I18nModule } from '@vcd/i18n';\nimport { LoadingIndicatorComponent } from './loading-indicator.component';\n\n@NgModule({\n    declarations: [LoadingIndicatorComponent],\n    imports: [CommonModule, ClarityModule, I18nModule],\n    exports: [LoadingIndicatorComponent],\n    entryComponents: [LoadingIndicatorComponent],\n})\nexport class VcdLoadingIndicatorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WidgetFinder.html":{"url":"classes/WidgetFinder.html","title":"class - WidgetFinder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WidgetFinder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fixture\n                            \n                            \n                                    Public\n                                hostComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                detectChanges\n                            \n                            \n                                    Public\n                                find\n                            \n                            \n                                    Public\n                                findWidgets\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(componentConstructor: Type)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/test/widget-object.ts:192\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        componentConstructor\n                                                  \n                                                        \n                                                                    Type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The host component to be created as the root of the tests's fixture\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fixture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentFixture\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object.ts:187\n                            \n                        \n\n                \n                    \n                        We don't care or could possibly know the type of fixture\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hostComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     H\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object.ts:192\n                            \n                        \n\n                \n                    \n                        If you need direct access to manipulate the host\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    detectChanges()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:243\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(params: FindParams | T)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:231\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        C\n                        T\n                    \n                \n            \n\n            \n                \n                    Finds a single widget object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FindParams | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     InstanceType\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findWidgets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findWidgets(params: FindParams | T, parent?: DebugElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:206\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        C\n                        T\n                    \n                \n            \n\n            \n                \n                    Finds widgets within a fixture\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FindParams | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     InstanceType[]\n\n                    \n                    \n                        A Potentially empty list of widgets matching the given specs\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DebugElement, Type } from '@angular/core';\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\n\n/**\n * An implementation of the page object pattern, but applied to widgets, since they can be reused on multiple pages.\n *\n * The main purpose for the wrapper are providing access to the internals of a widget avoiding duplication of code that\n * queries the internals of a component from a test.\n *\n * ## Subclass Rules\n *\n * - Methods exposed by subclasses should not expose HTMLElements or DebugElements directly. That would encourage\n * callers to query it from the outside creating potential duplicate querying code and abstraction leaks.\n *  - Subclasses also should not have testing assertions. They should only provide the state and the calling test can\n * assert code on its own.\n *\n * `T` is the type of the JS/TS object being wrapped\n *\n * It is recommended that files for implementations be named with a `.wo.ts` extension\n */\nexport abstract class WidgetObject {\n    /**\n     *\n     * Constructor should only be called directly if you are directly instantiating the widget being wrapped (T). If you\n     * need to find a widget within the tree, you should use {@link find}.\n     *\n     * @param component The component instance being managed. Whenever possible, we should access the component's API.\n     * @param root The root element (host) for the component instance. We typically prefer to interact with the\n     * component but there are times when we must check the DOM.\n     * @param fixture The test fixture, so we can call {@link ComponentFixture#detectChanges} after something that\n     * requires re-rendering of the DOM.\n     */\n    constructor(\n        protected fixture: ComponentFixture,\n        protected root: DebugElement = fixture.debugElement,\n        public component: T = fixture.componentInstance\n    ) {}\n\n    detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Finds first element within this widget matching the given selector\n     * @param selector What to search for\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n    protected findElement(selector: string | Type, parent: DebugElement = this.root): DebugElement {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.query(query);\n    }\n\n    /**\n     * Same as {@link findElement} but returns all elements\n     */\n    protected findElements(selector: string | Type, parent: DebugElement = this.root): DebugElement[] {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.queryAll(query);\n    }\n\n    /**\n     * Clicks an element and detects changes so the DOM is immediately updated\n     * @param cssSelector Pass this in if you want to click a specific element. If not passed in, the entire node will\n     * receive the click event\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected click(cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.click();\n        this.detectChanges();\n    }\n\n    /**\n     * Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\n     * found by the {@param cssSelector} within the provided {@param parent} or the current root element.\n     * Setting the event properties is done with `Object.defineProperty` on the created event. This allows setting\n     * properties like `which` that is deprecated and cannot be set with the native approach of creating keyboard event.\n     * @param eventType The keyboard event type like 'keyup', 'keydown', 'keypress'\n     * @param eventProperties properties of the event like `code`, `key` etc.\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected sendKeyboardEvent(\n        eventType,\n        eventProperties: { [name: string]: unknown },\n        cssSelector?: string,\n        parent: DebugElement = this.root\n    ): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        // Create keyboard event that bubbles up the chain\n        const event = new KeyboardEvent(eventType, { bubbles: true });\n        // Use `Object.defineProperty` in order to be able to set even deprecated, readonly properties like `which`\n        Object.keys(eventProperties).forEach((key) => {\n            Object.defineProperty(event, key, { value: eventProperties[key] });\n        });\n        nativeElement.dispatchEvent(event);\n        this.detectChanges();\n    }\n\n    /**\n     * Sets the value of an input element or textarea element\n     * @param value the value that the element should display\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected setInputValue(value: string | number, cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLInputElement | HTMLTextAreaElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.value = String(value);\n        nativeElement.dispatchEvent(new Event('input'));\n        this.detectChanges();\n    }\n\n    /**\n     * Returns text content of this widget\n     * If the element cannot be found, gives empty string.\n     * @param cssSelector Pass this in if you want to retrieve text for a specific element within this widget.\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n\n    protected getText(cssSelector: string, parent: DebugElement = this.root): string {\n        const element = this.findElement(cssSelector, parent);\n        return element ? this.getNodeText(element) : '';\n    }\n\n    /**\n     * Same as {@link getText} but return the text for all matching nodes\n     */\n    protected getTexts(cssSelector: string): string[] {\n        return this.findElements(cssSelector).map((el) => this.getNodeText(el));\n    }\n\n    protected getNodeText(el: DebugElement): string {\n        // The || '' is because textContent could technically be null when passed in the document\n        // element object. We know that cannot be pased in here, so we ignore it for coverage\n        // but we still need the line there to make strictNullChecks work\n        return el.nativeElement.textContent.trim() || /* istanbul ignore next */ '';\n    }\n}\n\n/**\n * Subclasses should implement the FindableWidget interface so they can be found with {@link WidgetFinder}\n *\n * ## Note\n * This is done by creating a static property `tagName`on your subclass, not a regular instance, since this\n * interface represents a constructor for a {@link WidgetObject}, not an instance.\n */\nexport interface FindableWidget extends Type {\n    tagName: string;\n}\n\n/**\n * Arguments for {@link WidgetFinder#findWidgets} and {@link WidgetFinder#find}\n */\nexport interface FindParams {\n    /**\n     * The constructor of the widget to be found\n     */\n    woConstructor: T;\n    /**\n     * If provided, search starts from this container. It defaults to the fixture's root debugElement\n     */\n    ancestor?: DebugElement;\n    /**\n     * Optional CSS class name that can be used when there could be multiple instances of the object within the\n     * fixture tree\n     */\n    className?: string;\n}\n\n/**\n * @deprecated Finds instances that implement {@link FindableWidget}\n * H is the host component's type. This finder is only for old unit tests.\n * Please use AngularWidgetObjectFinder instead.\n */\nexport class WidgetFinder {\n    /**\n     * We don't care or could possibly know the type of fixture\n     */\n    private fixture: ComponentFixture;\n\n    /**\n     * If you need direct access to manipulate the host\n     */\n    public hostComponent: H;\n\n    /**\n     * @param componentConstructor The host component to be created as the root of the tests's fixture\n     */\n    constructor(componentConstructor: Type) {\n        this.fixture = TestBed.createComponent(componentConstructor);\n        this.hostComponent = this.fixture.componentInstance;\n    }\n\n    /**\n     * Finds widgets within a fixture\n     * @return A Potentially empty list of widgets matching the given specs\n     */\n    public findWidgets>(\n        params: FindParams | T,\n        parent?: DebugElement\n    ): InstanceType[] {\n        const defaults = { ancestor: this.fixture.debugElement, className: '' };\n        const { woConstructor, ancestor, className } = isFindParamsObject(params)\n            ? { ...defaults, ...params }\n            : { ...defaults, woConstructor: params };\n\n        let query = woConstructor.tagName;\n        if (className) {\n            query += `.${className}`;\n        }\n        const componentRoots = (parent ? parent : ancestor).queryAll(By.css(query));\n        const widgets = componentRoots.map(\n            // Typescript is not able to infer it correctly as the subclass but we know for sure\n            (root) => new woConstructor(this.fixture, root, root.componentInstance) as InstanceType\n        );\n        return widgets;\n    }\n\n    /**\n     * Finds a single widget object\n     * @throws An error if the widget is not found or if there are multiple instances\n     */\n    public find>(params: FindParams | T): InstanceType {\n        const widgets = this.findWidgets(params);\n        const tagName = isFindParamsObject(params) ? params.woConstructor.tagName : params.tagName;\n        if (widgets.length === 0) {\n            throw Error(`Did not find a `);\n        }\n        if (widgets.length > 1) {\n            throw Error(`Expected to find a single  but found ${widgets.length}`);\n        }\n        return widgets[0] as InstanceType;\n    }\n\n    public detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n}\n\nexport function isFindParamsObject(params: FindParams | T): params is FindParams {\n    return !!(params as FindParams).woConstructor;\n}\n/**\n * Can be used in tests that use `this` to share a finder with before/AfterEach instead of leaky closures\n */\nexport interface HasFinder {\n    finder: WidgetFinder;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WidgetObject.html":{"url":"classes/WidgetObject.html","title":"class - WidgetObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WidgetObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object.ts\n        \n\n            \n                Description\n            \n            \n                An implementation of the page object pattern, but applied to widgets, since they can be reused on multiple pages.\nThe main purpose for the wrapper are providing access to the internals of a widget avoiding duplication of code that\nqueries the internals of a component from a test.\nSubclass Rules\n\nMethods exposed by subclasses should not expose HTMLElements or DebugElements directly. That would encourage\ncallers to query it from the outside creating potential duplicate querying code and abstraction leaks.\nSubclasses also should not have testing assertions. They should only provide the state and the calling test can\nassert code on its own.\n\n\n\nT is the type of the JS/TS object being wrapped\nIt is recommended that files for implementations be named with a .wo.ts extension\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                click\n                            \n                            \n                                detectChanges\n                            \n                            \n                                    Protected\n                                findElement\n                            \n                            \n                                    Protected\n                                findElements\n                            \n                            \n                                    Protected\n                                getNodeText\n                            \n                            \n                                    Protected\n                                getText\n                            \n                            \n                                    Protected\n                                getTexts\n                            \n                            \n                                    Protected\n                                sendKeyboardEvent\n                            \n                            \n                                    Protected\n                                setInputValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fixture: ComponentFixture, root: DebugElement, component: T)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/test/widget-object.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor should only be called directly if you are directly instantiating the widget being wrapped (T). If you\nneed to find a widget within the tree, you should use find.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fixture\n                                                  \n                                                        \n                                                                    ComponentFixture\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The test fixture, so we can call {\n\n                                                        \n                                                \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                        DebugElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The root element (host) for the component instance. We typically prefer to interact with the\ncomponent but there are times when we must check the DOM.\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The component instance being managed. Whenever possible, we should access the component's API.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : fixture.componentInstance\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object.ts:42\n                            \n                        \n\n                \n                    \n                        The component instance being managed. Whenever possible, we should access the component's API.\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    click(cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:73\n                \n            \n\n\n            \n                \n                    Clicks an element and detects changes so the DOM is immediately updated\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to click a specific element. If not passed in, the entire node will\nreceive the click event\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \ndetectChanges()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElement(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:54\n                \n            \n\n\n            \n                \n                    Finds first element within this widget matching the given selector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        What to search for\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DebugElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElements\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElements(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:62\n                \n            \n\n\n            \n                \n                    Same as findElement but returns all elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DebugElement[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getNodeText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeText(el: DebugElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getText(cssSelector: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:128\n                \n            \n\n\n            \n                \n                    Returns text content of this widget\nIf the element cannot be found, gives empty string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to retrieve text for a specific element within this widget.\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getTexts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTexts(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:136\n                \n            \n\n\n            \n                \n                    Same as getText but return the text for all matching nodes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            sendKeyboardEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendKeyboardEvent(eventType, eventProperties: literal type, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:90\n                \n            \n\n\n            \n                \n                    Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\nfound by the {@param cssSelector} within the provided {@param parent} or the current root element.\nSetting the event properties is done with Object.defineProperty on the created event. This allows setting\nproperties like which that is deprecated and cannot be set with the native approach of creating keyboard event.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    eventType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The keyboard event type like 'keyup', 'keydown', 'keypress'\n\n                                    \n                                \n                                \n                                    eventProperties\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        properties of the event like code, key etc.\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setInputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setInputValue(value: string | number, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:114\n                \n            \n\n\n            \n                \n                    Sets the value of an input element or textarea element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        the value that the element should display\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DebugElement, Type } from '@angular/core';\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\n\n/**\n * An implementation of the page object pattern, but applied to widgets, since they can be reused on multiple pages.\n *\n * The main purpose for the wrapper are providing access to the internals of a widget avoiding duplication of code that\n * queries the internals of a component from a test.\n *\n * ## Subclass Rules\n *\n * - Methods exposed by subclasses should not expose HTMLElements or DebugElements directly. That would encourage\n * callers to query it from the outside creating potential duplicate querying code and abstraction leaks.\n *  - Subclasses also should not have testing assertions. They should only provide the state and the calling test can\n * assert code on its own.\n *\n * `T` is the type of the JS/TS object being wrapped\n *\n * It is recommended that files for implementations be named with a `.wo.ts` extension\n */\nexport abstract class WidgetObject {\n    /**\n     *\n     * Constructor should only be called directly if you are directly instantiating the widget being wrapped (T). If you\n     * need to find a widget within the tree, you should use {@link find}.\n     *\n     * @param component The component instance being managed. Whenever possible, we should access the component's API.\n     * @param root The root element (host) for the component instance. We typically prefer to interact with the\n     * component but there are times when we must check the DOM.\n     * @param fixture The test fixture, so we can call {@link ComponentFixture#detectChanges} after something that\n     * requires re-rendering of the DOM.\n     */\n    constructor(\n        protected fixture: ComponentFixture,\n        protected root: DebugElement = fixture.debugElement,\n        public component: T = fixture.componentInstance\n    ) {}\n\n    detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Finds first element within this widget matching the given selector\n     * @param selector What to search for\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n    protected findElement(selector: string | Type, parent: DebugElement = this.root): DebugElement {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.query(query);\n    }\n\n    /**\n     * Same as {@link findElement} but returns all elements\n     */\n    protected findElements(selector: string | Type, parent: DebugElement = this.root): DebugElement[] {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.queryAll(query);\n    }\n\n    /**\n     * Clicks an element and detects changes so the DOM is immediately updated\n     * @param cssSelector Pass this in if you want to click a specific element. If not passed in, the entire node will\n     * receive the click event\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected click(cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.click();\n        this.detectChanges();\n    }\n\n    /**\n     * Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\n     * found by the {@param cssSelector} within the provided {@param parent} or the current root element.\n     * Setting the event properties is done with `Object.defineProperty` on the created event. This allows setting\n     * properties like `which` that is deprecated and cannot be set with the native approach of creating keyboard event.\n     * @param eventType The keyboard event type like 'keyup', 'keydown', 'keypress'\n     * @param eventProperties properties of the event like `code`, `key` etc.\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected sendKeyboardEvent(\n        eventType,\n        eventProperties: { [name: string]: unknown },\n        cssSelector?: string,\n        parent: DebugElement = this.root\n    ): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        // Create keyboard event that bubbles up the chain\n        const event = new KeyboardEvent(eventType, { bubbles: true });\n        // Use `Object.defineProperty` in order to be able to set even deprecated, readonly properties like `which`\n        Object.keys(eventProperties).forEach((key) => {\n            Object.defineProperty(event, key, { value: eventProperties[key] });\n        });\n        nativeElement.dispatchEvent(event);\n        this.detectChanges();\n    }\n\n    /**\n     * Sets the value of an input element or textarea element\n     * @param value the value that the element should display\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected setInputValue(value: string | number, cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLInputElement | HTMLTextAreaElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.value = String(value);\n        nativeElement.dispatchEvent(new Event('input'));\n        this.detectChanges();\n    }\n\n    /**\n     * Returns text content of this widget\n     * If the element cannot be found, gives empty string.\n     * @param cssSelector Pass this in if you want to retrieve text for a specific element within this widget.\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n\n    protected getText(cssSelector: string, parent: DebugElement = this.root): string {\n        const element = this.findElement(cssSelector, parent);\n        return element ? this.getNodeText(element) : '';\n    }\n\n    /**\n     * Same as {@link getText} but return the text for all matching nodes\n     */\n    protected getTexts(cssSelector: string): string[] {\n        return this.findElements(cssSelector).map((el) => this.getNodeText(el));\n    }\n\n    protected getNodeText(el: DebugElement): string {\n        // The || '' is because textContent could technically be null when passed in the document\n        // element object. We know that cannot be pased in here, so we ignore it for coverage\n        // but we still need the line there to make strictNullChecks work\n        return el.nativeElement.textContent.trim() || /* istanbul ignore next */ '';\n    }\n}\n\n/**\n * Subclasses should implement the FindableWidget interface so they can be found with {@link WidgetFinder}\n *\n * ## Note\n * This is done by creating a static property `tagName`on your subclass, not a regular instance, since this\n * interface represents a constructor for a {@link WidgetObject}, not an instance.\n */\nexport interface FindableWidget extends Type {\n    tagName: string;\n}\n\n/**\n * Arguments for {@link WidgetFinder#findWidgets} and {@link WidgetFinder#find}\n */\nexport interface FindParams {\n    /**\n     * The constructor of the widget to be found\n     */\n    woConstructor: T;\n    /**\n     * If provided, search starts from this container. It defaults to the fixture's root debugElement\n     */\n    ancestor?: DebugElement;\n    /**\n     * Optional CSS class name that can be used when there could be multiple instances of the object within the\n     * fixture tree\n     */\n    className?: string;\n}\n\n/**\n * @deprecated Finds instances that implement {@link FindableWidget}\n * H is the host component's type. This finder is only for old unit tests.\n * Please use AngularWidgetObjectFinder instead.\n */\nexport class WidgetFinder {\n    /**\n     * We don't care or could possibly know the type of fixture\n     */\n    private fixture: ComponentFixture;\n\n    /**\n     * If you need direct access to manipulate the host\n     */\n    public hostComponent: H;\n\n    /**\n     * @param componentConstructor The host component to be created as the root of the tests's fixture\n     */\n    constructor(componentConstructor: Type) {\n        this.fixture = TestBed.createComponent(componentConstructor);\n        this.hostComponent = this.fixture.componentInstance;\n    }\n\n    /**\n     * Finds widgets within a fixture\n     * @return A Potentially empty list of widgets matching the given specs\n     */\n    public findWidgets>(\n        params: FindParams | T,\n        parent?: DebugElement\n    ): InstanceType[] {\n        const defaults = { ancestor: this.fixture.debugElement, className: '' };\n        const { woConstructor, ancestor, className } = isFindParamsObject(params)\n            ? { ...defaults, ...params }\n            : { ...defaults, woConstructor: params };\n\n        let query = woConstructor.tagName;\n        if (className) {\n            query += `.${className}`;\n        }\n        const componentRoots = (parent ? parent : ancestor).queryAll(By.css(query));\n        const widgets = componentRoots.map(\n            // Typescript is not able to infer it correctly as the subclass but we know for sure\n            (root) => new woConstructor(this.fixture, root, root.componentInstance) as InstanceType\n        );\n        return widgets;\n    }\n\n    /**\n     * Finds a single widget object\n     * @throws An error if the widget is not found or if there are multiple instances\n     */\n    public find>(params: FindParams | T): InstanceType {\n        const widgets = this.findWidgets(params);\n        const tagName = isFindParamsObject(params) ? params.woConstructor.tagName : params.tagName;\n        if (widgets.length === 0) {\n            throw Error(`Did not find a `);\n        }\n        if (widgets.length > 1) {\n            throw Error(`Expected to find a single  but found ${widgets.length}`);\n        }\n        return widgets[0] as InstanceType;\n    }\n\n    public detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n}\n\nexport function isFindParamsObject(params: FindParams | T): params is FindParams {\n    return !!(params as FindParams).woConstructor;\n}\n/**\n * Can be used in tests that use `this` to share a finder with before/AfterEach instead of leaky closures\n */\nexport interface HasFinder {\n    finder: WidgetFinder;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing to vcd-ui-common\nThe vcd-ui-common project team welcomes contributions from the community. Before you start working with vcd-ui-common, please\nread our Developer Certificate of Origin. All contributions to this repository must be\nsigned as described on that page. Your signature certifies that you wrote the patch or have the right to pass it on\nas an open-source patch.\nContribution Flow\nThis is a rough outline of what a contributor's workflow looks like:\n\nCreate a topic branch from where you want to base your work\nMake commits of logical units\nMake sure your commit messages are in the proper format (see below)\nPush your changes to a topic branch in your fork of the repository\nSubmit a pull request\n\nContribution Requirements\n\nPublic/exported members must be documented using tsdoc\n\nEvery commit must contain unit tests, striving for full coverage. If full coverage cannot be achieved, the Pull\nRequest should explain why tests could not be written.\n\nDescriptive Pull Requests:\n\nInclude list of steps for manual testing\nExplain alternatives that were considered\nFor bug fixes, explain what was causing the issue, don't repeat the text from the issue\n\n\n\nMerge vs fast-forward\nPRs with single commits should use --fast-forward. Otherwise, pull requests should be merge commits.\nStaying In Sync With Upstream\nWhen your branch gets out of sync with the vmware/master branch, use the following to update:\ngit checkout my-new-feature\ngit fetch -a\ngit pull --rebase upstream master\ngit push --force-with-lease origin my-new-featureUpdating pull requests\nIf your PR fails to pass CI or needs changes based on code review, you'll most likely want to squash these changes into\nexisting commits.\nIf your pull request contains a single commit or your changes are related to the most recent commit, you can simply\namend the commit.\ngit add .\ngit commit --amend\ngit push --force-with-lease origin my-new-featureIf you need to squash changes into an earlier commit, you can use:\ngit add .\ngit commit --fixup \ngit rebase -i --autosquash master\ngit push --force-with-lease origin my-new-featureBe sure to add a comment to the PR indicating your new changes are ready to review, as GitHub does not generate a\nnotification when you git push.\nCode Style\nFormatting Commit Messages\nWe follow the conventions on How to Write a Git Commit Message.\nBe sure to include any related GitHub issue references in the commit message. See\nGFM syntax for referencing issues\nand commits.\nReporting Bugs and Creating Issues\nWhen opening a new issue, try to roughly follow the commit message format conventions above.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/components/src/action-menu/action-menu.component.ts\n            \n            component\n            ActionMenuComponent\n            \n                67 %\n                (33/49)\n            \n        \n        \n            \n                \n                projects/components/src/action-menu/action-menu.component.ts\n            \n            function\n            getDeepCopyOfActionItems\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/action-menu/action-menu.component.ts\n            \n            function\n            getDefaultActionDisplayConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/action-search-provider/action-search.provider.ts\n            \n            class\n            ActionSearchProvider\n            \n                25 %\n                (5/20)\n            \n        \n        \n            \n                \n                projects/components/src/action-search-provider/action-search.provider.ts\n            \n            variable\n            DEFAULT_ACTION_SEARCH_SECTION_HEADER_PREFIX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/common/activity-reporter/activity-promise-resolver.ts\n            \n            class\n            ActivityPromiseResolver\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/common/activity-reporter/activity-promise-resolver.ts\n            \n            interface\n            ActivityResponse\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/common/activity-reporter/activity-promise-resolver.ts\n            \n            interface\n            ObjectAndResponse\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/common/activity-reporter/activity-reporter.ts\n            \n            class\n            ActivityReporter\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts\n            \n            component\n            BannerActivityReporterComponent\n            \n                66 %\n                (12/18)\n            \n        \n        \n            \n                \n                projects/components/src/common/activity-reporter/spinner-activity-reporter.component.ts\n            \n            component\n            SpinnerActivityReporterComponent\n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                projects/components/src/common/error/error-banner.component.ts\n            \n            component\n            ErrorBannerComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                projects/components/src/common/error/error-banner.wo.ts\n            \n            class\n            ErrorBannerWidgetObject\n            \n                75 %\n                (9/12)\n            \n        \n        \n            \n                \n                projects/components/src/common/interfaces/action-item.interface.ts\n            \n            interface\n            ActionDisplayConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/common/interfaces/action-item.interface.ts\n            \n            interface\n            ActionItem\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                projects/components/src/common/interfaces/select-option.ts\n            \n            interface\n            SelectOption\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/components/src/common/loading/loading-indicator.component.ts\n            \n            component\n            LoadingIndicatorComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/components/src/common/pipes/nested-property.pipe.ts\n            \n            pipe\n            NestedPropertyPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/common/pipes/nested-property.pipe.ts\n            \n            function\n            isNullOrUndefined\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/common/pipes/nested-property.pipe.ts\n            \n            variable\n            DATE_OBJECT_CLASS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/common/pipes/nested-property.pipe.ts\n            \n            variable\n            OBJECT_PROPERTY_SEPARATOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/common/pipes/pipes.module.ts\n            \n            variable\n            declarations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/common/subscription/subscription-tracker.ts\n            \n            class\n            SubscriptionTracker\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                projects/components/src/common/subscription/subscription-tracker.ts\n            \n            interface\n            ISubscriptionTracker\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/components/src/data-exporter/csv-exporter.service.ts\n            \n            injectable\n            CsvExporterService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/components/src/data-exporter/csv-exporter.service.ts\n            \n            function\n            encodeValue\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/data-exporter/csv-exporter.service.ts\n            \n            function\n            hasPotentialInjection\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/data-exporter/csv-exporter.service.ts\n            \n            function\n            processRow\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/data-exporter/csv-exporter.service.ts\n            \n            function\n            sanitizeString\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/data-exporter/csv-exporter.service.ts\n            \n            variable\n            LEADING_CONTROL_CHAR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/data-exporter/data-exporter.component.ts\n            \n            component\n            DataExporterComponent\n            \n                53 %\n                (23/43)\n            \n        \n        \n            \n                \n                projects/components/src/data-exporter/data-exporter.component.ts\n            \n            interface\n            DataExportRequestEvent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/components/src/data-exporter/data-exporter.component.ts\n            \n            interface\n            ExportColumn\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/data-exporter/data-exporter.wo.ts\n            \n            class\n            DataExporterWidgetObject\n            \n                87 %\n                (14/16)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            component\n            DatagridComponent\n            \n                66 %\n                (51/77)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            interface\n            ColumnConfigInternal\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            interface\n            DetailPane\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            interface\n            DetailPaneConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            interface\n            DetailRowConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            interface\n            GridDataFetchResult\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            interface\n            GridState\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            interface\n            PaginationCallback\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            interface\n            PaginationConfiguration\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            interface\n            PagionationInformation\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            interface\n            SortedColumn\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            variable\n            DEFAULT_PAGINATION_TRANSLATION_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            variable\n            DEFAULT_SIZE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            variable\n            DEFAULT_SIZE_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            variable\n            MAX_HEADER_HEIGHT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            variable\n            ROW_HEIGHT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.module.ts\n            \n            variable\n            directives\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.module.ts\n            \n            variable\n            filters\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.module.ts\n            \n            variable\n            pipes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.module.ts\n            \n            variable\n            renderers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts\n            \n            directive\n            ComponentRendererOutletDirective\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-filter.ts\n            \n            class\n            DatagridFilter\n            \n                66 %\n                (10/15)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-filter.ts\n            \n            interface\n            FilterConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-filter.ts\n            \n            interface\n            FilterRendererSpec\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-filter.ts\n            \n            function\n            FilterComponentRendererSpec\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-filter.ts\n            \n            variable\n            DEBOUNCE_TIME_FOR_GRID_FILTER_CHANGES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts\n            \n            component\n            DatagridMultiSelectFilterComponent\n            \n                50 %\n                (12/24)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts\n            \n            interface\n            DatagridMultiSelectFilterConfig\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts\n            \n            interface\n            MultiSelectOption\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts\n            \n            interface\n            MultiSelectOptionInternal\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts\n            \n            function\n            DatagridMultiSelectFilter\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts\n            \n            variable\n            idGenerator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts\n            \n            component\n            DatagridNumericFilterComponent\n            \n                36 %\n                (11/30)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts\n            \n            interface\n            DatagridNumericFilterConfig\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts\n            \n            function\n            DatagridNumericFilter\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-select-filter.component.ts\n            \n            component\n            DatagridSelectFilterComponent\n            \n                47 %\n                (11/23)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-select-filter.component.ts\n            \n            interface\n            DatagridSelectFilterConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-select-filter.component.ts\n            \n            function\n            DatagridSelectFilter\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-string-filter.component.ts\n            \n            component\n            DatagridStringFilterComponent\n            \n                45 %\n                (10/22)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-string-filter.component.ts\n            \n            interface\n            DatagridStringFilterConfig\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-string-filter.component.ts\n            \n            function\n            DatagridStringFilter\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/interfaces/component-renderer.interface.ts\n            \n            interface\n            ComponentRenderer\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/interfaces/component-renderer.interface.ts\n            \n            interface\n            ComponentRendererSpec\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/interfaces/datagrid-column.interface.ts\n            \n            interface\n            ColumnRendererSpec\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/interfaces/datagrid-column.interface.ts\n            \n            interface\n            FunctionRenderer\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/interfaces/datagrid-column.interface.ts\n            \n            interface\n            GridColumn\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/interfaces/datagrid-column.interface.ts\n            \n            function\n            ColumnComponentRendererSpec\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/mock-data.ts\n            \n            interface\n            MockRecord\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/mock-data.ts\n            \n            variable\n            mockData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/pipes/function-renderer.pipe.ts\n            \n            pipe\n            FunctionRendererPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/renderers/bold-text-renderer.component.ts\n            \n            component\n            BoldTextRendererComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/renderers/bold-text-renderer.component.ts\n            \n            interface\n            BoldTextRendererConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/renderers/bold-text-renderer.component.ts\n            \n            function\n            BoldTextRenderer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/renderers/bold-text-renderer.wo.ts\n            \n            class\n            BoldTextRendererWidgetObject\n            \n                75 %\n                (9/12)\n            \n        \n        \n            \n                \n                projects/components/src/dropdown/dropdown-focus-handler.directive.ts\n            \n            directive\n            DropdownFocusHandlerDirective\n            \n                25 %\n                (5/20)\n            \n        \n        \n            \n                \n                projects/components/src/dropdown/dropdown-focus-handler.directive.ts\n            \n            interface\n            MenuItem\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                projects/components/src/dropdown/dropdown-focus-handler.directive.ts\n            \n            variable\n            NESTED_DROPDOWN_TRIGGER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/dropdown/dropdown-focus-handler.service.ts\n            \n            injectable\n            DropdownFocusHandlerService\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                projects/components/src/dropdown/dropdown.component.ts\n            \n            component\n            DropdownComponent\n            \n                69 %\n                (27/39)\n            \n        \n        \n            \n                \n                projects/components/src/dropdown/dropdown.component.ts\n            \n            function\n            dropdownFocusHandlerServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/dropdown/dropdown.component.ts\n            \n            variable\n            DROPDOWN_FOCUS_HANDLER_PROVIDER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/dropdown/dropdown.component.ts\n            \n            variable\n            DROPDOWN_ITEM_SELECTOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/dropdown/dropdown.component.ts\n            \n            variable\n            NESTED_DROPDOWN_TRIGGER_SELECTOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/dropdown/dropdown.component.ts\n            \n            variable\n            NESTED_MENU_HIDE_DELAY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/dropdown/dynamic-dropdown-position.directive.ts\n            \n            directive\n            DynamicDropdownPositionDirective\n            \n                27 %\n                (3/11)\n            \n        \n        \n            \n                \n                projects/components/src/dropdown/dynamic-dropdown-position.directive.ts\n            \n            variable\n            CONTENT_AREA_SELECTOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/dropdown/dynamic-dropdown-position.directive.ts\n            \n            variable\n            MENU_BUFFER_SPACE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/dropdown/dynamic-dropdown-position.directive.ts\n            \n            variable\n            NO_SCROLLING_CLASSNAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/form/base-form-control.ts\n            \n            class\n            BaseFormControl\n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                projects/components/src/form/base-form-control.ts\n            \n            variable\n            idGenerator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/form/form-checkbox/form-checkbox.component.ts\n            \n            component\n            FormCheckboxComponent\n            \n                76 %\n                (16/21)\n            \n        \n        \n            \n                \n                projects/components/src/form/form-input/form-input.component.ts\n            \n            component\n            FormInputComponent\n            \n                77 %\n                (24/31)\n            \n        \n        \n            \n                \n                projects/components/src/form/form-input/form-input.component.ts\n            \n            function\n            getFormattedDateValue\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/form/form-input/form-input.component.ts\n            \n            function\n            pad\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/form/form-select/form-select.component.ts\n            \n            component\n            FormSelectComponent\n            \n                72 %\n                (13/18)\n            \n        \n        \n            \n                \n                projects/components/src/form/form.module.ts\n            \n            variable\n            declarations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/form/interfaces/can-be-read-only.interface.ts\n            \n            interface\n            CanBeReadOnly\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts\n            \n            component\n            NumberWithUnitFormInputComponent\n            \n                52 %\n                (29/55)\n            \n        \n        \n            \n                \n                projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts\n            \n            class\n            NoUnit\n            \n                35 %\n                (5/14)\n            \n        \n        \n            \n                \n                projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts\n            \n            injectable\n            NumberWithUnitsFormValidatorsFactory\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts\n            \n            variable\n            UNLIMITED\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts\n            \n            class\n            NumberWithUnitFormInputWidgetObject\n            \n                52 %\n                (9/17)\n            \n        \n        \n            \n                \n                projects/components/src/form/validators.ts\n            \n            class\n            FormValidators\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/formly/vcd/inputs/input/formly-input.component.ts\n            \n            component\n            FormlyInputComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                projects/components/src/formly/vcd/inputs/number-with-unit-input/formly-number-with-unit-input.component.ts\n            \n            component\n            FormlyNumberWithUnitInputComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/formly/vcd/inputs/select/formly-select.component.ts\n            \n            component\n            FormlySelectComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/formly/vcd/vcd-formly.config.ts\n            \n            interface\n            VcdFormlyFieldConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/components/src/formly/vcd/vcd-formly.config.ts\n            \n            interface\n            VcdFormlyTemplateOptions\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                projects/components/src/formly/vcd/vcd-formly.config.ts\n            \n            variable\n            VCD_FORMLY_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/formly/vcd/vcd-formly.module.ts\n            \n            variable\n            VCD_FORMLY_INPUT_COMPONENTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts\n            \n            component\n            ShowClippedTextDirectiveTestHostComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts\n            \n            class\n            ShowClippedTextDirectiveTestHelper\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                projects/components/src/lib/directives/show-clipped-text.directive.ts\n            \n            directive\n            ShowClippedTextDirective\n            \n                20 %\n                (3/15)\n            \n        \n        \n            \n                \n                projects/components/src/lib/directives/show-clipped-text.directive.ts\n            \n            interface\n            CliptextConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/components/src/lib/directives/show-clipped-text.directive.ts\n            \n            function\n            setStyle\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/lib/directives/show-clipped-text.directive.ts\n            \n            function\n            unwatchEvents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/lib/directives/show-clipped-text.directive.ts\n            \n            function\n            watchEvents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/lib/directives/show-clipped-text.directive.ts\n            \n            variable\n            fireTipTransitionEndForTests\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/lib/directives/show-clipped-text.directive.ts\n            \n            variable\n            tip\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/quick-search/quick-search-registrar.service.ts\n            \n            injectable\n            QuickSearchRegistrarService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                projects/components/src/quick-search/quick-search-result.ts\n            \n            interface\n            QuickSearchResultItem\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/quick-search/quick-search-result.ts\n            \n            interface\n            QuickSearchResults\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/components/src/quick-search/quick-search.component.ts\n            \n            component\n            QuickSearchComponent\n            \n                37 %\n                (9/24)\n            \n        \n        \n            \n                \n                projects/components/src/quick-search/quick-search.component.ts\n            \n            interface\n            PartialResult\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/quick-search/quick-search.component.ts\n            \n            interface\n            ResultActivatedEvent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/components/src/quick-search/quick-search.component.ts\n            \n            interface\n            SearchSection\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/components/src/quick-search/quick-search.provider.ts\n            \n            class\n            QuickSearchProviderDefaults\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/components/src/quick-search/quick-search.provider.ts\n            \n            interface\n            QuickSearchProvider\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/components/src/quick-search/quick-search.service.ts\n            \n            injectable\n            QuickSearchService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                projects/components/src/utils/common-util.ts\n            \n            class\n            CommonUtil\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                projects/components/src/utils/dom-util.ts\n            \n            class\n            DomUtil\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/components/src/utils/filter-builder.ts\n            \n            class\n            FilterBuilder\n            \n                70 %\n                (17/24)\n            \n        \n        \n            \n                \n                projects/components/src/utils/filter-builder.ts\n            \n            variable\n            Operators\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/utils/id-generator/id-generator.ts\n            \n            class\n            IdGenerator\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/activity-reporter/banner-activity-reporter.wo.ts\n            \n            class\n            BannerActivityReporterWidgetObject\n            \n                66 %\n                (8/12)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/activity-reporter/spinner-activity-reporter.wo.ts\n            \n            class\n            SpinnerActivityReporterWidgetObject\n            \n                64 %\n                (9/14)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/datagrid/datagrid.wo.ts\n            \n            class\n            ClrDatagridWidgetObject\n            \n                92 %\n                (35/38)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/datagrid/datagrid.wo.ts\n            \n            variable\n            Css\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/datagrid/filter-utils.ts\n            \n            component\n            FilterTestHostComponent\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/datagrid/filter-utils.ts\n            \n            function\n            configureTestingModule\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/datagrid/filter-utils.ts\n            \n            function\n            createDatagridFilterTestHelper\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/datagrid/filter-utils.ts\n            \n            function\n            createDatagridFilterTestHelperWithFinder\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/datagrid/filter-utils.ts\n            \n            function\n            getFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/datagrid/vcd-datagrid.wo.ts\n            \n            class\n            VcdDatagridWidgetObject\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object.ts\n            \n            class\n            WidgetFinder\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object.ts\n            \n            class\n            WidgetObject\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object.ts\n            \n            interface\n            FindableWidget\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object.ts\n            \n            interface\n            FindParams\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object.ts\n            \n            interface\n            HasFinder\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object.ts\n            \n            function\n            isFindParamsObject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object/angular-widget-finder.ts\n            \n            class\n            AngularWidgetObjectFinder\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object/angular-widget-object.ts\n            \n            class\n            AngularLocatorDriver\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object/angular-widget-object.ts\n            \n            class\n            TestElement\n            \n                86 %\n                (19/22)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object/cypress-widget-finder.ts\n            \n            class\n            CypressWidgetObjectFinder\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object/cypress-widget-finder.ts\n            \n            variable\n            cy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object/cypress-widget-finder.ts\n            \n            variable\n            idGenerator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object/cypress-widget-object.ts\n            \n            class\n            CypressLocatorDriver\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object/cypress-widget-object.ts\n            \n            variable\n            cy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object/find-cypress-widget.ts\n            \n            function\n            findCypressWidget\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object/widget-object.ts\n            \n            class\n            BaseWidgetObject\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object/widget-object.ts\n            \n            interface\n            FindableWidget\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object/widget-object.ts\n            \n            interface\n            LocatorDriver\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/components/src/utils/unit/unit-formatter.ts\n            \n            injectable\n            UnitFormatter\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/components/src/utils/unit/unit.ts\n            \n            class\n            Bytes\n            \n                43 %\n                (24/55)\n            \n        \n        \n            \n                \n                projects/components/src/utils/unit/unit.ts\n            \n            class\n            Hertz\n            \n                43 %\n                (24/55)\n            \n        \n        \n            \n                \n                projects/components/src/utils/unit/unit.ts\n            \n            class\n            NumberUnit\n            \n                61 %\n                (8/13)\n            \n        \n        \n            \n                \n                projects/components/src/utils/unit/unit.ts\n            \n            class\n            Percent\n            \n                44 %\n                (8/18)\n            \n        \n        \n            \n                \n                projects/components/src/utils/unit/unit.ts\n            \n            class\n            PowerTwoUnit\n            \n                56 %\n                (13/23)\n            \n        \n        \n            \n                \n                projects/components/src/utils/unit/unit.ts\n            \n            class\n            ThousandsUnit\n            \n                56 %\n                (13/23)\n            \n        \n        \n            \n                \n                projects/components/src/utils/unit/unit.ts\n            \n            class\n            Unit\n            \n                54 %\n                (6/11)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 9.1.9\n        \n            @angular/common : 9.1.9\n        \n            @angular/compiler : 9.1.9\n        \n            @angular/core : 9.1.9\n        \n            @angular/forms : 9.1.9\n        \n            @angular/platform-browser : 9.1.9\n        \n            @angular/platform-browser-dynamic : 9.1.9\n        \n            @angular/router : 9.1.9\n        \n            @clr/angular : 3.1.3\n        \n            @clr/core : 3.1.3\n        \n            @clr/icons : 3.1.3\n        \n            @clr/ui : 3.1.3\n        \n            @ngx-formly/core : 5.6.1\n        \n            @stackblitz/sdk : 1.3.0\n        \n            @vmw/ng-live-docs : 0.0.8\n        \n            @vmw/plain-js-live-docs : 0.0.2\n        \n            @webcomponents/webcomponentsjs : 2.0.0\n        \n            @wessberg/ts-evaluator : 0.0.25\n        \n            angular-cli-ghpages : 0.6.2\n        \n            classlist.js : 1.1.20150312\n        \n            codecov.io : 0.1.6\n        \n            karma-coverage : 2.0.2\n        \n            lit-html : 1.1.2\n        \n            messageformat : 1.0.2\n        \n            mousetrap : 1.6.5\n        \n            prismjs : 1.21.0\n        \n            properties : 1.2.1\n        \n            rbradford-compodoc : 1.1.11\n        \n            rxjs : 6.5.5\n        \n            tsickle : 0.38.1\n        \n            tslib : 1.10.0\n        \n            zone.js : 0.10.2\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/animations : 9.*\n        \n            @angular/common : 9.*\n        \n            @angular/compiler : 9.*\n        \n            @angular/core : 9.*\n        \n            @angular/forms : 9.*\n        \n            @angular/platform-browser : 9.*\n        \n            @angular/platform-browser-dynamic : 9.*\n        \n            @angular/router : 9.*\n        \n            @clr/angular : 3.*\n        \n            @clr/ui : 3.*\n        \n            @clr/icons : 3.*\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionStyling   (projects/.../action-item.interface.ts)\n                        \n                        \n                            ActionType   (projects/.../action-item.interface.ts)\n                        \n                        \n                            ActivatableMenuItemType   (projects/.../dropdown-focus-handler.directive.ts)\n                        \n                        \n                            ActivityIndicatorType   (projects/.../datagrid.component.ts)\n                        \n                        \n                            CheckBoxStyling   (projects/.../form-checkbox.component.ts)\n                        \n                        \n                            ContextualActionPosition   (projects/.../datagrid.component.ts)\n                        \n                        \n                            Direction   (projects/.../dropdown-focus-handler.directive.ts)\n                        \n                        \n                            FormFields   (projects/.../datagrid-numeric-filter.component.ts)\n                        \n                        \n                            GridColumnHideable   (projects/.../datagrid-column.interface.ts)\n                        \n                        \n                            GridSelectionType   (projects/.../datagrid.component.ts)\n                        \n                        \n                            SIZES   (projects/.../loading-indicator.component.ts)\n                        \n                        \n                            TextIcon   (projects/.../action-item.interface.ts)\n                        \n                        \n                            TooltipPosition   (projects/.../show-clipped-text.directive.ts)\n                        \n                        \n                            TooltipSize   (projects/.../show-clipped-text.directive.ts)\n                        \n                        \n                            UserOptions   (projects/.../data-exporter.component.ts)\n                        \n                        \n                            VcdFormlyInputTypes   (projects/.../vcd-formly.config.ts)\n                        \n                        \n                            WildCardPosition   (projects/.../datagrid-string-filter.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/components/src/common/interfaces/action-item.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionStyling\n                    \n                \n                    \n                        \n                            Display options for action menu\n\n                        \n                    \n                        \n                            \n                                 INLINE\n                            \n                        \n                        \n                            \n                                Value : INLINE\n                            \n                        \n                        \n                            \n                                 DROPDOWN\n                            \n                        \n                        \n                            \n                                Value : DROPDOWN\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ActionType\n                    \n                \n                    \n                        \n                            List of different type of action buckets\n\n                        \n                    \n                        \n                            \n                                 STATIC_FEATURED\n                            \n                        \n                        \n                            \n                                Value : STATIC_FEATURED\n                            \n                        \n                        \n                            \n                                 CONTEXTUAL_FEATURED\n                            \n                        \n                        \n                            \n                                Value : CONTEXTUAL_FEATURED\n                            \n                        \n                        \n                            \n                                 CONTEXTUAL\n                            \n                        \n                        \n                            \n                                Value : CONTEXTUAL\n                            \n                        \n                        \n                            \n                                 STATIC\n                            \n                        \n                        \n                            \n                                Value : STATIC\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TextIcon\n                    \n                \n                    \n                        \n                            An enum that describes the possible ways to display the button title.\n\n                        \n                    \n                        \n                            \n                                 ICON\n                            \n                        \n                        \n                            \n                                 TEXT\n                            \n                        \n                        \n                            \n                                 ICON_AND_TEXT\n                            \n                        \n            \n        \n\n    projects/components/src/dropdown/dropdown-focus-handler.directive.ts\n    \n        \n            \n                \n                    \n                        \n                        ActivatableMenuItemType\n                    \n                \n                    \n                        \n                            To filter out the non-activatable separator item type when creating linked menu list #linkMenuItems. Because, we don't\nwant the focus to go to separator item type when navigating using the arrow keys\n\n                        \n                    \n                        \n                            \n                                 BUTTON\n                            \n                        \n                        \n                            \n                                Value : button\n                            \n                        \n                        \n                            \n                                 NESTED_VCD_DROPDOWN\n                            \n                        \n                        \n                            \n                                Value : vcd-dropdown\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Direction\n                    \n                \n                    \n                        \n                            Arrow keys directions\n\n                        \n                    \n                        \n                            \n                                 UP\n                            \n                        \n                        \n                            \n                                Value : up\n                            \n                        \n                        \n                            \n                                 DOWN\n                            \n                        \n                        \n                            \n                                Value : down\n                            \n                        \n                        \n                            \n                                 LEFT\n                            \n                        \n                        \n                            \n                                Value : left\n                            \n                        \n                        \n                            \n                                 RIGHT\n                            \n                        \n                        \n                            \n                                Value : right\n                            \n                        \n            \n        \n\n    projects/components/src/datagrid/datagrid.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ActivityIndicatorType\n                    \n                \n                    \n                        \n                            The types of activity indicators that can be displayed on top of the grid.\n\n                        \n                    \n                        \n                            \n                                 SPINNER\n                            \n                        \n                        \n                            \n                                 BANNER\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ContextualActionPosition\n                    \n                \n                    \n                        \n                            An enum that describes where the contextual buttons should display.\n\n                        \n                    \n                        \n                            \n                                 TOP\n                            \n                        \n                        \n                            \n                                Value : TOP\n                            \n                        \n                        \n                            \n                                 ROW\n                            \n                        \n                        \n                            \n                                Value : ROW\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        GridSelectionType\n                    \n                \n                    \n                        \n                            Different types of row selection on the grid\n\n                        \n                    \n                        \n                            \n                                 Multi\n                            \n                        \n                        \n                            \n                                Value : MULTI\n                            \n                        \n                        \n                            \n                                 Single\n                            \n                        \n                        \n                            \n                                Value : SINGLE\n                            \n                        \n                        \n                            \n                                 None\n                            \n                        \n                        \n                            \n                                Value : NONE\n                            \n                        \n            \n        \n\n    projects/components/src/form/form-checkbox/form-checkbox.component.ts\n    \n        \n            \n                \n                    \n                        \n                        CheckBoxStyling\n                    \n                \n                        \n                            \n                                 CHECKBOX\n                            \n                        \n                        \n                            \n                                Value : checkbox\n                            \n                        \n                        \n                            \n                                 TOGGLESWITCH\n                            \n                        \n                        \n                            \n                                Value : toggle-switch\n                            \n                        \n            \n        \n\n    projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts\n    \n        \n            \n                \n                    \n                        \n                        FormFields\n                    \n                \n                        \n                            \n                                 from\n                            \n                        \n                        \n                            \n                                Value : from\n                            \n                        \n                        \n                            \n                                 to\n                            \n                        \n                        \n                            \n                                Value : to\n                            \n                        \n            \n        \n\n    projects/components/src/datagrid/interfaces/datagrid-column.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        GridColumnHideable\n                    \n                \n                        \n                            \n                                 Never\n                            \n                        \n                        \n                            \n                                Value : NEVER\n                            \n                        \n                        \n                            \n                                 Shown\n                            \n                        \n                        \n                            \n                                Value : SHOWN\n                            \n                        \n                        \n                            \n                                 Hidden\n                            \n                        \n                        \n                            \n                                Value : HIDDEN\n                            \n                        \n            \n        \n\n    projects/components/src/common/loading/loading-indicator.component.ts\n    \n        \n            \n                \n                    \n                        \n                        SIZES\n                    \n                \n                        \n                            \n                                 sm\n                            \n                        \n                        \n                            \n                                Value : sm\n                            \n                        \n                        \n                            \n                                 md\n                            \n                        \n                        \n                            \n                                Value : md\n                            \n                        \n                        \n                            \n                                 lg\n                            \n                        \n                        \n                            \n                                Value : lg\n                            \n                        \n            \n        \n\n    projects/components/src/lib/directives/show-clipped-text.directive.ts\n    \n        \n            \n                \n                    \n                        \n                        TooltipPosition\n                    \n                \n                        \n                            \n                                 tl\n                            \n                        \n                        \n                            \n                                Value : tooltip-top-left\n                            \n                        \n                        \n                            \n                                 tr\n                            \n                        \n                        \n                            \n                                Value : tooltip-top-right\n                            \n                        \n                        \n                            \n                                 br\n                            \n                        \n                        \n                            \n                                Value : tooltip-bottom-right\n                            \n                        \n                        \n                            \n                                 bl\n                            \n                        \n                        \n                            \n                                Value : tooltip-bottom-left\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TooltipSize\n                    \n                \n                        \n                            \n                                 sm\n                            \n                        \n                        \n                            \n                                Value : 100px\n                            \n                        \n                        \n                            \n                                 md\n                            \n                        \n                        \n                            \n                                Value : 200px\n                            \n                        \n                        \n                            \n                                 lg\n                            \n                        \n                        \n                            \n                                Value : 400px\n                            \n                        \n            \n        \n\n    projects/components/src/data-exporter/data-exporter.component.ts\n    \n        \n            \n                \n                    \n                        \n                        UserOptions\n                    \n                \n                        \n                            \n                                 selectAll\n                            \n                        \n                        \n                            \n                                Value : selectAll\n                            \n                        \n                        \n                            \n                                 friendlyNames\n                            \n                        \n                        \n                            \n                                Value : friendlyNames\n                            \n                        \n                        \n                            \n                                 sanitize\n                            \n                        \n                        \n                            \n                                Value : sanitize\n                            \n                        \n            \n        \n\n    projects/components/src/formly/vcd/vcd-formly.config.ts\n    \n        \n            \n                \n                    \n                        \n                        VcdFormlyInputTypes\n                    \n                \n                    \n                        \n                            Different of Vcd form inputs that are configurable through Formly\n\n                        \n                    \n                        \n                            \n                                 input\n                            \n                        \n                        \n                            \n                                Value : input\n                            \n                        \n                        \n                            \n                                 select\n                            \n                        \n                        \n                            \n                                Value : select\n                            \n                        \n                        \n                            \n                                 number_with_unit_input\n                            \n                        \n                        \n                            \n                                Value : number_with_unit_input\n                            \n                        \n            \n        \n\n    projects/components/src/datagrid/filters/datagrid-string-filter.component.ts\n    \n        \n            \n                \n                    \n                        \n                        WildCardPosition\n                    \n                \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 START\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 END\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 WRAP\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nVMware Cloud Director UI Common Components\nRepo Structure\nThis monorepo contains four separate but related projects:\nComponent Library (./projects/components) @vcd/ui-components\nReusable components for vcd-ui and its plugin developers. See its README\nfor further details\nInternalization Library (./projects/i18n) @vcd/i18n\nTranslation code for vcd-ui and its plugin developers. See its README\nfor further details\nExamples App (./projects/examples)\nThe application that showcases @vcd/ui-components using @vmw/ng-live-docs.\nRun npm install first. Then run npm run build:i18n followed by npm run build:components to build.\nRun npm start for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if\nyou change any of the source files. This is where you'll see changes made in components.\nRoute Analyzer (./projects/route-analyzer) @vcd/route-analyzer\nRoute Analyzer statically analyzes angular source code and generates a json file with all the available routes,\nincluding the ones from lazy loaded modules. See its README\nfor further details\nPeer Dependencies\nThe component library depends on Clarity and Angular\nwhich must must be installed from your application's package.json. See package.json for version\ninformation.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use\nng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun npm run build:i18n and npm run build:components. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun npm run test:components, or npm run test:i18n to execute the unit tests via Karma.\nRunning end-to-end tests (Examples App)\nRun ng e2e to execute the end-to-end tests via Protractor.\nCloning the repo\nWe typically use git clone https://github.com/vmware/vmware-cloud-director-ui-components ./vcd-ui-common to avoid\nthe extremely long folder name.\nPublishing\nPublishing happens through the CI/CD pipeline. See package.json\nVersioning\nFor all official releases, versioning should be semantic as per NPM's documentation.\nFor all development, nightly builds, the version should be created using npm version prerelease --preid=dev.\nSteps for publishing an @next release:\n\nUpdate version number in projects//package.json\nPush the changes to a remote topic branch and create a pull request into vmware/vmware-cloud-director-ui-components/master\nUpon approval of the PR, merge that PR into master\n\nFollowing the above steps makes the CI-CD pipeline to execute publishing job to npm with @next tag(npm publish --tag next)\nSteps for publishing an @latest release:\n\nUpdate version number in projects//package.json\nPush the changes to a remote topic branch and create a pull request into vmware/vmware-cloud-director-ui-components/master\nUpon approval of the PR, Push the changes to remote repo using Git tag using following commands:\nAdd a Git tag to the HEAD commit that has to be published as latest: git tag -fa -v[0-999].[0-999].[0-999]\nPush to the remote repo(vmware/vmware-cloud-director-ui-components): git push git@github.com:vmware/vmware-cloud-director-ui-components.git refs/tags/-v[0-999].[0-999].[0-999]\n\n\n\nFollowing the above steps makes the CI-CD pipeline to execute publishing job to npm with @latest tag(npm publish)\nAngular CLI\nThis project was generated with Angular CLI version 8.3.20. We attempt to\nkeep the project following CLI guidelines so we can benefit from ng update.\nFurther help\nTo get further help, please file issues on github.\nTo get more help on the Angular CLI use ng help or go check out the\nAngular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        DropdownModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PipesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QuickSearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ShowClippedTextDirectiveModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcdActionMenuModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcdActivityReporterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcdComponentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcdDataExporterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcdDatagridModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcdErrorBannerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcdFormlyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcdFormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcdLoadingIndicatorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DropdownModule\n\n\n\ncluster_DropdownModule_declarations\n\n\n\ncluster_DropdownModule_DropdownComponent_providers\n\n\n\ncluster_DropdownModule_imports\n\n\n\ncluster_DropdownModule_exports\n\n\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\ncluster_QuickSearchModule\n\n\n\ncluster_QuickSearchModule_declarations\n\n\n\ncluster_QuickSearchModule_exports\n\n\n\ncluster_ShowClippedTextDirectiveModule\n\n\n\ncluster_ShowClippedTextDirectiveModule_declarations\n\n\n\ncluster_ShowClippedTextDirectiveModule_exports\n\n\n\ncluster_VcdActionMenuModule\n\n\n\ncluster_VcdActionMenuModule_declarations\n\n\n\ncluster_VcdActionMenuModule_exports\n\n\n\ncluster_VcdActivityReporterModule\n\n\n\ncluster_VcdActivityReporterModule_declarations\n\n\n\ncluster_VcdActivityReporterModule_imports\n\n\n\ncluster_VcdActivityReporterModule_exports\n\n\n\ncluster_VcdComponentsModule\n\n\n\ncluster_VcdComponentsModule_exports\n\n\n\ncluster_VcdDataExporterModule\n\n\n\ncluster_VcdDataExporterModule_declarations\n\n\n\ncluster_VcdDataExporterModule_exports\n\n\n\ncluster_VcdDatagridModule\n\n\n\ncluster_VcdDatagridModule_declarations\n\n\n\ncluster_VcdDatagridModule_imports\n\n\n\ncluster_VcdDatagridModule_exports\n\n\n\ncluster_VcdErrorBannerModule\n\n\n\ncluster_VcdErrorBannerModule_declarations\n\n\n\ncluster_VcdErrorBannerModule_exports\n\n\n\ncluster_VcdFormlyModule\n\n\n\ncluster_VcdFormlyModule_declarations\n\n\n\ncluster_VcdFormModule\n\n\n\ncluster_VcdFormModule_declarations\n\n\n\ncluster_VcdFormModule_providers\n\n\n\ncluster_VcdLoadingIndicatorModule\n\n\n\ncluster_VcdLoadingIndicatorModule_declarations\n\n\n\ncluster_VcdLoadingIndicatorModule_exports\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\n\n\nDropdownModule\n\nDropdownModule\n\nDropdownModule -->\n\nDropdownComponent->DropdownModule\n\n\n\n\n\nDropdownFocusHandlerDirective\n\nDropdownFocusHandlerDirective\n\nDropdownModule -->\n\nDropdownFocusHandlerDirective->DropdownModule\n\n\n\n\n\nDynamicDropdownPositionDirective\n\nDynamicDropdownPositionDirective\n\nDropdownModule -->\n\nDynamicDropdownPositionDirective->DropdownModule\n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nDropdownModule->DropdownComponent \n\n\n\n\n\nDropdownFocusHandlerDirective \n\nDropdownFocusHandlerDirective \n\nDropdownFocusHandlerDirective  -->\n\nDropdownModule->DropdownFocusHandlerDirective \n\n\n\n\n\nDynamicDropdownPositionDirective \n\nDynamicDropdownPositionDirective \n\nDynamicDropdownPositionDirective  -->\n\nDropdownModule->DynamicDropdownPositionDirective \n\n\n\n\n\nVcdActionMenuModule\n\nVcdActionMenuModule\n\nVcdActionMenuModule -->\n\nDropdownModule->VcdActionMenuModule\n\n\n\n\n\nDROPDOWN_FOCUS_HANDLER_PROVIDER\n\nDROPDOWN_FOCUS_HANDLER_PROVIDER\n\nDropdownComponent -->\n\nDROPDOWN_FOCUS_HANDLER_PROVIDER->DropdownComponent\n\n\n\n\n\nShowClippedTextDirectiveModule\n\nShowClippedTextDirectiveModule\n\nDropdownModule -->\n\nShowClippedTextDirectiveModule->DropdownModule\n\n\n\n\n\nShowClippedTextDirective \n\nShowClippedTextDirective \n\nShowClippedTextDirective  -->\n\nShowClippedTextDirectiveModule->ShowClippedTextDirective \n\n\n\nVcdActionMenuModule -->\n\nShowClippedTextDirectiveModule->VcdActionMenuModule\n\n\n\n\n\nVcdDatagridModule\n\nVcdDatagridModule\n\nVcdDatagridModule -->\n\nShowClippedTextDirectiveModule->VcdDatagridModule\n\n\n\n\n\nNestedPropertyPipe\n\nNestedPropertyPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nNestedPropertyPipe->PipesModule\n\n\n\n\n\nFormCheckboxComponent \n\nFormCheckboxComponent \n\nFormCheckboxComponent  -->\n\nPipesModule->FormCheckboxComponent \n\n\n\n\n\nFormInputComponent \n\nFormInputComponent \n\nFormInputComponent  -->\n\nPipesModule->FormInputComponent \n\n\n\n\n\nFormSelectComponent \n\nFormSelectComponent \n\nFormSelectComponent  -->\n\nPipesModule->FormSelectComponent \n\n\n\n\n\nNumberWithUnitFormInputComponent \n\nNumberWithUnitFormInputComponent \n\nNumberWithUnitFormInputComponent  -->\n\nPipesModule->NumberWithUnitFormInputComponent \n\n\n\n\n\nQuickSearchComponent\n\nQuickSearchComponent\n\n\n\nQuickSearchModule\n\nQuickSearchModule\n\nQuickSearchModule -->\n\nQuickSearchComponent->QuickSearchModule\n\n\n\n\n\nQuickSearchComponent \n\nQuickSearchComponent \n\nQuickSearchComponent  -->\n\nQuickSearchModule->QuickSearchComponent \n\n\n\n\n\nShowClippedTextDirective\n\nShowClippedTextDirective\n\nShowClippedTextDirectiveModule -->\n\nShowClippedTextDirective->ShowClippedTextDirectiveModule\n\n\n\n\n\nActionMenuComponent\n\nActionMenuComponent\n\nVcdActionMenuModule -->\n\nActionMenuComponent->VcdActionMenuModule\n\n\n\n\n\nActionMenuComponent \n\nActionMenuComponent \n\nActionMenuComponent  -->\n\nVcdActionMenuModule->ActionMenuComponent \n\n\n\nVcdDatagridModule -->\n\nVcdActionMenuModule->VcdDatagridModule\n\n\n\n\n\nBannerActivityReporterComponent\n\nBannerActivityReporterComponent\n\n\n\nVcdActivityReporterModule\n\nVcdActivityReporterModule\n\nVcdActivityReporterModule -->\n\nBannerActivityReporterComponent->VcdActivityReporterModule\n\n\n\n\n\nSpinnerActivityReporterComponent\n\nSpinnerActivityReporterComponent\n\nVcdActivityReporterModule -->\n\nSpinnerActivityReporterComponent->VcdActivityReporterModule\n\n\n\n\n\nBannerActivityReporterComponent \n\nBannerActivityReporterComponent \n\nBannerActivityReporterComponent  -->\n\nVcdActivityReporterModule->BannerActivityReporterComponent \n\n\n\n\n\nSpinnerActivityReporterComponent \n\nSpinnerActivityReporterComponent \n\nSpinnerActivityReporterComponent  -->\n\nVcdActivityReporterModule->SpinnerActivityReporterComponent \n\n\n\nVcdDatagridModule -->\n\nVcdActivityReporterModule->VcdDatagridModule\n\n\n\n\n\nVcdErrorBannerModule\n\nVcdErrorBannerModule\n\nVcdActivityReporterModule -->\n\nVcdErrorBannerModule->VcdActivityReporterModule\n\n\n\n\n\nErrorBannerComponent \n\nErrorBannerComponent \n\nErrorBannerComponent  -->\n\nVcdErrorBannerModule->ErrorBannerComponent \n\n\n\n\n\nVcdLoadingIndicatorModule\n\nVcdLoadingIndicatorModule\n\nVcdActivityReporterModule -->\n\nVcdLoadingIndicatorModule->VcdActivityReporterModule\n\n\n\n\n\nLoadingIndicatorComponent \n\nLoadingIndicatorComponent \n\nLoadingIndicatorComponent  -->\n\nVcdLoadingIndicatorModule->LoadingIndicatorComponent \n\n\n\n\n\nDropdownModule \n\nDropdownModule \n\n\n\nQuickSearchModule \n\nQuickSearchModule \n\n\n\nShowClippedTextDirectiveModule \n\nShowClippedTextDirectiveModule \n\n\n\nVcdActionMenuModule \n\nVcdActionMenuModule \n\n\n\nVcdActivityReporterModule \n\nVcdActivityReporterModule \n\n\n\nVcdDataExporterModule \n\nVcdDataExporterModule \n\n\n\nVcdDatagridModule \n\nVcdDatagridModule \n\n\n\nVcdErrorBannerModule \n\nVcdErrorBannerModule \n\n\n\nVcdFormModule \n\nVcdFormModule \n\n\n\nVcdLoadingIndicatorModule \n\nVcdLoadingIndicatorModule \n\n\n\nVcdComponentsModule\n\nVcdComponentsModule\n\nDropdownModule  -->\n\nVcdComponentsModule->DropdownModule \n\n\n\nQuickSearchModule  -->\n\nVcdComponentsModule->QuickSearchModule \n\n\n\nShowClippedTextDirectiveModule  -->\n\nVcdComponentsModule->ShowClippedTextDirectiveModule \n\n\n\nVcdActionMenuModule  -->\n\nVcdComponentsModule->VcdActionMenuModule \n\n\n\nVcdActivityReporterModule  -->\n\nVcdComponentsModule->VcdActivityReporterModule \n\n\n\nVcdDataExporterModule  -->\n\nVcdComponentsModule->VcdDataExporterModule \n\n\n\nVcdDatagridModule  -->\n\nVcdComponentsModule->VcdDatagridModule \n\n\n\nVcdErrorBannerModule  -->\n\nVcdComponentsModule->VcdErrorBannerModule \n\n\n\nVcdFormModule  -->\n\nVcdComponentsModule->VcdFormModule \n\n\n\nVcdLoadingIndicatorModule  -->\n\nVcdComponentsModule->VcdLoadingIndicatorModule \n\n\n\n\n\nDataExporterComponent\n\nDataExporterComponent\n\n\n\nVcdDataExporterModule\n\nVcdDataExporterModule\n\nVcdDataExporterModule -->\n\nDataExporterComponent->VcdDataExporterModule\n\n\n\n\n\nDataExporterComponent \n\nDataExporterComponent \n\nDataExporterComponent  -->\n\nVcdDataExporterModule->DataExporterComponent \n\n\n\n\n\nBoldTextRendererComponent\n\nBoldTextRendererComponent\n\nVcdDatagridModule -->\n\nBoldTextRendererComponent->VcdDatagridModule\n\n\n\n\n\nComponentRendererOutletDirective\n\nComponentRendererOutletDirective\n\nVcdDatagridModule -->\n\nComponentRendererOutletDirective->VcdDatagridModule\n\n\n\n\n\nDatagridComponent\n\nDatagridComponent\n\nVcdDatagridModule -->\n\nDatagridComponent->VcdDatagridModule\n\n\n\n\n\nDatagridMultiSelectFilterComponent\n\nDatagridMultiSelectFilterComponent\n\nVcdDatagridModule -->\n\nDatagridMultiSelectFilterComponent->VcdDatagridModule\n\n\n\n\n\nDatagridNumericFilterComponent\n\nDatagridNumericFilterComponent\n\nVcdDatagridModule -->\n\nDatagridNumericFilterComponent->VcdDatagridModule\n\n\n\n\n\nDatagridSelectFilterComponent\n\nDatagridSelectFilterComponent\n\nVcdDatagridModule -->\n\nDatagridSelectFilterComponent->VcdDatagridModule\n\n\n\n\n\nDatagridStringFilterComponent\n\nDatagridStringFilterComponent\n\nVcdDatagridModule -->\n\nDatagridStringFilterComponent->VcdDatagridModule\n\n\n\n\n\nFunctionRendererPipe\n\nFunctionRendererPipe\n\nVcdDatagridModule -->\n\nFunctionRendererPipe->VcdDatagridModule\n\n\n\n\n\nBoldTextRendererComponent \n\nBoldTextRendererComponent \n\nBoldTextRendererComponent  -->\n\nVcdDatagridModule->BoldTextRendererComponent \n\n\n\n\n\nDatagridComponent \n\nDatagridComponent \n\nDatagridComponent  -->\n\nVcdDatagridModule->DatagridComponent \n\n\n\n\n\nVcdFormModule\n\nVcdFormModule\n\nFormCheckboxComponent  -->\n\nVcdFormModule->FormCheckboxComponent \n\n\n\nFormInputComponent  -->\n\nVcdFormModule->FormInputComponent \n\n\n\nFormSelectComponent  -->\n\nVcdFormModule->FormSelectComponent \n\n\n\nNumberWithUnitFormInputComponent  -->\n\nVcdFormModule->NumberWithUnitFormInputComponent \n\n\n\nVcdDatagridModule -->\n\nVcdFormModule->VcdDatagridModule\n\n\n\n\n\nVcdFormlyModule\n\nVcdFormlyModule\n\nVcdFormlyModule -->\n\nVcdFormModule->VcdFormlyModule\n\n\n\n\n\nErrorBannerComponent\n\nErrorBannerComponent\n\nVcdErrorBannerModule -->\n\nErrorBannerComponent->VcdErrorBannerModule\n\n\n\n\n\nFormlyInputComponent\n\nFormlyInputComponent\n\nVcdFormlyModule -->\n\nFormlyInputComponent->VcdFormlyModule\n\n\n\n\n\nFormlyNumberWithUnitInputComponent\n\nFormlyNumberWithUnitInputComponent\n\nVcdFormlyModule -->\n\nFormlyNumberWithUnitInputComponent->VcdFormlyModule\n\n\n\n\n\nFormlySelectComponent\n\nFormlySelectComponent\n\nVcdFormlyModule -->\n\nFormlySelectComponent->VcdFormlyModule\n\n\n\n\n\nFormCheckboxComponent\n\nFormCheckboxComponent\n\nVcdFormModule -->\n\nFormCheckboxComponent->VcdFormModule\n\n\n\n\n\nFormInputComponent\n\nFormInputComponent\n\nVcdFormModule -->\n\nFormInputComponent->VcdFormModule\n\n\n\n\n\nFormSelectComponent\n\nFormSelectComponent\n\nVcdFormModule -->\n\nFormSelectComponent->VcdFormModule\n\n\n\n\n\nNumberWithUnitFormInputComponent\n\nNumberWithUnitFormInputComponent\n\nVcdFormModule -->\n\nNumberWithUnitFormInputComponent->VcdFormModule\n\n\n\n\n\nUnitFormatter\n\nUnitFormatter\n\nVcdFormModule -->\n\nUnitFormatter->VcdFormModule\n\n\n\n\n\nLoadingIndicatorComponent\n\nLoadingIndicatorComponent\n\nVcdLoadingIndicatorModule -->\n\nLoadingIndicatorComponent->VcdLoadingIndicatorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    23 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    37 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    49 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionHandlerType   (projects/.../action-item.interface.ts)\n                        \n                        \n                            ComponentRendererConstructor   (projects/.../component-renderer.interface.ts)\n                        \n                        \n                            ConvertGenericOnly   (projects/.../widget-object.ts)\n                        \n                        \n                            CorrectReturnTypes   (projects/.../widget-object.ts)\n                        \n                        \n                            DatagridNumericFilterValue   (projects/.../datagrid-numeric-filter.component.ts)\n                        \n                        \n                            ElementLocator   (projects/.../widget-object.ts)\n                        \n                        \n                            EventHandler   (projects/.../show-clipped-text.directive.ts)\n                        \n                        \n                            LazyString   (projects/.../types.ts)\n                        \n                        \n                            Primitives   (projects/.../filter-builder.ts)\n                        \n                        \n                            QuickSearchResultsType   (projects/.../quick-search-result.ts)\n                        \n                        \n                            SpinnerSize   (projects/.../loading-indicator.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/components/src/common/interfaces/action-item.interface.ts\n    \n    \n        \n            \n                \n                    \n                    ActionHandlerType\n                \n            \n            \n                \n                    Type of ActionItem.handler function\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/components/src/datagrid/interfaces/component-renderer.interface.ts\n    \n    \n        \n            \n                \n                    \n                    ComponentRendererConstructor\n                \n            \n            \n                \n                    Used for the type safety of ColumnRendererSpec\n\n                \n            \n            \n                \n                            Type>\n\n                \n            \n        \n    \n    projects/components/src/utils/test/widget-object/widget-object.ts\n    \n    \n        \n            \n                \n                    \n                    ConvertGenericOnly\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CorrectReturnTypes\n                \n            \n            \n                \n                    Changes the class so that all functions/getters return R.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ElementLocator\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts\n    \n    \n        \n            \n                \n                    \n                    DatagridNumericFilterValue\n                \n            \n            \n                \n                    The type of value that goes in the DatagridNumericFilterConfig.\n\n                \n            \n            \n                \n                        [number, number]\n\n                \n            \n        \n    \n    projects/components/src/lib/directives/show-clipped-text.directive.ts\n    \n    \n        \n            \n                \n                    \n                    EventHandler\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/components/src/utils/types.ts\n    \n    \n        \n            \n                \n                    \n                    LazyString\n                \n            \n            \n                \n                    The result of a call to either TranslationService.translate or TranslationService.translateAsync.\nA duplicate of the @vcd/i18n LazyString.\n\n                \n            \n            \n                \n                        string | Observable | Promise\n\n                \n            \n        \n    \n    projects/components/src/utils/filter-builder.ts\n    \n    \n        \n            \n                \n                    \n                    Primitives\n                \n            \n            \n                \n                        boolean | string | number\n\n                \n            \n        \n    \n    projects/components/src/quick-search/quick-search-result.ts\n    \n    \n        \n            \n                \n                    \n                    QuickSearchResultsType\n                \n            \n            \n                \n                    The type of the quick search result which can be a promise\n\n                \n            \n            \n                \n                            QuickSearchResults | Promise\n\n                \n            \n        \n    \n    projects/components/src/common/loading/loading-indicator.component.ts\n    \n    \n        \n            \n                \n                    \n                    SpinnerSize\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CONTENT_AREA_SELECTOR   (projects/.../dynamic-dropdown-position.directive.ts)\n                        \n                        \n                            Css   (projects/.../datagrid.wo.ts)\n                        \n                        \n                            cy   (projects/.../cypress-widget-finder.ts)\n                        \n                        \n                            cy   (projects/.../cypress-widget-object.ts)\n                        \n                        \n                            DATE_OBJECT_CLASS   (projects/.../nested-property.pipe.ts)\n                        \n                        \n                            DEBOUNCE_TIME_FOR_GRID_FILTER_CHANGES   (projects/.../datagrid-filter.ts)\n                        \n                        \n                            declarations   (projects/.../form.module.ts)\n                        \n                        \n                            declarations   (projects/.../pipes.module.ts)\n                        \n                        \n                            DEFAULT_ACTION_SEARCH_SECTION_HEADER_PREFIX   (projects/.../action-search.provider.ts)\n                        \n                        \n                            DEFAULT_PAGINATION_TRANSLATION_KEY   (projects/.../datagrid.component.ts)\n                        \n                        \n                            DEFAULT_SIZE   (projects/.../datagrid.component.ts)\n                        \n                        \n                            DEFAULT_SIZE_OPTIONS   (projects/.../datagrid.component.ts)\n                        \n                        \n                            directives   (projects/.../datagrid.module.ts)\n                        \n                        \n                            DROPDOWN_FOCUS_HANDLER_PROVIDER   (projects/.../dropdown.component.ts)\n                        \n                        \n                            DROPDOWN_ITEM_SELECTOR   (projects/.../dropdown.component.ts)\n                        \n                        \n                            filters   (projects/.../datagrid.module.ts)\n                        \n                        \n                            fireTipTransitionEndForTests   (projects/.../show-clipped-text.directive.ts)\n                        \n                        \n                            idGenerator   (projects/.../base-form-control.ts)\n                        \n                        \n                            idGenerator   (projects/.../datagrid-multiselect-filter.component.ts)\n                        \n                        \n                            idGenerator   (projects/.../cypress-widget-finder.ts)\n                        \n                        \n                            LEADING_CONTROL_CHAR   (projects/.../csv-exporter.service.ts)\n                        \n                        \n                            MAX_HEADER_HEIGHT   (projects/.../datagrid.component.ts)\n                        \n                        \n                            MENU_BUFFER_SPACE   (projects/.../dynamic-dropdown-position.directive.ts)\n                        \n                        \n                            mockData   (projects/.../mock-data.ts)\n                        \n                        \n                            NESTED_DROPDOWN_TRIGGER   (projects/.../dropdown-focus-handler.directive.ts)\n                        \n                        \n                            NESTED_DROPDOWN_TRIGGER_SELECTOR   (projects/.../dropdown.component.ts)\n                        \n                        \n                            NESTED_MENU_HIDE_DELAY   (projects/.../dropdown.component.ts)\n                        \n                        \n                            NO_SCROLLING_CLASSNAME   (projects/.../dynamic-dropdown-position.directive.ts)\n                        \n                        \n                            OBJECT_PROPERTY_SEPARATOR   (projects/.../nested-property.pipe.ts)\n                        \n                        \n                            Operators   (projects/.../filter-builder.ts)\n                        \n                        \n                            pipes   (projects/.../datagrid.module.ts)\n                        \n                        \n                            renderers   (projects/.../datagrid.module.ts)\n                        \n                        \n                            ROW_HEIGHT   (projects/.../datagrid.component.ts)\n                        \n                        \n                            tip   (projects/.../show-clipped-text.directive.ts)\n                        \n                        \n                            UNLIMITED   (projects/.../number-with-unit-form-input.component.ts)\n                        \n                        \n                            VCD_FORMLY_CONFIG   (projects/.../vcd-formly.config.ts)\n                        \n                        \n                            VCD_FORMLY_INPUT_COMPONENTS   (projects/.../vcd-formly.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/components/src/dropdown/dynamic-dropdown-position.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CONTENT_AREA_SELECTOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '.content-area'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MENU_BUFFER_SPACE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 150\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NO_SCROLLING_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'no-scrolling'\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/utils/test/datagrid/datagrid.wo.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Css\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    ROW: 'clr-dg-row',\n    COLUMN: 'clr-dg-column',\n    CELL: 'clr-dg-cell',\n    PLACEHOLDER: 'clr-dg-placeholder',\n    COLUMN_TITLE: '.datagrid-column-title',\n    HIDDEN_COLUMN: 'clr-dg-column.datagrid-hidden-column',\n    DETAIL_ROW: 'clr-dg-row-detail',\n    DETAIL_PANE: '.datagrid-detail-pane-content',\n    DETAIL_PANE_HEADER: '.datagrid-detail-header-title',\n    DETAIL_ROW_BUTTON: '.datagrid-expandable-caret-button',\n    DETAIL_PANE_BUTTON: '.datagrid-detail-caret-button',\n    PAGINATION_DESCRIPTION: '.pagination-description',\n    PAGE_SIZE: 'clr-dg-page-size',\n    PAGINATION_NEXT: '.pagination-next',\n    TOP_POSITIONED_BUTTON: 'clr-dg-action-bar button',\n    // Do not use this. This is specific to VCD datagrid.\n    ROW_BUTTON_CONTAINER: '.action-button-cell',\n    ROW_ACTION_CONTAINER: '.datagrid-select label',\n    CHECKBOX_WRAPPER: 'clr-checkbox-wrapper',\n    RADIO_WRAPPER: 'clr-radio-wrapper',\n    FILTER: 'clr-dg-filter',\n    FILTER_TOGGLE: '.datagrid-filter-toggle',\n    SPINNER: 'clr-spinner',\n}\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/utils/test/widget-object/cypress-widget-finder.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cy\n                            \n                        \n                    \n                \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idGenerator\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new IdGenerator('cy-id')\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/utils/test/widget-object/cypress-widget-object.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cy\n                            \n                        \n                    \n                \n\n\n            \n        \n\n    projects/components/src/common/pipes/nested-property.pipe.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DATE_OBJECT_CLASS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[object Date]'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OBJECT_PROPERTY_SEPARATOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '.'\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/datagrid/filters/datagrid-filter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEBOUNCE_TIME_FOR_GRID_FILTER_CHANGES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 300\n                        \n                    \n\n                \n                    \n                        Number of milliseconds delayed before emitting the filter has changed observable\n\n                    \n                \n\n            \n        \n\n    projects/components/src/form/form.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            declarations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [FormInputComponent, FormSelectComponent, FormCheckboxComponent, NumberWithUnitFormInputComponent]\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/common/pipes/pipes.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            declarations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [NestedPropertyPipe]\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/action-search-provider/action-search.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_ACTION_SEARCH_SECTION_HEADER_PREFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd.cc.action.provider.section.title'\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/datagrid/datagrid.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_PAGINATION_TRANSLATION_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd.cc.grid.default.pagination'\n                        \n                    \n\n                \n                    \n                        Key used for translation of pagination when a translation key is not given as input from the caller\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_SIZE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 15\n                        \n                    \n\n                \n                    \n                        The default number of items on a single page.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_SIZE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [DEFAULT_SIZE, 20, 50, 100]\n                        \n                    \n\n                \n                    \n                        The default items to show in the page size dropdown.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_HEADER_HEIGHT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 40\n                        \n                    \n\n                \n                    \n                        The maximum allowed .datagrid-header element clientHeight in pixels.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ROW_HEIGHT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     miscellaneou\n\n                        \n                    \n                    \n                        \n                            Default value : 37\n                        \n                    \n\n                \n                    \n                        The default clr-dr-row element clientHeight in pixels.\n\n                    \n                \n\n            \n        \n\n    projects/components/src/datagrid/datagrid.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            directives\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ComponentRendererOutletDirective]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    DatagridNumericFilterComponent,\n    DatagridStringFilterComponent,\n    DatagridSelectFilterComponent,\n    DatagridMultiSelectFilterComponent,\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pipes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [FunctionRendererPipe]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [BoldTextRendererComponent]\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/dropdown/dropdown.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DROPDOWN_FOCUS_HANDLER_PROVIDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: DropdownFocusHandlerService,\n    useFactory: dropdownFocusHandlerServiceFactory,\n    deps: [Renderer2, [new Optional(), new SkipSelf(), DropdownFocusHandlerService]],\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DROPDOWN_ITEM_SELECTOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'clr-dropdown-menu > button'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NESTED_DROPDOWN_TRIGGER_SELECTOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'clr-dropdown clr-dropdown > button'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NESTED_MENU_HIDE_DELAY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 400\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/lib/directives/show-clipped-text.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            fireTipTransitionEndForTests\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (event: Event) => {\n    // Since we're at it, please remove the param from onTransitionEnd since we don't use it\n    tip.onTransitionEnd(event);\n}\n                        \n                    \n\n                \n                    \n                        Used to call tip.onTransitionEnd from outside this file.\nWe need to expose tip.onTransitionEnd because when the window is not focused\n(as in a headless chrome environment), the transitionend event is not fired.\nAs such, from the tests, you need to manually call this method.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    /** A single DOM node structure for the popup is created and shared with all instances (the .tooltip)  */\n    container: null as HTMLElement,\n\n    /** The inner node (the .tooltip-content) */\n    content: null as HTMLElement,\n\n    /** Timer for setTimeout used when hiding */\n    hideTimeout: null as number,\n\n    /** The directive that last caused the tooltip to be displayed */\n    currentDirective: null as ShowClippedTextDirective,\n\n    /** Whether the mouse is currently over a host or the tooltip */\n    isMouseOver: false,\n\n    /**\n     * The host element that last caused the tooltip to be displayed\n     */\n    get currentHost(): HTMLElement {\n        return tip.currentDirective.hostElement;\n    },\n\n    /**\n     * The tooltip size requested for the last directive that caused the tooltip to be displayed\n     */\n    get tooltipSize(): TooltipSize {\n        return tip.currentDirective.tooltipSize;\n    },\n\n    /**\n     * How long to wait before hiding the tooltip after a mouseout. This gives the user a chance to hover over the\n     * tooltip so they can copy/paste its contents\n     */\n    get mouseoutDelay(): number {\n        return tip.currentDirective.mouseoutDelay;\n    },\n\n    create(): void {\n        if (tip.container) {\n            return;\n        }\n        tip.container = document.createElement('div');\n        tip.container.classList.add('tooltip', 'vcd-show-clipped-text');\n        tip.content = document.createElement('div');\n        tip.content.classList.add('tooltip-content');\n        setStyle(tip.container, {\n            position: 'absolute',\n            zIndex: '1000',\n            opacity: '0',\n        });\n        tip.container.appendChild(tip.content);\n        document.body.appendChild(tip.container);\n        watchEvents(tip.container, tip.onMouseEnter, tip.onMouseLeave);\n        tip.content.addEventListener('transitionend', tip.onTransitionEnd);\n    },\n\n    destroy(): void {\n        document.body.removeChild(tip.container);\n        unwatchEvents(tip.container, tip.onMouseEnter, tip.onMouseLeave);\n        tip.content.removeEventListener('transitionend', this.onTransitionEnd);\n        tip.container = null;\n        tip.content = null;\n    },\n\n    onMouseEnter(): void {\n        tip.clearHideTimeout();\n    },\n\n    onMouseLeave(): void {\n        if (tip.currentDirective) {\n            tip.hideTooltip(tip.mouseoutDelay);\n        }\n    },\n\n    hideTooltip(delay: number): void {\n        tip.clearHideTimeout();\n        tip.hideTimeout = window.setTimeout(() => {\n            tip.isMouseOver = false;\n            tip.container.style.opacity = '0';\n            tip.content.style.opacity = '0';\n            tip.hideTimeout = null;\n            tip.currentDirective = null;\n        }, delay);\n    },\n\n    clearHideTimeout(): void {\n        if (tip.hideTimeout) {\n            clearTimeout(tip.hideTimeout);\n            tip.hideTimeout = null;\n        }\n    },\n\n    onTransitionEnd(e: Event): void {\n        if (tip.container.style.opacity === '0') {\n            tip.container.style.visibility = 'hidden';\n            tip.content.style.visibility = 'hidden';\n        }\n    },\n\n    /**\n     * Update the tooltip based on the content/dimensions of {@link tip.currentDirective}\n     */\n    update(): void {\n        const el = tip.currentHost;\n        const rect = el.getBoundingClientRect();\n        setStyle(tip.container, {\n            top: rect.top + 'px',\n            left: rect.left + 'px',\n            width: rect.width + 'px',\n            height: rect.height + 'px',\n            opacity: '1',\n            wordBreak: 'break-all',\n        });\n        setStyle(tip.content, {\n            visibility: 'visible',\n            opacity: '1',\n            width: this.tooltipSize,\n        });\n        const { tl, tr, bl, br } = TooltipPosition;\n        tip.content.classList.remove(tl, tr, bl, br);\n        tip.content.classList.add(tip.calculatePosition(rect));\n        tip.content.innerHTML = el.innerHTML;\n    },\n\n    /**\n     *  Tooltip direction should be the opposite quadrant of where the center of the clipped element is\n     *     TL -> BR        TR -> BL\n     *     BL -> TR        BR -> TL\n     * @param rect THe dimensions of the clipped element\n     */\n    calculatePosition(rect: ClientRect): TooltipPosition {\n        const { innerWidth, innerHeight } = window;\n        const rectCenter = { x: rect.left + rect.width / 2, y: rect.top + rect.height / 2 };\n\n        // It's on the right\n        if (rectCenter.x > innerWidth / 2) {\n            if (rectCenter.y > innerHeight / 2) {\n                // Bottom right quad\n                return TooltipPosition.tl;\n            } else {\n                // Top right quad\n                return TooltipPosition.bl;\n            }\n        }\n\n        // It's on the left\n        if (rectCenter.y > innerHeight / 2) {\n            // Bottom left quad\n            return TooltipPosition.tr;\n        } else {\n            // Top left quad\n            return TooltipPosition.br;\n        }\n    },\n}\n                        \n                    \n\n                \n                    \n                        Singleton tooltip created by directive\n\n                    \n                \n\n            \n        \n\n    projects/components/src/form/base-form-control.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            idGenerator\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new IdGenerator('base-form-control-id')\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            idGenerator\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new IdGenerator('vcd-multiselect-filter-id')\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/data-exporter/csv-exporter.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LEADING_CONTROL_CHAR\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /^[-+=@]/\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/datagrid/mock-data.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mockData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MockRecord[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Person 1',\n        city: 'Palo Alto',\n        state: 'CA',\n        details: {\n            gender: 'Male',\n        },\n        age: 30,\n    },\n    {\n        name: 'Person 2',\n        city: 'Boston',\n        state: 'MA',\n        details: {\n            gender: 'Female',\n        },\n        age: 60,\n    },\n]\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/dropdown/dropdown-focus-handler.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NESTED_DROPDOWN_TRIGGER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'clr-dropdown > button'\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/utils/filter-builder.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Operators\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    OR: ',',\n    AND: ';',\n    GT: '=gt=',\n    GE: '=ge=',\n    LT: '=lt=',\n    LE: '=le=',\n    EQ: '==',\n    NEQ: '!=',\n}\n                        \n                    \n\n                \n                    \n                        TODO: Remove FilterBuilder from VCD-UI https://jira.eng.vmware.com/browse/VDUCC-115\n\n                    \n                \n\n            \n        \n\n    projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UNLIMITED\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : -1\n                        \n                    \n\n                \n                    \n                        -1 is the number to specify a value of unlimited.\n\n                    \n                \n\n            \n        \n\n    projects/components/src/formly/vcd/vcd-formly.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            VCD_FORMLY_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     miscellaneou\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    types: [\n        {\n            name: VcdFormlyInputTypes.input,\n            component: FormlyInputComponent,\n        },\n        {\n            name: VcdFormlyInputTypes.select,\n            component: FormlySelectComponent,\n        },\n        {\n            name: VcdFormlyInputTypes.number_with_unit_input,\n            component: FormlyNumberWithUnitInputComponent,\n        },\n    ],\n}\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/formly/vcd/vcd-formly.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            VCD_FORMLY_INPUT_COMPONENTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [FormlyInputComponent, FormlySelectComponent, FormlyNumberWithUnitInputComponent]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
